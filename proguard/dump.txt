_____________________________________________________________________
+ Program class: a/a/a/a/a
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.a.a extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 32):
  + Class [[C]
  + Class [a/a/a/a/a]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Methodref [a/a/a/a/a.a (C)Z]
  + Methodref [java/lang/String.charAt (I)C]
  + Methodref [java/lang/String.length ()I]
  + Methodref [java/lang/String.toCharArray ()[C]
  + Methodref [java/lang/String.valueOf ([C)Ljava/lang/String;]
  + NameAndType [a (C)Z]
  + NameAndType [charAt (I)C]
  + NameAndType [length ()I]
  + NameAndType [toCharArray ()[C]
  + NameAndType [valueOf ([C)Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()[C]
  + Utf8 [(C)Z]
  + Utf8 [(I)C]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/String;]
  + Utf8 [([C)Ljava/lang/String;]
  + Utf8 [Code]
  + Utf8 [StackMapTable]
  + Utf8 [[C]
  + Utf8 [a]
  + Utf8 [a/a/a/a/a]
  + Utf8 [charAt]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [length]
  + Utf8 [toCharArray]
  + Utf8 [valueOf]

Fields (count = 0):

Methods (count = 2):
  + Method:       a(Ljava/lang/String;)Ljava/lang/String;
    Access flags: 0x9
      = public static java.lang.String a(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 74, locals = 5, stack = 4):
      [0] aload_0 v0
      [1] invokevirtual #7
        + Methodref [java/lang/String.length ()I]
      [4] istore_1 v1
      [5] iconst_0
      [6] istore_2 v2
      [7] iload_2 v2
      [8] iload_1 v1
      [9] ificmpge +63 (target=72)
      [12] aload_0 v0
      [13] iload_2 v2
      [14] invokevirtual #6
        + Methodref [java/lang/String.charAt (I)C]
      [17] invokestatic #5
        + Methodref [a/a/a/a/a.a (C)Z]
      [20] ifeq +46 (target=66)
      [23] aload_0 v0
      [24] invokevirtual #8
        + Methodref [java/lang/String.toCharArray ()[C]
      [27] astore_3 v3
      [28] iload_2 v2
      [29] iload_1 v1
      [30] ificmpge +31 (target=61)
      [33] aload_3 v3
      [34] iload_2 v2
      [35] caload
      [36] istore v4
      [38] iload v4
      [40] invokestatic #5
        + Methodref [a/a/a/a/a.a (C)Z]
      [43] ifeq +12 (target=55)
      [46] aload_3 v3
      [47] iload_2 v2
      [48] iload v4
      [50] bipush 32
      [52] ixor
      [53] i2c
      [54] castore
      [55] iinc v2, 1
      [58] goto -30 (target=28)
      [61] aload_3 v3
      [62] invokestatic #9
        + Methodref [java/lang/String.valueOf ([C)Ljava/lang/String;]
      [65] areturn
      [66] iinc v2, 1
      [69] goto -62 (target=7)
      [72] aload_0 v0
      [73] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [7] Var: ...[i][i], Stack: (empty)
        - [28] Var: ...[a:[C], Stack: (empty)
        - [55] Var: ..., Stack: (empty)
        - [61] Var: ..., Stack: (empty)
        - [66] Var: -1, Stack: (empty)
        - [72] Var: -1, Stack: (empty)
  + Method:       a(C)Z
    Access flags: 0x9
      = public static boolean a(char)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 1, stack = 2):
      [0] iload_0 v0
      [1] bipush 65
      [3] ificmplt +13 (target=16)
      [6] iload_0 v0
      [7] bipush 90
      [9] ificmpgt +7 (target=16)
      [12] iconst_1
      [13] goto +4 (target=17)
      [16] iconst_0
      [17] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [16] Var: ..., Stack: (empty)
        - [17] Var: ..., Stack: [i]

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/b
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.a.b extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 32):
  + Class [a/a/a/a/b]
  + Class [a/a/a/a/c]
  + Class [a/a/a/a/d]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/a/c.a La/a/a/a/c;]
  + Fieldref [a/a/a/a/d.a La/a/a/a/d;]
  + Methodref [a/a/a/a/b.b (Ljava/lang/Object;)I]
  + Methodref [a/a/a/a/b.b (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a La/a/a/a/c;]
  + NameAndType [a La/a/a/a/d;]
  + NameAndType [b (Ljava/lang/Object;)I]
  + NameAndType [b (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [()La/a/a/a/b;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/c;]
  + Utf8 [La/a/a/a/d;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/b]
  + Utf8 [a/a/a/a/c]
  + Utf8 [a/a/a/a/d]
  + Utf8 [b]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 7):
  - Method:       <init>()V
    Access flags: 0x4
      = protected b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #9
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;Ljava/lang/Object;)Z
    Access flags: 0x11
      = public final boolean a(java.lang.Object,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 24, locals = 3, stack = 3):
      [0] aload_1 v1
      [1] aload_2 v2
      [2] ifacmpne +5 (target=7)
      [5] iconst_1
      [6] ireturn
      [7] aload_1 v1
      [8] ifnull +7 (target=15)
      [11] aload_2 v2
      [12] ifnonnull +5 (target=17)
      [15] iconst_0
      [16] ireturn
      [17] aload_0 v0
      [18] aload_1 v1
      [19] aload_2 v2
      [20] invokevirtual #8
        + Methodref [a/a/a/a/b.b (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [23] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [7] Var: ..., Stack: (empty)
        - [15] Var: ..., Stack: (empty)
        - [17] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b(Ljava/lang/Object;Ljava/lang/Object;)Z
    Access flags: 0x404
      = protected abstract boolean b(java.lang.Object,java.lang.Object)
  + Method:       a(Ljava/lang/Object;)I
    Access flags: 0x11
      = public final int a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 12, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] ifnonnull +5 (target=6)
      [4] iconst_0
      [5] ireturn
      [6] aload_0 v0
      [7] aload_1 v1
      [8] invokevirtual #7
        + Methodref [a/a/a/a/b.b (Ljava/lang/Object;)I]
      [11] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [6] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b(Ljava/lang/Object;)I
    Access flags: 0x404
      = protected abstract int b(java.lang.Object)
  + Method:       a()La/a/a/a/b;
    Access flags: 0x9
      = public static a.a.a.a.b a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] getstatic #5
        + Fieldref [a/a/a/a/c.a La/a/a/a/c;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/a/b;
    Access flags: 0x9
      = public static a.a.a.a.b b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] getstatic #6
        + Fieldref [a/a/a/a/d.a La/a/a/a/d;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/c
  Superclass:    a/a/a/a/b
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.a.c extends a.a.a.a.b

Interfaces (count = 1):
  + Class [java/io/Serializable]

Constant Pool (count = 31):
  + Class [a/a/a/a/b]
  + Class [a/a/a/a/c]
  + Class [java/io/Serializable]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/a/c.a La/a/a/a/c;]
  + Methodref [a/a/a/a/b.<init> ()V]
  + Methodref [a/a/a/a/c.<init> ()V]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.hashCode ()I]
  + NameAndType [<init> ()V]
  + NameAndType [a La/a/a/a/c;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [hashCode ()I]
  + Utf8 [()I]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/c;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/b]
  + Utf8 [a/a/a/a/c]
  + Utf8 [b]
  + Utf8 [equals]
  + Utf8 [hashCode]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Object]

Fields (count = 1):
  + Field:        a La/a/a/a/c;
    Access flags: 0x18
      = static final a.a.a.a.c a

Methods (count = 4):
  - Method:       <init>()V
    Access flags: 0x0
      = c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #6
        + Methodref [a/a/a/a/b.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;Ljava/lang/Object;)Z
    Access flags: 0x4
      = protected boolean b(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] aload_2 v2
      [2] invokevirtual #8
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [5] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;)I
    Access flags: 0x1
      = public int b(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokevirtual #9
        + Methodref [java/lang/Object.hashCode ()I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 0, stack = 2):
      [0] new #2
        + Class [a/a/a/a/c]
      [3] dup
      [4] invokespecial #7
        + Methodref [a/a/a/a/c.<init> ()V]
      [7] putstatic #5
        + Fieldref [a/a/a/a/c.a La/a/a/a/c;]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/d
  Superclass:    a/a/a/a/b
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.a.d extends a.a.a.a.b

Interfaces (count = 1):
  + Class [java/io/Serializable]

Constant Pool (count = 26):
  + Class [a/a/a/a/b]
  + Class [a/a/a/a/d]
  + Class [java/io/Serializable]
  + Class [java/lang/System]
  + Fieldref [a/a/a/a/d.a La/a/a/a/d;]
  + Methodref [a/a/a/a/b.<init> ()V]
  + Methodref [a/a/a/a/d.<init> ()V]
  + Methodref [java/lang/System.identityHashCode (Ljava/lang/Object;)I]
  + NameAndType [<init> ()V]
  + NameAndType [a La/a/a/a/d;]
  + NameAndType [identityHashCode (Ljava/lang/Object;)I]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/d;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/b]
  + Utf8 [a/a/a/a/d]
  + Utf8 [b]
  + Utf8 [identityHashCode]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/System]

Fields (count = 1):
  + Field:        a La/a/a/a/d;
    Access flags: 0x18
      = static final a.a.a.a.d a

Methods (count = 4):
  - Method:       <init>()V
    Access flags: 0x0
      = d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #6
        + Methodref [a/a/a/a/b.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;Ljava/lang/Object;)Z
    Access flags: 0x4
      = protected boolean b(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 3, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;)I
    Access flags: 0x4
      = protected int b(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokestatic #8
        + Methodref [java/lang/System.identityHashCode (Ljava/lang/Object;)I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 0, stack = 2):
      [0] new #2
        + Class [a/a/a/a/d]
      [3] dup
      [4] invokespecial #7
        + Methodref [a/a/a/a/d.<init> ()V]
      [7] putstatic #5
        + Fieldref [a/a/a/a/d.a La/a/a/a/d;]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/e
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface a.a.a.a.e extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 12):
  + Class [a/a/a/a/e]
  + Class [java/lang/Object]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/a/e]
  + Utf8 [equals]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 2):
  + Method:       a(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x401
      = public abstract java.lang.Object a(java.lang.Object)
    Class member attributes (count = 2):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x401
      = public abstract boolean equals(java.lang.Object)
    Class member attributes (count = 1):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/f
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class a.a.a.a.f extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 112):
  + Class [a/a/a/a/f]
  + Class [a/a/a/a/g]
  + Class [a/a/a/a/h]
  + Class [a/a/a/a/o]
  + Class [java/io/IOException]
  + Class [java/lang/Appendable]
  + Class [java/lang/AssertionError]
  + Class [java/lang/CharSequence]
  + Class [java/lang/Iterable]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/StringBuilder]
  + Class [java/util/Arrays]
  + Class [java/util/Iterator]
  + Fieldref [a/a/a/a/f.a Ljava/lang/String;]
  + Methodref [a/a/a/a/f.<init> (La/a/a/a/f;)V]
  + Methodref [a/a/a/a/f.<init> (Ljava/lang/String;)V]
  + Methodref [a/a/a/a/f.a (Ljava/lang/Appendable;Ljava/util/Iterator;)Ljava/lang/Appendable;]
  + Methodref [a/a/a/a/f.a (Ljava/lang/Iterable;)Ljava/lang/String;]
  + Methodref [a/a/a/a/f.a (Ljava/lang/Object;)Ljava/lang/CharSequence;]
  + Methodref [a/a/a/a/f.a (Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;]
  + Methodref [a/a/a/a/f.a (Ljava/util/Iterator;)Ljava/lang/String;]
  + Methodref [a/a/a/a/g.<init> (La/a/a/a/f;La/a/a/a/f;Ljava/lang/String;)V]
  + Methodref [a/a/a/a/h.<init> (La/a/a/a/f;Ljava/lang/String;La/a/a/a/g;)V]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [java/lang/AssertionError.<init> (Ljava/lang/Object;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
  + Methodref [java/lang/String.valueOf (C)Ljava/lang/String;]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;]
  + InterfaceMethodref [java/lang/Appendable.append (Ljava/lang/CharSequence;)Ljava/lang/Appendable;]
  + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/a/f;)V]
  + NameAndType [<init> (La/a/a/a/f;La/a/a/a/f;Ljava/lang/String;)V]
  + NameAndType [<init> (La/a/a/a/f;Ljava/lang/String;La/a/a/a/g;)V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [a (Ljava/lang/Appendable;Ljava/util/Iterator;)Ljava/lang/Appendable;]
  + NameAndType [a (Ljava/lang/Iterable;)Ljava/lang/String;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/CharSequence;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;]
  + NameAndType [a (Ljava/util/Iterator;)Ljava/lang/String;]
  + NameAndType [a Ljava/lang/String;]
  + NameAndType [append (Ljava/lang/CharSequence;)Ljava/lang/Appendable;]
  + NameAndType [asList ([Ljava/lang/Object;)Ljava/util/List;]
  + NameAndType [hasNext ()Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [valueOf (C)Ljava/lang/String;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(C)La/a/a/a/f;]
  + Utf8 [(C)Ljava/lang/String;]
  + Utf8 [(La/a/a/a/f;)Ljava/lang/String;]
  + Utf8 [(La/a/a/a/f;)V]
  + Utf8 [(La/a/a/a/f;La/a/a/a/f;Ljava/lang/String;)V]
  + Utf8 [(La/a/a/a/f;La/a/a/a/g;)V]
  + Utf8 [(La/a/a/a/f;Ljava/lang/String;La/a/a/a/g;)V]
  + Utf8 [(Ljava/lang/Appendable;Ljava/util/Iterator;)Ljava/lang/Appendable;]
  + Utf8 [(Ljava/lang/CharSequence;)Ljava/lang/Appendable;]
  + Utf8 [(Ljava/lang/Iterable;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/CharSequence;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/String;)La/a/a/a/f;]
  + Utf8 [(Ljava/lang/String;)La/a/a/a/h;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/util/Iterator;)Ljava/lang/String;]
  + Utf8 [([Ljava/lang/Object;)Ljava/lang/String;]
  + Utf8 [([Ljava/lang/Object;)Ljava/util/List;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/String;]
  + Utf8 [Ljavax/annotation/CheckReturnValue;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/f]
  + Utf8 [a/a/a/a/g]
  + Utf8 [a/a/a/a/h]
  + Utf8 [a/a/a/a/o]
  + Utf8 [append]
  + Utf8 [asList]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [hasNext]
  + Utf8 [iterator]
  + Utf8 [java/io/IOException]
  + Utf8 [java/lang/Appendable]
  + Utf8 [java/lang/AssertionError]
  + Utf8 [java/lang/CharSequence]
  + Utf8 [java/lang/Iterable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/Arrays]
  + Utf8 [java/util/Iterator]
  + Utf8 [next]
  + Utf8 [toString]
  + Utf8 [valueOf]

Fields (count = 1):
  + Field:        a Ljava/lang/String;
    Access flags: 0x12
      = private final java.lang.String a

Methods (count = 14):
  + Method:       a(Ljava/lang/String;)La/a/a/a/f;
    Access flags: 0x9
      = public static a.a.a.a.f a(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #1
        + Class [a/a/a/a/f]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #17
        + Methodref [a/a/a/a/f.<init> (Ljava/lang/String;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(C)La/a/a/a/f;
    Access flags: 0x9
      = public static a.a.a.a.f a(char)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 1, stack = 3):
      [0] new #1
        + Class [a/a/a/a/f]
      [3] dup
      [4] iload_0 v0
      [5] invokestatic #29
        + Methodref [java/lang/String.valueOf (C)Ljava/lang/String;]
      [8] invokespecial #17
        + Methodref [a/a/a/a/f.<init> (Ljava/lang/String;)V]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;)V
    Access flags: 0x2
      = private f(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #27
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokestatic #25
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] checkcast #11
        + Class [java/lang/String]
      [12] putfield #15
        + Fieldref [a/a/a/a/f.a Ljava/lang/String;]
      [15] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/a/f;)V
    Access flags: 0x2
      = private f(a.a.a.a.f)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #27
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] getfield #15
        + Fieldref [a/a/a/a/f.a Ljava/lang/String;]
      [9] putfield #15
        + Fieldref [a/a/a/a/f.a Ljava/lang/String;]
      [12] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Appendable;Ljava/util/Iterator;)Ljava/lang/Appendable;
    Access flags: 0x1
      = public java.lang.Appendable a(java.lang.Appendable,java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 73, locals = 3, stack = 3):
      [0] aload_1 v1
      [1] invokestatic #25
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_2 v2
      [6] invokeinterface #35
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [11] ifeq +60 (target=71)
      [14] aload_1 v1
      [15] aload_0 v0
      [16] aload_2 v2
      [17] invokeinterface #36
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [22] invokevirtual #20
        + Methodref [a/a/a/a/f.a (Ljava/lang/Object;)Ljava/lang/CharSequence;]
      [25] invokeinterface #33
        + InterfaceMethodref [java/lang/Appendable.append (Ljava/lang/CharSequence;)Ljava/lang/Appendable;]
      [30] pop
      [31] aload_2 v2
      [32] invokeinterface #35
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [37] ifeq +34 (target=71)
      [40] aload_1 v1
      [41] aload_0 v0
      [42] getfield #15
        + Fieldref [a/a/a/a/f.a Ljava/lang/String;]
      [45] invokeinterface #33
        + InterfaceMethodref [java/lang/Appendable.append (Ljava/lang/CharSequence;)Ljava/lang/Appendable;]
      [50] pop
      [51] aload_1 v1
      [52] aload_0 v0
      [53] aload_2 v2
      [54] invokeinterface #36
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [59] invokevirtual #20
        + Methodref [a/a/a/a/f.a (Ljava/lang/Object;)Ljava/lang/CharSequence;]
      [62] invokeinterface #33
        + InterfaceMethodref [java/lang/Appendable.append (Ljava/lang/CharSequence;)Ljava/lang/Appendable;]
      [67] pop
      [68] goto -37 (target=31)
      [71] aload_1 v1
      [72] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [31] Var: ..., Stack: (empty)
        - [71] Var: ..., Stack: (empty)
  + Method:       a(Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;
    Access flags: 0x11
      = public final java.lang.StringBuilder a(java.lang.StringBuilder,java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokevirtual #18
        + Methodref [a/a/a/a/f.a (Ljava/lang/Appendable;Ljava/util/Iterator;)Ljava/lang/Appendable;]
      [6] pop
      [7] goto +13 (target=20)
      [10] astore_3 v3
      [11] new #7
        + Class [java/lang/AssertionError]
      [14] dup
      [15] aload_3 v3
      [16] invokespecial #26
        + Methodref [java/lang/AssertionError.<init> (Ljava/lang/Object;)V]
      [19] athrow
      [20] aload_1 v1
      [21] areturn
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 7: 10):
      + Class [java/io/IOException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [10] Var: ..., Stack: [a:java/io/IOException]
        - [20] Var: ..., Stack: (empty)
  + Method:       a(Ljava/lang/Iterable;)Ljava/lang/String;
    Access flags: 0x11
      = public final java.lang.String a(java.lang.Iterable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokeinterface #34
        + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
      [7] invokevirtual #22
        + Methodref [a/a/a/a/f.a (Ljava/util/Iterator;)Ljava/lang/String;]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Iterator;)Ljava/lang/String;
    Access flags: 0x11
      = public final java.lang.String a(java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] new #12
        + Class [java/lang/StringBuilder]
      [4] dup
      [5] invokespecial #30
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [8] aload_1 v1
      [9] invokevirtual #21
        + Methodref [a/a/a/a/f.a (Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;]
      [12] invokevirtual #31
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [15] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a([Ljava/lang/Object;)Ljava/lang/String;
    Access flags: 0x11
      = public final java.lang.String a(java.lang.Object[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #32
        + Methodref [java/util/Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;]
      [5] invokevirtual #19
        + Methodref [a/a/a/a/f.a (Ljava/lang/Iterable;)Ljava/lang/String;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/String;)La/a/a/a/f;
    Access flags: 0x1
      = public a.a.a.a.f b(java.lang.String)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 16, locals = 2, stack = 5):
      [0] aload_1 v1
      [1] invokestatic #25
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] new #2
        + Class [a/a/a/a/g]
      [8] dup
      [9] aload_0 v0
      [10] aload_0 v0
      [11] aload_1 v1
      [12] invokespecial #23
        + Methodref [a/a/a/a/g.<init> (La/a/a/a/f;La/a/a/a/f;Ljava/lang/String;)V]
      [15] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/CheckReturnValue;]:
  + Method:       c(Ljava/lang/String;)La/a/a/a/h;
    Access flags: 0x1
      = public a.a.a.a.h c(java.lang.String)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 11, locals = 2, stack = 5):
      [0] new #3
        + Class [a/a/a/a/h]
      [3] dup
      [4] aload_0 v0
      [5] aload_1 v1
      [6] aconst_null
      [7] invokespecial #24
        + Methodref [a/a/a/a/h.<init> (La/a/a/a/f;Ljava/lang/String;La/a/a/a/g;)V]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/CheckReturnValue;]:
  + Method:       a(Ljava/lang/Object;)Ljava/lang/CharSequence;
    Access flags: 0x0
      = java.lang.CharSequence a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokestatic #25
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_1 v1
      [6] instanceof #8
        + Class [java/lang/CharSequence]
      [9] ifeq +10 (target=19)
      [12] aload_1 v1
      [13] checkcast #8
        + Class [java/lang/CharSequence]
      [16] goto +7 (target=23)
      [19] aload_1 v1
      [20] invokevirtual #28
        + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
      [23] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [19] Var: ..., Stack: (empty)
        - [23] Var: ..., Stack: [a:java/lang/CharSequence]
  - Method:       <init>(La/a/a/a/f;La/a/a/a/g;)V
    Access flags: 0x1000
      = synthetic f(a.a.a.a.f,a.a.a.a.g)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #16
        + Methodref [a/a/a/a/f.<init> (La/a/a/a/f;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/a/f;)Ljava/lang/String;
    Access flags: 0x1008
      = static synthetic java.lang.String a(a.a.a.a.f)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #15
        + Fieldref [a/a/a/a/f.a Ljava/lang/String;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/g
  Superclass:    a/a/a/a/f
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.a.g extends a.a.a.a.f

Interfaces (count = 0):

Constant Pool (count = 35):
  + String [already specified useForNull]
  + Class [a/a/a/a/f]
  + Class [a/a/a/a/g]
  + Class [java/lang/CharSequence]
  + Class [java/lang/UnsupportedOperationException]
  + Fieldref [a/a/a/a/g.a Ljava/lang/String;]
  + Fieldref [a/a/a/a/g.b La/a/a/a/f;]
  + Methodref [a/a/a/a/f.<init> (La/a/a/a/f;La/a/a/a/g;)V]
  + Methodref [a/a/a/a/f.a (Ljava/lang/Object;)Ljava/lang/CharSequence;]
  + Methodref [java/lang/UnsupportedOperationException.<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (La/a/a/a/f;La/a/a/a/g;)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/CharSequence;]
  + NameAndType [a Ljava/lang/String;]
  + NameAndType [b La/a/a/a/f;]
  + Utf8 [(La/a/a/a/f;La/a/a/a/f;Ljava/lang/String;)V]
  + Utf8 [(La/a/a/a/f;La/a/a/a/g;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/CharSequence;]
  + Utf8 [(Ljava/lang/String;)La/a/a/a/f;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/f;]
  + Utf8 [Ljava/lang/String;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/f]
  + Utf8 [a/a/a/a/g]
  + Utf8 [already specified useForNull]
  + Utf8 [b]
  + Utf8 [java/lang/CharSequence]
  + Utf8 [java/lang/UnsupportedOperationException]

Fields (count = 2):
  + Field:        a Ljava/lang/String;
    Access flags: 0x1010
      = final synthetic java.lang.String a
  + Field:        b La/a/a/a/f;
    Access flags: 0x1010
      = final synthetic a.a.a.a.f b

Methods (count = 3):
  - Method:       <init>(La/a/a/a/f;La/a/a/a/f;Ljava/lang/String;)V
    Access flags: 0x0
      = g(a.a.a.a.f,a.a.a.a.f,java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #7
        + Fieldref [a/a/a/a/g.b La/a/a/a/f;]
      [5] aload_0 v0
      [6] aload_3 v3
      [7] putfield #6
        + Fieldref [a/a/a/a/g.a Ljava/lang/String;]
      [10] aload_0 v0
      [11] aload_2 v2
      [12] aconst_null
      [13] invokespecial #8
        + Methodref [a/a/a/a/f.<init> (La/a/a/a/f;La/a/a/a/g;)V]
      [16] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Ljava/lang/CharSequence;
    Access flags: 0x0
      = java.lang.CharSequence a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 20, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] ifnonnull +10 (target=11)
      [4] aload_0 v0
      [5] getfield #6
        + Fieldref [a/a/a/a/g.a Ljava/lang/String;]
      [8] goto +11 (target=19)
      [11] aload_0 v0
      [12] getfield #7
        + Fieldref [a/a/a/a/g.b La/a/a/a/f;]
      [15] aload_1 v1
      [16] invokevirtual #9
        + Methodref [a/a/a/a/f.a (Ljava/lang/Object;)Ljava/lang/CharSequence;]
      [19] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [19] Var: ..., Stack: [a:java/lang/CharSequence]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b(Ljava/lang/String;)La/a/a/a/f;
    Access flags: 0x1
      = public a.a.a.a.f b(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 3):
      [0] new #5
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] ldc #1
        + String [already specified useForNull]
      [6] invokespecial #10
        + Methodref [java/lang/UnsupportedOperationException.<init> (Ljava/lang/String;)V]
      [9] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/h
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.a.h extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 91):
  + Class [a/a/a/a/f]
  + Class [a/a/a/a/h]
  + Class [a/a/a/a/o]
  + Class [java/io/IOException]
  + Class [java/lang/Appendable]
  + Class [java/lang/AssertionError]
  + Class [java/lang/Iterable]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/util/Iterator]
  + Class [java/util/Map]
  + Class [java/util/Map$Entry]
  + Fieldref [a/a/a/a/h.a La/a/a/a/f;]
  + Fieldref [a/a/a/a/h.b Ljava/lang/String;]
  + Methodref [a/a/a/a/f.a (La/a/a/a/f;)Ljava/lang/String;]
  + Methodref [a/a/a/a/f.a (Ljava/lang/Object;)Ljava/lang/CharSequence;]
  + Methodref [a/a/a/a/h.<init> (La/a/a/a/f;Ljava/lang/String;)V]
  + Methodref [a/a/a/a/h.a (Ljava/lang/Appendable;Ljava/util/Iterator;)Ljava/lang/Appendable;]
  + Methodref [a/a/a/a/h.a (Ljava/lang/StringBuilder;Ljava/lang/Iterable;)Ljava/lang/StringBuilder;]
  + Methodref [a/a/a/a/h.a (Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [java/lang/AssertionError.<init> (Ljava/lang/Object;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + InterfaceMethodref [java/lang/Appendable.append (Ljava/lang/CharSequence;)Ljava/lang/Appendable;]
  + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/a/f;Ljava/lang/String;)V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [a (La/a/a/a/f;)Ljava/lang/String;]
  + NameAndType [a (Ljava/lang/Appendable;Ljava/util/Iterator;)Ljava/lang/Appendable;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/CharSequence;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/StringBuilder;Ljava/lang/Iterable;)Ljava/lang/StringBuilder;]
  + NameAndType [a (Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;]
  + NameAndType [a La/a/a/a/f;]
  + NameAndType [append (Ljava/lang/CharSequence;)Ljava/lang/Appendable;]
  + NameAndType [b Ljava/lang/String;]
  + NameAndType [entrySet ()Ljava/util/Set;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [hasNext ()Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [next ()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/a/f;)Ljava/lang/String;]
  + Utf8 [(La/a/a/a/f;Ljava/lang/String;)V]
  + Utf8 [(La/a/a/a/f;Ljava/lang/String;La/a/a/a/g;)V]
  + Utf8 [(Ljava/lang/Appendable;Ljava/util/Iterator;)Ljava/lang/Appendable;]
  + Utf8 [(Ljava/lang/CharSequence;)Ljava/lang/Appendable;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/CharSequence;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/StringBuilder;Ljava/lang/Iterable;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/StringBuilder;Ljava/util/Map;)Ljava/lang/StringBuilder;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/f;]
  + Utf8 [Ljava/lang/String;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/f]
  + Utf8 [a/a/a/a/h]
  + Utf8 [a/a/a/a/o]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [entrySet]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [hasNext]
  + Utf8 [iterator]
  + Utf8 [java/io/IOException]
  + Utf8 [java/lang/Appendable]
  + Utf8 [java/lang/AssertionError]
  + Utf8 [java/lang/Iterable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [next]

Fields (count = 2):
  + Field:        a La/a/a/a/f;
    Access flags: 0x12
      = private final a.a.a.a.f a
  + Field:        b Ljava/lang/String;
    Access flags: 0x12
      = private final java.lang.String b

Methods (count = 6):
  - Method:       <init>(La/a/a/a/f;Ljava/lang/String;)V
    Access flags: 0x2
      = private h(a.a.a.a.f,java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #23
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #13
        + Fieldref [a/a/a/a/h.a La/a/a/a/f;]
      [9] aload_0 v0
      [10] aload_2 v2
      [11] invokestatic #21
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [14] checkcast #9
        + Class [java/lang/String]
      [17] putfield #14
        + Fieldref [a/a/a/a/h.b Ljava/lang/String;]
      [20] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/StringBuilder;Ljava/util/Map;)Ljava/lang/StringBuilder;
    Access flags: 0x1
      = public java.lang.StringBuilder a(java.lang.StringBuilder,java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokeinterface #28
        + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
      [8] invokevirtual #19
        + Methodref [a/a/a/a/h.a (Ljava/lang/StringBuilder;Ljava/lang/Iterable;)Ljava/lang/StringBuilder;]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Appendable;Ljava/util/Iterator;)Ljava/lang/Appendable;
    Access flags: 0x1
      = public java.lang.Appendable a(java.lang.Appendable,java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 167, locals = 5, stack = 3):
      [0] aload_1 v1
      [1] invokestatic #21
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_2 v2
      [6] invokeinterface #26
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [11] ifeq +154 (target=165)
      [14] aload_2 v2
      [15] invokeinterface #27
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [20] checkcast #12
        + Class [java/util/Map$Entry]
      [23] astore_3 v3
      [24] aload_1 v1
      [25] aload_0 v0
      [26] getfield #13
        + Fieldref [a/a/a/a/h.a La/a/a/a/f;]
      [29] aload_3 v3
      [30] invokeinterface #29
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [35] invokevirtual #16
        + Methodref [a/a/a/a/f.a (Ljava/lang/Object;)Ljava/lang/CharSequence;]
      [38] invokeinterface #24
        + InterfaceMethodref [java/lang/Appendable.append (Ljava/lang/CharSequence;)Ljava/lang/Appendable;]
      [43] pop
      [44] aload_1 v1
      [45] aload_0 v0
      [46] getfield #14
        + Fieldref [a/a/a/a/h.b Ljava/lang/String;]
      [49] invokeinterface #24
        + InterfaceMethodref [java/lang/Appendable.append (Ljava/lang/CharSequence;)Ljava/lang/Appendable;]
      [54] pop
      [55] aload_1 v1
      [56] aload_0 v0
      [57] getfield #13
        + Fieldref [a/a/a/a/h.a La/a/a/a/f;]
      [60] aload_3 v3
      [61] invokeinterface #30
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [66] invokevirtual #16
        + Methodref [a/a/a/a/f.a (Ljava/lang/Object;)Ljava/lang/CharSequence;]
      [69] invokeinterface #24
        + InterfaceMethodref [java/lang/Appendable.append (Ljava/lang/CharSequence;)Ljava/lang/Appendable;]
      [74] pop
      [75] aload_2 v2
      [76] invokeinterface #26
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [81] ifeq +84 (target=165)
      [84] aload_1 v1
      [85] aload_0 v0
      [86] getfield #13
        + Fieldref [a/a/a/a/h.a La/a/a/a/f;]
      [89] invokestatic #15
        + Methodref [a/a/a/a/f.a (La/a/a/a/f;)Ljava/lang/String;]
      [92] invokeinterface #24
        + InterfaceMethodref [java/lang/Appendable.append (Ljava/lang/CharSequence;)Ljava/lang/Appendable;]
      [97] pop
      [98] aload_2 v2
      [99] invokeinterface #27
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [104] checkcast #12
        + Class [java/util/Map$Entry]
      [107] astore v4
      [109] aload_1 v1
      [110] aload_0 v0
      [111] getfield #13
        + Fieldref [a/a/a/a/h.a La/a/a/a/f;]
      [114] aload v4
      [116] invokeinterface #29
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [121] invokevirtual #16
        + Methodref [a/a/a/a/f.a (Ljava/lang/Object;)Ljava/lang/CharSequence;]
      [124] invokeinterface #24
        + InterfaceMethodref [java/lang/Appendable.append (Ljava/lang/CharSequence;)Ljava/lang/Appendable;]
      [129] pop
      [130] aload_1 v1
      [131] aload_0 v0
      [132] getfield #14
        + Fieldref [a/a/a/a/h.b Ljava/lang/String;]
      [135] invokeinterface #24
        + InterfaceMethodref [java/lang/Appendable.append (Ljava/lang/CharSequence;)Ljava/lang/Appendable;]
      [140] pop
      [141] aload_1 v1
      [142] aload_0 v0
      [143] getfield #13
        + Fieldref [a/a/a/a/h.a La/a/a/a/f;]
      [146] aload v4
      [148] invokeinterface #30
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [153] invokevirtual #16
        + Methodref [a/a/a/a/f.a (Ljava/lang/Object;)Ljava/lang/CharSequence;]
      [156] invokeinterface #24
        + InterfaceMethodref [java/lang/Appendable.append (Ljava/lang/CharSequence;)Ljava/lang/Appendable;]
      [161] pop
      [162] goto -87 (target=75)
      [165] aload_1 v1
      [166] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [75] Var: ...[a:java/util/Map$Entry], Stack: (empty)
        - [165] Var: -1, Stack: (empty)
  + Method:       a(Ljava/lang/StringBuilder;Ljava/lang/Iterable;)Ljava/lang/StringBuilder;
    Access flags: 0x1
      = public java.lang.StringBuilder a(java.lang.StringBuilder,java.lang.Iterable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokeinterface #25
        + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
      [8] invokevirtual #20
        + Methodref [a/a/a/a/h.a (Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;
    Access flags: 0x1
      = public java.lang.StringBuilder a(java.lang.StringBuilder,java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokevirtual #18
        + Methodref [a/a/a/a/h.a (Ljava/lang/Appendable;Ljava/util/Iterator;)Ljava/lang/Appendable;]
      [6] pop
      [7] goto +13 (target=20)
      [10] astore_3 v3
      [11] new #6
        + Class [java/lang/AssertionError]
      [14] dup
      [15] aload_3 v3
      [16] invokespecial #22
        + Methodref [java/lang/AssertionError.<init> (Ljava/lang/Object;)V]
      [19] athrow
      [20] aload_1 v1
      [21] areturn
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 7: 10):
      + Class [java/io/IOException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [10] Var: ..., Stack: [a:java/io/IOException]
        - [20] Var: ..., Stack: (empty)
  - Method:       <init>(La/a/a/a/f;Ljava/lang/String;La/a/a/a/g;)V
    Access flags: 0x1000
      = synthetic h(a.a.a.a.f,java.lang.String,a.a.a.a.g)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokespecial #17
        + Methodref [a/a/a/a/h.<init> (La/a/a/a/f;Ljava/lang/String;)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/i
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.a.i extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 66):
  + String [\$]
  + String [\$[0-9]+]
  + Class [a/a/a/a/i]
  + Class [a/a/a/a/k]
  + Class [a/a/a/a/o]
  + Class [java/lang/Class]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/util/Arrays]
  + Methodref [a/a/a/a/i.a (Ljava/lang/Class;)Ljava/lang/String;]
  + Methodref [a/a/a/a/k.<init> (Ljava/lang/String;La/a/a/a/j;)V]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [java/lang/Class.getName ()Ljava/lang/String;]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
  + Methodref [java/lang/String.lastIndexOf (I)I]
  + Methodref [java/lang/String.replaceAll (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;]
  + Methodref [java/lang/String.substring (I)Ljava/lang/String;]
  + Methodref [java/util/Arrays.hashCode ([Ljava/lang/Object;)I]
  + NameAndType [<init> (Ljava/lang/String;La/a/a/a/j;)V]
  + NameAndType [a (Ljava/lang/Class;)Ljava/lang/String;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [getClass ()Ljava/lang/Class;]
  + NameAndType [getName ()Ljava/lang/String;]
  + NameAndType [hashCode ([Ljava/lang/Object;)I]
  + NameAndType [lastIndexOf (I)I]
  + NameAndType [replaceAll (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;]
  + NameAndType [substring (I)Ljava/lang/String;]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [(I)I]
  + Utf8 [(I)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/Class;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/a/k;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;La/a/a/a/j;)V]
  + Utf8 [(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;]
  + Utf8 [([Ljava/lang/Object;)I]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [\$]
  + Utf8 [\$[0-9]+]
  + Utf8 [a]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/a/k]
  + Utf8 [a/a/a/a/o]
  + Utf8 [b]
  + Utf8 [equals]
  + Utf8 [getClass]
  + Utf8 [getName]
  + Utf8 [hashCode]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/util/Arrays]
  + Utf8 [lastIndexOf]
  + Utf8 [replaceAll]
  + Utf8 [substring]

Fields (count = 0):

Methods (count = 5):
  + Method:       a(Ljava/lang/Object;Ljava/lang/Object;)Z
    Access flags: 0x9
      = public static boolean a(java.lang.Object,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 23, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] ifacmpeq +15 (target=17)
      [5] aload_0 v0
      [6] ifnull +15 (target=21)
      [9] aload_0 v0
      [10] aload_1 v1
      [11] invokevirtual #14
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [14] ifeq +7 (target=21)
      [17] iconst_1
      [18] goto +4 (target=22)
      [21] iconst_0
      [22] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [17] Var: ..., Stack: (empty)
        - [21] Var: ..., Stack: (empty)
        - [22] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a([Ljava/lang/Object;)I
    Access flags: 0x89
      = public static varargs int a(java.lang.Object[])
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokestatic #19
        + Methodref [java/util/Arrays.hashCode ([Ljava/lang/Object;)I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Object;)La/a/a/a/k;
    Access flags: 0x9
      = public static a.a.a.a.k a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 4):
      [0] new #4
        + Class [a/a/a/a/k]
      [3] dup
      [4] aload_0 v0
      [5] invokevirtual #15
        + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
      [8] invokestatic #10
        + Methodref [a/a/a/a/i.a (Ljava/lang/Class;)Ljava/lang/String;]
      [11] aconst_null
      [12] invokespecial #11
        + Methodref [a/a/a/a/k.<init> (Ljava/lang/String;La/a/a/a/j;)V]
      [15] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Class;)Ljava/lang/String;
    Access flags: 0xa
      = private static java.lang.String a(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 41, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #13
        + Methodref [java/lang/Class.getName ()Ljava/lang/String;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ldc #2
        + String [\$[0-9]+]
      [8] ldc #1
        + String [\$]
      [10] invokevirtual #17
        + Methodref [java/lang/String.replaceAll (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;]
      [13] astore_1 v1
      [14] aload_1 v1
      [15] bipush 36
      [17] invokevirtual #16
        + Methodref [java/lang/String.lastIndexOf (I)I]
      [20] istore_2 v2
      [21] iload_2 v2
      [22] iconst_m1
      [23] ificmpne +10 (target=33)
      [26] aload_1 v1
      [27] bipush 46
      [29] invokevirtual #16
        + Methodref [java/lang/String.lastIndexOf (I)I]
      [32] istore_2 v2
      [33] aload_1 v1
      [34] iload_2 v2
      [35] iconst_1
      [36] iadd
      [37] invokevirtual #18
        + Methodref [java/lang/String.substring (I)Ljava/lang/String;]
      [40] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [33] Var: ...[a:java/lang/String][i], Stack: (empty)
  + Method:       b(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x9
      = public static java.lang.Object b(java.lang.Object,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 13, locals = 2, stack = 1):
      [0] aload_0 v0
      [1] ifnull +7 (target=8)
      [4] aload_0 v0
      [5] goto +7 (target=12)
      [8] aload_1 v1
      [9] invokestatic #12
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [12] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [8] Var: ..., Stack: (empty)
        - [12] Var: ..., Stack: [a:java/lang/Object]
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/j
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x1020
    = synthetic class a.a.a.a.j extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 5):
  + Class [a/a/a/a/j]
  + Class [java/lang/Object]
  + Utf8 [a/a/a/a/j]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/k
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.a.k extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 90):
  + String []
  + String [, ]
  + Class [a/a/a/a/k]
  + Class [a/a/a/a/l]
  + Class [a/a/a/a/o]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/StringBuilder]
  + Fieldref [a/a/a/a/k.a Ljava/lang/String;]
  + Fieldref [a/a/a/a/k.b La/a/a/a/l;]
  + Fieldref [a/a/a/a/k.c La/a/a/a/l;]
  + Fieldref [a/a/a/a/k.d Z]
  + Fieldref [a/a/a/a/l.a Ljava/lang/String;]
  + Fieldref [a/a/a/a/l.b Ljava/lang/Object;]
  + Fieldref [a/a/a/a/l.c La/a/a/a/l;]
  + Methodref [a/a/a/a/k.<init> (Ljava/lang/String;)V]
  + Methodref [a/a/a/a/k.a ()La/a/a/a/l;]
  + Methodref [a/a/a/a/k.b (Ljava/lang/Object;)La/a/a/a/k;]
  + Methodref [a/a/a/a/k.b (Ljava/lang/String;Ljava/lang/Object;)La/a/a/a/k;]
  + Methodref [a/a/a/a/l.<init> (La/a/a/a/j;)V]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/String.valueOf (I)Ljava/lang/String;]
  + Methodref [java/lang/String.valueOf (J)Ljava/lang/String;]
  + Methodref [java/lang/StringBuilder.<init> (I)V]
  + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (I)V]
  + NameAndType [<init> (La/a/a/a/j;)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [a ()La/a/a/a/l;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a Ljava/lang/String;]
  + NameAndType [append (C)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b (Ljava/lang/Object;)La/a/a/a/k;]
  + NameAndType [b (Ljava/lang/String;Ljava/lang/Object;)La/a/a/a/k;]
  + NameAndType [b La/a/a/a/l;]
  + NameAndType [b Ljava/lang/Object;]
  + NameAndType [c La/a/a/a/l;]
  + NameAndType [d Z]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [valueOf (I)Ljava/lang/String;]
  + NameAndType [valueOf (J)Ljava/lang/String;]
  + Utf8 []
  + Utf8 [()La/a/a/a/l;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(C)Ljava/lang/StringBuilder;]
  + Utf8 [(I)Ljava/lang/String;]
  + Utf8 [(I)V]
  + Utf8 [(J)Ljava/lang/String;]
  + Utf8 [(La/a/a/a/j;)V]
  + Utf8 [(Ljava/lang/Object;)La/a/a/a/k;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;I)La/a/a/a/k;]
  + Utf8 [(Ljava/lang/String;J)La/a/a/a/k;]
  + Utf8 [(Ljava/lang/String;La/a/a/a/j;)V]
  + Utf8 [(Ljava/lang/String;Ljava/lang/Object;)La/a/a/a/k;]
  + Utf8 [, ]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/l;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljava/lang/String;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [Z]
  + Utf8 [a]
  + Utf8 [a/a/a/a/k]
  + Utf8 [a/a/a/a/l]
  + Utf8 [a/a/a/a/o]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [toString]
  + Utf8 [valueOf]

Fields (count = 4):
  + Field:        a Ljava/lang/String;
    Access flags: 0x12
      = private final java.lang.String a
  + Field:        b La/a/a/a/l;
    Access flags: 0x2
      = private a.a.a.a.l b
  + Field:        c La/a/a/a/l;
    Access flags: 0x2
      = private a.a.a.a.l c
  + Field:        d Z
    Access flags: 0x2
      = private boolean d

Methods (count = 10):
  - Method:       <init>(Ljava/lang/String;)V
    Access flags: 0x2
      = private k(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 41, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] invokespecial #22
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] new #4
        + Class [a/a/a/a/l]
      [8] dup
      [9] aconst_null
      [10] invokespecial #20
        + Methodref [a/a/a/a/l.<init> (La/a/a/a/j;)V]
      [13] putfield #10
        + Fieldref [a/a/a/a/k.b La/a/a/a/l;]
      [16] aload_0 v0
      [17] aload_0 v0
      [18] getfield #10
        + Fieldref [a/a/a/a/k.b La/a/a/a/l;]
      [21] putfield #11
        + Fieldref [a/a/a/a/k.c La/a/a/a/l;]
      [24] aload_0 v0
      [25] iconst_0
      [26] putfield #12
        + Fieldref [a/a/a/a/k.d Z]
      [29] aload_0 v0
      [30] aload_1 v1
      [31] invokestatic #21
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [34] checkcast #7
        + Class [java/lang/String]
      [37] putfield #9
        + Fieldref [a/a/a/a/k.a Ljava/lang/String;]
      [40] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/String;Ljava/lang/Object;)La/a/a/a/k;
    Access flags: 0x1
      = public a.a.a.a.k a(java.lang.String,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokespecial #19
        + Methodref [a/a/a/a/k.b (Ljava/lang/String;Ljava/lang/Object;)La/a/a/a/k;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/String;I)La/a/a/a/k;
    Access flags: 0x1
      = public a.a.a.a.k a(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokestatic #23
        + Methodref [java/lang/String.valueOf (I)Ljava/lang/String;]
      [6] invokespecial #19
        + Methodref [a/a/a/a/k.b (Ljava/lang/String;Ljava/lang/Object;)La/a/a/a/k;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/String;J)La/a/a/a/k;
    Access flags: 0x1
      = public a.a.a.a.k a(java.lang.String,long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 4, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] lload_2 v2
      [3] invokestatic #24
        + Methodref [java/lang/String.valueOf (J)Ljava/lang/String;]
      [6] invokespecial #19
        + Methodref [a/a/a/a/k.b (Ljava/lang/String;Ljava/lang/Object;)La/a/a/a/k;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)La/a/a/a/k;
    Access flags: 0x1
      = public a.a.a.a.k a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #18
        + Methodref [a/a/a/a/k.b (Ljava/lang/Object;)La/a/a/a/k;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 118, locals = 5, stack = 3):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/a/k.d Z]
      [4] istore_1 v1
      [5] ldc #1
        + String []
      [7] astore_2 v2
      [8] new #8
        + Class [java/lang/StringBuilder]
      [11] dup
      [12] bipush 32
      [14] invokespecial #25
        + Methodref [java/lang/StringBuilder.<init> (I)V]
      [17] aload_0 v0
      [18] getfield #9
        + Fieldref [a/a/a/a/k.a Ljava/lang/String;]
      [21] invokevirtual #28
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [24] bipush 123
      [26] invokevirtual #26
        + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
      [29] astore_3 v3
      [30] aload_0 v0
      [31] getfield #10
        + Fieldref [a/a/a/a/k.b La/a/a/a/l;]
      [34] getfield #15
        + Fieldref [a/a/a/a/l.c La/a/a/a/l;]
      [37] astore v4
      [39] aload v4
      [41] ifnull +67 (target=108)
      [44] iload_1 v1
      [45] ifeq +11 (target=56)
      [48] aload v4
      [50] getfield #14
        + Fieldref [a/a/a/a/l.b Ljava/lang/Object;]
      [53] ifnull +45 (target=98)
      [56] aload_3 v3
      [57] aload_2 v2
      [58] invokevirtual #28
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [61] pop
      [62] ldc #2
        + String [, ]
      [64] astore_2 v2
      [65] aload v4
      [67] getfield #13
        + Fieldref [a/a/a/a/l.a Ljava/lang/String;]
      [70] ifnull +18 (target=88)
      [73] aload_3 v3
      [74] aload v4
      [76] getfield #13
        + Fieldref [a/a/a/a/l.a Ljava/lang/String;]
      [79] invokevirtual #28
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [82] bipush 61
      [84] invokevirtual #26
        + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
      [87] pop
      [88] aload_3 v3
      [89] aload v4
      [91] getfield #14
        + Fieldref [a/a/a/a/l.b Ljava/lang/Object;]
      [94] invokevirtual #27
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [97] pop
      [98] aload v4
      [100] getfield #15
        + Fieldref [a/a/a/a/l.c La/a/a/a/l;]
      [103] astore v4
      [105] goto -66 (target=39)
      [108] aload_3 v3
      [109] bipush 125
      [111] invokevirtual #26
        + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
      [114] invokevirtual #29
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [117] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 5):
        - [39] Var: [a:a/a/a/a/k][i][a:java/lang/String][a:java/lang/StringBuilder][a:a/a/a/a/l], Stack: 
        - [56] Var: ..., Stack: (empty)
        - [88] Var: ..., Stack: (empty)
        - [98] Var: ..., Stack: (empty)
        - [108] Var: -1, Stack: (empty)
  + Method:       a()La/a/a/a/l;
    Access flags: 0x2
      = private a.a.a.a.l a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 2, stack = 4):
      [0] new #4
        + Class [a/a/a/a/l]
      [3] dup
      [4] aconst_null
      [5] invokespecial #20
        + Methodref [a/a/a/a/l.<init> (La/a/a/a/j;)V]
      [8] astore_1 v1
      [9] aload_0 v0
      [10] aload_0 v0
      [11] getfield #11
        + Fieldref [a/a/a/a/k.c La/a/a/a/l;]
      [14] aload_1 v1
      [15] dup_x1
      [16] putfield #15
        + Fieldref [a/a/a/a/l.c La/a/a/a/l;]
      [19] putfield #11
        + Fieldref [a/a/a/a/k.c La/a/a/a/l;]
      [22] aload_1 v1
      [23] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;)La/a/a/a/k;
    Access flags: 0x2
      = private a.a.a.a.k b(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 12, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #17
        + Methodref [a/a/a/a/k.a ()La/a/a/a/l;]
      [4] astore_2 v2
      [5] aload_2 v2
      [6] aload_1 v1
      [7] putfield #14
        + Fieldref [a/a/a/a/l.b Ljava/lang/Object;]
      [10] aload_0 v0
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b(Ljava/lang/String;Ljava/lang/Object;)La/a/a/a/k;
    Access flags: 0x2
      = private a.a.a.a.k b(java.lang.String,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 23, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #17
        + Methodref [a/a/a/a/k.a ()La/a/a/a/l;]
      [4] astore_3 v3
      [5] aload_3 v3
      [6] aload_2 v2
      [7] putfield #14
        + Fieldref [a/a/a/a/l.b Ljava/lang/Object;]
      [10] aload_3 v3
      [11] aload_1 v1
      [12] invokestatic #21
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [15] checkcast #7
        + Class [java/lang/String]
      [18] putfield #13
        + Fieldref [a/a/a/a/l.a Ljava/lang/String;]
      [21] aload_0 v0
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  - Method:       <init>(Ljava/lang/String;La/a/a/a/j;)V
    Access flags: 0x1000
      = synthetic k(java.lang.String,a.a.a.a.j)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #16
        + Methodref [a/a/a/a/k.<init> (Ljava/lang/String;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/l
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.a.l extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 18):
  + Class [a/a/a/a/l]
  + Class [java/lang/Object]
  + Methodref [a/a/a/a/l.<init> ()V]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [(La/a/a/a/j;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/l;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljava/lang/String;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/l]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [java/lang/Object]

Fields (count = 3):
  + Field:        a Ljava/lang/String;
    Access flags: 0x0
      = java.lang.String a
  + Field:        b Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object b
  + Field:        c La/a/a/a/l;
    Access flags: 0x0
      = a.a.a.a.l c

Methods (count = 2):
  - Method:       <init>()V
    Access flags: 0x2
      = private l()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #4
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/a/j;)V
    Access flags: 0x1000
      = synthetic l(a.a.a.a.j)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #3
        + Methodref [a/a/a/a/l.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/m
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.a.m extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 23):
  + Class [a/a/a/a/m]
  + Class [a/a/a/a/n]
  + Class [java/lang/Object]
  + Class [java/lang/System]
  + Fieldref [a/a/a/a/m.a Ljava/lang/ThreadLocal;]
  + Methodref [a/a/a/a/n.<init> ()V]
  + Methodref [java/lang/System.nanoTime ()J]
  + NameAndType [<init> ()V]
  + NameAndType [a Ljava/lang/ThreadLocal;]
  + NameAndType [nanoTime ()J]
  + Utf8 [()J]
  + Utf8 [()V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/ThreadLocal;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/m]
  + Utf8 [a/a/a/a/n]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/System]
  + Utf8 [nanoTime]

Fields (count = 1):
  + Field:        a Ljava/lang/ThreadLocal;
    Access flags: 0x1a
      = private static final java.lang.ThreadLocal a

Methods (count = 2):
  + Method:       a()J
    Access flags: 0x8
      = static long a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 2):
      [0] invokestatic #7
        + Methodref [java/lang/System.nanoTime ()J]
      [3] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 0, stack = 2):
      [0] new #2
        + Class [a/a/a/a/n]
      [3] dup
      [4] invokespecial #6
        + Methodref [a/a/a/a/n.<init> ()V]
      [7] putstatic #5
        + Fieldref [a/a/a/a/m.a Ljava/lang/ThreadLocal;]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/n
  Superclass:    java/lang/ThreadLocal
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.a.n extends java.lang.ThreadLocal

Interfaces (count = 0):

Constant Pool (count = 16):
  + Class [a/a/a/a/n]
  + Class [java/lang/ThreadLocal]
  + Methodref [a/a/a/a/n.a ()[C]
  + Methodref [java/lang/ThreadLocal.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a ()[C]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()[C]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/a/n]
  + Utf8 [initialValue]
  + Utf8 [java/lang/ThreadLocal]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x0
      = n()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #4
        + Methodref [java/lang/ThreadLocal.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()[C
    Access flags: 0x4
      = protected char[] a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 1, stack = 1):
      [0] sipush 1024
      [3] newarray 5
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       initialValue()Ljava/lang/Object;
    Access flags: 0x1004
      = protected synthetic java.lang.Object initialValue()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #3
        + Methodref [a/a/a/a/n.a ()[C]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/o
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.a.o extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 127):
  + String [ []
  + String [%s]
  + String [%s (%s) must be less than size (%s)]
  + String [%s (%s) must not be greater than size (%s)]
  + String [%s (%s) must not be negative]
  + String [, ]
  + String [end index]
  + String [end index (%s) must not be less than start index (%s)]
  + String [index]
  + String [negative size: ]
  + String [start index]
  + Class [a/a/a/a/o]
  + Class [java/lang/IllegalArgumentException]
  + Class [java/lang/IllegalStateException]
  + Class [java/lang/IndexOutOfBoundsException]
  + Class [java/lang/Integer]
  + Class [java/lang/NullPointerException]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/StringBuilder]
  + Methodref [a/a/a/a/o.a (IILjava/lang/String;)I]
  + Methodref [a/a/a/a/o.a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;]
  + Methodref [a/a/a/a/o.b (III)Ljava/lang/String;]
  + Methodref [a/a/a/a/o.b (IILjava/lang/String;)I]
  + Methodref [a/a/a/a/o.c (IILjava/lang/String;)Ljava/lang/String;]
  + Methodref [a/a/a/a/o.d (IILjava/lang/String;)Ljava/lang/String;]
  + Methodref [java/lang/IllegalArgumentException.<init> ()V]
  + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/IllegalStateException.<init> ()V]
  + Methodref [java/lang/IllegalStateException.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/IndexOutOfBoundsException.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/Integer.valueOf (I)Ljava/lang/Integer;]
  + Methodref [java/lang/NullPointerException.<init> ()V]
  + Methodref [java/lang/NullPointerException.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/String.indexOf (Ljava/lang/String;I)I]
  + Methodref [java/lang/String.length ()I]
  + Methodref [java/lang/String.substring (I)Ljava/lang/String;]
  + Methodref [java/lang/String.substring (II)Ljava/lang/String;]
  + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> (I)V]
  + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (I)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [a (IILjava/lang/String;)I]
  + NameAndType [a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;]
  + NameAndType [append (C)Ljava/lang/StringBuilder;]
  + NameAndType [append (I)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b (III)Ljava/lang/String;]
  + NameAndType [b (IILjava/lang/String;)I]
  + NameAndType [c (IILjava/lang/String;)Ljava/lang/String;]
  + NameAndType [d (IILjava/lang/String;)Ljava/lang/String;]
  + NameAndType [indexOf (Ljava/lang/String;I)I]
  + NameAndType [length ()I]
  + NameAndType [substring (I)Ljava/lang/String;]
  + NameAndType [substring (II)Ljava/lang/String;]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [valueOf (I)Ljava/lang/Integer;]
  + NameAndType [valueOf (Ljava/lang/Object;)Ljava/lang/String;]
  + Utf8 [ []
  + Utf8 [%s]
  + Utf8 [%s (%s) must be less than size (%s)]
  + Utf8 [%s (%s) must not be greater than size (%s)]
  + Utf8 [%s (%s) must not be negative]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(C)Ljava/lang/StringBuilder;]
  + Utf8 [(I)Ljava/lang/Integer;]
  + Utf8 [(I)Ljava/lang/String;]
  + Utf8 [(I)Ljava/lang/StringBuilder;]
  + Utf8 [(I)V]
  + Utf8 [(II)I]
  + Utf8 [(II)Ljava/lang/String;]
  + Utf8 [(III)Ljava/lang/String;]
  + Utf8 [(III)V]
  + Utf8 [(IILjava/lang/String;)I]
  + Utf8 [(IILjava/lang/String;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;I)I]
  + Utf8 [(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;]
  + Utf8 [(Z)V]
  + Utf8 [(ZLjava/lang/Object;)V]
  + Utf8 [(ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Utf8 [, ]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [end index]
  + Utf8 [end index (%s) must not be less than start index (%s)]
  + Utf8 [index]
  + Utf8 [indexOf]
  + Utf8 [java/lang/IllegalArgumentException]
  + Utf8 [java/lang/IllegalStateException]
  + Utf8 [java/lang/IndexOutOfBoundsException]
  + Utf8 [java/lang/Integer]
  + Utf8 [java/lang/NullPointerException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [length]
  + Utf8 [negative size: ]
  + Utf8 [start index]
  + Utf8 [substring]
  + Utf8 [toString]
  + Utf8 [valueOf]

Fields (count = 0):

Methods (count = 17):
  + Method:       a(Z)V
    Access flags: 0x9
      = public static void a(boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 2):
      [0] iload_0 v0
      [1] ifne +11 (target=12)
      [4] new #13
        + Class [java/lang/IllegalArgumentException]
      [7] dup
      [8] invokespecial #27
        + Methodref [java/lang/IllegalArgumentException.<init> ()V]
      [11] athrow
      [12] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [12] Var: ..., Stack: (empty)
  + Method:       a(ZLjava/lang/Object;)V
    Access flags: 0x9
      = public static void a(boolean,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 17, locals = 2, stack = 3):
      [0] iload_0 v0
      [1] ifne +15 (target=16)
      [4] new #13
        + Class [java/lang/IllegalArgumentException]
      [7] dup
      [8] aload_1 v1
      [9] invokestatic #39
        + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
      [12] invokespecial #28
        + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
      [15] athrow
      [16] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [16] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(ZLjava/lang/String;[Ljava/lang/Object;)V
    Access flags: 0x89
      = public static varargs void a(boolean,java.lang.String,java.lang.Object[])
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 18, locals = 3, stack = 4):
      [0] iload_0 v0
      [1] ifne +16 (target=17)
      [4] new #13
        + Class [java/lang/IllegalArgumentException]
      [7] dup
      [8] aload_1 v1
      [9] aload_2 v2
      [10] invokestatic #22
        + Methodref [a/a/a/a/o.a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;]
      [13] invokespecial #28
        + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
      [16] athrow
      [17] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [17] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b(Z)V
    Access flags: 0x9
      = public static void b(boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 2):
      [0] iload_0 v0
      [1] ifne +11 (target=12)
      [4] new #14
        + Class [java/lang/IllegalStateException]
      [7] dup
      [8] invokespecial #29
        + Methodref [java/lang/IllegalStateException.<init> ()V]
      [11] athrow
      [12] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [12] Var: ..., Stack: (empty)
  + Method:       b(ZLjava/lang/Object;)V
    Access flags: 0x9
      = public static void b(boolean,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 17, locals = 2, stack = 3):
      [0] iload_0 v0
      [1] ifne +15 (target=16)
      [4] new #14
        + Class [java/lang/IllegalStateException]
      [7] dup
      [8] aload_1 v1
      [9] invokestatic #39
        + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
      [12] invokespecial #30
        + Methodref [java/lang/IllegalStateException.<init> (Ljava/lang/String;)V]
      [15] athrow
      [16] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [16] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b(ZLjava/lang/String;[Ljava/lang/Object;)V
    Access flags: 0x89
      = public static varargs void b(boolean,java.lang.String,java.lang.Object[])
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 18, locals = 3, stack = 4):
      [0] iload_0 v0
      [1] ifne +16 (target=17)
      [4] new #14
        + Class [java/lang/IllegalStateException]
      [7] dup
      [8] aload_1 v1
      [9] aload_2 v2
      [10] invokestatic #22
        + Methodref [a/a/a/a/o.a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;]
      [13] invokespecial #30
        + Methodref [java/lang/IllegalStateException.<init> (Ljava/lang/String;)V]
      [16] athrow
      [17] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [17] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x9
      = public static java.lang.Object a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] ifnonnull +11 (target=12)
      [4] new #17
        + Class [java/lang/NullPointerException]
      [7] dup
      [8] invokespecial #33
        + Methodref [java/lang/NullPointerException.<init> ()V]
      [11] athrow
      [12] aload_0 v0
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [12] Var: ..., Stack: (empty)
  + Method:       a(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x9
      = public static java.lang.Object a(java.lang.Object,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 18, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] ifnonnull +15 (target=16)
      [4] new #17
        + Class [java/lang/NullPointerException]
      [7] dup
      [8] aload_1 v1
      [9] invokestatic #39
        + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
      [12] invokespecial #34
        + Methodref [java/lang/NullPointerException.<init> (Ljava/lang/String;)V]
      [15] athrow
      [16] aload_0 v0
      [17] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [16] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(II)I
    Access flags: 0x9
      = public static int a(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 3):
      [0] iload_0 v0
      [1] iload_1 v1
      [2] ldc #9
        + String [index]
      [4] invokestatic #21
        + Methodref [a/a/a/a/o.a (IILjava/lang/String;)I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(IILjava/lang/String;)I
    Access flags: 0x9
      = public static int a(int,int,java.lang.String)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 25, locals = 3, stack = 5):
      [0] iload_0 v0
      [1] iflt +8 (target=9)
      [4] iload_0 v0
      [5] iload_1 v1
      [6] ificmplt +17 (target=23)
      [9] new #15
        + Class [java/lang/IndexOutOfBoundsException]
      [12] dup
      [13] iload_0 v0
      [14] iload_1 v1
      [15] aload_2 v2
      [16] invokestatic #25
        + Methodref [a/a/a/a/o.c (IILjava/lang/String;)Ljava/lang/String;]
      [19] invokespecial #31
        + Methodref [java/lang/IndexOutOfBoundsException.<init> (Ljava/lang/String;)V]
      [22] athrow
      [23] iload_0 v0
      [24] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [9] Var: ..., Stack: (empty)
        - [23] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       c(IILjava/lang/String;)Ljava/lang/String;
    Access flags: 0xa
      = private static java.lang.String c(int,int,java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 84, locals = 3, stack = 5):
      [0] iload_0 v0
      [1] ifge +24 (target=25)
      [4] ldc #5
        + String [%s (%s) must not be negative]
      [6] iconst_2
      [7] anewarray #18
        + Class [java/lang/Object]
      [10] dup
      [11] iconst_0
      [12] aload_2 v2
      [13] aastore
      [14] dup
      [15] iconst_1
      [16] iload_0 v0
      [17] invokestatic #32
        + Methodref [java/lang/Integer.valueOf (I)Ljava/lang/Integer;]
      [20] aastore
      [21] invokestatic #22
        + Methodref [a/a/a/a/o.a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;]
      [24] areturn
      [25] iload_1 v1
      [26] ifge +30 (target=56)
      [29] new #13
        + Class [java/lang/IllegalArgumentException]
      [32] dup
      [33] new #20
        + Class [java/lang/StringBuilder]
      [36] dup
      [37] invokespecial #40
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [40] ldc #10
        + String [negative size: ]
      [42] invokevirtual #45
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [45] iload_1 v1
      [46] invokevirtual #43
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [49] invokevirtual #46
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [52] invokespecial #28
        + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
      [55] athrow
      [56] ldc #3
        + String [%s (%s) must be less than size (%s)]
      [58] iconst_3
      [59] anewarray #18
        + Class [java/lang/Object]
      [62] dup
      [63] iconst_0
      [64] aload_2 v2
      [65] aastore
      [66] dup
      [67] iconst_1
      [68] iload_0 v0
      [69] invokestatic #32
        + Methodref [java/lang/Integer.valueOf (I)Ljava/lang/Integer;]
      [72] aastore
      [73] dup
      [74] iconst_2
      [75] iload_1 v1
      [76] invokestatic #32
        + Methodref [java/lang/Integer.valueOf (I)Ljava/lang/Integer;]
      [79] aastore
      [80] invokestatic #22
        + Methodref [a/a/a/a/o.a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;]
      [83] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [25] Var: ..., Stack: (empty)
        - [56] Var: ..., Stack: (empty)
  + Method:       b(II)I
    Access flags: 0x9
      = public static int b(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 3):
      [0] iload_0 v0
      [1] iload_1 v1
      [2] ldc #9
        + String [index]
      [4] invokestatic #24
        + Methodref [a/a/a/a/o.b (IILjava/lang/String;)I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(IILjava/lang/String;)I
    Access flags: 0x9
      = public static int b(int,int,java.lang.String)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 25, locals = 3, stack = 5):
      [0] iload_0 v0
      [1] iflt +8 (target=9)
      [4] iload_0 v0
      [5] iload_1 v1
      [6] ificmple +17 (target=23)
      [9] new #15
        + Class [java/lang/IndexOutOfBoundsException]
      [12] dup
      [13] iload_0 v0
      [14] iload_1 v1
      [15] aload_2 v2
      [16] invokestatic #26
        + Methodref [a/a/a/a/o.d (IILjava/lang/String;)Ljava/lang/String;]
      [19] invokespecial #31
        + Methodref [java/lang/IndexOutOfBoundsException.<init> (Ljava/lang/String;)V]
      [22] athrow
      [23] iload_0 v0
      [24] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [9] Var: ..., Stack: (empty)
        - [23] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       d(IILjava/lang/String;)Ljava/lang/String;
    Access flags: 0xa
      = private static java.lang.String d(int,int,java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 84, locals = 3, stack = 5):
      [0] iload_0 v0
      [1] ifge +24 (target=25)
      [4] ldc #5
        + String [%s (%s) must not be negative]
      [6] iconst_2
      [7] anewarray #18
        + Class [java/lang/Object]
      [10] dup
      [11] iconst_0
      [12] aload_2 v2
      [13] aastore
      [14] dup
      [15] iconst_1
      [16] iload_0 v0
      [17] invokestatic #32
        + Methodref [java/lang/Integer.valueOf (I)Ljava/lang/Integer;]
      [20] aastore
      [21] invokestatic #22
        + Methodref [a/a/a/a/o.a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;]
      [24] areturn
      [25] iload_1 v1
      [26] ifge +30 (target=56)
      [29] new #13
        + Class [java/lang/IllegalArgumentException]
      [32] dup
      [33] new #20
        + Class [java/lang/StringBuilder]
      [36] dup
      [37] invokespecial #40
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [40] ldc #10
        + String [negative size: ]
      [42] invokevirtual #45
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [45] iload_1 v1
      [46] invokevirtual #43
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [49] invokevirtual #46
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [52] invokespecial #28
        + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
      [55] athrow
      [56] ldc #4
        + String [%s (%s) must not be greater than size (%s)]
      [58] iconst_3
      [59] anewarray #18
        + Class [java/lang/Object]
      [62] dup
      [63] iconst_0
      [64] aload_2 v2
      [65] aastore
      [66] dup
      [67] iconst_1
      [68] iload_0 v0
      [69] invokestatic #32
        + Methodref [java/lang/Integer.valueOf (I)Ljava/lang/Integer;]
      [72] aastore
      [73] dup
      [74] iconst_2
      [75] iload_1 v1
      [76] invokestatic #32
        + Methodref [java/lang/Integer.valueOf (I)Ljava/lang/Integer;]
      [79] aastore
      [80] invokestatic #22
        + Methodref [a/a/a/a/o.a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;]
      [83] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [25] Var: ..., Stack: (empty)
        - [56] Var: ..., Stack: (empty)
  + Method:       a(III)V
    Access flags: 0x9
      = public static void a(int,int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 29, locals = 3, stack = 5):
      [0] iload_0 v0
      [1] iflt +13 (target=14)
      [4] iload_1 v1
      [5] iload_0 v0
      [6] ificmplt +8 (target=14)
      [9] iload_1 v1
      [10] iload_2 v2
      [11] ificmple +17 (target=28)
      [14] new #15
        + Class [java/lang/IndexOutOfBoundsException]
      [17] dup
      [18] iload_0 v0
      [19] iload_1 v1
      [20] iload_2 v2
      [21] invokestatic #23
        + Methodref [a/a/a/a/o.b (III)Ljava/lang/String;]
      [24] invokespecial #31
        + Methodref [java/lang/IndexOutOfBoundsException.<init> (Ljava/lang/String;)V]
      [27] athrow
      [28] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [14] Var: ..., Stack: (empty)
        - [28] Var: ..., Stack: (empty)
  + Method:       b(III)Ljava/lang/String;
    Access flags: 0xa
      = private static java.lang.String b(int,int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 58, locals = 3, stack = 5):
      [0] iload_0 v0
      [1] iflt +8 (target=9)
      [4] iload_0 v0
      [5] iload_2 v2
      [6] ificmple +11 (target=17)
      [9] iload_0 v0
      [10] iload_2 v2
      [11] ldc #11
        + String [start index]
      [13] invokestatic #26
        + Methodref [a/a/a/a/o.d (IILjava/lang/String;)Ljava/lang/String;]
      [16] areturn
      [17] iload_1 v1
      [18] iflt +8 (target=26)
      [21] iload_1 v1
      [22] iload_2 v2
      [23] ificmple +11 (target=34)
      [26] iload_1 v1
      [27] iload_2 v2
      [28] ldc #7
        + String [end index]
      [30] invokestatic #26
        + Methodref [a/a/a/a/o.d (IILjava/lang/String;)Ljava/lang/String;]
      [33] areturn
      [34] ldc #8
        + String [end index (%s) must not be less than start index (%s)]
      [36] iconst_2
      [37] anewarray #18
        + Class [java/lang/Object]
      [40] dup
      [41] iconst_0
      [42] iload_1 v1
      [43] invokestatic #32
        + Methodref [java/lang/Integer.valueOf (I)Ljava/lang/Integer;]
      [46] aastore
      [47] dup
      [48] iconst_1
      [49] iload_0 v0
      [50] invokestatic #32
        + Methodref [java/lang/Integer.valueOf (I)Ljava/lang/Integer;]
      [53] aastore
      [54] invokestatic #22
        + Methodref [a/a/a/a/o.a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;]
      [57] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [9] Var: ..., Stack: (empty)
        - [17] Var: ..., Stack: (empty)
        - [26] Var: ..., Stack: (empty)
        - [34] Var: ..., Stack: (empty)
  + Method:       a(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    Access flags: 0x88
      = static varargs java.lang.String a(java.lang.String,java.lang.Object[])
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 162, locals = 6, stack = 5):
      [0] aload_0 v0
      [1] invokestatic #39
        + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
      [4] astore_0 v0
      [5] new #20
        + Class [java/lang/StringBuilder]
      [8] dup
      [9] aload_0 v0
      [10] invokevirtual #36
        + Methodref [java/lang/String.length ()I]
      [13] bipush 16
      [15] aload_1 v1
      [16] arraylength
      [17] imul
      [18] iadd
      [19] invokespecial #41
        + Methodref [java/lang/StringBuilder.<init> (I)V]
      [22] astore_2 v2
      [23] iconst_0
      [24] istore_3 v3
      [25] iconst_0
      [26] istore v4
      [28] iload v4
      [30] aload_1 v1
      [31] arraylength
      [32] ificmpge +53 (target=85)
      [35] aload_0 v0
      [36] ldc #2
        + String [%s]
      [38] iload_3 v3
      [39] invokevirtual #35
        + Methodref [java/lang/String.indexOf (Ljava/lang/String;I)I]
      [42] istore v5
      [44] iload v5
      [46] iconst_m1
      [47] ificmpne +6 (target=53)
      [50] goto +35 (target=85)
      [53] aload_2 v2
      [54] aload_0 v0
      [55] iload_3 v3
      [56] iload v5
      [58] invokevirtual #38
        + Methodref [java/lang/String.substring (II)Ljava/lang/String;]
      [61] invokevirtual #45
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [64] pop
      [65] aload_2 v2
      [66] aload_1 v1
      [67] iload v4
      [69] iinc v4, 1
      [72] aaload
      [73] invokevirtual #44
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [76] pop
      [77] iload v5
      [79] iconst_2
      [80] iadd
      [81] istore_3 v3
      [82] goto -54 (target=28)
      [85] aload_2 v2
      [86] aload_0 v0
      [87] iload_3 v3
      [88] invokevirtual #37
        + Methodref [java/lang/String.substring (I)Ljava/lang/String;]
      [91] invokevirtual #45
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [94] pop
      [95] iload v4
      [97] aload_1 v1
      [98] arraylength
      [99] ificmpge +58 (target=157)
      [102] aload_2 v2
      [103] ldc #1
        + String [ []
      [105] invokevirtual #45
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [108] pop
      [109] aload_2 v2
      [110] aload_1 v1
      [111] iload v4
      [113] iinc v4, 1
      [116] aaload
      [117] invokevirtual #44
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [120] pop
      [121] iload v4
      [123] aload_1 v1
      [124] arraylength
      [125] ificmpge +25 (target=150)
      [128] aload_2 v2
      [129] ldc #6
        + String [, ]
      [131] invokevirtual #45
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [134] pop
      [135] aload_2 v2
      [136] aload_1 v1
      [137] iload v4
      [139] iinc v4, 1
      [142] aaload
      [143] invokevirtual #44
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [146] pop
      [147] goto -26 (target=121)
      [150] aload_2 v2
      [151] bipush 93
      [153] invokevirtual #42
        + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
      [156] pop
      [157] aload_2 v2
      [158] invokevirtual #46
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [161] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [28] Var: ...[a:java/lang/StringBuilder][i][i], Stack: (empty)
        - [53] Var: ...[i], Stack: (empty)
        - [85] Var: -1, Stack: (empty)
        - [121] Var: ..., Stack: (empty)
        - [150] Var: ..., Stack: (empty)
        - [157] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/p
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface a.a.a.a.p extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 10):
  + Class [a/a/a/a/p]
  + Class [java/lang/Object]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/a/p]
  + Utf8 [equals]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 2):
  + Method:       a(Ljava/lang/Object;)Z
    Access flags: 0x401
      = public abstract boolean a(java.lang.Object)
    Class member attributes (count = 1):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x401
      = public abstract boolean equals(java.lang.Object)
    Class member attributes (count = 1):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/q
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.a.q extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 53):
  + String [,]
  + Class [a/a/a/a/f]
  + Class [a/a/a/a/p]
  + Class [a/a/a/a/q]
  + Class [a/a/a/a/s]
  + Class [a/a/a/a/t]
  + Class [a/a/a/a/u]
  + Class [a/a/a/a/v]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/a/q.a La/a/a/a/f;]
  + Fieldref [a/a/a/a/v.c La/a/a/a/v;]
  + Methodref [a/a/a/a/f.a (Ljava/lang/String;)La/a/a/a/f;]
  + Methodref [a/a/a/a/q.a ()La/a/a/a/p;]
  + Methodref [a/a/a/a/s.<init> (Ljava/util/Collection;La/a/a/a/r;)V]
  + Methodref [a/a/a/a/t.<init> (Ljava/lang/Object;La/a/a/a/r;)V]
  + Methodref [a/a/a/a/u.<init> (La/a/a/a/p;)V]
  + Methodref [a/a/a/a/v.a ()La/a/a/a/p;]
  + NameAndType [<init> (La/a/a/a/p;)V]
  + NameAndType [<init> (Ljava/lang/Object;La/a/a/a/r;)V]
  + NameAndType [<init> (Ljava/util/Collection;La/a/a/a/r;)V]
  + NameAndType [a ()La/a/a/a/p;]
  + NameAndType [a (Ljava/lang/String;)La/a/a/a/f;]
  + NameAndType [a La/a/a/a/f;]
  + NameAndType [c La/a/a/a/v;]
  + Utf8 [()La/a/a/a/p;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/a/p;)La/a/a/a/p;]
  + Utf8 [(La/a/a/a/p;)V]
  + Utf8 [(Ljava/lang/Object;)La/a/a/a/p;]
  + Utf8 [(Ljava/lang/Object;La/a/a/a/r;)V]
  + Utf8 [(Ljava/lang/String;)La/a/a/a/f;]
  + Utf8 [(Ljava/util/Collection;)La/a/a/a/p;]
  + Utf8 [(Ljava/util/Collection;La/a/a/a/r;)V]
  + Utf8 [,]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/f;]
  + Utf8 [La/a/a/a/v;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/f]
  + Utf8 [a/a/a/a/p]
  + Utf8 [a/a/a/a/q]
  + Utf8 [a/a/a/a/s]
  + Utf8 [a/a/a/a/t]
  + Utf8 [a/a/a/a/u]
  + Utf8 [a/a/a/a/v]
  + Utf8 [c]
  + Utf8 [java/lang/Object]

Fields (count = 1):
  + Field:        a La/a/a/a/f;
    Access flags: 0x1a
      = private static final a.a.a.a.f a

Methods (count = 5):
  + Method:       a()La/a/a/a/p;
    Access flags: 0x9
      = public static a.a.a.a.p a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 0, stack = 1):
      [0] getstatic #11
        + Fieldref [a/a/a/a/v.c La/a/a/a/v;]
      [3] invokevirtual #17
        + Methodref [a/a/a/a/v.a ()La/a/a/a/p;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/a/p;)La/a/a/a/p;
    Access flags: 0x9
      = public static a.a.a.a.p a(a.a.a.a.p)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #7
        + Class [a/a/a/a/u]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #16
        + Methodref [a/a/a/a/u.<init> (La/a/a/a/p;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)La/a/a/a/p;
    Access flags: 0x9
      = public static a.a.a.a.p a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 20, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] ifnonnull +9 (target=10)
      [4] invokestatic #13
        + Methodref [a/a/a/a/q.a ()La/a/a/a/p;]
      [7] goto +12 (target=19)
      [10] new #6
        + Class [a/a/a/a/t]
      [13] dup
      [14] aload_0 v0
      [15] aconst_null
      [16] invokespecial #15
        + Methodref [a/a/a/a/t.<init> (Ljava/lang/Object;La/a/a/a/r;)V]
      [19] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [10] Var: ..., Stack: (empty)
        - [19] Var: ..., Stack: [a:a/a/a/a/p]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/util/Collection;)La/a/a/a/p;
    Access flags: 0x9
      = public static a.a.a.a.p a(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 4):
      [0] new #5
        + Class [a/a/a/a/s]
      [3] dup
      [4] aload_0 v0
      [5] aconst_null
      [6] invokespecial #14
        + Methodref [a/a/a/a/s.<init> (Ljava/util/Collection;La/a/a/a/r;)V]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 0, stack = 1):
      [0] ldc #1
        + String [,]
      [2] invokestatic #12
        + Methodref [a/a/a/a/f.a (Ljava/lang/String;)La/a/a/a/f;]
      [5] putstatic #10
        + Fieldref [a/a/a/a/q.a La/a/a/a/f;]
      [8] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/r
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x1020
    = synthetic class a.a.a.a.r extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 5):
  + Class [a/a/a/a/r]
  + Class [java/lang/Object]
  + Utf8 [a/a/a/a/r]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/s
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.a.s extends java.lang.Object

Interfaces (count = 2):
  + Class [a/a/a/a/p]
  + Class [java/io/Serializable]

Constant Pool (count = 65):
  + String [)]
  + String [In(]
  + Class [a/a/a/a/o]
  + Class [a/a/a/a/p]
  + Class [a/a/a/a/s]
  + Class [java/io/Serializable]
  + Class [java/lang/ClassCastException]
  + Class [java/lang/NullPointerException]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/util/Collection]
  + Fieldref [a/a/a/a/s.a Ljava/util/Collection;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/a/s.<init> (Ljava/util/Collection;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + InterfaceMethodref [java/util/Collection.contains (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Collection.equals (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Collection.hashCode ()I]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/util/Collection;)V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a Ljava/util/Collection;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [contains (Ljava/lang/Object;)Z]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [hashCode ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/util/Collection;)V]
  + Utf8 [(Ljava/util/Collection;La/a/a/a/r;)V]
  + Utf8 [)]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [In(]
  + Utf8 [Ljava/util/Collection;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/a/p]
  + Utf8 [a/a/a/a/s]
  + Utf8 [append]
  + Utf8 [contains]
  + Utf8 [equals]
  + Utf8 [hashCode]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/ClassCastException]
  + Utf8 [java/lang/NullPointerException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/Collection]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a Ljava/util/Collection;
    Access flags: 0x12
      = private final java.util.Collection a

Methods (count = 6):
  - Method:       <init>(Ljava/util/Collection;)V
    Access flags: 0x2
      = private s(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #15
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokestatic #13
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] checkcast #11
        + Class [java/util/Collection]
      [12] putfield #12
        + Fieldref [a/a/a/a/s.a Ljava/util/Collection;]
      [15] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 17, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/a/s.a Ljava/util/Collection;]
      [4] aload_1 v1
      [5] invokeinterface #20
        + InterfaceMethodref [java/util/Collection.contains (Ljava/lang/Object;)Z]
      [10] ireturn
      [11] astore_2 v2
      [12] iconst_0
      [13] ireturn
      [14] astore_2 v2
      [15] iconst_0
      [16] ireturn
      Code attribute exceptions (count = 2):
      - ExceptionInfo (0 -> 10: 11):
      + Class [java/lang/NullPointerException]
      - ExceptionInfo (0 -> 10: 14):
      + Class [java/lang/ClassCastException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: [a:java/lang/NullPointerException]
        - [14] Var: ..., Stack: [a:java/lang/ClassCastException]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 28, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] instanceof #5
        + Class [a/a/a/a/s]
      [4] ifeq +22 (target=26)
      [7] aload_1 v1
      [8] checkcast #5
        + Class [a/a/a/a/s]
      [11] astore_2 v2
      [12] aload_0 v0
      [13] getfield #12
        + Fieldref [a/a/a/a/s.a Ljava/util/Collection;]
      [16] aload_2 v2
      [17] getfield #12
        + Fieldref [a/a/a/a/s.a Ljava/util/Collection;]
      [20] invokeinterface #21
        + InterfaceMethodref [java/util/Collection.equals (Ljava/lang/Object;)Z]
      [25] ireturn
      [26] iconst_0
      [27] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [26] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/a/s.a Ljava/util/Collection;]
      [4] invokeinterface #22
        + InterfaceMethodref [java/util/Collection.hashCode ()I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 1, stack = 2):
      [0] new #10
        + Class [java/lang/StringBuilder]
      [3] dup
      [4] invokespecial #16
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [7] ldc #2
        + String [In(]
      [9] invokevirtual #18
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [12] aload_0 v0
      [13] getfield #12
        + Fieldref [a/a/a/a/s.a Ljava/util/Collection;]
      [16] invokevirtual #17
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [19] ldc #1
        + String [)]
      [21] invokevirtual #18
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [24] invokevirtual #19
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [27] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/util/Collection;La/a/a/a/r;)V
    Access flags: 0x1000
      = synthetic s(java.util.Collection,a.a.a.a.r)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #14
        + Methodref [a/a/a/a/s.<init> (Ljava/util/Collection;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/t
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.a.t extends java.lang.Object

Interfaces (count = 2):
  + Class [a/a/a/a/p]
  + Class [java/io/Serializable]

Constant Pool (count = 51):
  + String [)]
  + String [IsEqualTo(]
  + Class [a/a/a/a/p]
  + Class [a/a/a/a/t]
  + Class [java/io/Serializable]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Fieldref [a/a/a/a/t.a Ljava/lang/Object;]
  + Methodref [a/a/a/a/t.<init> (Ljava/lang/Object;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [a Ljava/lang/Object;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [hashCode ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;La/a/a/a/r;)V]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [)]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [IsEqualTo(]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/p]
  + Utf8 [a/a/a/a/t]
  + Utf8 [append]
  + Utf8 [equals]
  + Utf8 [hashCode]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a Ljava/lang/Object;
    Access flags: 0x12
      = private final java.lang.Object a

Methods (count = 6):
  - Method:       <init>(Ljava/lang/Object;)V
    Access flags: 0x2
      = private t(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #10
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #8
        + Fieldref [a/a/a/a/t.a Ljava/lang/Object;]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/a/t.a Ljava/lang/Object;]
      [4] aload_1 v1
      [5] invokevirtual #11
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/a/t.a Ljava/lang/Object;]
      [4] invokevirtual #12
        + Methodref [java/lang/Object.hashCode ()I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 26, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] instanceof #4
        + Class [a/a/a/a/t]
      [4] ifeq +20 (target=24)
      [7] aload_1 v1
      [8] checkcast #4
        + Class [a/a/a/a/t]
      [11] astore_2 v2
      [12] aload_0 v0
      [13] getfield #8
        + Fieldref [a/a/a/a/t.a Ljava/lang/Object;]
      [16] aload_2 v2
      [17] getfield #8
        + Fieldref [a/a/a/a/t.a Ljava/lang/Object;]
      [20] invokevirtual #11
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [23] ireturn
      [24] iconst_0
      [25] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [24] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 1, stack = 2):
      [0] new #7
        + Class [java/lang/StringBuilder]
      [3] dup
      [4] invokespecial #13
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [7] ldc #2
        + String [IsEqualTo(]
      [9] invokevirtual #15
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [12] aload_0 v0
      [13] getfield #8
        + Fieldref [a/a/a/a/t.a Ljava/lang/Object;]
      [16] invokevirtual #14
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [19] ldc #1
        + String [)]
      [21] invokevirtual #15
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [24] invokevirtual #16
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [27] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/Object;La/a/a/a/r;)V
    Access flags: 0x1000
      = synthetic t(java.lang.Object,a.a.a.a.r)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #9
        + Methodref [a/a/a/a/t.<init> (Ljava/lang/Object;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/u
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.a.u extends java.lang.Object

Interfaces (count = 2):
  + Class [a/a/a/a/p]
  + Class [java/io/Serializable]

Constant Pool (count = 53):
  + String [)]
  + String [Not(]
  + Class [a/a/a/a/o]
  + Class [a/a/a/a/p]
  + Class [a/a/a/a/u]
  + Class [java/io/Serializable]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Fieldref [a/a/a/a/u.a La/a/a/a/p;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + InterfaceMethodref [a/a/a/a/p.a (Ljava/lang/Object;)Z]
  + InterfaceMethodref [a/a/a/a/p.equals (Ljava/lang/Object;)Z]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;)Z]
  + NameAndType [a La/a/a/a/p;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [hashCode ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/a/p;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [)]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/p;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [Not(]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/a/p]
  + Utf8 [a/a/a/a/u]
  + Utf8 [append]
  + Utf8 [equals]
  + Utf8 [hashCode]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a La/a/a/a/p;
    Access flags: 0x10
      = final a.a.a.a.p a

Methods (count = 5):
  - Method:       <init>(La/a/a/a/p;)V
    Access flags: 0x0
      = u(a.a.a.a.p)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #11
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokestatic #10
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] checkcast #4
        + Class [a/a/a/a/p]
      [12] putfield #9
        + Fieldref [a/a/a/a/u.a La/a/a/a/p;]
      [15] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 19, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/a/u.a La/a/a/a/p;]
      [4] aload_1 v1
      [5] invokeinterface #17
        + InterfaceMethodref [a/a/a/a/p.a (Ljava/lang/Object;)Z]
      [10] ifne +7 (target=17)
      [13] iconst_1
      [14] goto +4 (target=18)
      [17] iconst_0
      [18] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [17] Var: ..., Stack: (empty)
        - [18] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/a/u.a La/a/a/a/p;]
      [4] invokevirtual #12
        + Methodref [java/lang/Object.hashCode ()I]
      [7] iconst_m1
      [8] ixor
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 28, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] instanceof #5
        + Class [a/a/a/a/u]
      [4] ifeq +22 (target=26)
      [7] aload_1 v1
      [8] checkcast #5
        + Class [a/a/a/a/u]
      [11] astore_2 v2
      [12] aload_0 v0
      [13] getfield #9
        + Fieldref [a/a/a/a/u.a La/a/a/a/p;]
      [16] aload_2 v2
      [17] getfield #9
        + Fieldref [a/a/a/a/u.a La/a/a/a/p;]
      [20] invokeinterface #18
        + InterfaceMethodref [a/a/a/a/p.equals (Ljava/lang/Object;)Z]
      [25] ireturn
      [26] iconst_0
      [27] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [26] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 31, locals = 1, stack = 2):
      [0] new #8
        + Class [java/lang/StringBuilder]
      [3] dup
      [4] invokespecial #14
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [7] ldc #2
        + String [Not(]
      [9] invokevirtual #15
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [12] aload_0 v0
      [13] getfield #9
        + Fieldref [a/a/a/a/u.a La/a/a/a/p;]
      [16] invokevirtual #13
        + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
      [19] invokevirtual #15
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [22] ldc #1
        + String [)]
      [24] invokevirtual #15
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [27] invokevirtual #16
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [30] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/v
  Superclass:    java/lang/Enum
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4420
    = enum enum a.a.a.a.v extends java.lang.Enum

Interfaces (count = 1):
  + Class [a/a/a/a/p]

Constant Pool (count = 66):
  + String [ALWAYS_FALSE]
  + String [ALWAYS_TRUE]
  + String [IS_NULL]
  + String [NOT_NULL]
  + Class [[La/a/a/a/v;]
  + Class [a/a/a/a/p]
  + Class [a/a/a/a/v]
  + Class [a/a/a/a/w]
  + Class [a/a/a/a/x]
  + Class [a/a/a/a/y]
  + Class [a/a/a/a/z]
  + Class [java/lang/Enum]
  + Fieldref [a/a/a/a/v.a La/a/a/a/v;]
  + Fieldref [a/a/a/a/v.b La/a/a/a/v;]
  + Fieldref [a/a/a/a/v.c La/a/a/a/v;]
  + Fieldref [a/a/a/a/v.d La/a/a/a/v;]
  + Fieldref [a/a/a/a/v.e [La/a/a/a/v;]
  + Methodref [[La/a/a/a/v;.clone ()Ljava/lang/Object;]
  + Methodref [a/a/a/a/v.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/a/w.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/a/x.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/a/y.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/a/z.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + NameAndType [<init> (Ljava/lang/String;I)V]
  + NameAndType [a La/a/a/a/v;]
  + NameAndType [b La/a/a/a/v;]
  + NameAndType [c La/a/a/a/v;]
  + NameAndType [clone ()Ljava/lang/Object;]
  + NameAndType [d La/a/a/a/v;]
  + NameAndType [e [La/a/a/a/v;]
  + NameAndType [valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [()La/a/a/a/p;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()[La/a/a/a/v;]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [(Ljava/lang/String;)La/a/a/a/v;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/a/r;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [ALWAYS_FALSE]
  + Utf8 [ALWAYS_TRUE]
  + Utf8 [Code]
  + Utf8 [IS_NULL]
  + Utf8 [La/a/a/a/v;]
  + Utf8 [NOT_NULL]
  + Utf8 [[La/a/a/a/v;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/p]
  + Utf8 [a/a/a/a/v]
  + Utf8 [a/a/a/a/w]
  + Utf8 [a/a/a/a/x]
  + Utf8 [a/a/a/a/y]
  + Utf8 [a/a/a/a/z]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clone]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [java/lang/Enum]
  + Utf8 [valueOf]
  + Utf8 [values]

Fields (count = 5):
  + Field:        a La/a/a/a/v;
    Access flags: 0x4019
      = public static final a.a.a.a.v a
  + Field:        b La/a/a/a/v;
    Access flags: 0x4019
      = public static final a.a.a.a.v b
  + Field:        c La/a/a/a/v;
    Access flags: 0x4019
      = public static final a.a.a.a.v c
  + Field:        d La/a/a/a/v;
    Access flags: 0x4019
      = public static final a.a.a.a.v d
  + Field:        e [La/a/a/a/v;
    Access flags: 0x101a
      = private static final synthetic a.a.a.a.v[] e

Methods (count = 6):
  + Method:       values()[La/a/a/a/v;
    Access flags: 0x9
      = public static a.a.a.a.v[] values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 0, stack = 1):
      [0] getstatic #17
        + Fieldref [a/a/a/a/v.e [La/a/a/a/v;]
      [3] invokevirtual #18
        + Methodref [[La/a/a/a/v;.clone ()Ljava/lang/Object;]
      [6] checkcast #5
        + Class [[La/a/a/a/v;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       valueOf(Ljava/lang/String;)La/a/a/a/v;
    Access flags: 0x9
      = public static a.a.a.a.v valueOf(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 2):
      [0] ldc #7
        + Class [a/a/a/a/v]
      [2] aload_0 v0
      [3] invokestatic #25
        + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
      [6] checkcast #7
        + Class [a/a/a/a/v]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x2
      = private v(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #24
        + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/a/p;
    Access flags: 0x0
      = a.a.a.a.p a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;ILa/a/a/a/r;)V
    Access flags: 0x1000
      = synthetic v(java.lang.String,int,a.a.a.a.r)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #19
        + Methodref [a/a/a/a/v.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 84, locals = 0, stack = 4):
      [0] new #8
        + Class [a/a/a/a/w]
      [3] dup
      [4] ldc #2
        + String [ALWAYS_TRUE]
      [6] iconst_0
      [7] invokespecial #20
        + Methodref [a/a/a/a/w.<init> (Ljava/lang/String;I)V]
      [10] putstatic #13
        + Fieldref [a/a/a/a/v.a La/a/a/a/v;]
      [13] new #9
        + Class [a/a/a/a/x]
      [16] dup
      [17] ldc #1
        + String [ALWAYS_FALSE]
      [19] iconst_1
      [20] invokespecial #21
        + Methodref [a/a/a/a/x.<init> (Ljava/lang/String;I)V]
      [23] putstatic #14
        + Fieldref [a/a/a/a/v.b La/a/a/a/v;]
      [26] new #10
        + Class [a/a/a/a/y]
      [29] dup
      [30] ldc #3
        + String [IS_NULL]
      [32] iconst_2
      [33] invokespecial #22
        + Methodref [a/a/a/a/y.<init> (Ljava/lang/String;I)V]
      [36] putstatic #15
        + Fieldref [a/a/a/a/v.c La/a/a/a/v;]
      [39] new #11
        + Class [a/a/a/a/z]
      [42] dup
      [43] ldc #4
        + String [NOT_NULL]
      [45] iconst_3
      [46] invokespecial #23
        + Methodref [a/a/a/a/z.<init> (Ljava/lang/String;I)V]
      [49] putstatic #16
        + Fieldref [a/a/a/a/v.d La/a/a/a/v;]
      [52] iconst_4
      [53] anewarray #7
        + Class [a/a/a/a/v]
      [56] dup
      [57] iconst_0
      [58] getstatic #13
        + Fieldref [a/a/a/a/v.a La/a/a/a/v;]
      [61] aastore
      [62] dup
      [63] iconst_1
      [64] getstatic #14
        + Fieldref [a/a/a/a/v.b La/a/a/a/v;]
      [67] aastore
      [68] dup
      [69] iconst_2
      [70] getstatic #15
        + Fieldref [a/a/a/a/v.c La/a/a/a/v;]
      [73] aastore
      [74] dup
      [75] iconst_3
      [76] getstatic #16
        + Fieldref [a/a/a/a/v.d La/a/a/a/v;]
      [79] aastore
      [80] putstatic #17
        + Fieldref [a/a/a/a/v.e [La/a/a/a/v;]
      [83] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/w
  Superclass:    a/a/a/a/v
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.a.w extends a.a.a.a.v

Interfaces (count = 0):

Constant Pool (count = 15):
  + Class [a/a/a/a/v]
  + Class [a/a/a/a/w]
  + Methodref [a/a/a/a/v.<init> (Ljava/lang/String;ILa/a/a/a/r;)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/a/r;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/a/r;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/a/v]
  + Utf8 [a/a/a/a/w]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = w(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #3
        + Methodref [a/a/a/a/v.<init> (Ljava/lang/String;ILa/a/a/a/r;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 2, locals = 2, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/x
  Superclass:    a/a/a/a/v
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.a.x extends a.a.a.a.v

Interfaces (count = 0):

Constant Pool (count = 15):
  + Class [a/a/a/a/v]
  + Class [a/a/a/a/x]
  + Methodref [a/a/a/a/v.<init> (Ljava/lang/String;ILa/a/a/a/r;)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/a/r;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/a/r;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/a/v]
  + Utf8 [a/a/a/a/x]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = x(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #3
        + Methodref [a/a/a/a/v.<init> (Ljava/lang/String;ILa/a/a/a/r;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 2, locals = 2, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/y
  Superclass:    a/a/a/a/v
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.a.y extends a.a.a.a.v

Interfaces (count = 0):

Constant Pool (count = 16):
  + Class [a/a/a/a/v]
  + Class [a/a/a/a/y]
  + Methodref [a/a/a/a/v.<init> (Ljava/lang/String;ILa/a/a/a/r;)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/a/r;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/a/r;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/v]
  + Utf8 [a/a/a/a/y]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = y(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #3
        + Methodref [a/a/a/a/v.<init> (Ljava/lang/String;ILa/a/a/a/r;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 10, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] ifnonnull +7 (target=8)
      [4] iconst_1
      [5] goto +4 (target=9)
      [8] iconst_0
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [8] Var: ..., Stack: (empty)
        - [9] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/z
  Superclass:    a/a/a/a/v
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.a.z extends a.a.a.a.v

Interfaces (count = 0):

Constant Pool (count = 16):
  + Class [a/a/a/a/v]
  + Class [a/a/a/a/z]
  + Methodref [a/a/a/a/v.<init> (Ljava/lang/String;ILa/a/a/a/r;)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/a/r;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/a/r;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/v]
  + Utf8 [a/a/a/a/z]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = z(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #3
        + Methodref [a/a/a/a/v.<init> (Ljava/lang/String;ILa/a/a/a/r;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 10, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] ifnull +7 (target=8)
      [4] iconst_1
      [5] goto +4 (target=9)
      [8] iconst_0
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [8] Var: ..., Stack: (empty)
        - [9] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/aa
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.a.aa extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 131):
  + String [%.4g %s]
  + String [This stopwatch is already running.]
  + String [d]
  + String [h]
  + String [min]
  + String [ms]
  + String [ns]
  + String [s]
  + String [ticker]
  + String [μs]
  + Class [a/a/a/a/aa]
  + Class [a/a/a/a/ab]
  + Class [a/a/a/a/af]
  + Class [a/a/a/a/o]
  + Class [java/lang/AssertionError]
  + Class [java/lang/Double]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/util/concurrent/TimeUnit]
  + Fieldref [a/a/a/a/aa.a La/a/a/a/af;]
  + Fieldref [a/a/a/a/aa.b Z]
  + Fieldref [a/a/a/a/aa.c J]
  + Fieldref [a/a/a/a/aa.d J]
  + Fieldref [a/a/a/a/ab.a [I]
  + Fieldref [java/util/concurrent/TimeUnit.DAYS Ljava/util/concurrent/TimeUnit;]
  + Fieldref [java/util/concurrent/TimeUnit.HOURS Ljava/util/concurrent/TimeUnit;]
  + Fieldref [java/util/concurrent/TimeUnit.MICROSECONDS Ljava/util/concurrent/TimeUnit;]
  + Fieldref [java/util/concurrent/TimeUnit.MILLISECONDS Ljava/util/concurrent/TimeUnit;]
  + Fieldref [java/util/concurrent/TimeUnit.MINUTES Ljava/util/concurrent/TimeUnit;]
  + Fieldref [java/util/concurrent/TimeUnit.NANOSECONDS Ljava/util/concurrent/TimeUnit;]
  + Fieldref [java/util/concurrent/TimeUnit.SECONDS Ljava/util/concurrent/TimeUnit;]
  + Methodref [a/a/a/a/aa.<init> ()V]
  + Methodref [a/a/a/a/aa.<init> (La/a/a/a/af;)V]
  + Methodref [a/a/a/a/aa.a (J)Ljava/util/concurrent/TimeUnit;]
  + Methodref [a/a/a/a/aa.b (Ljava/util/concurrent/TimeUnit;)Ljava/lang/String;]
  + Methodref [a/a/a/a/aa.c ()J]
  + Methodref [a/a/a/a/af.a ()J]
  + Methodref [a/a/a/a/af.b ()La/a/a/a/af;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/a/o.b (ZLjava/lang/Object;)V]
  + Methodref [java/lang/AssertionError.<init> ()V]
  + Methodref [java/lang/Double.valueOf (D)Ljava/lang/Double;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/String.format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;]
  + Methodref [java/util/concurrent/TimeUnit.convert (JLjava/util/concurrent/TimeUnit;)J]
  + Methodref [java/util/concurrent/TimeUnit.ordinal ()I]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/a/af;)V]
  + NameAndType [DAYS Ljava/util/concurrent/TimeUnit;]
  + NameAndType [HOURS Ljava/util/concurrent/TimeUnit;]
  + NameAndType [MICROSECONDS Ljava/util/concurrent/TimeUnit;]
  + NameAndType [MILLISECONDS Ljava/util/concurrent/TimeUnit;]
  + NameAndType [MINUTES Ljava/util/concurrent/TimeUnit;]
  + NameAndType [NANOSECONDS Ljava/util/concurrent/TimeUnit;]
  + NameAndType [SECONDS Ljava/util/concurrent/TimeUnit;]
  + NameAndType [a ()J]
  + NameAndType [a (J)Ljava/util/concurrent/TimeUnit;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a La/a/a/a/af;]
  + NameAndType [a [I]
  + NameAndType [b ()La/a/a/a/af;]
  + NameAndType [b (Ljava/util/concurrent/TimeUnit;)Ljava/lang/String;]
  + NameAndType [b (ZLjava/lang/Object;)V]
  + NameAndType [b Z]
  + NameAndType [c ()J]
  + NameAndType [c J]
  + NameAndType [convert (JLjava/util/concurrent/TimeUnit;)J]
  + NameAndType [d J]
  + NameAndType [format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;]
  + NameAndType [ordinal ()I]
  + NameAndType [valueOf (D)Ljava/lang/Double;]
  + Utf8 [%.4g %s]
  + Utf8 [()I]
  + Utf8 [()J]
  + Utf8 [()La/a/a/a/aa;]
  + Utf8 [()La/a/a/a/af;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(D)Ljava/lang/Double;]
  + Utf8 [(J)Ljava/util/concurrent/TimeUnit;]
  + Utf8 [(JLjava/util/concurrent/TimeUnit;)J]
  + Utf8 [(La/a/a/a/af;)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;]
  + Utf8 [(Ljava/util/concurrent/TimeUnit;)J]
  + Utf8 [(Ljava/util/concurrent/TimeUnit;)Ljava/lang/String;]
  + Utf8 [(ZLjava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [DAYS]
  + Utf8 [HOURS]
  + Utf8 [J]
  + Utf8 [La/a/a/a/af;]
  + Utf8 [Ljava/lang/Deprecated;]
  + Utf8 [Ljava/util/concurrent/TimeUnit;]
  + Utf8 [MICROSECONDS]
  + Utf8 [MILLISECONDS]
  + Utf8 [MINUTES]
  + Utf8 [NANOSECONDS]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [SECONDS]
  + Utf8 [StackMapTable]
  + Utf8 [This stopwatch is already running.]
  + Utf8 [Z]
  + Utf8 [[I]
  + Utf8 [a]
  + Utf8 [a/a/a/a/aa]
  + Utf8 [a/a/a/a/ab]
  + Utf8 [a/a/a/a/af]
  + Utf8 [a/a/a/a/o]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [convert]
  + Utf8 [d]
  + Utf8 [format]
  + Utf8 [h]
  + Utf8 [java/lang/AssertionError]
  + Utf8 [java/lang/Double]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/util/concurrent/TimeUnit]
  + Utf8 [min]
  + Utf8 [ms]
  + Utf8 [ns]
  + Utf8 [ordinal]
  + Utf8 [s]
  + Utf8 [ticker]
  + Utf8 [toString]
  + Utf8 [valueOf]
  + Utf8 [μs]

Fields (count = 4):
  + Field:        a La/a/a/a/af;
    Access flags: 0x12
      = private final a.a.a.a.af a
  + Field:        b Z
    Access flags: 0x2
      = private boolean b
  + Field:        c J
    Access flags: 0x2
      = private long c
  + Field:        d J
    Access flags: 0x2
      = private long d

Methods (count = 9):
  + Method:       a()La/a/a/a/aa;
    Access flags: 0x9
      = public static a.a.a.a.aa a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 0, stack = 2):
      [0] new #11
        + Class [a/a/a/a/aa]
      [3] dup
      [4] invokespecial #32
        + Methodref [a/a/a/a/aa.<init> ()V]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>()V
    Access flags: 0x1
      = public aa()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokestatic #38
        + Methodref [a/a/a/a/af.b ()La/a/a/a/af;]
      [4] invokespecial #33
        + Methodref [a/a/a/a/aa.<init> (La/a/a/a/af;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  - Method:       <init>(La/a/a/a/af;)V
    Access flags: 0x1
      = public aa(a.a.a.a.af)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 18, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #43
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] ldc #9
        + String [ticker]
      [8] invokestatic #39
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [11] checkcast #13
        + Class [a/a/a/a/af]
      [14] putfield #20
        + Fieldref [a/a/a/a/aa.a La/a/a/a/af;]
      [17] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       b()La/a/a/a/aa;
    Access flags: 0x1
      = public a.a.a.a.aa b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 35, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] getfield #21
        + Fieldref [a/a/a/a/aa.b Z]
      [4] ifne +7 (target=11)
      [7] iconst_1
      [8] goto +4 (target=12)
      [11] iconst_0
      [12] ldc #2
        + String [This stopwatch is already running.]
      [14] invokestatic #40
        + Methodref [a/a/a/a/o.b (ZLjava/lang/Object;)V]
      [17] aload_0 v0
      [18] iconst_1
      [19] putfield #21
        + Fieldref [a/a/a/a/aa.b Z]
      [22] aload_0 v0
      [23] aload_0 v0
      [24] getfield #20
        + Fieldref [a/a/a/a/aa.a La/a/a/a/af;]
      [27] invokevirtual #37
        + Methodref [a/a/a/a/af.a ()J]
      [30] putfield #23
        + Fieldref [a/a/a/a/aa.d J]
      [33] aload_0 v0
      [34] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [12] Var: ..., Stack: [i]
  + Method:       c()J
    Access flags: 0x2
      = private long c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 32, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] getfield #21
        + Fieldref [a/a/a/a/aa.b Z]
      [4] ifeq +23 (target=27)
      [7] aload_0 v0
      [8] getfield #20
        + Fieldref [a/a/a/a/aa.a La/a/a/a/af;]
      [11] invokevirtual #37
        + Methodref [a/a/a/a/af.a ()J]
      [14] aload_0 v0
      [15] getfield #23
        + Fieldref [a/a/a/a/aa.d J]
      [18] lsub
      [19] aload_0 v0
      [20] getfield #22
        + Fieldref [a/a/a/a/aa.c J]
      [23] ladd
      [24] goto +7 (target=31)
      [27] aload_0 v0
      [28] getfield #22
        + Fieldref [a/a/a/a/aa.c J]
      [31] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [27] Var: ..., Stack: (empty)
        - [31] Var: ..., Stack: [l]
  + Method:       a(Ljava/util/concurrent/TimeUnit;)J
    Access flags: 0x1
      = public long a(java.util.concurrent.TimeUnit)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 2, stack = 4):
      [0] aload_1 v1
      [1] aload_0 v0
      [2] invokespecial #36
        + Methodref [a/a/a/a/aa.c ()J]
      [5] getstatic #30
        + Fieldref [java/util/concurrent/TimeUnit.NANOSECONDS Ljava/util/concurrent/TimeUnit;]
      [8] invokevirtual #45
        + Methodref [java/util/concurrent/TimeUnit.convert (JLjava/util/concurrent/TimeUnit;)J]
      [11] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 49, locals = 6, stack = 6):
      [0] aload_0 v0
      [1] invokespecial #36
        + Methodref [a/a/a/a/aa.c ()J]
      [4] lstore_1 v1
      [5] lload_1 v1
      [6] invokestatic #34
        + Methodref [a/a/a/a/aa.a (J)Ljava/util/concurrent/TimeUnit;]
      [9] astore_3 v3
      [10] lload_1 v1
      [11] l2d
      [12] getstatic #30
        + Fieldref [java/util/concurrent/TimeUnit.NANOSECONDS Ljava/util/concurrent/TimeUnit;]
      [15] lconst_1
      [16] aload_3 v3
      [17] invokevirtual #45
        + Methodref [java/util/concurrent/TimeUnit.convert (JLjava/util/concurrent/TimeUnit;)J]
      [20] l2d
      [21] ddiv
      [22] dstore v4
      [24] ldc #1
        + String [%.4g %s]
      [26] iconst_2
      [27] anewarray #17
        + Class [java/lang/Object]
      [30] dup
      [31] iconst_0
      [32] dload v4
      [34] invokestatic #42
        + Methodref [java/lang/Double.valueOf (D)Ljava/lang/Double;]
      [37] aastore
      [38] dup
      [39] iconst_1
      [40] aload_3 v3
      [41] invokestatic #35
        + Methodref [a/a/a/a/aa.b (Ljava/util/concurrent/TimeUnit;)Ljava/lang/String;]
      [44] aastore
      [45] invokestatic #44
        + Methodref [java/lang/String.format (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;]
      [48] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(J)Ljava/util/concurrent/TimeUnit;
    Access flags: 0xa
      = private static java.util.concurrent.TimeUnit a(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 118, locals = 2, stack = 4):
      [0] getstatic #25
        + Fieldref [java/util/concurrent/TimeUnit.DAYS Ljava/util/concurrent/TimeUnit;]
      [3] lload_0 v0
      [4] getstatic #30
        + Fieldref [java/util/concurrent/TimeUnit.NANOSECONDS Ljava/util/concurrent/TimeUnit;]
      [7] invokevirtual #45
        + Methodref [java/util/concurrent/TimeUnit.convert (JLjava/util/concurrent/TimeUnit;)J]
      [10] lconst_0
      [11] lcmp
      [12] ifle +7 (target=19)
      [15] getstatic #25
        + Fieldref [java/util/concurrent/TimeUnit.DAYS Ljava/util/concurrent/TimeUnit;]
      [18] areturn
      [19] getstatic #26
        + Fieldref [java/util/concurrent/TimeUnit.HOURS Ljava/util/concurrent/TimeUnit;]
      [22] lload_0 v0
      [23] getstatic #30
        + Fieldref [java/util/concurrent/TimeUnit.NANOSECONDS Ljava/util/concurrent/TimeUnit;]
      [26] invokevirtual #45
        + Methodref [java/util/concurrent/TimeUnit.convert (JLjava/util/concurrent/TimeUnit;)J]
      [29] lconst_0
      [30] lcmp
      [31] ifle +7 (target=38)
      [34] getstatic #26
        + Fieldref [java/util/concurrent/TimeUnit.HOURS Ljava/util/concurrent/TimeUnit;]
      [37] areturn
      [38] getstatic #29
        + Fieldref [java/util/concurrent/TimeUnit.MINUTES Ljava/util/concurrent/TimeUnit;]
      [41] lload_0 v0
      [42] getstatic #30
        + Fieldref [java/util/concurrent/TimeUnit.NANOSECONDS Ljava/util/concurrent/TimeUnit;]
      [45] invokevirtual #45
        + Methodref [java/util/concurrent/TimeUnit.convert (JLjava/util/concurrent/TimeUnit;)J]
      [48] lconst_0
      [49] lcmp
      [50] ifle +7 (target=57)
      [53] getstatic #29
        + Fieldref [java/util/concurrent/TimeUnit.MINUTES Ljava/util/concurrent/TimeUnit;]
      [56] areturn
      [57] getstatic #31
        + Fieldref [java/util/concurrent/TimeUnit.SECONDS Ljava/util/concurrent/TimeUnit;]
      [60] lload_0 v0
      [61] getstatic #30
        + Fieldref [java/util/concurrent/TimeUnit.NANOSECONDS Ljava/util/concurrent/TimeUnit;]
      [64] invokevirtual #45
        + Methodref [java/util/concurrent/TimeUnit.convert (JLjava/util/concurrent/TimeUnit;)J]
      [67] lconst_0
      [68] lcmp
      [69] ifle +7 (target=76)
      [72] getstatic #31
        + Fieldref [java/util/concurrent/TimeUnit.SECONDS Ljava/util/concurrent/TimeUnit;]
      [75] areturn
      [76] getstatic #28
        + Fieldref [java/util/concurrent/TimeUnit.MILLISECONDS Ljava/util/concurrent/TimeUnit;]
      [79] lload_0 v0
      [80] getstatic #30
        + Fieldref [java/util/concurrent/TimeUnit.NANOSECONDS Ljava/util/concurrent/TimeUnit;]
      [83] invokevirtual #45
        + Methodref [java/util/concurrent/TimeUnit.convert (JLjava/util/concurrent/TimeUnit;)J]
      [86] lconst_0
      [87] lcmp
      [88] ifle +7 (target=95)
      [91] getstatic #28
        + Fieldref [java/util/concurrent/TimeUnit.MILLISECONDS Ljava/util/concurrent/TimeUnit;]
      [94] areturn
      [95] getstatic #27
        + Fieldref [java/util/concurrent/TimeUnit.MICROSECONDS Ljava/util/concurrent/TimeUnit;]
      [98] lload_0 v0
      [99] getstatic #30
        + Fieldref [java/util/concurrent/TimeUnit.NANOSECONDS Ljava/util/concurrent/TimeUnit;]
      [102] invokevirtual #45
        + Methodref [java/util/concurrent/TimeUnit.convert (JLjava/util/concurrent/TimeUnit;)J]
      [105] lconst_0
      [106] lcmp
      [107] ifle +7 (target=114)
      [110] getstatic #27
        + Fieldref [java/util/concurrent/TimeUnit.MICROSECONDS Ljava/util/concurrent/TimeUnit;]
      [113] areturn
      [114] getstatic #30
        + Fieldref [java/util/concurrent/TimeUnit.NANOSECONDS Ljava/util/concurrent/TimeUnit;]
      [117] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [19] Var: ..., Stack: (empty)
        - [38] Var: ..., Stack: (empty)
        - [57] Var: ..., Stack: (empty)
        - [76] Var: ..., Stack: (empty)
        - [95] Var: ..., Stack: (empty)
        - [114] Var: ..., Stack: (empty)
  + Method:       b(Ljava/util/concurrent/TimeUnit;)Ljava/lang/String;
    Access flags: 0xa
      = private static java.lang.String b(java.util.concurrent.TimeUnit)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 81, locals = 1, stack = 2):
      [0] getstatic #24
        + Fieldref [a/a/a/a/ab.a [I]
      [3] aload_0 v0
      [4] invokevirtual #46
        + Methodref [java/util/concurrent/TimeUnit.ordinal ()I]
      [7] iaload
      [8] tableswitch (7 offsets, default=65) (target=73)
        1: offset = 44, target = 52
        2: offset = 47, target = 55
        3: offset = 50, target = 58
        4: offset = 53, target = 61
        5: offset = 56, target = 64
        6: offset = 59, target = 67
        7: offset = 62, target = 70
        default: offset = 65, target = 73
      [52] ldc #7
        + String [ns]
      [54] areturn
      [55] ldc #10
        + String [μs]
      [57] areturn
      [58] ldc #6
        + String [ms]
      [60] areturn
      [61] ldc #8
        + String [s]
      [63] areturn
      [64] ldc #5
        + String [min]
      [66] areturn
      [67] ldc #4
        + String [h]
      [69] areturn
      [70] ldc #3
        + String [d]
      [72] areturn
      [73] new #15
        + Class [java/lang/AssertionError]
      [76] dup
      [77] invokespecial #41
        + Methodref [java/lang/AssertionError.<init> ()V]
      [80] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 8):
        - [52] Var: ..., Stack: (empty)
        - [55] Var: ..., Stack: (empty)
        - [58] Var: ..., Stack: (empty)
        - [61] Var: ..., Stack: (empty)
        - [64] Var: ..., Stack: (empty)
        - [67] Var: ..., Stack: (empty)
        - [70] Var: ..., Stack: (empty)
        - [73] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/ab
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x1020
    = synthetic class a.a.a.a.ab extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 47):
  + Class [a/a/a/a/ab]
  + Class [java/lang/NoSuchFieldError]
  + Class [java/lang/Object]
  + Class [java/util/concurrent/TimeUnit]
  + Fieldref [a/a/a/a/ab.a [I]
  + Fieldref [java/util/concurrent/TimeUnit.DAYS Ljava/util/concurrent/TimeUnit;]
  + Fieldref [java/util/concurrent/TimeUnit.HOURS Ljava/util/concurrent/TimeUnit;]
  + Fieldref [java/util/concurrent/TimeUnit.MICROSECONDS Ljava/util/concurrent/TimeUnit;]
  + Fieldref [java/util/concurrent/TimeUnit.MILLISECONDS Ljava/util/concurrent/TimeUnit;]
  + Fieldref [java/util/concurrent/TimeUnit.MINUTES Ljava/util/concurrent/TimeUnit;]
  + Fieldref [java/util/concurrent/TimeUnit.NANOSECONDS Ljava/util/concurrent/TimeUnit;]
  + Fieldref [java/util/concurrent/TimeUnit.SECONDS Ljava/util/concurrent/TimeUnit;]
  + Methodref [java/util/concurrent/TimeUnit.ordinal ()I]
  + Methodref [java/util/concurrent/TimeUnit.values ()[Ljava/util/concurrent/TimeUnit;]
  + NameAndType [DAYS Ljava/util/concurrent/TimeUnit;]
  + NameAndType [HOURS Ljava/util/concurrent/TimeUnit;]
  + NameAndType [MICROSECONDS Ljava/util/concurrent/TimeUnit;]
  + NameAndType [MILLISECONDS Ljava/util/concurrent/TimeUnit;]
  + NameAndType [MINUTES Ljava/util/concurrent/TimeUnit;]
  + NameAndType [NANOSECONDS Ljava/util/concurrent/TimeUnit;]
  + NameAndType [SECONDS Ljava/util/concurrent/TimeUnit;]
  + NameAndType [a [I]
  + NameAndType [ordinal ()I]
  + NameAndType [values ()[Ljava/util/concurrent/TimeUnit;]
  + Utf8 [()I]
  + Utf8 [()V]
  + Utf8 [()[Ljava/util/concurrent/TimeUnit;]
  + Utf8 [<clinit>]
  + Utf8 [Code]
  + Utf8 [DAYS]
  + Utf8 [HOURS]
  + Utf8 [Ljava/util/concurrent/TimeUnit;]
  + Utf8 [MICROSECONDS]
  + Utf8 [MILLISECONDS]
  + Utf8 [MINUTES]
  + Utf8 [NANOSECONDS]
  + Utf8 [SECONDS]
  + Utf8 [StackMapTable]
  + Utf8 [[I]
  + Utf8 [a]
  + Utf8 [a/a/a/a/ab]
  + Utf8 [java/lang/NoSuchFieldError]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/concurrent/TimeUnit]
  + Utf8 [ordinal]
  + Utf8 [values]

Fields (count = 1):
  + Field:        a [I
    Access flags: 0x1018
      = static final synthetic int[] a

Methods (count = 1):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 117, locals = 1, stack = 3):
      [0] invokestatic #14
        + Methodref [java/util/concurrent/TimeUnit.values ()[Ljava/util/concurrent/TimeUnit;]
      [3] arraylength
      [4] newarray 10
      [6] putstatic #5
        + Fieldref [a/a/a/a/ab.a [I]
      [9] getstatic #5
        + Fieldref [a/a/a/a/ab.a [I]
      [12] getstatic #11
        + Fieldref [java/util/concurrent/TimeUnit.NANOSECONDS Ljava/util/concurrent/TimeUnit;]
      [15] invokevirtual #13
        + Methodref [java/util/concurrent/TimeUnit.ordinal ()I]
      [18] iconst_1
      [19] iastore
      [20] goto +4 (target=24)
      [23] astore_0 v0
      [24] getstatic #5
        + Fieldref [a/a/a/a/ab.a [I]
      [27] getstatic #8
        + Fieldref [java/util/concurrent/TimeUnit.MICROSECONDS Ljava/util/concurrent/TimeUnit;]
      [30] invokevirtual #13
        + Methodref [java/util/concurrent/TimeUnit.ordinal ()I]
      [33] iconst_2
      [34] iastore
      [35] goto +4 (target=39)
      [38] astore_0 v0
      [39] getstatic #5
        + Fieldref [a/a/a/a/ab.a [I]
      [42] getstatic #9
        + Fieldref [java/util/concurrent/TimeUnit.MILLISECONDS Ljava/util/concurrent/TimeUnit;]
      [45] invokevirtual #13
        + Methodref [java/util/concurrent/TimeUnit.ordinal ()I]
      [48] iconst_3
      [49] iastore
      [50] goto +4 (target=54)
      [53] astore_0 v0
      [54] getstatic #5
        + Fieldref [a/a/a/a/ab.a [I]
      [57] getstatic #12
        + Fieldref [java/util/concurrent/TimeUnit.SECONDS Ljava/util/concurrent/TimeUnit;]
      [60] invokevirtual #13
        + Methodref [java/util/concurrent/TimeUnit.ordinal ()I]
      [63] iconst_4
      [64] iastore
      [65] goto +4 (target=69)
      [68] astore_0 v0
      [69] getstatic #5
        + Fieldref [a/a/a/a/ab.a [I]
      [72] getstatic #10
        + Fieldref [java/util/concurrent/TimeUnit.MINUTES Ljava/util/concurrent/TimeUnit;]
      [75] invokevirtual #13
        + Methodref [java/util/concurrent/TimeUnit.ordinal ()I]
      [78] iconst_5
      [79] iastore
      [80] goto +4 (target=84)
      [83] astore_0 v0
      [84] getstatic #5
        + Fieldref [a/a/a/a/ab.a [I]
      [87] getstatic #7
        + Fieldref [java/util/concurrent/TimeUnit.HOURS Ljava/util/concurrent/TimeUnit;]
      [90] invokevirtual #13
        + Methodref [java/util/concurrent/TimeUnit.ordinal ()I]
      [93] bipush 6
      [95] iastore
      [96] goto +4 (target=100)
      [99] astore_0 v0
      [100] getstatic #5
        + Fieldref [a/a/a/a/ab.a [I]
      [103] getstatic #6
        + Fieldref [java/util/concurrent/TimeUnit.DAYS Ljava/util/concurrent/TimeUnit;]
      [106] invokevirtual #13
        + Methodref [java/util/concurrent/TimeUnit.ordinal ()I]
      [109] bipush 7
      [111] iastore
      [112] goto +4 (target=116)
      [115] astore_0 v0
      [116] return
      Code attribute exceptions (count = 7):
      - ExceptionInfo (9 -> 20: 23):
      + Class [java/lang/NoSuchFieldError]
      - ExceptionInfo (24 -> 35: 38):
      + Class [java/lang/NoSuchFieldError]
      - ExceptionInfo (39 -> 50: 53):
      + Class [java/lang/NoSuchFieldError]
      - ExceptionInfo (54 -> 65: 68):
      + Class [java/lang/NoSuchFieldError]
      - ExceptionInfo (69 -> 80: 83):
      + Class [java/lang/NoSuchFieldError]
      - ExceptionInfo (84 -> 96: 99):
      + Class [java/lang/NoSuchFieldError]
      - ExceptionInfo (100 -> 112: 115):
      + Class [java/lang/NoSuchFieldError]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 14):
        - [23] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [24] Var: ..., Stack: (empty)
        - [38] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [39] Var: ..., Stack: (empty)
        - [53] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [54] Var: ..., Stack: (empty)
        - [68] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [69] Var: ..., Stack: (empty)
        - [83] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [84] Var: ..., Stack: (empty)
        - [99] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [100] Var: ..., Stack: (empty)
        - [115] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [116] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/ac
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface a.a.a.a.ac extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 7):
  + Class [a/a/a/a/ac]
  + Class [java/lang/Object]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/ac]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 1):
  + Method:       a()Ljava/lang/Object;
    Access flags: 0x401
      = public abstract java.lang.Object a()

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/ad
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.a.ad extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 16):
  + Class [a/a/a/a/ad]
  + Class [a/a/a/a/ae]
  + Class [java/lang/Object]
  + Methodref [a/a/a/a/ae.<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)La/a/a/a/ac;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/a/ad]
  + Utf8 [a/a/a/a/ae]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 1):
  + Method:       a(Ljava/lang/Object;)La/a/a/a/ac;
    Access flags: 0x9
      = public static a.a.a.a.ac a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #2
        + Class [a/a/a/a/ae]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #4
        + Methodref [a/a/a/a/ae.<init> (Ljava/lang/Object;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/ae
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.a.ae extends java.lang.Object

Interfaces (count = 2):
  + Class [a/a/a/a/ac]
  + Class [java/io/Serializable]

Constant Pool (count = 53):
  + String [)]
  + String [Suppliers.ofInstance(]
  + Class [a/a/a/a/ac]
  + Class [a/a/a/a/ae]
  + Class [a/a/a/a/i]
  + Class [java/io/Serializable]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Fieldref [a/a/a/a/ae.a Ljava/lang/Object;]
  + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/a/i.a ([Ljava/lang/Object;)I]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [a ([Ljava/lang/Object;)I]
  + NameAndType [a Ljava/lang/Object;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [([Ljava/lang/Object;)I]
  + Utf8 [)]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [Suppliers.ofInstance(]
  + Utf8 [a]
  + Utf8 [a/a/a/a/ac]
  + Utf8 [a/a/a/a/ae]
  + Utf8 [a/a/a/a/i]
  + Utf8 [append]
  + Utf8 [equals]
  + Utf8 [hashCode]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a Ljava/lang/Object;
    Access flags: 0x10
      = final java.lang.Object a

Methods (count = 5):
  - Method:       <init>(Ljava/lang/Object;)V
    Access flags: 0x0
      = ae(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #12
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #9
        + Fieldref [a/a/a/a/ae.a Ljava/lang/Object;]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/a/ae.a Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 26, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] instanceof #4
        + Class [a/a/a/a/ae]
      [4] ifeq +20 (target=24)
      [7] aload_1 v1
      [8] checkcast #4
        + Class [a/a/a/a/ae]
      [11] astore_2 v2
      [12] aload_0 v0
      [13] getfield #9
        + Fieldref [a/a/a/a/ae.a Ljava/lang/Object;]
      [16] aload_2 v2
      [17] getfield #9
        + Fieldref [a/a/a/a/ae.a Ljava/lang/Object;]
      [20] invokestatic #10
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [23] ireturn
      [24] iconst_0
      [25] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [24] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 1, stack = 4):
      [0] iconst_1
      [1] anewarray #7
        + Class [java/lang/Object]
      [4] dup
      [5] iconst_0
      [6] aload_0 v0
      [7] getfield #9
        + Fieldref [a/a/a/a/ae.a Ljava/lang/Object;]
      [10] aastore
      [11] invokestatic #11
        + Methodref [a/a/a/a/i.a ([Ljava/lang/Object;)I]
      [14] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 1, stack = 2):
      [0] new #8
        + Class [java/lang/StringBuilder]
      [3] dup
      [4] invokespecial #13
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [7] ldc #2
        + String [Suppliers.ofInstance(]
      [9] invokevirtual #15
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [12] aload_0 v0
      [13] getfield #9
        + Fieldref [a/a/a/a/ae.a Ljava/lang/Object;]
      [16] invokevirtual #14
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [19] ldc #1
        + String [)]
      [21] invokevirtual #15
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [24] invokevirtual #16
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [27] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/af
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.a.af extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 21):
  + Class [a/a/a/a/af]
  + Class [a/a/a/a/ag]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/a/af.a La/a/a/a/af;]
  + Methodref [a/a/a/a/ag.<init> ()V]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a La/a/a/a/af;]
  + Utf8 [()J]
  + Utf8 [()La/a/a/a/af;]
  + Utf8 [()V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/af;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/af]
  + Utf8 [a/a/a/a/ag]
  + Utf8 [b]
  + Utf8 [java/lang/Object]

Fields (count = 1):
  + Field:        a La/a/a/a/af;
    Access flags: 0x1a
      = private static final a.a.a.a.af a

Methods (count = 4):
  - Method:       <init>()V
    Access flags: 0x4
      = protected af()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #6
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()J
    Access flags: 0x401
      = public abstract long a()
  + Method:       b()La/a/a/a/af;
    Access flags: 0x9
      = public static a.a.a.a.af b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] getstatic #4
        + Fieldref [a/a/a/a/af.a La/a/a/a/af;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 0, stack = 2):
      [0] new #2
        + Class [a/a/a/a/ag]
      [3] dup
      [4] invokespecial #5
        + Methodref [a/a/a/a/ag.<init> ()V]
      [7] putstatic #4
        + Fieldref [a/a/a/a/af.a La/a/a/a/af;]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/a/ag
  Superclass:    a/a/a/a/af
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.a.ag extends a.a.a.a.af

Interfaces (count = 0):

Constant Pool (count = 16):
  + Class [a/a/a/a/af]
  + Class [a/a/a/a/ag]
  + Class [a/a/a/a/m]
  + Methodref [a/a/a/a/af.<init> ()V]
  + Methodref [a/a/a/a/m.a ()J]
  + NameAndType [<init> ()V]
  + NameAndType [a ()J]
  + Utf8 [()J]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/a/af]
  + Utf8 [a/a/a/a/ag]
  + Utf8 [a/a/a/a/m]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>()V
    Access flags: 0x0
      = ag()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #4
        + Methodref [a/a/a/a/af.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()J
    Access flags: 0x1
      = public long a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 2):
      [0] invokestatic #5
        + Methodref [a/a/a/a/m.a ()J]
      [3] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/a
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.b.a extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 5):
  + Class [a/a/a/b/a]
  + Class [java/lang/Object]
  + Utf8 [a/a/a/b/a]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/b
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.b.b extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/b/c]

Constant Pool (count = 44):
  + Class [a/a/a/b/b]
  + Class [a/a/a/b/bq]
  + Class [a/a/a/b/br]
  + Class [a/a/a/b/c]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/b/b.a La/a/a/b/bq;]
  + Fieldref [a/a/a/b/b.b La/a/a/b/bq;]
  + Fieldref [a/a/a/b/b.c La/a/a/b/bq;]
  + Fieldref [a/a/a/b/b.d La/a/a/b/bq;]
  + Fieldref [a/a/a/b/b.e La/a/a/b/bq;]
  + Fieldref [a/a/a/b/b.f La/a/a/b/bq;]
  + Methodref [a/a/a/b/br.a ()La/a/a/b/bq;]
  + Methodref [java/lang/Object.<init> ()V]
  + InterfaceMethodref [a/a/a/b/bq.a ()V]
  + InterfaceMethodref [a/a/a/b/bq.a (J)V]
  + NameAndType [<init> ()V]
  + NameAndType [a ()La/a/a/b/bq;]
  + NameAndType [a ()V]
  + NameAndType [a (J)V]
  + NameAndType [a La/a/a/b/bq;]
  + NameAndType [b La/a/a/b/bq;]
  + NameAndType [c La/a/a/b/bq;]
  + NameAndType [d La/a/a/b/bq;]
  + NameAndType [e La/a/a/b/bq;]
  + NameAndType [f La/a/a/b/bq;]
  + Utf8 [()La/a/a/b/bq;]
  + Utf8 [()V]
  + Utf8 [(I)V]
  + Utf8 [(J)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/bq;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/b]
  + Utf8 [a/a/a/b/bq]
  + Utf8 [a/a/a/b/br]
  + Utf8 [a/a/a/b/c]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [java/lang/Object]

Fields (count = 6):
  + Field:        a La/a/a/b/bq;
    Access flags: 0x12
      = private final a.a.a.b.bq a
  + Field:        b La/a/a/b/bq;
    Access flags: 0x12
      = private final a.a.a.b.bq b
  + Field:        c La/a/a/b/bq;
    Access flags: 0x12
      = private final a.a.a.b.bq c
  + Field:        d La/a/a/b/bq;
    Access flags: 0x12
      = private final a.a.a.b.bq d
  + Field:        e La/a/a/b/bq;
    Access flags: 0x12
      = private final a.a.a.b.bq e
  + Field:        f La/a/a/b/bq;
    Access flags: 0x12
      = private final a.a.a.b.bq f

Methods (count = 6):
  - Method:       <init>()V
    Access flags: 0x1
      = public b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 47, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #13
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] invokestatic #12
        + Methodref [a/a/a/b/br.a ()La/a/a/b/bq;]
      [8] putfield #6
        + Fieldref [a/a/a/b/b.a La/a/a/b/bq;]
      [11] aload_0 v0
      [12] invokestatic #12
        + Methodref [a/a/a/b/br.a ()La/a/a/b/bq;]
      [15] putfield #7
        + Fieldref [a/a/a/b/b.b La/a/a/b/bq;]
      [18] aload_0 v0
      [19] invokestatic #12
        + Methodref [a/a/a/b/br.a ()La/a/a/b/bq;]
      [22] putfield #8
        + Fieldref [a/a/a/b/b.c La/a/a/b/bq;]
      [25] aload_0 v0
      [26] invokestatic #12
        + Methodref [a/a/a/b/br.a ()La/a/a/b/bq;]
      [29] putfield #9
        + Fieldref [a/a/a/b/b.d La/a/a/b/bq;]
      [32] aload_0 v0
      [33] invokestatic #12
        + Methodref [a/a/a/b/br.a ()La/a/a/b/bq;]
      [36] putfield #10
        + Fieldref [a/a/a/b/b.e La/a/a/b/bq;]
      [39] aload_0 v0
      [40] invokestatic #12
        + Methodref [a/a/a/b/br.a ()La/a/a/b/bq;]
      [43] putfield #11
        + Fieldref [a/a/a/b/b.f La/a/a/b/bq;]
      [46] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(I)V
    Access flags: 0x1
      = public void a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/b/b.a La/a/a/b/bq;]
      [4] iload_1 v1
      [5] i2l
      [6] invokeinterface #15
        + InterfaceMethodref [a/a/a/b/bq.a (J)V]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(I)V
    Access flags: 0x1
      = public void b(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/b/b.b La/a/a/b/bq;]
      [4] iload_1 v1
      [5] i2l
      [6] invokeinterface #15
        + InterfaceMethodref [a/a/a/b/bq.a (J)V]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(J)V
    Access flags: 0x1
      = public void a(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/b/b.c La/a/a/b/bq;]
      [4] invokeinterface #14
        + InterfaceMethodref [a/a/a/b/bq.a ()V]
      [9] aload_0 v0
      [10] getfield #10
        + Fieldref [a/a/a/b/b.e La/a/a/b/bq;]
      [13] lload_1 v1
      [14] invokeinterface #15
        + InterfaceMethodref [a/a/a/b/bq.a (J)V]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(J)V
    Access flags: 0x1
      = public void b(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/b/b.d La/a/a/b/bq;]
      [4] invokeinterface #14
        + InterfaceMethodref [a/a/a/b/bq.a ()V]
      [9] aload_0 v0
      [10] getfield #10
        + Fieldref [a/a/a/b/b.e La/a/a/b/bq;]
      [13] lload_1 v1
      [14] invokeinterface #15
        + InterfaceMethodref [a/a/a/b/bq.a (J)V]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()V
    Access flags: 0x1
      = public void a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/b/b.f La/a/a/b/bq;]
      [4] invokeinterface #14
        + InterfaceMethodref [a/a/a/b/bq.a ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/c
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface a.a.a.b.c extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 10):
  + Class [a/a/a/b/c]
  + Class [java/lang/Object]
  + Utf8 [()V]
  + Utf8 [(I)V]
  + Utf8 [(J)V]
  + Utf8 [a]
  + Utf8 [a/a/a/b/c]
  + Utf8 [b]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 5):
  + Method:       a(I)V
    Access flags: 0x401
      = public abstract void a(int)
  + Method:       b(I)V
    Access flags: 0x401
      = public abstract void b(int)
  + Method:       a(J)V
    Access flags: 0x401
      = public abstract void a(long)
  + Method:       b(J)V
    Access flags: 0x401
      = public abstract void b(long)
  + Method:       a()V
    Access flags: 0x401
      = public abstract void a()

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/d
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.b.d extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 266):
  + String [Key strength was already set to %s]
  + String [concurrencyLevel]
  + String [expireAfterAccess]
  + String [expireAfterWrite]
  + String [ignoring weigher specified without maximumWeight]
  + String [initialCapacity]
  + String [keyEquivalence]
  + String [keyStrength]
  + String [maximumSize]
  + String [maximumWeight]
  + String [maximumWeight requires weigher]
  + String [ns]
  + String [removalListener]
  + String [valueEquivalence]
  + String [valueStrength]
  + String [weigher requires maximumWeight]
  + Class [a/a/a/a/a]
  + Class [a/a/a/a/ad]
  + Class [a/a/a/a/af]
  + Class [a/a/a/a/b]
  + Class [a/a/a/a/i]
  + Class [a/a/a/a/k]
  + Class [a/a/a/a/o]
  + Class [a/a/a/b/al]
  + Class [a/a/a/b/as]
  + Class [a/a/a/b/cc]
  + Class [a/a/a/b/cj]
  + Class [a/a/a/b/d]
  + Class [a/a/a/b/e]
  + Class [a/a/a/b/f]
  + Class [a/a/a/b/g]
  + Class [a/a/a/b/h]
  + Class [a/a/a/b/i]
  + Class [a/a/a/b/l]
  + Class [java/lang/Class]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/util/logging/Level]
  + Class [java/util/logging/Logger]
  + Long [-1]
  + Fieldref [a/a/a/b/as.a La/a/a/b/as;]
  + Fieldref [a/a/a/b/as.c La/a/a/b/as;]
  + Fieldref [a/a/a/b/d.a La/a/a/a/ac;]
  + Fieldref [a/a/a/b/d.b La/a/a/b/l;]
  + Fieldref [a/a/a/b/d.c La/a/a/a/ac;]
  + Fieldref [a/a/a/b/d.d La/a/a/a/af;]
  + Fieldref [a/a/a/b/d.e Z]
  + Fieldref [a/a/a/b/d.f I]
  + Fieldref [a/a/a/b/d.g I]
  + Fieldref [a/a/a/b/d.h J]
  + Fieldref [a/a/a/b/d.i J]
  + Fieldref [a/a/a/b/d.j La/a/a/b/cj;]
  + Fieldref [a/a/a/b/d.k La/a/a/b/as;]
  + Fieldref [a/a/a/b/d.l La/a/a/b/as;]
  + Fieldref [a/a/a/b/d.m J]
  + Fieldref [a/a/a/b/d.n J]
  + Fieldref [a/a/a/b/d.o J]
  + Fieldref [a/a/a/b/d.p La/a/a/a/b;]
  + Fieldref [a/a/a/b/d.q La/a/a/a/b;]
  + Fieldref [a/a/a/b/d.r La/a/a/b/cc;]
  + Fieldref [a/a/a/b/d.s La/a/a/a/af;]
  + Fieldref [a/a/a/b/d.t La/a/a/a/ac;]
  + Fieldref [a/a/a/b/d.u Ljava/util/logging/Logger;]
  + Fieldref [a/a/a/b/h.a La/a/a/b/h;]
  + Fieldref [a/a/a/b/i.a La/a/a/b/i;]
  + Fieldref [java/util/logging/Level.WARNING Ljava/util/logging/Level;]
  + Methodref [a/a/a/a/a.a (Ljava/lang/String;)Ljava/lang/String;]
  + Methodref [a/a/a/a/ad.a (Ljava/lang/Object;)La/a/a/a/ac;]
  + Methodref [a/a/a/a/af.b ()La/a/a/a/af;]
  + Methodref [a/a/a/a/i.a (Ljava/lang/Object;)La/a/a/a/k;]
  + Methodref [a/a/a/a/i.b (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/a/k.a (Ljava/lang/Object;)La/a/a/a/k;]
  + Methodref [a/a/a/a/k.a (Ljava/lang/String;I)La/a/a/a/k;]
  + Methodref [a/a/a/a/k.a (Ljava/lang/String;J)La/a/a/a/k;]
  + Methodref [a/a/a/a/k.a (Ljava/lang/String;Ljava/lang/Object;)La/a/a/a/k;]
  + Methodref [a/a/a/a/k.toString ()Ljava/lang/String;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/a/o.b (ZLjava/lang/Object;)V]
  + Methodref [a/a/a/a/o.b (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Methodref [a/a/a/b/al.<init> (La/a/a/b/d;La/a/a/b/j;)V]
  + Methodref [a/a/a/b/as.a ()La/a/a/a/b;]
  + Methodref [a/a/a/b/as.toString ()Ljava/lang/String;]
  + Methodref [a/a/a/b/d.<init> ()V]
  + Methodref [a/a/a/b/d.a (La/a/a/b/as;)La/a/a/b/d;]
  + Methodref [a/a/a/b/d.i ()La/a/a/b/as;]
  + Methodref [a/a/a/b/d.j ()La/a/a/b/as;]
  + Methodref [a/a/a/b/d.p ()V]
  + Methodref [a/a/a/b/e.<init> ()V]
  + Methodref [a/a/a/b/f.<init> ()V]
  + Methodref [a/a/a/b/g.<init> ()V]
  + Methodref [a/a/a/b/l.<init> (JJJJJJ)V]
  + Methodref [java/lang/Class.getName ()Ljava/lang/String;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (J)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/logging/Logger.getLogger (Ljava/lang/String;)Ljava/util/logging/Logger;]
  + Methodref [java/util/logging/Logger.log (Ljava/util/logging/Level;Ljava/lang/String;)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (JJJJJJ)V]
  + NameAndType [<init> (La/a/a/b/d;La/a/a/b/j;)V]
  + NameAndType [WARNING Ljava/util/logging/Level;]
  + NameAndType [a ()La/a/a/a/b;]
  + NameAndType [a (La/a/a/b/as;)La/a/a/b/d;]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/a/ac;]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/a/k;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/String;)Ljava/lang/String;]
  + NameAndType [a (Ljava/lang/String;I)La/a/a/a/k;]
  + NameAndType [a (Ljava/lang/String;J)La/a/a/a/k;]
  + NameAndType [a (Ljava/lang/String;Ljava/lang/Object;)La/a/a/a/k;]
  + NameAndType [a La/a/a/a/ac;]
  + NameAndType [a La/a/a/b/as;]
  + NameAndType [a La/a/a/b/h;]
  + NameAndType [a La/a/a/b/i;]
  + NameAndType [append (J)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b ()La/a/a/a/af;]
  + NameAndType [b (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [b (ZLjava/lang/Object;)V]
  + NameAndType [b (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + NameAndType [b La/a/a/b/l;]
  + NameAndType [c La/a/a/a/ac;]
  + NameAndType [c La/a/a/b/as;]
  + NameAndType [d La/a/a/a/af;]
  + NameAndType [e Z]
  + NameAndType [f I]
  + NameAndType [g I]
  + NameAndType [getLogger (Ljava/lang/String;)Ljava/util/logging/Logger;]
  + NameAndType [getName ()Ljava/lang/String;]
  + NameAndType [h J]
  + NameAndType [i ()La/a/a/b/as;]
  + NameAndType [i J]
  + NameAndType [j ()La/a/a/b/as;]
  + NameAndType [j La/a/a/b/cj;]
  + NameAndType [k La/a/a/b/as;]
  + NameAndType [l La/a/a/b/as;]
  + NameAndType [log (Ljava/util/logging/Level;Ljava/lang/String;)V]
  + NameAndType [m J]
  + NameAndType [n J]
  + NameAndType [o J]
  + NameAndType [p ()V]
  + NameAndType [p La/a/a/a/b;]
  + NameAndType [q La/a/a/a/b;]
  + NameAndType [r La/a/a/b/cc;]
  + NameAndType [s La/a/a/a/af;]
  + NameAndType [t La/a/a/a/ac;]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [u Ljava/util/logging/Logger;]
  + Utf8 [()I]
  + Utf8 [()J]
  + Utf8 [()La/a/a/a/ac;]
  + Utf8 [()La/a/a/a/af;]
  + Utf8 [()La/a/a/a/b;]
  + Utf8 [()La/a/a/b/as;]
  + Utf8 [()La/a/a/b/cc;]
  + Utf8 [()La/a/a/b/cj;]
  + Utf8 [()La/a/a/b/d;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(J)Ljava/lang/StringBuilder;]
  + Utf8 [(JJJJJJ)V]
  + Utf8 [(La/a/a/b/as;)La/a/a/b/d;]
  + Utf8 [(La/a/a/b/d;La/a/a/b/j;)V]
  + Utf8 [(La/a/a/b/j;)La/a/a/b/m;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/a/ac;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/a/k;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)Ljava/util/logging/Logger;]
  + Utf8 [(Ljava/lang/String;I)La/a/a/a/k;]
  + Utf8 [(Ljava/lang/String;J)La/a/a/a/k;]
  + Utf8 [(Ljava/lang/String;Ljava/lang/Object;)La/a/a/a/k;]
  + Utf8 [(Ljava/util/logging/Level;Ljava/lang/String;)V]
  + Utf8 [(Z)La/a/a/a/af;]
  + Utf8 [(ZLjava/lang/Object;)V]
  + Utf8 [(ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [J]
  + Utf8 [Key strength was already set to %s]
  + Utf8 [La/a/a/a/ac;]
  + Utf8 [La/a/a/a/af;]
  + Utf8 [La/a/a/a/b;]
  + Utf8 [La/a/a/b/as;]
  + Utf8 [La/a/a/b/cc;]
  + Utf8 [La/a/a/b/cj;]
  + Utf8 [La/a/a/b/h;]
  + Utf8 [La/a/a/b/i;]
  + Utf8 [La/a/a/b/l;]
  + Utf8 [Ljava/util/logging/Level;]
  + Utf8 [Ljava/util/logging/Logger;]
  + Utf8 [StackMapTable]
  + Utf8 [WARNING]
  + Utf8 [Z]
  + Utf8 [a]
  + Utf8 [a/a/a/a/a]
  + Utf8 [a/a/a/a/ad]
  + Utf8 [a/a/a/a/af]
  + Utf8 [a/a/a/a/b]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/a/k]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/b/al]
  + Utf8 [a/a/a/b/as]
  + Utf8 [a/a/a/b/cc]
  + Utf8 [a/a/a/b/cj]
  + Utf8 [a/a/a/b/d]
  + Utf8 [a/a/a/b/e]
  + Utf8 [a/a/a/b/f]
  + Utf8 [a/a/a/b/g]
  + Utf8 [a/a/a/b/h]
  + Utf8 [a/a/a/b/i]
  + Utf8 [a/a/a/b/l]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [concurrencyLevel]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [expireAfterAccess]
  + Utf8 [expireAfterWrite]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [getLogger]
  + Utf8 [getName]
  + Utf8 [h]
  + Utf8 [i]
  + Utf8 [ignoring weigher specified without maximumWeight]
  + Utf8 [initialCapacity]
  + Utf8 [j]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/logging/Level]
  + Utf8 [java/util/logging/Logger]
  + Utf8 [k]
  + Utf8 [keyEquivalence]
  + Utf8 [keyStrength]
  + Utf8 [l]
  + Utf8 [log]
  + Utf8 [m]
  + Utf8 [maximumSize]
  + Utf8 [maximumWeight]
  + Utf8 [maximumWeight requires weigher]
  + Utf8 [n]
  + Utf8 [ns]
  + Utf8 [o]
  + Utf8 [p]
  + Utf8 [q]
  + Utf8 [r]
  + Utf8 [removalListener]
  + Utf8 [s]
  + Utf8 [t]
  + Utf8 [toString]
  + Utf8 [u]
  + Utf8 [valueEquivalence]
  + Utf8 [valueStrength]
  + Utf8 [weigher requires maximumWeight]

Fields (count = 21):
  + Field:        a La/a/a/a/ac;
    Access flags: 0x18
      = static final a.a.a.a.ac a
  + Field:        b La/a/a/b/l;
    Access flags: 0x18
      = static final a.a.a.b.l b
  + Field:        c La/a/a/a/ac;
    Access flags: 0x18
      = static final a.a.a.a.ac c
  + Field:        d La/a/a/a/af;
    Access flags: 0x18
      = static final a.a.a.a.af d
  + Field:        u Ljava/util/logging/Logger;
    Access flags: 0x1a
      = private static final java.util.logging.Logger u
  + Field:        e Z
    Access flags: 0x0
      = boolean e
  + Field:        f I
    Access flags: 0x0
      = int f
  + Field:        g I
    Access flags: 0x0
      = int g
  + Field:        h J
    Access flags: 0x0
      = long h
  + Field:        i J
    Access flags: 0x0
      = long i
  + Field:        j La/a/a/b/cj;
    Access flags: 0x0
      = a.a.a.b.cj j
  + Field:        k La/a/a/b/as;
    Access flags: 0x0
      = a.a.a.b.as k
  + Field:        l La/a/a/b/as;
    Access flags: 0x0
      = a.a.a.b.as l
  + Field:        m J
    Access flags: 0x0
      = long m
  + Field:        n J
    Access flags: 0x0
      = long n
  + Field:        o J
    Access flags: 0x0
      = long o
  + Field:        p La/a/a/a/b;
    Access flags: 0x0
      = a.a.a.a.b p
  + Field:        q La/a/a/a/b;
    Access flags: 0x0
      = a.a.a.a.b q
  + Field:        r La/a/a/b/cc;
    Access flags: 0x0
      = a.a.a.b.cc r
  + Field:        s La/a/a/a/af;
    Access flags: 0x0
      = a.a.a.a.af s
  + Field:        t La/a/a/a/ac;
    Access flags: 0x0
      = a.a.a.a.ac t

Methods (count = 22):
  - Method:       <init>()V
    Access flags: 0x0
      = d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 62, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #94
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] iconst_1
      [6] putfield #48
        + Fieldref [a/a/a/b/d.e Z]
      [9] aload_0 v0
      [10] iconst_m1
      [11] putfield #49
        + Fieldref [a/a/a/b/d.f I]
      [14] aload_0 v0
      [15] iconst_m1
      [16] putfield #50
        + Fieldref [a/a/a/b/d.g I]
      [19] aload_0 v0
      [20] ldc2_w #40
        + Long [-1]
      [23] putfield #51
        + Fieldref [a/a/a/b/d.h J]
      [26] aload_0 v0
      [27] ldc2_w #40
        + Long [-1]
      [30] putfield #52
        + Fieldref [a/a/a/b/d.i J]
      [33] aload_0 v0
      [34] ldc2_w #40
        + Long [-1]
      [37] putfield #56
        + Fieldref [a/a/a/b/d.m J]
      [40] aload_0 v0
      [41] ldc2_w #40
        + Long [-1]
      [44] putfield #57
        + Fieldref [a/a/a/b/d.n J]
      [47] aload_0 v0
      [48] ldc2_w #40
        + Long [-1]
      [51] putfield #58
        + Fieldref [a/a/a/b/d.o J]
      [54] aload_0 v0
      [55] getstatic #44
        + Fieldref [a/a/a/b/d.a La/a/a/a/ac;]
      [58] putfield #63
        + Fieldref [a/a/a/b/d.t La/a/a/a/ac;]
      [61] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/b/d;
    Access flags: 0x9
      = public static a.a.a.b.d a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 0, stack = 2):
      [0] new #28
        + Class [a/a/a/b/d]
      [3] dup
      [4] invokespecial #84
        + Methodref [a/a/a/b/d.<init> ()V]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/a/b;
    Access flags: 0x0
      = a.a.a.a.b b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #59
        + Fieldref [a/a/a/b/d.p La/a/a/a/b;]
      [4] aload_0 v0
      [5] invokevirtual #86
        + Methodref [a/a/a/b/d.i ()La/a/a/b/as;]
      [8] invokevirtual #82
        + Methodref [a/a/a/b/as.a ()La/a/a/a/b;]
      [11] invokestatic #72
        + Methodref [a/a/a/a/i.b (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [14] checkcast #20
        + Class [a/a/a/a/b]
      [17] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()La/a/a/a/b;
    Access flags: 0x0
      = a.a.a.a.b c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #60
        + Fieldref [a/a/a/b/d.q La/a/a/a/b;]
      [4] aload_0 v0
      [5] invokevirtual #87
        + Methodref [a/a/a/b/d.j ()La/a/a/b/as;]
      [8] invokevirtual #82
        + Methodref [a/a/a/b/as.a ()La/a/a/a/b;]
      [11] invokestatic #72
        + Methodref [a/a/a/a/i.b (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [14] checkcast #20
        + Class [a/a/a/a/b]
      [17] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()I
    Access flags: 0x0
      = int d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #49
        + Fieldref [a/a/a/b/d.f I]
      [4] iconst_m1
      [5] ificmpne +8 (target=13)
      [8] bipush 16
      [10] goto +7 (target=17)
      [13] aload_0 v0
      [14] getfield #49
        + Fieldref [a/a/a/b/d.f I]
      [17] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ..., Stack: (empty)
        - [17] Var: ..., Stack: [i]
  + Method:       e()I
    Access flags: 0x0
      = int e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #50
        + Fieldref [a/a/a/b/d.g I]
      [4] iconst_m1
      [5] ificmpne +7 (target=12)
      [8] iconst_4
      [9] goto +7 (target=16)
      [12] aload_0 v0
      [13] getfield #50
        + Fieldref [a/a/a/b/d.g I]
      [16] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [12] Var: ..., Stack: (empty)
        - [16] Var: ..., Stack: [i]
  + Method:       f()J
    Access flags: 0x0
      = long f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 39, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] getfield #56
        + Fieldref [a/a/a/b/d.m J]
      [4] lconst_0
      [5] lcmp
      [6] ifeq +12 (target=18)
      [9] aload_0 v0
      [10] getfield #57
        + Fieldref [a/a/a/b/d.n J]
      [13] lconst_0
      [14] lcmp
      [15] ifne +5 (target=20)
      [18] lconst_0
      [19] lreturn
      [20] aload_0 v0
      [21] getfield #53
        + Fieldref [a/a/a/b/d.j La/a/a/b/cj;]
      [24] ifnonnull +10 (target=34)
      [27] aload_0 v0
      [28] getfield #51
        + Fieldref [a/a/a/b/d.h J]
      [31] goto +7 (target=38)
      [34] aload_0 v0
      [35] getfield #52
        + Fieldref [a/a/a/b/d.i J]
      [38] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [18] Var: ..., Stack: (empty)
        - [20] Var: ..., Stack: (empty)
        - [34] Var: ..., Stack: (empty)
        - [38] Var: ..., Stack: [l]
  + Method:       g()La/a/a/b/cj;
    Access flags: 0x0
      = a.a.a.b.cj g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #53
        + Fieldref [a/a/a/b/d.j La/a/a/b/cj;]
      [4] getstatic #66
        + Fieldref [a/a/a/b/i.a La/a/a/b/i;]
      [7] invokestatic #72
        + Methodref [a/a/a/a/i.b (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [10] checkcast #27
        + Class [a/a/a/b/cj]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       h()La/a/a/b/d;
    Access flags: 0x1
      = public a.a.a.b.d h()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getstatic #43
        + Fieldref [a/a/a/b/as.c La/a/a/b/as;]
      [4] invokevirtual #85
        + Methodref [a/a/a/b/d.a (La/a/a/b/as;)La/a/a/b/d;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/as;)La/a/a/b/d;
    Access flags: 0x0
      = a.a.a.b.d a(a.a.a.b.as)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 41, locals = 2, stack = 6):
      [0] aload_0 v0
      [1] getfield #54
        + Fieldref [a/a/a/b/d.k La/a/a/b/as;]
      [4] ifnonnull +7 (target=11)
      [7] iconst_1
      [8] goto +4 (target=12)
      [11] iconst_0
      [12] ldc #1
        + String [Key strength was already set to %s]
      [14] iconst_1
      [15] anewarray #36
        + Class [java/lang/Object]
      [18] dup
      [19] iconst_0
      [20] aload_0 v0
      [21] getfield #54
        + Fieldref [a/a/a/b/d.k La/a/a/b/as;]
      [24] aastore
      [25] invokestatic #80
        + Methodref [a/a/a/a/o.b (ZLjava/lang/String;[Ljava/lang/Object;)V]
      [28] aload_0 v0
      [29] aload_1 v1
      [30] invokestatic #78
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [33] checkcast #25
        + Class [a/a/a/b/as]
      [36] putfield #54
        + Fieldref [a/a/a/b/d.k La/a/a/b/as;]
      [39] aload_0 v0
      [40] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [12] Var: ..., Stack: [i]
  + Method:       i()La/a/a/b/as;
    Access flags: 0x0
      = a.a.a.b.as i()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #54
        + Fieldref [a/a/a/b/d.k La/a/a/b/as;]
      [4] getstatic #42
        + Fieldref [a/a/a/b/as.a La/a/a/b/as;]
      [7] invokestatic #72
        + Methodref [a/a/a/a/i.b (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [10] checkcast #25
        + Class [a/a/a/b/as]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       j()La/a/a/b/as;
    Access flags: 0x0
      = a.a.a.b.as j()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #55
        + Fieldref [a/a/a/b/d.l La/a/a/b/as;]
      [4] getstatic #42
        + Fieldref [a/a/a/b/as.a La/a/a/b/as;]
      [7] invokestatic #72
        + Methodref [a/a/a/a/i.b (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [10] checkcast #25
        + Class [a/a/a/b/as]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       k()J
    Access flags: 0x0
      = long k()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] getfield #56
        + Fieldref [a/a/a/b/d.m J]
      [4] ldc2_w #40
        + Long [-1]
      [7] lcmp
      [8] ifne +7 (target=15)
      [11] lconst_0
      [12] goto +7 (target=19)
      [15] aload_0 v0
      [16] getfield #56
        + Fieldref [a/a/a/b/d.m J]
      [19] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [15] Var: ..., Stack: (empty)
        - [19] Var: ..., Stack: [l]
  + Method:       l()J
    Access flags: 0x0
      = long l()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] getfield #57
        + Fieldref [a/a/a/b/d.n J]
      [4] ldc2_w #40
        + Long [-1]
      [7] lcmp
      [8] ifne +7 (target=15)
      [11] lconst_0
      [12] goto +7 (target=19)
      [15] aload_0 v0
      [16] getfield #57
        + Fieldref [a/a/a/b/d.n J]
      [19] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [15] Var: ..., Stack: (empty)
        - [19] Var: ..., Stack: [l]
  + Method:       m()J
    Access flags: 0x0
      = long m()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] getfield #58
        + Fieldref [a/a/a/b/d.o J]
      [4] ldc2_w #40
        + Long [-1]
      [7] lcmp
      [8] ifne +7 (target=15)
      [11] lconst_0
      [12] goto +7 (target=19)
      [15] aload_0 v0
      [16] getfield #58
        + Fieldref [a/a/a/b/d.o J]
      [19] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [15] Var: ..., Stack: (empty)
        - [19] Var: ..., Stack: [l]
  + Method:       a(Z)La/a/a/a/af;
    Access flags: 0x0
      = a.a.a.a.af a(boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 26, locals = 2, stack = 1):
      [0] aload_0 v0
      [1] getfield #62
        + Fieldref [a/a/a/b/d.s La/a/a/a/af;]
      [4] ifnull +8 (target=12)
      [7] aload_0 v0
      [8] getfield #62
        + Fieldref [a/a/a/b/d.s La/a/a/a/af;]
      [11] areturn
      [12] iload_1 v1
      [13] ifeq +9 (target=22)
      [16] invokestatic #70
        + Methodref [a/a/a/a/af.b ()La/a/a/a/af;]
      [19] goto +6 (target=25)
      [22] getstatic #47
        + Fieldref [a/a/a/b/d.d La/a/a/a/af;]
      [25] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [12] Var: ..., Stack: (empty)
        - [22] Var: ..., Stack: (empty)
        - [25] Var: ..., Stack: [a:a/a/a/a/af]
  + Method:       n()La/a/a/b/cc;
    Access flags: 0x0
      = a.a.a.b.cc n()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #61
        + Fieldref [a/a/a/b/d.r La/a/a/b/cc;]
      [4] getstatic #65
        + Fieldref [a/a/a/b/h.a La/a/a/b/h;]
      [7] invokestatic #72
        + Methodref [a/a/a/a/i.b (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [10] checkcast #26
        + Class [a/a/a/b/cc]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       o()La/a/a/a/ac;
    Access flags: 0x0
      = a.a.a.a.ac o()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #63
        + Fieldref [a/a/a/b/d.t La/a/a/a/ac;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/j;)La/a/a/b/m;
    Access flags: 0x1
      = public a.a.a.b.m a(a.a.a.b.j)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] invokespecial #88
        + Methodref [a/a/a/b/d.p ()V]
      [4] new #24
        + Class [a/a/a/b/al]
      [7] dup
      [8] aload_0 v0
      [9] aload_1 v1
      [10] invokespecial #81
        + Methodref [a/a/a/b/al.<init> (La/a/a/b/d;La/a/a/b/j;)V]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       p()V
    Access flags: 0x2
      = private void p()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 85, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] getfield #53
        + Fieldref [a/a/a/b/d.j La/a/a/b/cj;]
      [4] ifnonnull +27 (target=31)
      [7] aload_0 v0
      [8] getfield #52
        + Fieldref [a/a/a/b/d.i J]
      [11] ldc2_w #40
        + Long [-1]
      [14] lcmp
      [15] ifne +7 (target=22)
      [18] iconst_1
      [19] goto +4 (target=23)
      [22] iconst_0
      [23] ldc #11
        + String [maximumWeight requires weigher]
      [25] invokestatic #79
        + Methodref [a/a/a/a/o.b (ZLjava/lang/Object;)V]
      [28] goto +56 (target=84)
      [31] aload_0 v0
      [32] getfield #48
        + Fieldref [a/a/a/b/d.e Z]
      [35] ifeq +27 (target=62)
      [38] aload_0 v0
      [39] getfield #52
        + Fieldref [a/a/a/b/d.i J]
      [42] ldc2_w #40
        + Long [-1]
      [45] lcmp
      [46] ifeq +7 (target=53)
      [49] iconst_1
      [50] goto +4 (target=54)
      [53] iconst_0
      [54] ldc #16
        + String [weigher requires maximumWeight]
      [56] invokestatic #79
        + Methodref [a/a/a/a/o.b (ZLjava/lang/Object;)V]
      [59] goto +25 (target=84)
      [62] aload_0 v0
      [63] getfield #52
        + Fieldref [a/a/a/b/d.i J]
      [66] ldc2_w #40
        + Long [-1]
      [69] lcmp
      [70] ifne +14 (target=84)
      [73] getstatic #64
        + Fieldref [a/a/a/b/d.u Ljava/util/logging/Logger;]
      [76] getstatic #67
        + Fieldref [java/util/logging/Level.WARNING Ljava/util/logging/Level;]
      [79] ldc #5
        + String [ignoring weigher specified without maximumWeight]
      [81] invokevirtual #100
        + Methodref [java/util/logging/Logger.log (Ljava/util/logging/Level;Ljava/lang/String;)V]
      [84] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 7):
        - [22] Var: ..., Stack: (empty)
        - [23] Var: ..., Stack: [i]
        - [31] Var: ..., Stack: (empty)
        - [53] Var: ..., Stack: (empty)
        - [54] Var: ..., Stack: [i]
        - [62] Var: ..., Stack: (empty)
        - [84] Var: ..., Stack: (empty)
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 262, locals = 2, stack = 5):
      [0] aload_0 v0
      [1] invokestatic #71
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;)La/a/a/a/k;]
      [4] astore_1 v1
      [5] aload_0 v0
      [6] getfield #49
        + Fieldref [a/a/a/b/d.f I]
      [9] iconst_m1
      [10] ificmpeq +14 (target=24)
      [13] aload_1 v1
      [14] ldc #6
        + String [initialCapacity]
      [16] aload_0 v0
      [17] getfield #49
        + Fieldref [a/a/a/b/d.f I]
      [20] invokevirtual #74
        + Methodref [a/a/a/a/k.a (Ljava/lang/String;I)La/a/a/a/k;]
      [23] pop
      [24] aload_0 v0
      [25] getfield #50
        + Fieldref [a/a/a/b/d.g I]
      [28] iconst_m1
      [29] ificmpeq +14 (target=43)
      [32] aload_1 v1
      [33] ldc #2
        + String [concurrencyLevel]
      [35] aload_0 v0
      [36] getfield #50
        + Fieldref [a/a/a/b/d.g I]
      [39] invokevirtual #74
        + Methodref [a/a/a/a/k.a (Ljava/lang/String;I)La/a/a/a/k;]
      [42] pop
      [43] aload_0 v0
      [44] getfield #51
        + Fieldref [a/a/a/b/d.h J]
      [47] ldc2_w #40
        + Long [-1]
      [50] lcmp
      [51] ifeq +14 (target=65)
      [54] aload_1 v1
      [55] ldc #9
        + String [maximumSize]
      [57] aload_0 v0
      [58] getfield #51
        + Fieldref [a/a/a/b/d.h J]
      [61] invokevirtual #75
        + Methodref [a/a/a/a/k.a (Ljava/lang/String;J)La/a/a/a/k;]
      [64] pop
      [65] aload_0 v0
      [66] getfield #52
        + Fieldref [a/a/a/b/d.i J]
      [69] ldc2_w #40
        + Long [-1]
      [72] lcmp
      [73] ifeq +14 (target=87)
      [76] aload_1 v1
      [77] ldc #10
        + String [maximumWeight]
      [79] aload_0 v0
      [80] getfield #52
        + Fieldref [a/a/a/b/d.i J]
      [83] invokevirtual #75
        + Methodref [a/a/a/a/k.a (Ljava/lang/String;J)La/a/a/a/k;]
      [86] pop
      [87] aload_0 v0
      [88] getfield #56
        + Fieldref [a/a/a/b/d.m J]
      [91] ldc2_w #40
        + Long [-1]
      [94] lcmp
      [95] ifeq +32 (target=127)
      [98] aload_1 v1
      [99] ldc #4
        + String [expireAfterWrite]
      [101] new #37
        + Class [java/lang/StringBuilder]
      [104] dup
      [105] invokespecial #95
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [108] aload_0 v0
      [109] getfield #56
        + Fieldref [a/a/a/b/d.m J]
      [112] invokevirtual #96
        + Methodref [java/lang/StringBuilder.append (J)Ljava/lang/StringBuilder;]
      [115] ldc #12
        + String [ns]
      [117] invokevirtual #97
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [120] invokevirtual #98
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [123] invokevirtual #76
        + Methodref [a/a/a/a/k.a (Ljava/lang/String;Ljava/lang/Object;)La/a/a/a/k;]
      [126] pop
      [127] aload_0 v0
      [128] getfield #57
        + Fieldref [a/a/a/b/d.n J]
      [131] ldc2_w #40
        + Long [-1]
      [134] lcmp
      [135] ifeq +32 (target=167)
      [138] aload_1 v1
      [139] ldc #3
        + String [expireAfterAccess]
      [141] new #37
        + Class [java/lang/StringBuilder]
      [144] dup
      [145] invokespecial #95
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [148] aload_0 v0
      [149] getfield #57
        + Fieldref [a/a/a/b/d.n J]
      [152] invokevirtual #96
        + Methodref [java/lang/StringBuilder.append (J)Ljava/lang/StringBuilder;]
      [155] ldc #12
        + String [ns]
      [157] invokevirtual #97
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [160] invokevirtual #98
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [163] invokevirtual #76
        + Methodref [a/a/a/a/k.a (Ljava/lang/String;Ljava/lang/Object;)La/a/a/a/k;]
      [166] pop
      [167] aload_0 v0
      [168] getfield #54
        + Fieldref [a/a/a/b/d.k La/a/a/b/as;]
      [171] ifnull +20 (target=191)
      [174] aload_1 v1
      [175] ldc #8
        + String [keyStrength]
      [177] aload_0 v0
      [178] getfield #54
        + Fieldref [a/a/a/b/d.k La/a/a/b/as;]
      [181] invokevirtual #83
        + Methodref [a/a/a/b/as.toString ()Ljava/lang/String;]
      [184] invokestatic #68
        + Methodref [a/a/a/a/a.a (Ljava/lang/String;)Ljava/lang/String;]
      [187] invokevirtual #76
        + Methodref [a/a/a/a/k.a (Ljava/lang/String;Ljava/lang/Object;)La/a/a/a/k;]
      [190] pop
      [191] aload_0 v0
      [192] getfield #55
        + Fieldref [a/a/a/b/d.l La/a/a/b/as;]
      [195] ifnull +20 (target=215)
      [198] aload_1 v1
      [199] ldc #15
        + String [valueStrength]
      [201] aload_0 v0
      [202] getfield #55
        + Fieldref [a/a/a/b/d.l La/a/a/b/as;]
      [205] invokevirtual #83
        + Methodref [a/a/a/b/as.toString ()Ljava/lang/String;]
      [208] invokestatic #68
        + Methodref [a/a/a/a/a.a (Ljava/lang/String;)Ljava/lang/String;]
      [211] invokevirtual #76
        + Methodref [a/a/a/a/k.a (Ljava/lang/String;Ljava/lang/Object;)La/a/a/a/k;]
      [214] pop
      [215] aload_0 v0
      [216] getfield #59
        + Fieldref [a/a/a/b/d.p La/a/a/a/b;]
      [219] ifnull +10 (target=229)
      [222] aload_1 v1
      [223] ldc #7
        + String [keyEquivalence]
      [225] invokevirtual #73
        + Methodref [a/a/a/a/k.a (Ljava/lang/Object;)La/a/a/a/k;]
      [228] pop
      [229] aload_0 v0
      [230] getfield #60
        + Fieldref [a/a/a/b/d.q La/a/a/a/b;]
      [233] ifnull +10 (target=243)
      [236] aload_1 v1
      [237] ldc #14
        + String [valueEquivalence]
      [239] invokevirtual #73
        + Methodref [a/a/a/a/k.a (Ljava/lang/Object;)La/a/a/a/k;]
      [242] pop
      [243] aload_0 v0
      [244] getfield #61
        + Fieldref [a/a/a/b/d.r La/a/a/b/cc;]
      [247] ifnull +10 (target=257)
      [250] aload_1 v1
      [251] ldc #13
        + String [removalListener]
      [253] invokevirtual #73
        + Methodref [a/a/a/a/k.a (Ljava/lang/Object;)La/a/a/a/k;]
      [256] pop
      [257] aload_1 v1
      [258] invokevirtual #77
        + Methodref [a/a/a/a/k.toString ()Ljava/lang/String;]
      [261] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 11):
        - [24] Var: ...[a:a/a/a/a/k], Stack: (empty)
        - [43] Var: ..., Stack: (empty)
        - [65] Var: ..., Stack: (empty)
        - [87] Var: ..., Stack: (empty)
        - [127] Var: ..., Stack: (empty)
        - [167] Var: ..., Stack: (empty)
        - [191] Var: ..., Stack: (empty)
        - [215] Var: ..., Stack: (empty)
        - [229] Var: ..., Stack: (empty)
        - [243] Var: ..., Stack: (empty)
        - [257] Var: ..., Stack: (empty)
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 61, locals = 0, stack = 14):
      [0] new #29
        + Class [a/a/a/b/e]
      [3] dup
      [4] invokespecial #89
        + Methodref [a/a/a/b/e.<init> ()V]
      [7] invokestatic #69
        + Methodref [a/a/a/a/ad.a (Ljava/lang/Object;)La/a/a/a/ac;]
      [10] putstatic #44
        + Fieldref [a/a/a/b/d.a La/a/a/a/ac;]
      [13] new #34
        + Class [a/a/a/b/l]
      [16] dup
      [17] lconst_0
      [18] lconst_0
      [19] lconst_0
      [20] lconst_0
      [21] lconst_0
      [22] lconst_0
      [23] invokespecial #92
        + Methodref [a/a/a/b/l.<init> (JJJJJJ)V]
      [26] putstatic #45
        + Fieldref [a/a/a/b/d.b La/a/a/b/l;]
      [29] new #30
        + Class [a/a/a/b/f]
      [32] dup
      [33] invokespecial #90
        + Methodref [a/a/a/b/f.<init> ()V]
      [36] putstatic #46
        + Fieldref [a/a/a/b/d.c La/a/a/a/ac;]
      [39] new #31
        + Class [a/a/a/b/g]
      [42] dup
      [43] invokespecial #91
        + Methodref [a/a/a/b/g.<init> ()V]
      [46] putstatic #47
        + Fieldref [a/a/a/b/d.d La/a/a/a/af;]
      [49] ldc #28
        + Class [a/a/a/b/d]
      [51] invokevirtual #93
        + Methodref [java/lang/Class.getName ()Ljava/lang/String;]
      [54] invokestatic #99
        + Methodref [java/util/logging/Logger.getLogger (Ljava/lang/String;)Ljava/util/logging/Logger;]
      [57] putstatic #64
        + Fieldref [a/a/a/b/d.u Ljava/util/logging/Logger;]
      [60] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/e
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.e extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/b/c]

Constant Pool (count = 16):
  + Class [a/a/a/b/c]
  + Class [a/a/a/b/e]
  + Class [java/lang/Object]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [(I)V]
  + Utf8 [(J)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/b/c]
  + Utf8 [a/a/a/b/e]
  + Utf8 [b]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 6):
  - Method:       <init>()V
    Access flags: 0x0
      = e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #4
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(I)V
    Access flags: 0x1
      = public void a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(I)V
    Access flags: 0x1
      = public void b(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(J)V
    Access flags: 0x1
      = public void a(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 3, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(J)V
    Access flags: 0x1
      = public void b(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 3, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()V
    Access flags: 0x1
      = public void a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 1, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/f
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.f extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/a/ac]

Constant Pool (count = 21):
  + Class [a/a/a/a/ac]
  + Class [a/a/a/b/b]
  + Class [a/a/a/b/f]
  + Class [java/lang/Object]
  + Methodref [a/a/a/b/b.<init> ()V]
  + Methodref [a/a/a/b/f.b ()La/a/a/b/c;]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [b ()La/a/a/b/c;]
  + Utf8 [()La/a/a/b/c;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/a/ac]
  + Utf8 [a/a/a/b/b]
  + Utf8 [a/a/a/b/f]
  + Utf8 [b]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x0
      = f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #7
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/b/c;
    Access flags: 0x1
      = public a.a.a.b.c b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #2
        + Class [a/a/a/b/b]
      [3] dup
      [4] invokespecial #5
        + Methodref [a/a/a/b/b.<init> ()V]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/lang/Object;
    Access flags: 0x1001
      = public synthetic java.lang.Object a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #6
        + Methodref [a/a/a/b/f.b ()La/a/a/b/c;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/g
  Superclass:    a/a/a/a/af
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.g extends a.a.a.a.af

Interfaces (count = 0):

Constant Pool (count = 12):
  + Class [a/a/a/a/af]
  + Class [a/a/a/b/g]
  + Methodref [a/a/a/a/af.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()J]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/a/af]
  + Utf8 [a/a/a/b/g]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>()V
    Access flags: 0x0
      = g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #3
        + Methodref [a/a/a/a/af.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()J
    Access flags: 0x1
      = public long a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 2):
      [0] lconst_0
      [1] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/h
  Superclass:    java/lang/Enum
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.h extends java.lang.Enum

Interfaces (count = 1):
  + Class [a/a/a/b/cc]

Constant Pool (count = 38):
  + String [INSTANCE]
  + Class [[La/a/a/b/h;]
  + Class [a/a/a/b/cc]
  + Class [a/a/a/b/h]
  + Class [java/lang/Enum]
  + Fieldref [a/a/a/b/h.a La/a/a/b/h;]
  + Fieldref [a/a/a/b/h.b [La/a/a/b/h;]
  + Methodref [[La/a/a/b/h;.clone ()Ljava/lang/Object;]
  + Methodref [a/a/a/b/h.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + NameAndType [<init> (Ljava/lang/String;I)V]
  + NameAndType [a La/a/a/b/h;]
  + NameAndType [b [La/a/a/b/h;]
  + NameAndType [clone ()Ljava/lang/Object;]
  + NameAndType [valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()[La/a/a/b/h;]
  + Utf8 [(La/a/a/b/cd;)V]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [(Ljava/lang/String;)La/a/a/b/h;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [INSTANCE]
  + Utf8 [La/a/a/b/h;]
  + Utf8 [[La/a/a/b/h;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/cc]
  + Utf8 [a/a/a/b/h]
  + Utf8 [b]
  + Utf8 [clone]
  + Utf8 [java/lang/Enum]
  + Utf8 [valueOf]
  + Utf8 [values]

Fields (count = 2):
  + Field:        a La/a/a/b/h;
    Access flags: 0x4019
      = public static final a.a.a.b.h a
  + Field:        b [La/a/a/b/h;
    Access flags: 0x101a
      = private static final synthetic a.a.a.b.h[] b

Methods (count = 5):
  + Method:       values()[La/a/a/b/h;
    Access flags: 0x9
      = public static a.a.a.b.h[] values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 0, stack = 1):
      [0] getstatic #7
        + Fieldref [a/a/a/b/h.b [La/a/a/b/h;]
      [3] invokevirtual #8
        + Methodref [[La/a/a/b/h;.clone ()Ljava/lang/Object;]
      [6] checkcast #2
        + Class [[La/a/a/b/h;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       valueOf(Ljava/lang/String;)La/a/a/b/h;
    Access flags: 0x9
      = public static a.a.a.b.h valueOf(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 1, stack = 2):
      [0] ldc_w #4
        + Class [a/a/a/b/h]
      [3] aload_0 v0
      [4] invokestatic #11
        + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
      [7] checkcast #4
        + Class [a/a/a/b/h]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x2
      = private h(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #10
        + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/cd;)V
    Access flags: 0x1
      = public void a(a.a.a.b.cd)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 27, locals = 0, stack = 4):
      [0] new #4
        + Class [a/a/a/b/h]
      [3] dup
      [4] ldc #1
        + String [INSTANCE]
      [6] iconst_0
      [7] invokespecial #9
        + Methodref [a/a/a/b/h.<init> (Ljava/lang/String;I)V]
      [10] putstatic #6
        + Fieldref [a/a/a/b/h.a La/a/a/b/h;]
      [13] iconst_1
      [14] anewarray #4
        + Class [a/a/a/b/h]
      [17] dup
      [18] iconst_0
      [19] getstatic #6
        + Fieldref [a/a/a/b/h.a La/a/a/b/h;]
      [22] aastore
      [23] putstatic #7
        + Fieldref [a/a/a/b/h.b [La/a/a/b/h;]
      [26] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/i
  Superclass:    java/lang/Enum
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.i extends java.lang.Enum

Interfaces (count = 1):
  + Class [a/a/a/b/cj]

Constant Pool (count = 38):
  + String [INSTANCE]
  + Class [[La/a/a/b/i;]
  + Class [a/a/a/b/cj]
  + Class [a/a/a/b/i]
  + Class [java/lang/Enum]
  + Fieldref [a/a/a/b/i.a La/a/a/b/i;]
  + Fieldref [a/a/a/b/i.b [La/a/a/b/i;]
  + Methodref [[La/a/a/b/i;.clone ()Ljava/lang/Object;]
  + Methodref [a/a/a/b/i.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + NameAndType [<init> (Ljava/lang/String;I)V]
  + NameAndType [a La/a/a/b/i;]
  + NameAndType [b [La/a/a/b/i;]
  + NameAndType [clone ()Ljava/lang/Object;]
  + NameAndType [valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()[La/a/a/b/i;]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/String;)La/a/a/b/i;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [INSTANCE]
  + Utf8 [La/a/a/b/i;]
  + Utf8 [[La/a/a/b/i;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/cj]
  + Utf8 [a/a/a/b/i]
  + Utf8 [b]
  + Utf8 [clone]
  + Utf8 [java/lang/Enum]
  + Utf8 [valueOf]
  + Utf8 [values]

Fields (count = 2):
  + Field:        a La/a/a/b/i;
    Access flags: 0x4019
      = public static final a.a.a.b.i a
  + Field:        b [La/a/a/b/i;
    Access flags: 0x101a
      = private static final synthetic a.a.a.b.i[] b

Methods (count = 5):
  + Method:       values()[La/a/a/b/i;
    Access flags: 0x9
      = public static a.a.a.b.i[] values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 0, stack = 1):
      [0] getstatic #7
        + Fieldref [a/a/a/b/i.b [La/a/a/b/i;]
      [3] invokevirtual #8
        + Methodref [[La/a/a/b/i;.clone ()Ljava/lang/Object;]
      [6] checkcast #2
        + Class [[La/a/a/b/i;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       valueOf(Ljava/lang/String;)La/a/a/b/i;
    Access flags: 0x9
      = public static a.a.a.b.i valueOf(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 1, stack = 2):
      [0] ldc_w #4
        + Class [a/a/a/b/i]
      [3] aload_0 v0
      [4] invokestatic #11
        + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
      [7] checkcast #4
        + Class [a/a/a/b/i]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x2
      = private i(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #10
        + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;Ljava/lang/Object;)I
    Access flags: 0x1
      = public int a(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 3, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 27, locals = 0, stack = 4):
      [0] new #4
        + Class [a/a/a/b/i]
      [3] dup
      [4] ldc #1
        + String [INSTANCE]
      [6] iconst_0
      [7] invokespecial #9
        + Methodref [a/a/a/b/i.<init> (Ljava/lang/String;I)V]
      [10] putstatic #6
        + Fieldref [a/a/a/b/i.a La/a/a/b/i;]
      [13] iconst_1
      [14] anewarray #4
        + Class [a/a/a/b/i]
      [17] dup
      [18] iconst_0
      [19] getstatic #6
        + Fieldref [a/a/a/b/i.a La/a/a/b/i;]
      [22] aastore
      [23] putstatic #7
        + Fieldref [a/a/a/b/i.b [La/a/a/b/i;]
      [26] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/j
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.b.j extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 23):
  + Class [a/a/a/a/o]
  + Class [a/a/a/b/j]
  + Class [a/a/a/g/a/h]
  + Class [java/lang/Object]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/j.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/g/a/h.a (Ljava/lang/Object;)La/a/a/g/a/q;]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/g/a/q;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/g/a/q;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/b/j]
  + Utf8 [a/a/a/g/a/h]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x4
      = protected j()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #8
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x401
      = public abstract java.lang.Object a(java.lang.Object)
  + Method:       a(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/g/a/q;
    Access flags: 0x1
      = public a.a.a.g.a.q a(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] invokestatic #5
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_2 v2
      [6] invokestatic #5
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] pop
      [10] aload_0 v0
      [11] aload_1 v1
      [12] invokevirtual #6
        + Methodref [a/a/a/b/j.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [15] invokestatic #7
        + Methodref [a/a/a/g/a/h.a (Ljava/lang/Object;)La/a/a/g/a/q;]
      [18] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/k
  Superclass:    java/lang/RuntimeException
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.b.k extends java.lang.RuntimeException

Interfaces (count = 0):

Constant Pool (count = 10):
  + Class [a/a/a/b/k]
  + Class [java/lang/RuntimeException]
  + Methodref [java/lang/RuntimeException.<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a/a/a/b/k]
  + Utf8 [java/lang/RuntimeException]

Fields (count = 0):

Methods (count = 1):
  - Method:       <init>(Ljava/lang/String;)V
    Access flags: 0x1
      = public k(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #3
        + Methodref [java/lang/RuntimeException.<init> (Ljava/lang/String;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/l
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.b.l extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 77):
  + String [evictionCount]
  + String [hitCount]
  + String [loadExceptionCount]
  + String [loadSuccessCount]
  + String [missCount]
  + String [totalLoadTime]
  + Class [a/a/a/a/i]
  + Class [a/a/a/a/k]
  + Class [a/a/a/a/o]
  + Class [a/a/a/b/l]
  + Class [java/lang/Long]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/b/l.a J]
  + Fieldref [a/a/a/b/l.b J]
  + Fieldref [a/a/a/b/l.c J]
  + Fieldref [a/a/a/b/l.d J]
  + Fieldref [a/a/a/b/l.e J]
  + Fieldref [a/a/a/b/l.f J]
  + Methodref [a/a/a/a/i.a (Ljava/lang/Object;)La/a/a/a/k;]
  + Methodref [a/a/a/a/i.a ([Ljava/lang/Object;)I]
  + Methodref [a/a/a/a/k.a (Ljava/lang/String;J)La/a/a/a/k;]
  + Methodref [a/a/a/a/k.toString ()Ljava/lang/String;]
  + Methodref [a/a/a/a/o.a (Z)V]
  + Methodref [java/lang/Long.valueOf (J)Ljava/lang/Long;]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/a/k;]
  + NameAndType [a (Ljava/lang/String;J)La/a/a/a/k;]
  + NameAndType [a (Z)V]
  + NameAndType [a ([Ljava/lang/Object;)I]
  + NameAndType [a J]
  + NameAndType [b J]
  + NameAndType [c J]
  + NameAndType [d J]
  + NameAndType [e J]
  + NameAndType [f J]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [valueOf (J)Ljava/lang/Long;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(J)Ljava/lang/Long;]
  + Utf8 [(JJJJJJ)V]
  + Utf8 [(Ljava/lang/Object;)La/a/a/a/k;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;J)La/a/a/a/k;]
  + Utf8 [(Z)V]
  + Utf8 [([Ljava/lang/Object;)I]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [J]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/a/k]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/b/l]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [evictionCount]
  + Utf8 [f]
  + Utf8 [hashCode]
  + Utf8 [hitCount]
  + Utf8 [java/lang/Long]
  + Utf8 [java/lang/Object]
  + Utf8 [loadExceptionCount]
  + Utf8 [loadSuccessCount]
  + Utf8 [missCount]
  + Utf8 [toString]
  + Utf8 [totalLoadTime]
  + Utf8 [valueOf]

Fields (count = 6):
  + Field:        a J
    Access flags: 0x12
      = private final long a
  + Field:        b J
    Access flags: 0x12
      = private final long b
  + Field:        c J
    Access flags: 0x12
      = private final long c
  + Field:        d J
    Access flags: 0x12
      = private final long d
  + Field:        e J
    Access flags: 0x12
      = private final long e
  + Field:        f J
    Access flags: 0x12
      = private final long f

Methods (count = 4):
  - Method:       <init>(JJJJJJ)V
    Access flags: 0x1
      = public l(long,long,long,long,long,long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 127, locals = 13, stack = 4):
      [0] aload_0 v0
      [1] invokespecial #25
        + Methodref [java/lang/Object.<init> ()V]
      [4] lload_1 v1
      [5] lconst_0
      [6] lcmp
      [7] iflt +7 (target=14)
      [10] iconst_1
      [11] goto +4 (target=15)
      [14] iconst_0
      [15] invokestatic #23
        + Methodref [a/a/a/a/o.a (Z)V]
      [18] lload_3 v3
      [19] lconst_0
      [20] lcmp
      [21] iflt +7 (target=28)
      [24] iconst_1
      [25] goto +4 (target=29)
      [28] iconst_0
      [29] invokestatic #23
        + Methodref [a/a/a/a/o.a (Z)V]
      [32] lload v5
      [34] lconst_0
      [35] lcmp
      [36] iflt +7 (target=43)
      [39] iconst_1
      [40] goto +4 (target=44)
      [43] iconst_0
      [44] invokestatic #23
        + Methodref [a/a/a/a/o.a (Z)V]
      [47] lload v7
      [49] lconst_0
      [50] lcmp
      [51] iflt +7 (target=58)
      [54] iconst_1
      [55] goto +4 (target=59)
      [58] iconst_0
      [59] invokestatic #23
        + Methodref [a/a/a/a/o.a (Z)V]
      [62] lload v9
      [64] lconst_0
      [65] lcmp
      [66] iflt +7 (target=73)
      [69] iconst_1
      [70] goto +4 (target=74)
      [73] iconst_0
      [74] invokestatic #23
        + Methodref [a/a/a/a/o.a (Z)V]
      [77] lload v11
      [79] lconst_0
      [80] lcmp
      [81] iflt +7 (target=88)
      [84] iconst_1
      [85] goto +4 (target=89)
      [88] iconst_0
      [89] invokestatic #23
        + Methodref [a/a/a/a/o.a (Z)V]
      [92] aload_0 v0
      [93] lload_1 v1
      [94] putfield #13
        + Fieldref [a/a/a/b/l.a J]
      [97] aload_0 v0
      [98] lload_3 v3
      [99] putfield #14
        + Fieldref [a/a/a/b/l.b J]
      [102] aload_0 v0
      [103] lload v5
      [105] putfield #15
        + Fieldref [a/a/a/b/l.c J]
      [108] aload_0 v0
      [109] lload v7
      [111] putfield #16
        + Fieldref [a/a/a/b/l.d J]
      [114] aload_0 v0
      [115] lload v9
      [117] putfield #17
        + Fieldref [a/a/a/b/l.e J]
      [120] aload_0 v0
      [121] lload v11
      [123] putfield #18
        + Fieldref [a/a/a/b/l.f J]
      [126] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 12):
        - [14] Var: [a:a/a/a/b/l][l][l][l][l][l][l], Stack: 
        - [15] Var: ..., Stack: [i]
        - [28] Var: ..., Stack: (empty)
        - [29] Var: ..., Stack: [i]
        - [43] Var: ..., Stack: (empty)
        - [44] Var: ..., Stack: [i]
        - [58] Var: ..., Stack: (empty)
        - [59] Var: ..., Stack: [i]
        - [73] Var: ..., Stack: (empty)
        - [74] Var: ..., Stack: [i]
        - [88] Var: ..., Stack: (empty)
        - [89] Var: ..., Stack: [i]
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 69, locals = 1, stack = 5):
      [0] bipush 6
      [2] anewarray #12
        + Class [java/lang/Object]
      [5] dup
      [6] iconst_0
      [7] aload_0 v0
      [8] getfield #13
        + Fieldref [a/a/a/b/l.a J]
      [11] invokestatic #24
        + Methodref [java/lang/Long.valueOf (J)Ljava/lang/Long;]
      [14] aastore
      [15] dup
      [16] iconst_1
      [17] aload_0 v0
      [18] getfield #14
        + Fieldref [a/a/a/b/l.b J]
      [21] invokestatic #24
        + Methodref [java/lang/Long.valueOf (J)Ljava/lang/Long;]
      [24] aastore
      [25] dup
      [26] iconst_2
      [27] aload_0 v0
      [28] getfield #15
        + Fieldref [a/a/a/b/l.c J]
      [31] invokestatic #24
        + Methodref [java/lang/Long.valueOf (J)Ljava/lang/Long;]
      [34] aastore
      [35] dup
      [36] iconst_3
      [37] aload_0 v0
      [38] getfield #16
        + Fieldref [a/a/a/b/l.d J]
      [41] invokestatic #24
        + Methodref [java/lang/Long.valueOf (J)Ljava/lang/Long;]
      [44] aastore
      [45] dup
      [46] iconst_4
      [47] aload_0 v0
      [48] getfield #17
        + Fieldref [a/a/a/b/l.e J]
      [51] invokestatic #24
        + Methodref [java/lang/Long.valueOf (J)Ljava/lang/Long;]
      [54] aastore
      [55] dup
      [56] iconst_5
      [57] aload_0 v0
      [58] getfield #18
        + Fieldref [a/a/a/b/l.f J]
      [61] invokestatic #24
        + Methodref [java/lang/Long.valueOf (J)Ljava/lang/Long;]
      [64] aastore
      [65] invokestatic #20
        + Methodref [a/a/a/a/i.a ([Ljava/lang/Object;)I]
      [68] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 92, locals = 3, stack = 4):
      [0] aload_1 v1
      [1] instanceof #10
        + Class [a/a/a/b/l]
      [4] ifeq +86 (target=90)
      [7] aload_1 v1
      [8] checkcast #10
        + Class [a/a/a/b/l]
      [11] astore_2 v2
      [12] aload_0 v0
      [13] getfield #13
        + Fieldref [a/a/a/b/l.a J]
      [16] aload_2 v2
      [17] getfield #13
        + Fieldref [a/a/a/b/l.a J]
      [20] lcmp
      [21] ifne +67 (target=88)
      [24] aload_0 v0
      [25] getfield #14
        + Fieldref [a/a/a/b/l.b J]
      [28] aload_2 v2
      [29] getfield #14
        + Fieldref [a/a/a/b/l.b J]
      [32] lcmp
      [33] ifne +55 (target=88)
      [36] aload_0 v0
      [37] getfield #15
        + Fieldref [a/a/a/b/l.c J]
      [40] aload_2 v2
      [41] getfield #15
        + Fieldref [a/a/a/b/l.c J]
      [44] lcmp
      [45] ifne +43 (target=88)
      [48] aload_0 v0
      [49] getfield #16
        + Fieldref [a/a/a/b/l.d J]
      [52] aload_2 v2
      [53] getfield #16
        + Fieldref [a/a/a/b/l.d J]
      [56] lcmp
      [57] ifne +31 (target=88)
      [60] aload_0 v0
      [61] getfield #17
        + Fieldref [a/a/a/b/l.e J]
      [64] aload_2 v2
      [65] getfield #17
        + Fieldref [a/a/a/b/l.e J]
      [68] lcmp
      [69] ifne +19 (target=88)
      [72] aload_0 v0
      [73] getfield #18
        + Fieldref [a/a/a/b/l.f J]
      [76] aload_2 v2
      [77] getfield #18
        + Fieldref [a/a/a/b/l.f J]
      [80] lcmp
      [81] ifne +7 (target=88)
      [84] iconst_1
      [85] goto +4 (target=89)
      [88] iconst_0
      [89] ireturn
      [90] iconst_0
      [91] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [88] Var: ...[a:a/a/a/b/l], Stack: (empty)
        - [89] Var: ..., Stack: [i]
        - [90] Var: -1, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 62, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] invokestatic #19
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;)La/a/a/a/k;]
      [4] ldc #2
        + String [hitCount]
      [6] aload_0 v0
      [7] getfield #13
        + Fieldref [a/a/a/b/l.a J]
      [10] invokevirtual #21
        + Methodref [a/a/a/a/k.a (Ljava/lang/String;J)La/a/a/a/k;]
      [13] ldc #5
        + String [missCount]
      [15] aload_0 v0
      [16] getfield #14
        + Fieldref [a/a/a/b/l.b J]
      [19] invokevirtual #21
        + Methodref [a/a/a/a/k.a (Ljava/lang/String;J)La/a/a/a/k;]
      [22] ldc #4
        + String [loadSuccessCount]
      [24] aload_0 v0
      [25] getfield #15
        + Fieldref [a/a/a/b/l.c J]
      [28] invokevirtual #21
        + Methodref [a/a/a/a/k.a (Ljava/lang/String;J)La/a/a/a/k;]
      [31] ldc #3
        + String [loadExceptionCount]
      [33] aload_0 v0
      [34] getfield #16
        + Fieldref [a/a/a/b/l.d J]
      [37] invokevirtual #21
        + Methodref [a/a/a/a/k.a (Ljava/lang/String;J)La/a/a/a/k;]
      [40] ldc #6
        + String [totalLoadTime]
      [42] aload_0 v0
      [43] getfield #17
        + Fieldref [a/a/a/b/l.e J]
      [46] invokevirtual #21
        + Methodref [a/a/a/a/k.a (Ljava/lang/String;J)La/a/a/a/k;]
      [49] ldc #1
        + String [evictionCount]
      [51] aload_0 v0
      [52] getfield #18
        + Fieldref [a/a/a/b/l.f J]
      [55] invokevirtual #21
        + Methodref [a/a/a/a/k.a (Ljava/lang/String;J)La/a/a/a/k;]
      [58] invokevirtual #22
        + Methodref [a/a/a/a/k.toString ()Ljava/lang/String;]
      [61] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/m
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface a.a.a.b.m extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/a/e]

Constant Pool (count = 7):
  + Class [a/a/a/a/e]
  + Class [a/a/a/b/m]
  + Class [java/lang/Object]
  + Utf8 [a/a/a/a/e]
  + Utf8 [a/a/a/b/m]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/n
  Superclass:    java/util/AbstractMap
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.b.n extends java.util.AbstractMap

Interfaces (count = 1):
  + Class [java/util/concurrent/ConcurrentMap]

Constant Pool (count = 472):
  + Integer [65536]
  + Integer [1073741824]
  + String [Exception thrown by removal listener]
  + Class [[La/a/a/b/ap;]
  + Class [a/a/a/a/ac]
  + Class [a/a/a/a/af]
  + Class [a/a/a/a/b]
  + Class [a/a/a/a/o]
  + Class [a/a/a/b/af]
  + Class [a/a/a/b/ai]
  + Class [a/a/a/b/an]
  + Class [a/a/a/b/ao]
  + Class [a/a/a/b/ap]
  + Class [a/a/a/b/as]
  + Class [a/a/a/b/bc]
  + Class [a/a/a/b/bd]
  + Class [a/a/a/b/c]
  + Class [a/a/a/b/cc]
  + Class [a/a/a/b/cd]
  + Class [a/a/a/b/d]
  + Class [a/a/a/b/h]
  + Class [a/a/a/b/i]
  + Class [a/a/a/b/j]
  + Class [a/a/a/b/n]
  + Class [a/a/a/b/o]
  + Class [a/a/a/b/p]
  + Class [a/a/a/b/v]
  + Class [a/a/a/e/a]
  + Class [a/a/a/g/a/t]
  + Class [java/lang/Class]
  + Class [java/lang/Math]
  + Class [java/lang/Object]
  + Class [java/lang/Throwable]
  + Class [java/util/AbstractMap]
  + Class [java/util/Collection]
  + Class [java/util/Iterator]
  + Class [java/util/Map]
  + Class [java/util/Map$Entry]
  + Class [java/util/Queue]
  + Class [java/util/Set]
  + Class [java/util/concurrent/ConcurrentLinkedQueue]
  + Class [java/util/concurrent/ConcurrentMap]
  + Class [java/util/concurrent/atomic/AtomicReferenceArray]
  + Class [java/util/logging/Level]
  + Class [java/util/logging/Logger]
  + Long [-1]
  + Fieldref [a/a/a/b/an.a La/a/a/b/an;]
  + Fieldref [a/a/a/b/ap.b I]
  + Fieldref [a/a/a/b/ap.d I]
  + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
  + Fieldref [a/a/a/b/as.a La/a/a/b/as;]
  + Fieldref [a/a/a/b/h.a La/a/a/b/h;]
  + Fieldref [a/a/a/b/i.a La/a/a/b/i;]
  + Fieldref [a/a/a/b/n.a Ljava/util/logging/Logger;]
  + Fieldref [a/a/a/b/n.b La/a/a/g/a/s;]
  + Fieldref [a/a/a/b/n.c I]
  + Fieldref [a/a/a/b/n.d I]
  + Fieldref [a/a/a/b/n.e [La/a/a/b/ap;]
  + Fieldref [a/a/a/b/n.f I]
  + Fieldref [a/a/a/b/n.g La/a/a/a/b;]
  + Fieldref [a/a/a/b/n.h La/a/a/a/b;]
  + Fieldref [a/a/a/b/n.i La/a/a/b/as;]
  + Fieldref [a/a/a/b/n.j La/a/a/b/as;]
  + Fieldref [a/a/a/b/n.k J]
  + Fieldref [a/a/a/b/n.l La/a/a/b/cj;]
  + Fieldref [a/a/a/b/n.m J]
  + Fieldref [a/a/a/b/n.n J]
  + Fieldref [a/a/a/b/n.o J]
  + Fieldref [a/a/a/b/n.p Ljava/util/Queue;]
  + Fieldref [a/a/a/b/n.q La/a/a/b/cc;]
  + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
  + Fieldref [a/a/a/b/n.s La/a/a/b/v;]
  + Fieldref [a/a/a/b/n.t La/a/a/b/c;]
  + Fieldref [a/a/a/b/n.u La/a/a/b/j;]
  + Fieldref [a/a/a/b/n.v La/a/a/b/bc;]
  + Fieldref [a/a/a/b/n.w Ljava/util/Queue;]
  + Fieldref [a/a/a/b/n.x Ljava/util/Set;]
  + Fieldref [a/a/a/b/n.y Ljava/util/Collection;]
  + Fieldref [a/a/a/b/n.z Ljava/util/Set;]
  + Fieldref [java/util/logging/Level.WARNING Ljava/util/logging/Level;]
  + Methodref [a/a/a/a/af.a ()J]
  + Methodref [a/a/a/a/b.a (Ljava/lang/Object;)I]
  + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/af.<init> (La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
  + Methodref [a/a/a/b/ai.<init> (La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
  + Methodref [a/a/a/b/ap.<init> (La/a/a/b/n;IJLa/a/a/b/c;)V]
  + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;I)Z]
  + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/bc;)Z]
  + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/j;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;]
  + Methodref [a/a/a/b/ap.b (Ljava/lang/Object;I)Ljava/lang/Object;]
  + Methodref [a/a/a/b/ap.b (Ljava/lang/Object;ILjava/lang/Object;)Z]
  + Methodref [a/a/a/b/ap.c (La/a/a/b/ao;J)Ljava/lang/Object;]
  + Methodref [a/a/a/b/ap.c (Ljava/lang/Object;I)Z]
  + Methodref [a/a/a/b/ap.d (Ljava/lang/Object;I)Ljava/lang/Object;]
  + Methodref [a/a/a/b/ap.l ()V]
  + Methodref [a/a/a/b/bd.<init> (La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
  + Methodref [a/a/a/b/d.a (Z)La/a/a/a/af;]
  + Methodref [a/a/a/b/d.b ()La/a/a/a/b;]
  + Methodref [a/a/a/b/d.c ()La/a/a/a/b;]
  + Methodref [a/a/a/b/d.d ()I]
  + Methodref [a/a/a/b/d.e ()I]
  + Methodref [a/a/a/b/d.f ()J]
  + Methodref [a/a/a/b/d.g ()La/a/a/b/cj;]
  + Methodref [a/a/a/b/d.i ()La/a/a/b/as;]
  + Methodref [a/a/a/b/d.j ()La/a/a/b/as;]
  + Methodref [a/a/a/b/d.k ()J]
  + Methodref [a/a/a/b/d.l ()J]
  + Methodref [a/a/a/b/d.m ()J]
  + Methodref [a/a/a/b/d.n ()La/a/a/b/cc;]
  + Methodref [a/a/a/b/d.o ()La/a/a/a/ac;]
  + Methodref [a/a/a/b/n.a ()Z]
  + Methodref [a/a/a/b/n.a (I)I]
  + Methodref [a/a/a/b/n.a (IJLa/a/a/b/c;)La/a/a/b/ap;]
  + Methodref [a/a/a/b/n.a (Ljava/lang/Object;)I]
  + Methodref [a/a/a/b/n.a (Ljava/lang/Object;La/a/a/b/j;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/n.b ()Z]
  + Methodref [a/a/a/b/n.b (I)La/a/a/b/ap;]
  + Methodref [a/a/a/b/n.b (La/a/a/b/ao;J)Z]
  + Methodref [a/a/a/b/n.c ()Z]
  + Methodref [a/a/a/b/n.c (I)[La/a/a/b/ap;]
  + Methodref [a/a/a/b/n.d ()Z]
  + Methodref [a/a/a/b/n.e ()Z]
  + Methodref [a/a/a/b/n.f ()Z]
  + Methodref [a/a/a/b/n.g ()Z]
  + Methodref [a/a/a/b/n.h ()Z]
  + Methodref [a/a/a/b/n.i ()Z]
  + Methodref [a/a/a/b/n.j ()Z]
  + Methodref [a/a/a/b/n.k ()Z]
  + Methodref [a/a/a/b/n.l ()Z]
  + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
  + Methodref [a/a/a/b/n.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/n.q ()Ljava/util/Queue;]
  + Methodref [a/a/a/b/n.s ()J]
  + Methodref [a/a/a/b/o.<init> ()V]
  + Methodref [a/a/a/b/p.<init> ()V]
  + Methodref [a/a/a/b/v.a (La/a/a/b/as;ZZ)La/a/a/b/v;]
  + Methodref [a/a/a/e/a.a (J)I]
  + Methodref [a/a/a/g/a/t.a ()La/a/a/g/a/s;]
  + Methodref [java/lang/Class.getName ()Ljava/lang/String;]
  + Methodref [java/lang/Math.min (II)I]
  + Methodref [java/util/AbstractMap.<init> ()V]
  + Methodref [java/util/concurrent/ConcurrentLinkedQueue.<init> ()V]
  + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
  + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
  + Methodref [java/util/logging/Logger.getLogger (Ljava/lang/String;)Ljava/util/logging/Logger;]
  + Methodref [java/util/logging/Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V]
  + InterfaceMethodref [a/a/a/a/ac.a ()Ljava/lang/Object;]
  + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
  + InterfaceMethodref [a/a/a/b/ao.a (La/a/a/b/ao;)V]
  + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
  + InterfaceMethodref [a/a/a/b/ao.b (La/a/a/b/ao;)V]
  + InterfaceMethodref [a/a/a/b/ao.c ()I]
  + InterfaceMethodref [a/a/a/b/ao.c (La/a/a/b/ao;)V]
  + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
  + InterfaceMethodref [a/a/a/b/ao.d (La/a/a/b/ao;)V]
  + InterfaceMethodref [a/a/a/b/ao.e ()J]
  + InterfaceMethodref [a/a/a/b/ao.h ()J]
  + InterfaceMethodref [a/a/a/b/bc.b ()La/a/a/b/ao;]
  + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
  + InterfaceMethodref [a/a/a/b/cc.a (La/a/a/b/cd;)V]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Queue.poll ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/b/n;IJLa/a/a/b/c;)V]
  + NameAndType [<init> (La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
  + NameAndType [WARNING Ljava/util/logging/Level;]
  + NameAndType [a ()J]
  + NameAndType [a ()La/a/a/b/bc;]
  + NameAndType [a ()La/a/a/g/a/s;]
  + NameAndType [a ()Ljava/lang/Object;]
  + NameAndType [a ()Z]
  + NameAndType [a (I)I]
  + NameAndType [a (IJLa/a/a/b/c;)La/a/a/b/ap;]
  + NameAndType [a (J)I]
  + NameAndType [a (La/a/a/b/ao;)V]
  + NameAndType [a (La/a/a/b/ao;I)Z]
  + NameAndType [a (La/a/a/b/as;ZZ)La/a/a/b/v;]
  + NameAndType [a (La/a/a/b/cd;)V]
  + NameAndType [a (Ljava/lang/Object;)I]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;ILa/a/a/b/bc;)Z]
  + NameAndType [a (Ljava/lang/Object;ILa/a/a/b/j;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [a (Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;La/a/a/b/j;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [a (Z)La/a/a/a/af;]
  + NameAndType [a La/a/a/b/an;]
  + NameAndType [a La/a/a/b/as;]
  + NameAndType [a La/a/a/b/h;]
  + NameAndType [a La/a/a/b/i;]
  + NameAndType [a Ljava/util/logging/Logger;]
  + NameAndType [b ()La/a/a/a/b;]
  + NameAndType [b ()La/a/a/b/ao;]
  + NameAndType [b ()Z]
  + NameAndType [b (I)La/a/a/b/ap;]
  + NameAndType [b (La/a/a/b/ao;)V]
  + NameAndType [b (La/a/a/b/ao;J)Z]
  + NameAndType [b (Ljava/lang/Object;I)Ljava/lang/Object;]
  + NameAndType [b (Ljava/lang/Object;ILjava/lang/Object;)Z]
  + NameAndType [b I]
  + NameAndType [b La/a/a/g/a/s;]
  + NameAndType [c ()I]
  + NameAndType [c ()La/a/a/a/b;]
  + NameAndType [c ()Z]
  + NameAndType [c (I)[La/a/a/b/ap;]
  + NameAndType [c (La/a/a/b/ao;)V]
  + NameAndType [c (La/a/a/b/ao;J)Ljava/lang/Object;]
  + NameAndType [c (Ljava/lang/Object;I)Z]
  + NameAndType [c I]
  + NameAndType [d ()I]
  + NameAndType [d ()Ljava/lang/Object;]
  + NameAndType [d ()Z]
  + NameAndType [d (La/a/a/b/ao;)V]
  + NameAndType [d (Ljava/lang/Object;I)Ljava/lang/Object;]
  + NameAndType [d I]
  + NameAndType [e ()I]
  + NameAndType [e ()J]
  + NameAndType [e ()Z]
  + NameAndType [e [La/a/a/b/ap;]
  + NameAndType [entrySet ()Ljava/util/Set;]
  + NameAndType [f ()J]
  + NameAndType [f ()Z]
  + NameAndType [f I]
  + NameAndType [f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
  + NameAndType [g ()La/a/a/b/cj;]
  + NameAndType [g ()Z]
  + NameAndType [g La/a/a/a/b;]
  + NameAndType [get ()Ljava/lang/Object;]
  + NameAndType [get (I)Ljava/lang/Object;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getLogger (Ljava/lang/String;)Ljava/util/logging/Logger;]
  + NameAndType [getName ()Ljava/lang/String;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [h ()J]
  + NameAndType [h ()Z]
  + NameAndType [h La/a/a/a/b;]
  + NameAndType [hasNext ()Z]
  + NameAndType [i ()La/a/a/b/as;]
  + NameAndType [i ()Z]
  + NameAndType [i La/a/a/b/as;]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [j ()La/a/a/b/as;]
  + NameAndType [j ()Z]
  + NameAndType [j La/a/a/b/as;]
  + NameAndType [k ()J]
  + NameAndType [k ()Z]
  + NameAndType [k J]
  + NameAndType [l ()J]
  + NameAndType [l ()V]
  + NameAndType [l ()Z]
  + NameAndType [l La/a/a/b/cj;]
  + NameAndType [length ()I]
  + NameAndType [log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V]
  + NameAndType [m ()J]
  + NameAndType [m J]
  + NameAndType [min (II)I]
  + NameAndType [n ()La/a/a/b/cc;]
  + NameAndType [n J]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [o ()La/a/a/a/ac;]
  + NameAndType [o J]
  + NameAndType [p ()La/a/a/b/ao;]
  + NameAndType [p Ljava/util/Queue;]
  + NameAndType [poll ()Ljava/lang/Object;]
  + NameAndType [put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [q ()Ljava/util/Queue;]
  + NameAndType [q La/a/a/b/cc;]
  + NameAndType [r La/a/a/a/af;]
  + NameAndType [s ()J]
  + NameAndType [s La/a/a/b/v;]
  + NameAndType [t La/a/a/b/c;]
  + NameAndType [u La/a/a/b/j;]
  + NameAndType [v La/a/a/b/bc;]
  + NameAndType [w Ljava/util/Queue;]
  + NameAndType [x Ljava/util/Set;]
  + NameAndType [y Ljava/util/Collection;]
  + NameAndType [z Ljava/util/Set;]
  + Utf8 [()I]
  + Utf8 [()J]
  + Utf8 [()La/a/a/a/ac;]
  + Utf8 [()La/a/a/a/b;]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()La/a/a/b/as;]
  + Utf8 [()La/a/a/b/bc;]
  + Utf8 [()La/a/a/b/cc;]
  + Utf8 [()La/a/a/b/cj;]
  + Utf8 [()La/a/a/g/a/s;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Queue;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)I]
  + Utf8 [(I)La/a/a/b/ap;]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(I)[La/a/a/b/ap;]
  + Utf8 [(II)I]
  + Utf8 [(IJLa/a/a/b/c;)La/a/a/b/ap;]
  + Utf8 [(J)I]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/ao;I)Z]
  + Utf8 [(La/a/a/b/ao;J)Ljava/lang/Object;]
  + Utf8 [(La/a/a/b/ao;J)Z]
  + Utf8 [(La/a/a/b/ao;La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/as;ZZ)La/a/a/b/v;]
  + Utf8 [(La/a/a/b/bc;)V]
  + Utf8 [(La/a/a/b/cd;)V]
  + Utf8 [(La/a/a/b/d;La/a/a/b/j;)V]
  + Utf8 [(La/a/a/b/n;IJLa/a/a/b/c;)V]
  + Utf8 [(La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;I)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;I)Z]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/bc;)Z]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/j;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;La/a/a/b/j;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/util/logging/Logger;]
  + Utf8 [(Ljava/util/Map;)V]
  + Utf8 [(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V]
  + Utf8 [(Z)La/a/a/a/af;]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Exception thrown by removal listener]
  + Utf8 [I]
  + Utf8 [J]
  + Utf8 [La/a/a/a/af;]
  + Utf8 [La/a/a/a/b;]
  + Utf8 [La/a/a/b/an;]
  + Utf8 [La/a/a/b/as;]
  + Utf8 [La/a/a/b/bc;]
  + Utf8 [La/a/a/b/c;]
  + Utf8 [La/a/a/b/cc;]
  + Utf8 [La/a/a/b/cj;]
  + Utf8 [La/a/a/b/h;]
  + Utf8 [La/a/a/b/i;]
  + Utf8 [La/a/a/b/j;]
  + Utf8 [La/a/a/b/v;]
  + Utf8 [La/a/a/g/a/s;]
  + Utf8 [Ljava/util/Collection;]
  + Utf8 [Ljava/util/Queue;]
  + Utf8 [Ljava/util/Set;]
  + Utf8 [Ljava/util/concurrent/atomic/AtomicReferenceArray;]
  + Utf8 [Ljava/util/logging/Level;]
  + Utf8 [Ljava/util/logging/Logger;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [Ljavax/annotation/concurrent/GuardedBy;]
  + Utf8 [RuntimeInvisibleAnnotations]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [Segment.this]
  + Utf8 [StackMapTable]
  + Utf8 [WARNING]
  + Utf8 [[La/a/a/b/ap;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/ac]
  + Utf8 [a/a/a/a/af]
  + Utf8 [a/a/a/a/b]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/b/af]
  + Utf8 [a/a/a/b/ai]
  + Utf8 [a/a/a/b/an]
  + Utf8 [a/a/a/b/ao]
  + Utf8 [a/a/a/b/ap]
  + Utf8 [a/a/a/b/as]
  + Utf8 [a/a/a/b/bc]
  + Utf8 [a/a/a/b/bd]
  + Utf8 [a/a/a/b/c]
  + Utf8 [a/a/a/b/cc]
  + Utf8 [a/a/a/b/cd]
  + Utf8 [a/a/a/b/d]
  + Utf8 [a/a/a/b/h]
  + Utf8 [a/a/a/b/i]
  + Utf8 [a/a/a/b/j]
  + Utf8 [a/a/a/b/n]
  + Utf8 [a/a/a/b/o]
  + Utf8 [a/a/a/b/p]
  + Utf8 [a/a/a/b/v]
  + Utf8 [a/a/a/e/a]
  + Utf8 [a/a/a/g/a/t]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clear]
  + Utf8 [containsKey]
  + Utf8 [containsValue]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [entrySet]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [get]
  + Utf8 [getKey]
  + Utf8 [getLogger]
  + Utf8 [getName]
  + Utf8 [getValue]
  + Utf8 [h]
  + Utf8 [hasNext]
  + Utf8 [i]
  + Utf8 [isEmpty]
  + Utf8 [iterator]
  + Utf8 [j]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Math]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/Throwable]
  + Utf8 [java/util/AbstractMap]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [java/util/Queue]
  + Utf8 [java/util/Set]
  + Utf8 [java/util/concurrent/ConcurrentLinkedQueue]
  + Utf8 [java/util/concurrent/ConcurrentMap]
  + Utf8 [java/util/concurrent/atomic/AtomicReferenceArray]
  + Utf8 [java/util/logging/Level]
  + Utf8 [java/util/logging/Logger]
  + Utf8 [k]
  + Utf8 [keySet]
  + Utf8 [l]
  + Utf8 [length]
  + Utf8 [log]
  + Utf8 [m]
  + Utf8 [min]
  + Utf8 [n]
  + Utf8 [next]
  + Utf8 [o]
  + Utf8 [p]
  + Utf8 [poll]
  + Utf8 [put]
  + Utf8 [putAll]
  + Utf8 [putIfAbsent]
  + Utf8 [q]
  + Utf8 [r]
  + Utf8 [remove]
  + Utf8 [replace]
  + Utf8 [s]
  + Utf8 [size]
  + Utf8 [t]
  + Utf8 [u]
  + Utf8 [v]
  + Utf8 [value]
  + Utf8 [values]
  + Utf8 [w]
  + Utf8 [x]
  + Utf8 [y]
  + Utf8 [z]

Fields (count = 26):
  + Field:        a Ljava/util/logging/Logger;
    Access flags: 0x18
      = static final java.util.logging.Logger a
  + Field:        b La/a/a/g/a/s;
    Access flags: 0x18
      = static final a.a.a.g.a.s b
  + Field:        c I
    Access flags: 0x10
      = final int c
  + Field:        d I
    Access flags: 0x10
      = final int d
  + Field:        e [La/a/a/b/ap;
    Access flags: 0x10
      = final a.a.a.b.ap[] e
  + Field:        f I
    Access flags: 0x10
      = final int f
  + Field:        g La/a/a/a/b;
    Access flags: 0x10
      = final a.a.a.a.b g
  + Field:        h La/a/a/a/b;
    Access flags: 0x10
      = final a.a.a.a.b h
  + Field:        i La/a/a/b/as;
    Access flags: 0x10
      = final a.a.a.b.as i
  + Field:        j La/a/a/b/as;
    Access flags: 0x10
      = final a.a.a.b.as j
  + Field:        k J
    Access flags: 0x10
      = final long k
  + Field:        l La/a/a/b/cj;
    Access flags: 0x10
      = final a.a.a.b.cj l
  + Field:        m J
    Access flags: 0x10
      = final long m
  + Field:        n J
    Access flags: 0x10
      = final long n
  + Field:        o J
    Access flags: 0x10
      = final long o
  + Field:        p Ljava/util/Queue;
    Access flags: 0x10
      = final java.util.Queue p
  + Field:        q La/a/a/b/cc;
    Access flags: 0x10
      = final a.a.a.b.cc q
  + Field:        r La/a/a/a/af;
    Access flags: 0x10
      = final a.a.a.a.af r
  + Field:        s La/a/a/b/v;
    Access flags: 0x10
      = final a.a.a.b.v s
  + Field:        t La/a/a/b/c;
    Access flags: 0x10
      = final a.a.a.b.c t
  + Field:        u La/a/a/b/j;
    Access flags: 0x10
      = final a.a.a.b.j u
    Class member attributes (count = 1):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Field:        v La/a/a/b/bc;
    Access flags: 0x18
      = static final a.a.a.b.bc v
  + Field:        w Ljava/util/Queue;
    Access flags: 0x18
      = static final java.util.Queue w
  + Field:        x Ljava/util/Set;
    Access flags: 0x0
      = java.util.Set x
  + Field:        y Ljava/util/Collection;
    Access flags: 0x0
      = java.util.Collection y
  + Field:        z Ljava/util/Set;
    Access flags: 0x0
      = java.util.Set z

Methods (count = 52):
  - Method:       <init>(La/a/a/b/d;La/a/a/b/j;)V
    Access flags: 0x0
      = n(a.a.a.b.d,a.a.a.b.j)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 463, locals = 13, stack = 7):
      [0] aload_0 v0
      [1] invokespecial #146
        + Methodref [java/util/AbstractMap.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokevirtual #106
        + Methodref [a/a/a/b/d.e ()I]
      [9] ldc #1
        + Integer [65536]
      [11] invokestatic #145
        + Methodref [java/lang/Math.min (II)I]
      [14] putfield #60
        + Fieldref [a/a/a/b/n.f I]
      [17] aload_0 v0
      [18] aload_1 v1
      [19] invokevirtual #109
        + Methodref [a/a/a/b/d.i ()La/a/a/b/as;]
      [22] putfield #63
        + Fieldref [a/a/a/b/n.i La/a/a/b/as;]
      [25] aload_0 v0
      [26] aload_1 v1
      [27] invokevirtual #110
        + Methodref [a/a/a/b/d.j ()La/a/a/b/as;]
      [30] putfield #64
        + Fieldref [a/a/a/b/n.j La/a/a/b/as;]
      [33] aload_0 v0
      [34] aload_1 v1
      [35] invokevirtual #103
        + Methodref [a/a/a/b/d.b ()La/a/a/a/b;]
      [38] putfield #61
        + Fieldref [a/a/a/b/n.g La/a/a/a/b;]
      [41] aload_0 v0
      [42] aload_1 v1
      [43] invokevirtual #104
        + Methodref [a/a/a/b/d.c ()La/a/a/a/b;]
      [46] putfield #62
        + Fieldref [a/a/a/b/n.h La/a/a/a/b;]
      [49] aload_0 v0
      [50] aload_1 v1
      [51] invokevirtual #107
        + Methodref [a/a/a/b/d.f ()J]
      [54] putfield #65
        + Fieldref [a/a/a/b/n.k J]
      [57] aload_0 v0
      [58] aload_1 v1
      [59] invokevirtual #108
        + Methodref [a/a/a/b/d.g ()La/a/a/b/cj;]
      [62] putfield #66
        + Fieldref [a/a/a/b/n.l La/a/a/b/cj;]
      [65] aload_0 v0
      [66] aload_1 v1
      [67] invokevirtual #112
        + Methodref [a/a/a/b/d.l ()J]
      [70] putfield #67
        + Fieldref [a/a/a/b/n.m J]
      [73] aload_0 v0
      [74] aload_1 v1
      [75] invokevirtual #111
        + Methodref [a/a/a/b/d.k ()J]
      [78] putfield #68
        + Fieldref [a/a/a/b/n.n J]
      [81] aload_0 v0
      [82] aload_1 v1
      [83] invokevirtual #113
        + Methodref [a/a/a/b/d.m ()J]
      [86] putfield #69
        + Fieldref [a/a/a/b/n.o J]
      [89] aload_0 v0
      [90] aload_1 v1
      [91] invokevirtual #114
        + Methodref [a/a/a/b/d.n ()La/a/a/b/cc;]
      [94] putfield #71
        + Fieldref [a/a/a/b/n.q La/a/a/b/cc;]
      [97] aload_0 v0
      [98] aload_0 v0
      [99] getfield #71
        + Fieldref [a/a/a/b/n.q La/a/a/b/cc;]
      [102] getstatic #53
        + Fieldref [a/a/a/b/h.a La/a/a/b/h;]
      [105] ifacmpne +9 (target=114)
      [108] invokestatic #137
        + Methodref [a/a/a/b/n.q ()Ljava/util/Queue;]
      [111] goto +10 (target=121)
      [114] new #41
        + Class [java/util/concurrent/ConcurrentLinkedQueue]
      [117] dup
      [118] invokespecial #147
        + Methodref [java/util/concurrent/ConcurrentLinkedQueue.<init> ()V]
      [121] putfield #70
        + Fieldref [a/a/a/b/n.p Ljava/util/Queue;]
      [124] aload_0 v0
      [125] aload_1 v1
      [126] aload_0 v0
      [127] invokevirtual #132
        + Methodref [a/a/a/b/n.j ()Z]
      [130] invokevirtual #102
        + Methodref [a/a/a/b/d.a (Z)La/a/a/a/af;]
      [133] putfield #72
        + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
      [136] aload_0 v0
      [137] aload_0 v0
      [138] getfield #63
        + Fieldref [a/a/a/b/n.i La/a/a/b/as;]
      [141] aload_0 v0
      [142] invokevirtual #134
        + Methodref [a/a/a/b/n.l ()Z]
      [145] aload_0 v0
      [146] invokevirtual #133
        + Methodref [a/a/a/b/n.k ()Z]
      [149] invokestatic #141
        + Methodref [a/a/a/b/v.a (La/a/a/b/as;ZZ)La/a/a/b/v;]
      [152] putfield #73
        + Fieldref [a/a/a/b/n.s La/a/a/b/v;]
      [155] aload_0 v0
      [156] aload_1 v1
      [157] invokevirtual #115
        + Methodref [a/a/a/b/d.o ()La/a/a/a/ac;]
      [160] invokeinterface #152
        + InterfaceMethodref [a/a/a/a/ac.a ()Ljava/lang/Object;]
      [165] checkcast #17
        + Class [a/a/a/b/c]
      [168] putfield #74
        + Fieldref [a/a/a/b/n.t La/a/a/b/c;]
      [171] aload_0 v0
      [172] aload_2 v2
      [173] putfield #75
        + Fieldref [a/a/a/b/n.u La/a/a/b/j;]
      [176] aload_1 v1
      [177] invokevirtual #105
        + Methodref [a/a/a/b/d.d ()I]
      [180] ldc #2
        + Integer [1073741824]
      [182] invokestatic #145
        + Methodref [java/lang/Math.min (II)I]
      [185] istore_3 v3
      [186] aload_0 v0
      [187] invokevirtual #116
        + Methodref [a/a/a/b/n.a ()Z]
      [190] ifeq +20 (target=210)
      [193] aload_0 v0
      [194] invokevirtual #121
        + Methodref [a/a/a/b/n.b ()Z]
      [197] ifne +13 (target=210)
      [200] iload_3 v3
      [201] aload_0 v0
      [202] getfield #65
        + Fieldref [a/a/a/b/n.k J]
      [205] l2i
      [206] invokestatic #145
        + Methodref [java/lang/Math.min (II)I]
      [209] istore_3 v3
      [210] iconst_0
      [211] istore v4
      [213] iconst_1
      [214] istore v5
      [216] iload v5
      [218] aload_0 v0
      [219] getfield #60
        + Fieldref [a/a/a/b/n.f I]
      [222] ificmpge +36 (target=258)
      [225] aload_0 v0
      [226] invokevirtual #116
        + Methodref [a/a/a/b/n.a ()Z]
      [229] ifeq +17 (target=246)
      [232] iload v5
      [234] bipush 20
      [236] imul
      [237] i2l
      [238] aload_0 v0
      [239] getfield #65
        + Fieldref [a/a/a/b/n.k J]
      [242] lcmp
      [243] ifgt +15 (target=258)
      [246] iinc v4, 1
      [249] iload v5
      [251] iconst_1
      [252] ishl
      [253] istore v5
      [255] goto -39 (target=216)
      [258] aload_0 v0
      [259] bipush 32
      [261] iload v4
      [263] isub
      [264] putfield #58
        + Fieldref [a/a/a/b/n.d I]
      [267] aload_0 v0
      [268] iload v5
      [270] iconst_1
      [271] isub
      [272] putfield #57
        + Fieldref [a/a/a/b/n.c I]
      [275] aload_0 v0
      [276] aload_0 v0
      [277] iload v5
      [279] invokevirtual #125
        + Methodref [a/a/a/b/n.c (I)[La/a/a/b/ap;]
      [282] putfield #59
        + Fieldref [a/a/a/b/n.e [La/a/a/b/ap;]
      [285] iload_3 v3
      [286] iload v5
      [288] idiv
      [289] istore v6
      [291] iload v6
      [293] iload v5
      [295] imul
      [296] iload_3 v3
      [297] ificmpge +6 (target=303)
      [300] iinc v6, 1
      [303] iconst_1
      [304] istore v7
      [306] iload v7
      [308] iload v6
      [310] ificmpge +12 (target=322)
      [313] iload v7
      [315] iconst_1
      [316] ishl
      [317] istore v7
      [319] goto -13 (target=306)
      [322] aload_0 v0
      [323] invokevirtual #116
        + Methodref [a/a/a/b/n.a ()Z]
      [326] ifeq +89 (target=415)
      [329] aload_0 v0
      [330] getfield #65
        + Fieldref [a/a/a/b/n.k J]
      [333] iload v5
      [335] i2l
      [336] ldiv
      [337] lconst_1
      [338] ladd
      [339] lstore v8
      [341] aload_0 v0
      [342] getfield #65
        + Fieldref [a/a/a/b/n.k J]
      [345] iload v5
      [347] i2l
      [348] lrem
      [349] lstore v10
      [351] iconst_0
      [352] istore v12
      [354] iload v12
      [356] aload_0 v0
      [357] getfield #59
        + Fieldref [a/a/a/b/n.e [La/a/a/b/ap;]
      [360] arraylength
      [361] ificmpge +51 (target=412)
      [364] iload v12
      [366] i2l
      [367] lload v10
      [369] lcmp
      [370] ifne +9 (target=379)
      [373] lload v8
      [375] lconst_1
      [376] lsub
      [377] lstore v8
      [379] aload_0 v0
      [380] getfield #59
        + Fieldref [a/a/a/b/n.e [La/a/a/b/ap;]
      [383] iload v12
      [385] aload_0 v0
      [386] iload v7
      [388] lload v8
      [390] aload_1 v1
      [391] invokevirtual #115
        + Methodref [a/a/a/b/d.o ()La/a/a/a/ac;]
      [394] invokeinterface #152
        + InterfaceMethodref [a/a/a/a/ac.a ()Ljava/lang/Object;]
      [399] checkcast #17
        + Class [a/a/a/b/c]
      [402] invokevirtual #118
        + Methodref [a/a/a/b/n.a (IJLa/a/a/b/c;)La/a/a/b/ap;]
      [405] aastore
      [406] iinc v12, 1
      [409] goto -55 (target=354)
      [412] goto +50 (target=462)
      [415] iconst_0
      [416] istore v8
      [418] iload v8
      [420] aload_0 v0
      [421] getfield #59
        + Fieldref [a/a/a/b/n.e [La/a/a/b/ap;]
      [424] arraylength
      [425] ificmpge +37 (target=462)
      [428] aload_0 v0
      [429] getfield #59
        + Fieldref [a/a/a/b/n.e [La/a/a/b/ap;]
      [432] iload v8
      [434] aload_0 v0
      [435] iload v7
      [437] ldc2_w #46
        + Long [-1]
      [440] aload_1 v1
      [441] invokevirtual #115
        + Methodref [a/a/a/b/d.o ()La/a/a/a/ac;]
      [444] invokeinterface #152
        + InterfaceMethodref [a/a/a/a/ac.a ()Ljava/lang/Object;]
      [449] checkcast #17
        + Class [a/a/a/b/c]
      [452] invokevirtual #118
        + Methodref [a/a/a/b/n.a (IJLa/a/a/b/c;)La/a/a/b/ap;]
      [455] aastore
      [456] iinc v8, 1
      [459] goto -41 (target=418)
      [462] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 15):
        - [114] Var: [a:a/a/a/b/n][a:a/a/a/b/d][a:a/a/a/b/j], Stack: [a:a/a/a/b/n]
        - [121] Var: [a:a/a/a/b/n][a:a/a/a/b/d][a:a/a/a/b/j], Stack: [a:a/a/a/b/n][a:java/util/Queue]
        - [210] Var: ...[i], Stack: (empty)
        - [216] Var: ...[i][i], Stack: (empty)
        - [246] Var: ..., Stack: (empty)
        - [258] Var: ..., Stack: (empty)
        - [303] Var: ...[i], Stack: (empty)
        - [306] Var: ...[i], Stack: (empty)
        - [322] Var: ..., Stack: (empty)
        - [354] Var: ...[l][l][i], Stack: (empty)
        - [379] Var: ..., Stack: (empty)
        - [412] Var: -3, Stack: (empty)
        - [415] Var: ..., Stack: (empty)
        - [418] Var: ...[i], Stack: (empty)
        - [462] Var: -1, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a()Z
    Access flags: 0x0
      = boolean a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] getfield #65
        + Fieldref [a/a/a/b/n.k J]
      [4] lconst_0
      [5] lcmp
      [6] iflt +7 (target=13)
      [9] iconst_1
      [10] goto +4 (target=14)
      [13] iconst_0
      [14] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ..., Stack: (empty)
        - [14] Var: ..., Stack: [i]
  + Method:       b()Z
    Access flags: 0x0
      = boolean b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #66
        + Fieldref [a/a/a/b/n.l La/a/a/b/cj;]
      [4] getstatic #54
        + Fieldref [a/a/a/b/i.a La/a/a/b/i;]
      [7] ifacmpeq +7 (target=14)
      [10] iconst_1
      [11] goto +4 (target=15)
      [14] iconst_0
      [15] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [14] Var: ..., Stack: (empty)
        - [15] Var: ..., Stack: [i]
  + Method:       c()Z
    Access flags: 0x0
      = boolean c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] getfield #68
        + Fieldref [a/a/a/b/n.n J]
      [4] lconst_0
      [5] lcmp
      [6] ifle +7 (target=13)
      [9] iconst_1
      [10] goto +4 (target=14)
      [13] iconst_0
      [14] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ..., Stack: (empty)
        - [14] Var: ..., Stack: [i]
  + Method:       d()Z
    Access flags: 0x0
      = boolean d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] getfield #67
        + Fieldref [a/a/a/b/n.m J]
      [4] lconst_0
      [5] lcmp
      [6] ifle +7 (target=13)
      [9] iconst_1
      [10] goto +4 (target=14)
      [13] iconst_0
      [14] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ..., Stack: (empty)
        - [14] Var: ..., Stack: [i]
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] getfield #69
        + Fieldref [a/a/a/b/n.o J]
      [4] lconst_0
      [5] lcmp
      [6] ifle +7 (target=13)
      [9] iconst_1
      [10] goto +4 (target=14)
      [13] iconst_0
      [14] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ..., Stack: (empty)
        - [14] Var: ..., Stack: [i]
  + Method:       f()Z
    Access flags: 0x0
      = boolean f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #126
        + Methodref [a/a/a/b/n.d ()Z]
      [4] ifne +10 (target=14)
      [7] aload_0 v0
      [8] invokevirtual #116
        + Methodref [a/a/a/b/n.a ()Z]
      [11] ifeq +7 (target=18)
      [14] iconst_1
      [15] goto +4 (target=19)
      [18] iconst_0
      [19] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [14] Var: ..., Stack: (empty)
        - [18] Var: ..., Stack: (empty)
        - [19] Var: ..., Stack: [i]
  + Method:       g()Z
    Access flags: 0x0
      = boolean g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #124
        + Methodref [a/a/a/b/n.c ()Z]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       h()Z
    Access flags: 0x0
      = boolean h()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #124
        + Methodref [a/a/a/b/n.c ()Z]
      [4] ifne +10 (target=14)
      [7] aload_0 v0
      [8] invokevirtual #127
        + Methodref [a/a/a/b/n.e ()Z]
      [11] ifeq +7 (target=18)
      [14] iconst_1
      [15] goto +4 (target=19)
      [18] iconst_0
      [19] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [14] Var: ..., Stack: (empty)
        - [18] Var: ..., Stack: (empty)
        - [19] Var: ..., Stack: [i]
  + Method:       i()Z
    Access flags: 0x0
      = boolean i()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #126
        + Methodref [a/a/a/b/n.d ()Z]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       j()Z
    Access flags: 0x0
      = boolean j()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #130
        + Methodref [a/a/a/b/n.h ()Z]
      [4] ifne +10 (target=14)
      [7] aload_0 v0
      [8] invokevirtual #131
        + Methodref [a/a/a/b/n.i ()Z]
      [11] ifeq +7 (target=18)
      [14] iconst_1
      [15] goto +4 (target=19)
      [18] iconst_0
      [19] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [14] Var: ..., Stack: (empty)
        - [18] Var: ..., Stack: (empty)
        - [19] Var: ..., Stack: [i]
  + Method:       k()Z
    Access flags: 0x0
      = boolean k()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #129
        + Methodref [a/a/a/b/n.g ()Z]
      [4] ifne +10 (target=14)
      [7] aload_0 v0
      [8] invokevirtual #130
        + Methodref [a/a/a/b/n.h ()Z]
      [11] ifeq +7 (target=18)
      [14] iconst_1
      [15] goto +4 (target=19)
      [18] iconst_0
      [19] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [14] Var: ..., Stack: (empty)
        - [18] Var: ..., Stack: (empty)
        - [19] Var: ..., Stack: [i]
  + Method:       l()Z
    Access flags: 0x0
      = boolean l()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #128
        + Methodref [a/a/a/b/n.f ()Z]
      [4] ifne +10 (target=14)
      [7] aload_0 v0
      [8] invokevirtual #131
        + Methodref [a/a/a/b/n.i ()Z]
      [11] ifeq +7 (target=18)
      [14] iconst_1
      [15] goto +4 (target=19)
      [18] iconst_0
      [19] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [14] Var: ..., Stack: (empty)
        - [18] Var: ..., Stack: (empty)
        - [19] Var: ..., Stack: [i]
  + Method:       m()Z
    Access flags: 0x0
      = boolean m()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #63
        + Fieldref [a/a/a/b/n.i La/a/a/b/as;]
      [4] getstatic #52
        + Fieldref [a/a/a/b/as.a La/a/a/b/as;]
      [7] ifacmpeq +7 (target=14)
      [10] iconst_1
      [11] goto +4 (target=15)
      [14] iconst_0
      [15] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [14] Var: ..., Stack: (empty)
        - [15] Var: ..., Stack: [i]
  + Method:       n()Z
    Access flags: 0x0
      = boolean n()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #64
        + Fieldref [a/a/a/b/n.j La/a/a/b/as;]
      [4] getstatic #52
        + Fieldref [a/a/a/b/as.a La/a/a/b/as;]
      [7] ifacmpeq +7 (target=14)
      [10] iconst_1
      [11] goto +4 (target=15)
      [14] iconst_0
      [15] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [14] Var: ..., Stack: (empty)
        - [15] Var: ..., Stack: [i]
  + Method:       o()La/a/a/b/bc;
    Access flags: 0x8
      = static a.a.a.b.bc o()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] getstatic #76
        + Fieldref [a/a/a/b/n.v La/a/a/b/bc;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       p()La/a/a/b/ao;
    Access flags: 0x8
      = static a.a.a.b.ao p()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] getstatic #48
        + Fieldref [a/a/a/b/an.a La/a/a/b/an;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       q()Ljava/util/Queue;
    Access flags: 0x8
      = static java.util.Queue q()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] getstatic #77
        + Fieldref [a/a/a/b/n.w Ljava/util/Queue;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(I)I
    Access flags: 0x8
      = static int a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 49, locals = 1, stack = 4):
      [0] iload_0 v0
      [1] iload_0 v0
      [2] bipush 15
      [4] ishl
      [5] sipush -12931
      [8] ixor
      [9] iadd
      [10] istore_0 v0
      [11] iload_0 v0
      [12] iload_0 v0
      [13] bipush 10
      [15] iushr
      [16] ixor
      [17] istore_0 v0
      [18] iload_0 v0
      [19] iload_0 v0
      [20] iconst_3
      [21] ishl
      [22] iadd
      [23] istore_0 v0
      [24] iload_0 v0
      [25] iload_0 v0
      [26] bipush 6
      [28] iushr
      [29] ixor
      [30] istore_0 v0
      [31] iload_0 v0
      [32] iload_0 v0
      [33] iconst_2
      [34] ishl
      [35] iload_0 v0
      [36] bipush 14
      [38] ishl
      [39] iadd
      [40] iadd
      [41] istore_0 v0
      [42] iload_0 v0
      [43] iload_0 v0
      [44] bipush 16
      [46] iushr
      [47] ixor
      [48] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)I
    Access flags: 0x0
      = int a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 14, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] getfield #61
        + Fieldref [a/a/a/b/n.g La/a/a/a/b;]
      [4] aload_1 v1
      [5] invokevirtual #83
        + Methodref [a/a/a/a/b.a (Ljava/lang/Object;)I]
      [8] istore_2 v2
      [9] iload_2 v2
      [10] invokestatic #117
        + Methodref [a/a/a/b/n.a (I)I]
      [13] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(La/a/a/b/bc;)V
    Access flags: 0x0
      = void a(a.a.a.b.bc)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 32, locals = 4, stack = 4):
      [0] aload_1 v1
      [1] invokeinterface #163
        + InterfaceMethodref [a/a/a/b/bc.b ()La/a/a/b/ao;]
      [6] astore_2 v2
      [7] aload_2 v2
      [8] invokeinterface #157
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [13] istore_3 v3
      [14] aload_0 v0
      [15] iload_3 v3
      [16] invokevirtual #122
        + Methodref [a/a/a/b/n.b (I)La/a/a/b/ap;]
      [19] aload_2 v2
      [20] invokeinterface #159
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [25] iload_3 v3
      [26] aload_1 v1
      [27] invokevirtual #90
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/bc;)Z]
      [30] pop
      [31] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ao;)V
    Access flags: 0x0
      = void a(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 3, stack = 3):
      [0] aload_1 v1
      [1] invokeinterface #157
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [6] istore_2 v2
      [7] aload_0 v0
      [8] iload_2 v2
      [9] invokevirtual #122
        + Methodref [a/a/a/b/n.b (I)La/a/a/b/ap;]
      [12] aload_1 v1
      [13] iload_2 v2
      [14] invokevirtual #89
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;I)Z]
      [17] pop
      [18] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(I)La/a/a/b/ap;
    Access flags: 0x0
      = a.a.a.b.ap b(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #59
        + Fieldref [a/a/a/b/n.e [La/a/a/b/ap;]
      [4] iload_1 v1
      [5] aload_0 v0
      [6] getfield #58
        + Fieldref [a/a/a/b/n.d I]
      [9] iushr
      [10] aload_0 v0
      [11] getfield #57
        + Fieldref [a/a/a/b/n.c I]
      [14] iand
      [15] aaload
      [16] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(IJLa/a/a/b/c;)La/a/a/b/ap;
    Access flags: 0x0
      = a.a.a.b.ap a(int,long,a.a.a.b.c)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 5, stack = 7):
      [0] new #13
        + Class [a/a/a/b/ap]
      [3] dup
      [4] aload_0 v0
      [5] iload_1 v1
      [6] lload_2 v2
      [7] aload v4
      [9] invokespecial #88
        + Methodref [a/a/a/b/ap.<init> (La/a/a/b/n;IJLa/a/a/b/c;)V]
      [12] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ao;J)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object a(a.a.a.b.ao,long)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 45, locals = 5, stack = 4):
      [0] aload_1 v1
      [1] invokeinterface #159
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [6] ifnonnull +5 (target=11)
      [9] aconst_null
      [10] areturn
      [11] aload_1 v1
      [12] invokeinterface #153
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [17] invokeinterface #164
        + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
      [22] astore v4
      [24] aload v4
      [26] ifnonnull +5 (target=31)
      [29] aconst_null
      [30] areturn
      [31] aload_0 v0
      [32] aload_1 v1
      [33] lload_2 v2
      [34] invokevirtual #123
        + Methodref [a/a/a/b/n.b (La/a/a/b/ao;J)Z]
      [37] ifeq +5 (target=42)
      [40] aconst_null
      [41] areturn
      [42] aload v4
      [44] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [11] Var: ..., Stack: (empty)
        - [31] Var: ...[a:java/lang/Object], Stack: (empty)
        - [42] Var: ..., Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b(La/a/a/b/ao;J)Z
    Access flags: 0x0
      = boolean b(a.a.a.b.ao,long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 57, locals = 4, stack = 4):
      [0] aload_1 v1
      [1] invokestatic #85
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_0 v0
      [6] invokevirtual #126
        + Methodref [a/a/a/b/n.d ()Z]
      [9] ifeq +21 (target=30)
      [12] lload_2 v2
      [13] aload_1 v1
      [14] invokeinterface #161
        + InterfaceMethodref [a/a/a/b/ao.e ()J]
      [19] lsub
      [20] aload_0 v0
      [21] getfield #67
        + Fieldref [a/a/a/b/n.m J]
      [24] lcmp
      [25] iflt +5 (target=30)
      [28] iconst_1
      [29] ireturn
      [30] aload_0 v0
      [31] invokevirtual #124
        + Methodref [a/a/a/b/n.c ()Z]
      [34] ifeq +21 (target=55)
      [37] lload_2 v2
      [38] aload_1 v1
      [39] invokeinterface #162
        + InterfaceMethodref [a/a/a/b/ao.h ()J]
      [44] lsub
      [45] aload_0 v0
      [46] getfield #68
        + Fieldref [a/a/a/b/n.n J]
      [49] lcmp
      [50] iflt +5 (target=55)
      [53] iconst_1
      [54] ireturn
      [55] iconst_0
      [56] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [30] Var: ..., Stack: (empty)
        - [55] Var: ..., Stack: (empty)
  + Method:       a(La/a/a/b/ao;La/a/a/b/ao;)V
    Access flags: 0x8
      = static void a(a.a.a.b.ao,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 15, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokeinterface #154
        + InterfaceMethodref [a/a/a/b/ao.a (La/a/a/b/ao;)V]
      [7] aload_1 v1
      [8] aload_0 v0
      [9] invokeinterface #156
        + InterfaceMethodref [a/a/a/b/ao.b (La/a/a/b/ao;)V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       b(La/a/a/b/ao;)V
    Access flags: 0x8
      = static void b(a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 19, locals = 2, stack = 2):
      [0] invokestatic #135
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [3] astore_1 v1
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokeinterface #154
        + InterfaceMethodref [a/a/a/b/ao.a (La/a/a/b/ao;)V]
      [11] aload_0 v0
      [12] aload_1 v1
      [13] invokeinterface #156
        + InterfaceMethodref [a/a/a/b/ao.b (La/a/a/b/ao;)V]
      [18] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       b(La/a/a/b/ao;La/a/a/b/ao;)V
    Access flags: 0x8
      = static void b(a.a.a.b.ao,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 15, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokeinterface #158
        + InterfaceMethodref [a/a/a/b/ao.c (La/a/a/b/ao;)V]
      [7] aload_1 v1
      [8] aload_0 v0
      [9] invokeinterface #160
        + InterfaceMethodref [a/a/a/b/ao.d (La/a/a/b/ao;)V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       c(La/a/a/b/ao;)V
    Access flags: 0x8
      = static void c(a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 19, locals = 2, stack = 2):
      [0] invokestatic #135
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [3] astore_1 v1
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokeinterface #158
        + InterfaceMethodref [a/a/a/b/ao.c (La/a/a/b/ao;)V]
      [11] aload_0 v0
      [12] aload_1 v1
      [13] invokeinterface #160
        + InterfaceMethodref [a/a/a/b/ao.d (La/a/a/b/ao;)V]
      [18] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       r()V
    Access flags: 0x0
      = void r()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 47, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] getfield #70
        + Fieldref [a/a/a/b/n.p Ljava/util/Queue;]
      [4] invokeinterface #171
        + InterfaceMethodref [java/util/Queue.poll ()Ljava/lang/Object;]
      [9] checkcast #19
        + Class [a/a/a/b/cd]
      [12] dup
      [13] astore_1 v1
      [14] ifnull +32 (target=46)
      [17] aload_0 v0
      [18] getfield #71
        + Fieldref [a/a/a/b/n.q La/a/a/b/cc;]
      [21] aload_1 v1
      [22] invokeinterface #165
        + InterfaceMethodref [a/a/a/b/cc.a (La/a/a/b/cd;)V]
      [27] goto -27 (target=0)
      [30] astore_2 v2
      [31] getstatic #55
        + Fieldref [a/a/a/b/n.a Ljava/util/logging/Logger;]
      [34] getstatic #81
        + Fieldref [java/util/logging/Level.WARNING Ljava/util/logging/Level;]
      [37] ldc #3
        + String [Exception thrown by removal listener]
      [39] aload_2 v2
      [40] invokevirtual #151
        + Methodref [java/util/logging/Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V]
      [43] goto -43 (target=0)
      [46] return
      Code attribute exceptions (count = 1):
      - ExceptionInfo (17 -> 27: 30):
      + Class [java/lang/Throwable]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [0] Var: ..., Stack: (empty)
        - [30] Var: [a:a/a/a/b/n][a:a/a/a/b/cd], Stack: [a:java/lang/Throwable]
        - [46] Var: ..., Stack: (empty)
  + Method:       c(I)[La/a/a/b/ap;
    Access flags: 0x10
      = final a.a.a.b.ap[] c(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] iload_1 v1
      [1] anewarray #13
        + Class [a/a/a/b/ap]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 101, locals = 5, stack = 4):
      [0] lconst_0
      [1] lstore_1 v1
      [2] aload_0 v0
      [3] getfield #59
        + Fieldref [a/a/a/b/n.e [La/a/a/b/ap;]
      [6] astore_3 v3
      [7] iconst_0
      [8] istore v4
      [10] iload v4
      [12] aload_3 v3
      [13] arraylength
      [14] ificmpge +32 (target=46)
      [17] aload_3 v3
      [18] iload v4
      [20] aaload
      [21] getfield #49
        + Fieldref [a/a/a/b/ap.b I]
      [24] ifeq +5 (target=29)
      [27] iconst_0
      [28] ireturn
      [29] lload_1 v1
      [30] aload_3 v3
      [31] iload v4
      [33] aaload
      [34] getfield #50
        + Fieldref [a/a/a/b/ap.d I]
      [37] i2l
      [38] ladd
      [39] lstore_1 v1
      [40] iinc v4, 1
      [43] goto -33 (target=10)
      [46] lload_1 v1
      [47] lconst_0
      [48] lcmp
      [49] ifeq +50 (target=99)
      [52] iconst_0
      [53] istore v4
      [55] iload v4
      [57] aload_3 v3
      [58] arraylength
      [59] ificmpge +32 (target=91)
      [62] aload_3 v3
      [63] iload v4
      [65] aaload
      [66] getfield #49
        + Fieldref [a/a/a/b/ap.b I]
      [69] ifeq +5 (target=74)
      [72] iconst_0
      [73] ireturn
      [74] lload_1 v1
      [75] aload_3 v3
      [76] iload v4
      [78] aaload
      [79] getfield #50
        + Fieldref [a/a/a/b/ap.d I]
      [82] i2l
      [83] lsub
      [84] lstore_1 v1
      [85] iinc v4, 1
      [88] goto -33 (target=55)
      [91] lload_1 v1
      [92] lconst_0
      [93] lcmp
      [94] ifeq +5 (target=99)
      [97] iconst_0
      [98] ireturn
      [99] iconst_1
      [100] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 7):
        - [10] Var: ...[l][a:[La/a/a/b/ap;][i], Stack: (empty)
        - [29] Var: ..., Stack: (empty)
        - [46] Var: -1, Stack: (empty)
        - [55] Var: ...[i], Stack: (empty)
        - [74] Var: ..., Stack: (empty)
        - [91] Var: -1, Stack: (empty)
        - [99] Var: ..., Stack: (empty)
  + Method:       s()J
    Access flags: 0x0
      = long s()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 36, locals = 5, stack = 4):
      [0] aload_0 v0
      [1] getfield #59
        + Fieldref [a/a/a/b/n.e [La/a/a/b/ap;]
      [4] astore_1 v1
      [5] lconst_0
      [6] lstore_2 v2
      [7] iconst_0
      [8] istore v4
      [10] iload v4
      [12] aload_1 v1
      [13] arraylength
      [14] ificmpge +20 (target=34)
      [17] lload_2 v2
      [18] aload_1 v1
      [19] iload v4
      [21] aaload
      [22] getfield #49
        + Fieldref [a/a/a/b/ap.b I]
      [25] i2l
      [26] ladd
      [27] lstore_2 v2
      [28] iinc v4, 1
      [31] goto -21 (target=10)
      [34] lload_2 v2
      [35] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [10] Var: ...[a:[La/a/a/b/ap;][l][i], Stack: (empty)
        - [34] Var: -1, Stack: (empty)
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #138
        + Methodref [a/a/a/b/n.s ()J]
      [4] invokestatic #142
        + Methodref [a/a/a/e/a.a (J)I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(java.lang.Object)
    Class member attributes (count = 3):
    + Code attribute instructions (code length = 23, locals = 3, stack = 3):
      [0] aload_1 v1
      [1] ifnonnull +5 (target=6)
      [4] aconst_null
      [5] areturn
      [6] aload_0 v0
      [7] aload_1 v1
      [8] invokevirtual #119
        + Methodref [a/a/a/b/n.a (Ljava/lang/Object;)I]
      [11] istore_2 v2
      [12] aload_0 v0
      [13] iload_2 v2
      [14] invokevirtual #122
        + Methodref [a/a/a/b/n.b (I)La/a/a/b/ap;]
      [17] aload_1 v1
      [18] iload_2 v2
      [19] invokevirtual #95
        + Methodref [a/a/a/b/ap.b (Ljava/lang/Object;I)Ljava/lang/Object;]
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [6] Var: ..., Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Object;La/a/a/b/j;)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object a(java.lang.Object,a.a.a.b.j)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 4, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #85
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [5] invokevirtual #119
        + Methodref [a/a/a/b/n.a (Ljava/lang/Object;)I]
      [8] istore_3 v3
      [9] aload_0 v0
      [10] iload_3 v3
      [11] invokevirtual #122
        + Methodref [a/a/a/b/n.b (I)La/a/a/b/ap;]
      [14] aload_1 v1
      [15] iload_3 v3
      [16] aload_2 v2
      [17] invokevirtual #91
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/j;)Ljava/lang/Object;]
      [20] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object b(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_0 v0
      [3] getfield #75
        + Fieldref [a/a/a/b/n.u La/a/a/b/j;]
      [6] invokevirtual #120
        + Methodref [a/a/a/b/n.a (Ljava/lang/Object;La/a/a/b/j;)Ljava/lang/Object;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       containsKey(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean containsKey(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 23, locals = 3, stack = 3):
      [0] aload_1 v1
      [1] ifnonnull +5 (target=6)
      [4] iconst_0
      [5] ireturn
      [6] aload_0 v0
      [7] aload_1 v1
      [8] invokevirtual #119
        + Methodref [a/a/a/b/n.a (Ljava/lang/Object;)I]
      [11] istore_2 v2
      [12] aload_0 v0
      [13] iload_2 v2
      [14] invokevirtual #122
        + Methodref [a/a/a/b/n.b (I)La/a/a/b/ap;]
      [17] aload_1 v1
      [18] iload_2 v2
      [19] invokevirtual #98
        + Methodref [a/a/a/b/ap.c (Ljava/lang/Object;I)Z]
      [22] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [6] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       containsValue(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean containsValue(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 195, locals = 19, stack = 4):
      [0] aload_1 v1
      [1] ifnonnull +5 (target=6)
      [4] iconst_0
      [5] ireturn
      [6] aload_0 v0
      [7] getfield #72
        + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
      [10] invokevirtual #82
        + Methodref [a/a/a/a/af.a ()J]
      [13] lstore_2 v2
      [14] aload_0 v0
      [15] getfield #59
        + Fieldref [a/a/a/b/n.e [La/a/a/b/ap;]
      [18] astore v4
      [20] ldc2_w #46
        + Long [-1]
      [23] lstore v5
      [25] iconst_0
      [26] istore v7
      [28] iload v7
      [30] iconst_3
      [31] ificmpge +162 (target=193)
      [34] lconst_0
      [35] lstore v8
      [37] aload v4
      [39] astore v10
      [41] aload v10
      [43] arraylength
      [44] istore v11
      [46] iconst_0
      [47] istore v12
      [49] iload v12
      [51] iload v11
      [53] ificmpge +119 (target=172)
      [56] aload v10
      [58] iload v12
      [60] aaload
      [61] astore v13
      [63] aload v13
      [65] getfield #49
        + Fieldref [a/a/a/b/ap.b I]
      [68] istore v14
      [70] aload v13
      [72] getfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [75] astore v15
      [77] iconst_0
      [78] istore v16
      [80] iload v16
      [82] aload v15
      [84] invokevirtual #149
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [87] ificmpge +68 (target=155)
      [90] aload v15
      [92] iload v16
      [94] invokevirtual #148
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [97] checkcast #12
        + Class [a/a/a/b/ao]
      [100] astore v17
      [102] aload v17
      [104] ifnull +45 (target=149)
      [107] aload v13
      [109] aload v17
      [111] lload_2 v2
      [112] invokevirtual #97
        + Methodref [a/a/a/b/ap.c (La/a/a/b/ao;J)Ljava/lang/Object;]
      [115] astore v18
      [117] aload v18
      [119] ifnull +18 (target=137)
      [122] aload_0 v0
      [123] getfield #62
        + Fieldref [a/a/a/b/n.h La/a/a/a/b;]
      [126] aload_1 v1
      [127] aload v18
      [129] invokevirtual #84
        + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [132] ifeq +5 (target=137)
      [135] iconst_1
      [136] ireturn
      [137] aload v17
      [139] invokeinterface #155
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [144] astore v17
      [146] goto -44 (target=102)
      [149] iinc v16, 1
      [152] goto -72 (target=80)
      [155] lload v8
      [157] aload v13
      [159] getfield #50
        + Fieldref [a/a/a/b/ap.d I]
      [162] i2l
      [163] ladd
      [164] lstore v8
      [166] iinc v12, 1
      [169] goto -120 (target=49)
      [172] lload v8
      [174] lload v5
      [176] lcmp
      [177] ifne +6 (target=183)
      [180] goto +13 (target=193)
      [183] lload v8
      [185] lstore v5
      [187] iinc v7, 1
      [190] goto -162 (target=28)
      [193] iconst_0
      [194] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 11):
        - [6] Var: ..., Stack: (empty)
        - [28] Var: [a:a/a/a/b/n][a:java/lang/Object][l][a:[La/a/a/b/ap;][l][i], Stack: 
        - [49] Var: [a:a/a/a/b/n][a:java/lang/Object][l][a:[La/a/a/b/ap;][l][i][l][a:[La/a/a/b/ap;][i][i], Stack: 
        - [80] Var: [a:a/a/a/b/n][a:java/lang/Object][l][a:[La/a/a/b/ap;][l][i][l][a:[La/a/a/b/ap;][i][i][a:a/a/a/b/ap][i][a:java/util/concurrent/atomic/AtomicReferenceArray][i], Stack: 
        - [102] Var: ...[a:a/a/a/b/ao], Stack: (empty)
        - [137] Var: ..., Stack: (empty)
        - [149] Var: -1, Stack: (empty)
        - [155] Var: -1, Stack: (empty)
        - [172] Var: [a:a/a/a/b/n][a:java/lang/Object][l][a:[La/a/a/b/ap;][l][i][l], Stack: 
        - [183] Var: ..., Stack: (empty)
        - [193] Var: -2, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object put(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 29, locals = 4, stack = 5):
      [0] aload_1 v1
      [1] invokestatic #85
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_2 v2
      [6] invokestatic #85
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] pop
      [10] aload_0 v0
      [11] aload_1 v1
      [12] invokevirtual #119
        + Methodref [a/a/a/b/n.a (Ljava/lang/Object;)I]
      [15] istore_3 v3
      [16] aload_0 v0
      [17] iload_3 v3
      [18] invokevirtual #122
        + Methodref [a/a/a/b/n.b (I)La/a/a/b/ap;]
      [21] aload_1 v1
      [22] iload_3 v3
      [23] aload_2 v2
      [24] iconst_0
      [25] invokevirtual #94
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;]
      [28] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 29, locals = 4, stack = 5):
      [0] aload_1 v1
      [1] invokestatic #85
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_2 v2
      [6] invokestatic #85
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] pop
      [10] aload_0 v0
      [11] aload_1 v1
      [12] invokevirtual #119
        + Methodref [a/a/a/b/n.a (Ljava/lang/Object;)I]
      [15] istore_3 v3
      [16] aload_0 v0
      [17] iload_3 v3
      [18] invokevirtual #122
        + Methodref [a/a/a/b/n.b (I)La/a/a/b/ap;]
      [21] aload_1 v1
      [22] iload_3 v3
      [23] aload_2 v2
      [24] iconst_1
      [25] invokevirtual #94
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;]
      [28] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       putAll(Ljava/util/Map;)V
    Access flags: 0x1
      = public void putAll(java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 52, locals = 4, stack = 3):
      [0] aload_1 v1
      [1] invokeinterface #168
        + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
      [6] invokeinterface #172
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [11] astore_2 v2
      [12] aload_2 v2
      [13] invokeinterface #166
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [18] ifeq +33 (target=51)
      [21] aload_2 v2
      [22] invokeinterface #167
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [27] checkcast #38
        + Class [java/util/Map$Entry]
      [30] astore_3 v3
      [31] aload_0 v0
      [32] aload_3 v3
      [33] invokeinterface #169
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [38] aload_3 v3
      [39] invokeinterface #170
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [44] invokevirtual #136
        + Methodref [a/a/a/b/n.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [47] pop
      [48] goto -36 (target=12)
      [51] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [12] Var: ...[a:java/util/Iterator], Stack: (empty)
        - [51] Var: -1, Stack: (empty)
  + Method:       remove(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object remove(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 23, locals = 3, stack = 3):
      [0] aload_1 v1
      [1] ifnonnull +5 (target=6)
      [4] aconst_null
      [5] areturn
      [6] aload_0 v0
      [7] aload_1 v1
      [8] invokevirtual #119
        + Methodref [a/a/a/b/n.a (Ljava/lang/Object;)I]
      [11] istore_2 v2
      [12] aload_0 v0
      [13] iload_2 v2
      [14] invokevirtual #122
        + Methodref [a/a/a/b/n.b (I)La/a/a/b/ap;]
      [17] aload_1 v1
      [18] iload_2 v2
      [19] invokevirtual #99
        + Methodref [a/a/a/b/ap.d (Ljava/lang/Object;I)Ljava/lang/Object;]
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [6] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       remove(Ljava/lang/Object;Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean remove(java.lang.Object,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 28, locals = 4, stack = 4):
      [0] aload_1 v1
      [1] ifnull +7 (target=8)
      [4] aload_2 v2
      [5] ifnonnull +5 (target=10)
      [8] iconst_0
      [9] ireturn
      [10] aload_0 v0
      [11] aload_1 v1
      [12] invokevirtual #119
        + Methodref [a/a/a/b/n.a (Ljava/lang/Object;)I]
      [15] istore_3 v3
      [16] aload_0 v0
      [17] iload_3 v3
      [18] invokevirtual #122
        + Methodref [a/a/a/b/n.b (I)La/a/a/b/ap;]
      [21] aload_1 v1
      [22] iload_3 v3
      [23] aload_2 v2
      [24] invokevirtual #96
        + Methodref [a/a/a/b/ap.b (Ljava/lang/Object;ILjava/lang/Object;)Z]
      [27] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [8] Var: ..., Stack: (empty)
        - [10] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 38, locals = 5, stack = 5):
      [0] aload_1 v1
      [1] invokestatic #85
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_3 v3
      [6] invokestatic #85
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] pop
      [10] aload_2 v2
      [11] ifnonnull +5 (target=16)
      [14] iconst_0
      [15] ireturn
      [16] aload_0 v0
      [17] aload_1 v1
      [18] invokevirtual #119
        + Methodref [a/a/a/b/n.a (Ljava/lang/Object;)I]
      [21] istore v4
      [23] aload_0 v0
      [24] iload v4
      [26] invokevirtual #122
        + Methodref [a/a/a/b/n.b (I)La/a/a/b/ap;]
      [29] aload_1 v1
      [30] iload v4
      [32] aload_2 v2
      [33] aload_3 v3
      [34] invokevirtual #93
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Z]
      [37] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [16] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object replace(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 4, stack = 4):
      [0] aload_1 v1
      [1] invokestatic #85
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_2 v2
      [6] invokestatic #85
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] pop
      [10] aload_0 v0
      [11] aload_1 v1
      [12] invokevirtual #119
        + Methodref [a/a/a/b/n.a (Ljava/lang/Object;)I]
      [15] istore_3 v3
      [16] aload_0 v0
      [17] iload_3 v3
      [18] invokevirtual #122
        + Methodref [a/a/a/b/n.b (I)La/a/a/b/ap;]
      [21] aload_1 v1
      [22] iload_3 v3
      [23] aload_2 v2
      [24] invokevirtual #92
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;]
      [27] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       clear()V
    Access flags: 0x1
      = public void clear()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 32, locals = 5, stack = 2):
      [0] aload_0 v0
      [1] getfield #59
        + Fieldref [a/a/a/b/n.e [La/a/a/b/ap;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] arraylength
      [7] istore_2 v2
      [8] iconst_0
      [9] istore_3 v3
      [10] iload_3 v3
      [11] iload_2 v2
      [12] ificmpge +19 (target=31)
      [15] aload_1 v1
      [16] iload_3 v3
      [17] aaload
      [18] astore v4
      [20] aload v4
      [22] invokevirtual #100
        + Methodref [a/a/a/b/ap.l ()V]
      [25] iinc v3, 1
      [28] goto -18 (target=10)
      [31] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [10] Var: ...[a:[La/a/a/b/ap;][i][i], Stack: (empty)
        - [31] Var: -3, Stack: (empty)
  + Method:       keySet()Ljava/util/Set;
    Access flags: 0x1
      = public java.util.Set keySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 2, stack = 5):
      [0] aload_0 v0
      [1] getfield #78
        + Fieldref [a/a/a/b/n.x Ljava/util/Set;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnull +7 (target=13)
      [9] aload_1 v1
      [10] goto +17 (target=27)
      [13] aload_0 v0
      [14] new #10
        + Class [a/a/a/b/ai]
      [17] dup
      [18] aload_0 v0
      [19] aload_0 v0
      [20] invokespecial #87
        + Methodref [a/a/a/b/ai.<init> (La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
      [23] dup_x1
      [24] putfield #78
        + Fieldref [a/a/a/b/n.x Ljava/util/Set;]
      [27] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ...[a:java/util/Set], Stack: (empty)
        - [27] Var: ..., Stack: [a:java/util/Set]
  + Method:       values()Ljava/util/Collection;
    Access flags: 0x1
      = public java.util.Collection values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 2, stack = 5):
      [0] aload_0 v0
      [1] getfield #79
        + Fieldref [a/a/a/b/n.y Ljava/util/Collection;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnull +7 (target=13)
      [9] aload_1 v1
      [10] goto +17 (target=27)
      [13] aload_0 v0
      [14] new #16
        + Class [a/a/a/b/bd]
      [17] dup
      [18] aload_0 v0
      [19] aload_0 v0
      [20] invokespecial #101
        + Methodref [a/a/a/b/bd.<init> (La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
      [23] dup_x1
      [24] putfield #79
        + Fieldref [a/a/a/b/n.y Ljava/util/Collection;]
      [27] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ...[a:java/util/Collection], Stack: (empty)
        - [27] Var: ..., Stack: [a:java/util/Collection]
  + Method:       entrySet()Ljava/util/Set;
    Access flags: 0x1
      = public java.util.Set entrySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 2, stack = 5):
      [0] aload_0 v0
      [1] getfield #80
        + Fieldref [a/a/a/b/n.z Ljava/util/Set;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnull +7 (target=13)
      [9] aload_1 v1
      [10] goto +17 (target=27)
      [13] aload_0 v0
      [14] new #9
        + Class [a/a/a/b/af]
      [17] dup
      [18] aload_0 v0
      [19] aload_0 v0
      [20] invokespecial #86
        + Methodref [a/a/a/b/af.<init> (La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
      [23] dup_x1
      [24] putfield #80
        + Fieldref [a/a/a/b/n.z Ljava/util/Set;]
      [27] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ...[a:java/util/Set], Stack: (empty)
        - [27] Var: ..., Stack: [a:java/util/Set]
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 38, locals = 0, stack = 2):
      [0] ldc #24
        + Class [a/a/a/b/n]
      [2] invokevirtual #144
        + Methodref [java/lang/Class.getName ()Ljava/lang/String;]
      [5] invokestatic #150
        + Methodref [java/util/logging/Logger.getLogger (Ljava/lang/String;)Ljava/util/logging/Logger;]
      [8] putstatic #55
        + Fieldref [a/a/a/b/n.a Ljava/util/logging/Logger;]
      [11] invokestatic #143
        + Methodref [a/a/a/g/a/t.a ()La/a/a/g/a/s;]
      [14] putstatic #56
        + Fieldref [a/a/a/b/n.b La/a/a/g/a/s;]
      [17] new #25
        + Class [a/a/a/b/o]
      [20] dup
      [21] invokespecial #139
        + Methodref [a/a/a/b/o.<init> ()V]
      [24] putstatic #76
        + Fieldref [a/a/a/b/n.v La/a/a/b/bc;]
      [27] new #26
        + Class [a/a/a/b/p]
      [30] dup
      [31] invokespecial #140
        + Methodref [a/a/a/b/p.<init> ()V]
      [34] putstatic #77
        + Fieldref [a/a/a/b/n.w Ljava/util/Queue;]
      [37] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/o
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.o extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/b/bc]

Constant Pool (count = 26):
  + Class [a/a/a/b/bc]
  + Class [a/a/a/b/o]
  + Class [java/lang/Object]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()I]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bc]
  + Utf8 [a/a/a/b/o]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [get]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 9):
  - Method:       <init>()V
    Access flags: 0x0
      = o()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #4
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aconst_null
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()I
    Access flags: 0x1
      = public int a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aconst_null
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;
    Access flags: 0x1
      = public a.a.a.b.bc a(java.lang.ref.ReferenceQueue,java.lang.Object,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 2, locals = 4, stack = 1):
      [0] aload_0 v0
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       c()Z
    Access flags: 0x1
      = public boolean c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()Z
    Access flags: 0x1
      = public boolean d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aconst_null
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/p
  Superclass:    java/util/AbstractQueue
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.p extends java.util.AbstractQueue

Interfaces (count = 0):

Constant Pool (count = 25):
  + Class [a/a/a/b/p]
  + Class [a/a/a/c/ck]
  + Class [java/util/AbstractQueue]
  + Methodref [a/a/a/c/ck.a ()La/a/a/c/ea;]
  + Methodref [java/util/AbstractQueue.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a ()La/a/a/c/ea;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/b/p]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [iterator]
  + Utf8 [java/util/AbstractQueue]
  + Utf8 [offer]
  + Utf8 [peek]
  + Utf8 [poll]
  + Utf8 [size]

Fields (count = 0):

Methods (count = 6):
  - Method:       <init>()V
    Access flags: 0x0
      = p()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #5
        + Methodref [java/util/AbstractQueue.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       offer(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean offer(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 2, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       peek()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object peek()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aconst_null
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       poll()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object poll()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aconst_null
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 1):
      [0] invokestatic #4
        + Methodref [a/a/a/c/ck.a ()La/a/a/c/ea;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/q
  Superclass:    java/util/AbstractSet
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.b.q extends java.util.AbstractSet

Interfaces (count = 0):

Constant Pool (count = 32):
  + Class [a/a/a/b/q]
  + Class [java/util/AbstractSet]
  + Class [java/util/concurrent/ConcurrentMap]
  + Fieldref [a/a/a/b/q.a Ljava/util/concurrent/ConcurrentMap;]
  + Fieldref [a/a/a/b/q.b La/a/a/b/n;]
  + Methodref [java/util/AbstractSet.<init> ()V]
  + InterfaceMethodref [java/util/concurrent/ConcurrentMap.clear ()V]
  + InterfaceMethodref [java/util/concurrent/ConcurrentMap.isEmpty ()Z]
  + InterfaceMethodref [java/util/concurrent/ConcurrentMap.size ()I]
  + NameAndType [<init> ()V]
  + NameAndType [a Ljava/util/concurrent/ConcurrentMap;]
  + NameAndType [b La/a/a/b/n;]
  + NameAndType [clear ()V]
  + NameAndType [isEmpty ()Z]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/n;]
  + Utf8 [Ljava/util/concurrent/ConcurrentMap;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/q]
  + Utf8 [b]
  + Utf8 [clear]
  + Utf8 [isEmpty]
  + Utf8 [java/util/AbstractSet]
  + Utf8 [java/util/concurrent/ConcurrentMap]
  + Utf8 [size]

Fields (count = 2):
  + Field:        a Ljava/util/concurrent/ConcurrentMap;
    Access flags: 0x10
      = final java.util.concurrent.ConcurrentMap a
  + Field:        b La/a/a/b/n;
    Access flags: 0x1010
      = final synthetic a.a.a.b.n b

Methods (count = 4):
  - Method:       <init>(La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V
    Access flags: 0x0
      = q(a.a.a.b.n,java.util.concurrent.ConcurrentMap)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #5
        + Fieldref [a/a/a/b/q.b La/a/a/b/n;]
      [5] aload_0 v0
      [6] invokespecial #6
        + Methodref [java/util/AbstractSet.<init> ()V]
      [9] aload_0 v0
      [10] aload_2 v2
      [11] putfield #4
        + Fieldref [a/a/a/b/q.a Ljava/util/concurrent/ConcurrentMap;]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/b/q.a Ljava/util/concurrent/ConcurrentMap;]
      [4] invokeinterface #9
        + InterfaceMethodref [java/util/concurrent/ConcurrentMap.size ()I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/b/q.a Ljava/util/concurrent/ConcurrentMap;]
      [4] invokeinterface #8
        + InterfaceMethodref [java/util/concurrent/ConcurrentMap.isEmpty ()Z]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       clear()V
    Access flags: 0x1
      = public void clear()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/b/q.a Ljava/util/concurrent/ConcurrentMap;]
      [4] invokeinterface #7
        + InterfaceMethodref [java/util/concurrent/ConcurrentMap.clear ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/r
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.b.r extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/b/ao]

Constant Pool (count = 33):
  + Class [a/a/a/b/ao]
  + Class [a/a/a/b/r]
  + Class [java/lang/Object]
  + Class [java/lang/UnsupportedOperationException]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()I]
  + Utf8 [()J]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()La/a/a/b/bc;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [(J)V]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/bc;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ao]
  + Utf8 [a/a/a/b/r]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [h]
  + Utf8 [i]
  + Utf8 [j]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/UnsupportedOperationException]

Fields (count = 0):

Methods (count = 18):
  - Method:       <init>()V
    Access flags: 0x0
      = r()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #5
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/b/bc;
    Access flags: 0x1
      = public a.a.a.b.bc a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/bc;)V
    Access flags: 0x1
      = public void a(a.a.a.b.bc)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()I
    Access flags: 0x1
      = public int c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()J
    Access flags: 0x1
      = public long e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(J)V
    Access flags: 0x1
      = public void a(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void a(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       g()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void b(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       h()J
    Access flags: 0x1
      = public long h()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(J)V
    Access flags: 0x1
      = public void b(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       i()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao i()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void c(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       j()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao j()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void d(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/s
  Superclass:    java/util/AbstractQueue
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.s extends java.util.AbstractQueue

Interfaces (count = 0):

Constant Pool (count = 74):
  + Class [a/a/a/b/an]
  + Class [a/a/a/b/ao]
  + Class [a/a/a/b/n]
  + Class [a/a/a/b/s]
  + Class [a/a/a/b/t]
  + Class [a/a/a/b/u]
  + Class [java/util/AbstractQueue]
  + Fieldref [a/a/a/b/an.a La/a/a/b/an;]
  + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
  + Methodref [a/a/a/b/n.a (La/a/a/b/ao;La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/n.b (La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/s.a ()La/a/a/b/ao;]
  + Methodref [a/a/a/b/s.a (La/a/a/b/ao;)Z]
  + Methodref [a/a/a/b/s.b ()La/a/a/b/ao;]
  + Methodref [a/a/a/b/s.remove (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/b/t.<init> (La/a/a/b/s;)V]
  + Methodref [a/a/a/b/u.<init> (La/a/a/b/s;La/a/a/b/ao;)V]
  + Methodref [java/util/AbstractQueue.<init> ()V]
  + InterfaceMethodref [a/a/a/b/ao.a (La/a/a/b/ao;)V]
  + InterfaceMethodref [a/a/a/b/ao.b (La/a/a/b/ao;)V]
  + InterfaceMethodref [a/a/a/b/ao.f ()La/a/a/b/ao;]
  + InterfaceMethodref [a/a/a/b/ao.g ()La/a/a/b/ao;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/b/s;)V]
  + NameAndType [<init> (La/a/a/b/s;La/a/a/b/ao;)V]
  + NameAndType [a ()La/a/a/b/ao;]
  + NameAndType [a (La/a/a/b/ao;)V]
  + NameAndType [a (La/a/a/b/ao;)Z]
  + NameAndType [a (La/a/a/b/ao;La/a/a/b/ao;)V]
  + NameAndType [a La/a/a/b/an;]
  + NameAndType [a La/a/a/b/ao;]
  + NameAndType [b ()La/a/a/b/ao;]
  + NameAndType [b (La/a/a/b/ao;)V]
  + NameAndType [f ()La/a/a/b/ao;]
  + NameAndType [g ()La/a/a/b/ao;]
  + NameAndType [remove (Ljava/lang/Object;)Z]
  + Utf8 [()I]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/ao;)Z]
  + Utf8 [(La/a/a/b/ao;La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/s;)V]
  + Utf8 [(La/a/a/b/s;La/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/an;]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/b/an]
  + Utf8 [a/a/a/b/ao]
  + Utf8 [a/a/a/b/n]
  + Utf8 [a/a/a/b/s]
  + Utf8 [a/a/a/b/t]
  + Utf8 [a/a/a/b/u]
  + Utf8 [b]
  + Utf8 [clear]
  + Utf8 [contains]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [isEmpty]
  + Utf8 [iterator]
  + Utf8 [java/util/AbstractQueue]
  + Utf8 [offer]
  + Utf8 [peek]
  + Utf8 [poll]
  + Utf8 [remove]
  + Utf8 [size]

Fields (count = 1):
  + Field:        a La/a/a/b/ao;
    Access flags: 0x10
      = final a.a.a.b.ao a

Methods (count = 13):
  - Method:       <init>()V
    Access flags: 0x0
      = s()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] invokespecial #18
        + Methodref [java/util/AbstractQueue.<init> ()V]
      [4] aload_0 v0
      [5] new #5
        + Class [a/a/a/b/t]
      [8] dup
      [9] aload_0 v0
      [10] invokespecial #16
        + Methodref [a/a/a/b/t.<init> (La/a/a/b/s;)V]
      [13] putfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [16] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ao;)Z
    Access flags: 0x1
      = public boolean a(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 38, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] invokeinterface #22
        + InterfaceMethodref [a/a/a/b/ao.g ()La/a/a/b/ao;]
      [6] aload_1 v1
      [7] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.f ()La/a/a/b/ao;]
      [12] invokestatic #10
        + Methodref [a/a/a/b/n.a (La/a/a/b/ao;La/a/a/b/ao;)V]
      [15] aload_0 v0
      [16] getfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [19] invokeinterface #22
        + InterfaceMethodref [a/a/a/b/ao.g ()La/a/a/b/ao;]
      [24] aload_1 v1
      [25] invokestatic #10
        + Methodref [a/a/a/b/n.a (La/a/a/b/ao;La/a/a/b/ao;)V]
      [28] aload_1 v1
      [29] aload_0 v0
      [30] getfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [33] invokestatic #10
        + Methodref [a/a/a/b/n.a (La/a/a/b/ao;La/a/a/b/ao;)V]
      [36] iconst_1
      [37] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [4] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.f ()La/a/a/b/ao;]
      [9] astore_1 v1
      [10] aload_1 v1
      [11] aload_0 v0
      [12] getfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [15] ifacmpne +7 (target=22)
      [18] aconst_null
      [19] goto +4 (target=23)
      [22] aload_1 v1
      [23] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [22] Var: ...[a:a/a/a/b/ao], Stack: (empty)
        - [23] Var: ..., Stack: [a:a/a/a/b/ao]
  + Method:       b()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [4] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.f ()La/a/a/b/ao;]
      [9] astore_1 v1
      [10] aload_1 v1
      [11] aload_0 v0
      [12] getfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [15] ifacmpne +5 (target=20)
      [18] aconst_null
      [19] areturn
      [20] aload_0 v0
      [21] aload_1 v1
      [22] invokevirtual #15
        + Methodref [a/a/a/b/s.remove (Ljava/lang/Object;)Z]
      [25] pop
      [26] aload_1 v1
      [27] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [20] Var: ...[a:a/a/a/b/ao], Stack: (empty)
  + Method:       remove(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean remove(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 44, locals = 5, stack = 2):
      [0] aload_1 v1
      [1] checkcast #2
        + Class [a/a/a/b/ao]
      [4] astore_2 v2
      [5] aload_2 v2
      [6] invokeinterface #22
        + InterfaceMethodref [a/a/a/b/ao.g ()La/a/a/b/ao;]
      [11] astore_3 v3
      [12] aload_2 v2
      [13] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.f ()La/a/a/b/ao;]
      [18] astore v4
      [20] aload_3 v3
      [21] aload v4
      [23] invokestatic #10
        + Methodref [a/a/a/b/n.a (La/a/a/b/ao;La/a/a/b/ao;)V]
      [26] aload_2 v2
      [27] invokestatic #11
        + Methodref [a/a/a/b/n.b (La/a/a/b/ao;)V]
      [30] aload v4
      [32] getstatic #8
        + Fieldref [a/a/a/b/an.a La/a/a/b/an;]
      [35] ifacmpeq +7 (target=42)
      [38] iconst_1
      [39] goto +4 (target=43)
      [42] iconst_0
      [43] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [42] Var: ...[a:a/a/a/b/ao][a:a/a/a/b/ao][a:a/a/a/b/ao], Stack: (empty)
        - [43] Var: ..., Stack: [i]
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] checkcast #2
        + Class [a/a/a/b/ao]
      [4] astore_2 v2
      [5] aload_2 v2
      [6] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.f ()La/a/a/b/ao;]
      [11] getstatic #8
        + Fieldref [a/a/a/b/an.a La/a/a/b/an;]
      [14] ifacmpeq +7 (target=21)
      [17] iconst_1
      [18] goto +4 (target=22)
      [21] iconst_0
      [22] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [21] Var: ...[a:a/a/a/b/ao], Stack: (empty)
        - [22] Var: ..., Stack: [i]
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [4] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.f ()La/a/a/b/ao;]
      [9] aload_0 v0
      [10] getfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [13] ifacmpne +7 (target=20)
      [16] iconst_1
      [17] goto +4 (target=21)
      [20] iconst_0
      [21] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [20] Var: ..., Stack: (empty)
        - [21] Var: ..., Stack: [i]
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 35, locals = 3, stack = 2):
      [0] iconst_0
      [1] istore_1 v1
      [2] aload_0 v0
      [3] getfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [6] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.f ()La/a/a/b/ao;]
      [11] astore_2 v2
      [12] aload_2 v2
      [13] aload_0 v0
      [14] getfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [17] ifacmpeq +16 (target=33)
      [20] iinc v1, 1
      [23] aload_2 v2
      [24] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.f ()La/a/a/b/ao;]
      [29] astore_2 v2
      [30] goto -18 (target=12)
      [33] iload_1 v1
      [34] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [12] Var: ...[i][a:a/a/a/b/ao], Stack: (empty)
        - [33] Var: -1, Stack: (empty)
  + Method:       clear()V
    Access flags: 0x1
      = public void clear()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 61, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [4] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.f ()La/a/a/b/ao;]
      [9] astore_1 v1
      [10] aload_1 v1
      [11] aload_0 v0
      [12] getfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [15] ifacmpeq +19 (target=34)
      [18] aload_1 v1
      [19] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.f ()La/a/a/b/ao;]
      [24] astore_2 v2
      [25] aload_1 v1
      [26] invokestatic #11
        + Methodref [a/a/a/b/n.b (La/a/a/b/ao;)V]
      [29] aload_2 v2
      [30] astore_1 v1
      [31] goto -21 (target=10)
      [34] aload_0 v0
      [35] getfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [38] aload_0 v0
      [39] getfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [42] invokeinterface #19
        + InterfaceMethodref [a/a/a/b/ao.a (La/a/a/b/ao;)V]
      [47] aload_0 v0
      [48] getfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [51] aload_0 v0
      [52] getfield #9
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [55] invokeinterface #20
        + InterfaceMethodref [a/a/a/b/ao.b (La/a/a/b/ao;)V]
      [60] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [10] Var: ...[a:a/a/a/b/ao], Stack: (empty)
        - [34] Var: ..., Stack: (empty)
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 4):
      [0] new #6
        + Class [a/a/a/b/u]
      [3] dup
      [4] aload_0 v0
      [5] aload_0 v0
      [6] invokevirtual #12
        + Methodref [a/a/a/b/s.a ()La/a/a/b/ao;]
      [9] invokespecial #17
        + Methodref [a/a/a/b/u.<init> (La/a/a/b/s;La/a/a/b/ao;)V]
      [12] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       peek()Ljava/lang/Object;
    Access flags: 0x1001
      = public synthetic java.lang.Object peek()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #12
        + Methodref [a/a/a/b/s.a ()La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       poll()Ljava/lang/Object;
    Access flags: 0x1001
      = public synthetic java.lang.Object poll()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #14
        + Methodref [a/a/a/b/s.b ()La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       offer(Ljava/lang/Object;)Z
    Access flags: 0x1001
      = public synthetic boolean offer(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #2
        + Class [a/a/a/b/ao]
      [5] invokevirtual #13
        + Methodref [a/a/a/b/s.a (La/a/a/b/ao;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/t
  Superclass:    a/a/a/b/r
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.b.t extends a.a.a.b.r

Interfaces (count = 0):

Constant Pool (count = 31):
  + Class [a/a/a/b/r]
  + Class [a/a/a/b/t]
  + Long [9223372036854775807]
  + Fieldref [a/a/a/b/t.a La/a/a/b/ao;]
  + Fieldref [a/a/a/b/t.b La/a/a/b/ao;]
  + Fieldref [a/a/a/b/t.c La/a/a/b/s;]
  + Methodref [a/a/a/b/r.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a La/a/a/b/ao;]
  + NameAndType [b La/a/a/b/ao;]
  + NameAndType [c La/a/a/b/s;]
  + Utf8 [()J]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()V]
  + Utf8 [(J)V]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/s;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [La/a/a/b/s;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/r]
  + Utf8 [a/a/a/b/t]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [g]

Fields (count = 3):
  + Field:        a La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a
  + Field:        b La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao b
  + Field:        c La/a/a/b/s;
    Access flags: 0x1010
      = final synthetic a.a.a.b.s c

Methods (count = 7):
  - Method:       <init>(La/a/a/b/s;)V
    Access flags: 0x0
      = t(a.a.a.b.s)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #7
        + Fieldref [a/a/a/b/t.c La/a/a/b/s;]
      [5] aload_0 v0
      [6] invokespecial #8
        + Methodref [a/a/a/b/r.<init> ()V]
      [9] aload_0 v0
      [10] aload_0 v0
      [11] putfield #5
        + Fieldref [a/a/a/b/t.a La/a/a/b/ao;]
      [14] aload_0 v0
      [15] aload_0 v0
      [16] putfield #6
        + Fieldref [a/a/a/b/t.b La/a/a/b/ao;]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()J
    Access flags: 0x1
      = public long e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 2):
      [0] ldc2_w #3
        + Long [9223372036854775807]
      [3] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(J)V
    Access flags: 0x1
      = public void a(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 3, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/b/t.a La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void a(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #5
        + Fieldref [a/a/a/b/t.a La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       g()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/b/t.b La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void b(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/b/t.b La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/u
  Superclass:    a/a/a/c/v
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.b.u extends a.a.a.c.v

Interfaces (count = 0):

Constant Pool (count = 31):
  + Class [a/a/a/b/ao]
  + Class [a/a/a/b/s]
  + Class [a/a/a/b/u]
  + Class [a/a/a/c/v]
  + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
  + Fieldref [a/a/a/b/u.a La/a/a/b/s;]
  + Methodref [a/a/a/b/u.a (La/a/a/b/ao;)La/a/a/b/ao;]
  + Methodref [a/a/a/c/v.<init> (Ljava/lang/Object;)V]
  + InterfaceMethodref [a/a/a/b/ao.f ()La/a/a/b/ao;]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [a (La/a/a/b/ao;)La/a/a/b/ao;]
  + NameAndType [a La/a/a/b/ao;]
  + NameAndType [a La/a/a/b/s;]
  + NameAndType [f ()La/a/a/b/ao;]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/s;La/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [La/a/a/b/s;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ao]
  + Utf8 [a/a/a/b/s]
  + Utf8 [a/a/a/b/u]
  + Utf8 [a/a/a/c/v]
  + Utf8 [f]

Fields (count = 1):
  + Field:        a La/a/a/b/s;
    Access flags: 0x1010
      = final synthetic a.a.a.b.s a

Methods (count = 3):
  - Method:       <init>(La/a/a/b/s;La/a/a/b/ao;)V
    Access flags: 0x0
      = u(a.a.a.b.s,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/b/u.a La/a/a/b/s;]
      [5] aload_0 v0
      [6] aload_2 v2
      [7] invokespecial #8
        + Methodref [a/a/a/c/v.<init> (Ljava/lang/Object;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x4
      = protected a.a.a.b.ao a(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] invokeinterface #9
        + InterfaceMethodref [a/a/a/b/ao.f ()La/a/a/b/ao;]
      [6] astore_2 v2
      [7] aload_2 v2
      [8] aload_0 v0
      [9] getfield #6
        + Fieldref [a/a/a/b/u.a La/a/a/b/s;]
      [12] getfield #5
        + Fieldref [a/a/a/b/s.a La/a/a/b/ao;]
      [15] ifacmpne +7 (target=22)
      [18] aconst_null
      [19] goto +4 (target=23)
      [22] aload_2 v2
      [23] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [22] Var: ...[a:a/a/a/b/ao], Stack: (empty)
        - [23] Var: ..., Stack: [a:a/a/a/b/ao]
  + Method:       a(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1044
      = protected bridge synthetic java.lang.Object a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #1
        + Class [a/a/a/b/ao]
      [5] invokevirtual #7
        + Methodref [a/a/a/b/u.a (La/a/a/b/ao;)La/a/a/b/ao;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/v
  Superclass:    java/lang/Enum
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4420
    = enum enum a.a.a.b.v extends java.lang.Enum

Interfaces (count = 0):

Constant Pool (count = 153):
  + String [STRONG]
  + String [STRONG_ACCESS]
  + String [STRONG_ACCESS_WRITE]
  + String [STRONG_WRITE]
  + String [WEAK]
  + String [WEAK_ACCESS]
  + String [WEAK_ACCESS_WRITE]
  + String [WEAK_WRITE]
  + Class [[La/a/a/b/v;]
  + Class [a/a/a/b/aa]
  + Class [a/a/a/b/ab]
  + Class [a/a/a/b/ac]
  + Class [a/a/a/b/ad]
  + Class [a/a/a/b/ao]
  + Class [a/a/a/b/as]
  + Class [a/a/a/b/n]
  + Class [a/a/a/b/v]
  + Class [a/a/a/b/w]
  + Class [a/a/a/b/x]
  + Class [a/a/a/b/y]
  + Class [a/a/a/b/z]
  + Class [java/lang/Enum]
  + Fieldref [a/a/a/b/as.c La/a/a/b/as;]
  + Fieldref [a/a/a/b/v.a La/a/a/b/v;]
  + Fieldref [a/a/a/b/v.b La/a/a/b/v;]
  + Fieldref [a/a/a/b/v.c La/a/a/b/v;]
  + Fieldref [a/a/a/b/v.d La/a/a/b/v;]
  + Fieldref [a/a/a/b/v.e La/a/a/b/v;]
  + Fieldref [a/a/a/b/v.f La/a/a/b/v;]
  + Fieldref [a/a/a/b/v.g La/a/a/b/v;]
  + Fieldref [a/a/a/b/v.h La/a/a/b/v;]
  + Fieldref [a/a/a/b/v.i [La/a/a/b/v;]
  + Fieldref [a/a/a/b/v.j [La/a/a/b/v;]
  + Methodref [[La/a/a/b/v;.clone ()Ljava/lang/Object;]
  + Methodref [a/a/a/b/aa.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/b/ab.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/b/ac.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/b/ad.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/b/n.a (La/a/a/b/ao;La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/n.b (La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/n.b (La/a/a/b/ao;La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/n.c (La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/b/v.a (La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + Methodref [a/a/a/b/w.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/b/x.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/b/y.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/b/z.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + InterfaceMethodref [a/a/a/b/ao.a (J)V]
  + InterfaceMethodref [a/a/a/b/ao.b (J)V]
  + InterfaceMethodref [a/a/a/b/ao.c ()I]
  + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
  + InterfaceMethodref [a/a/a/b/ao.e ()J]
  + InterfaceMethodref [a/a/a/b/ao.f ()La/a/a/b/ao;]
  + InterfaceMethodref [a/a/a/b/ao.g ()La/a/a/b/ao;]
  + InterfaceMethodref [a/a/a/b/ao.h ()J]
  + InterfaceMethodref [a/a/a/b/ao.i ()La/a/a/b/ao;]
  + InterfaceMethodref [a/a/a/b/ao.j ()La/a/a/b/ao;]
  + NameAndType [<init> (Ljava/lang/String;I)V]
  + NameAndType [a (J)V]
  + NameAndType [a (La/a/a/b/ao;La/a/a/b/ao;)V]
  + NameAndType [a (La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + NameAndType [a La/a/a/b/v;]
  + NameAndType [b (J)V]
  + NameAndType [b (La/a/a/b/ao;)V]
  + NameAndType [b (La/a/a/b/ao;La/a/a/b/ao;)V]
  + NameAndType [b La/a/a/b/v;]
  + NameAndType [c ()I]
  + NameAndType [c (La/a/a/b/ao;)V]
  + NameAndType [c La/a/a/b/as;]
  + NameAndType [c La/a/a/b/v;]
  + NameAndType [clone ()Ljava/lang/Object;]
  + NameAndType [d ()Ljava/lang/Object;]
  + NameAndType [d La/a/a/b/v;]
  + NameAndType [e ()J]
  + NameAndType [e La/a/a/b/v;]
  + NameAndType [f ()La/a/a/b/ao;]
  + NameAndType [f La/a/a/b/v;]
  + NameAndType [g ()La/a/a/b/ao;]
  + NameAndType [g La/a/a/b/v;]
  + NameAndType [h ()J]
  + NameAndType [h La/a/a/b/v;]
  + NameAndType [i ()La/a/a/b/ao;]
  + NameAndType [i [La/a/a/b/v;]
  + NameAndType [j ()La/a/a/b/ao;]
  + NameAndType [j [La/a/a/b/v;]
  + NameAndType [valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [()I]
  + Utf8 [()J]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()[La/a/a/b/v;]
  + Utf8 [(J)V]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/ao;La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/as;ZZ)La/a/a/b/v;]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [(Ljava/lang/String;)La/a/a/b/v;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/o;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/as;]
  + Utf8 [La/a/a/b/v;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [Ljavax/annotation/concurrent/GuardedBy;]
  + Utf8 [RuntimeInvisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [STRONG]
  + Utf8 [STRONG_ACCESS]
  + Utf8 [STRONG_ACCESS_WRITE]
  + Utf8 [STRONG_WRITE]
  + Utf8 [Segment.this]
  + Utf8 [StackMapTable]
  + Utf8 [WEAK]
  + Utf8 [WEAK_ACCESS]
  + Utf8 [WEAK_ACCESS_WRITE]
  + Utf8 [WEAK_WRITE]
  + Utf8 [[La/a/a/b/v;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/aa]
  + Utf8 [a/a/a/b/ab]
  + Utf8 [a/a/a/b/ac]
  + Utf8 [a/a/a/b/ad]
  + Utf8 [a/a/a/b/ao]
  + Utf8 [a/a/a/b/as]
  + Utf8 [a/a/a/b/n]
  + Utf8 [a/a/a/b/v]
  + Utf8 [a/a/a/b/w]
  + Utf8 [a/a/a/b/x]
  + Utf8 [a/a/a/b/y]
  + Utf8 [a/a/a/b/z]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clone]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [h]
  + Utf8 [i]
  + Utf8 [j]
  + Utf8 [java/lang/Enum]
  + Utf8 [value]
  + Utf8 [valueOf]
  + Utf8 [values]

Fields (count = 10):
  + Field:        a La/a/a/b/v;
    Access flags: 0x4019
      = public static final a.a.a.b.v a
  + Field:        b La/a/a/b/v;
    Access flags: 0x4019
      = public static final a.a.a.b.v b
  + Field:        c La/a/a/b/v;
    Access flags: 0x4019
      = public static final a.a.a.b.v c
  + Field:        d La/a/a/b/v;
    Access flags: 0x4019
      = public static final a.a.a.b.v d
  + Field:        e La/a/a/b/v;
    Access flags: 0x4019
      = public static final a.a.a.b.v e
  + Field:        f La/a/a/b/v;
    Access flags: 0x4019
      = public static final a.a.a.b.v f
  + Field:        g La/a/a/b/v;
    Access flags: 0x4019
      = public static final a.a.a.b.v g
  + Field:        h La/a/a/b/v;
    Access flags: 0x4019
      = public static final a.a.a.b.v h
  + Field:        i [La/a/a/b/v;
    Access flags: 0x18
      = static final a.a.a.b.v[] i
  + Field:        j [La/a/a/b/v;
    Access flags: 0x101a
      = private static final synthetic a.a.a.b.v[] j

Methods (count = 10):
  + Method:       values()[La/a/a/b/v;
    Access flags: 0x9
      = public static a.a.a.b.v[] values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 0, stack = 1):
      [0] getstatic #33
        + Fieldref [a/a/a/b/v.j [La/a/a/b/v;]
      [3] invokevirtual #34
        + Methodref [[La/a/a/b/v;.clone ()Ljava/lang/Object;]
      [6] checkcast #9
        + Class [[La/a/a/b/v;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       valueOf(Ljava/lang/String;)La/a/a/b/v;
    Access flags: 0x9
      = public static a.a.a.b.v valueOf(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 2):
      [0] ldc #17
        + Class [a/a/a/b/v]
      [2] aload_0 v0
      [3] invokestatic #50
        + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
      [6] checkcast #17
        + Class [a/a/a/b/v]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x2
      = private v(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #49
        + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/as;ZZ)La/a/a/b/v;
    Access flags: 0x8
      = static a.a.a.b.v a(a.a.a.b.as,boolean,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 39, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] getstatic #23
        + Fieldref [a/a/a/b/as.c La/a/a/b/as;]
      [4] ifacmpne +7 (target=11)
      [7] iconst_4
      [8] goto +4 (target=12)
      [11] iconst_0
      [12] iload_1 v1
      [13] ifeq +7 (target=20)
      [16] iconst_1
      [17] goto +4 (target=21)
      [20] iconst_0
      [21] ior
      [22] iload_2 v2
      [23] ifeq +7 (target=30)
      [26] iconst_2
      [27] goto +4 (target=31)
      [30] iconst_0
      [31] ior
      [32] istore_3 v3
      [33] getstatic #32
        + Fieldref [a/a/a/b/v.i [La/a/a/b/v;]
      [36] iload_3 v3
      [37] aaload
      [38] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [11] Var: ..., Stack: (empty)
        - [12] Var: ..., Stack: [i]
        - [20] Var: ..., Stack: [i]
        - [21] Var: [a:a/a/a/b/as][i][i], Stack: [i][i]
        - [30] Var: ..., Stack: [i]
        - [31] Var: [a:a/a/a/b/as][i][i], Stack: [i][i]
  + Method:       a(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x400
      = abstract a.a.a.b.ao a(a.a.a.b.ap,java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ap,a.a.a.b.ao,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 19, locals = 4, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokeinterface #54
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [8] aload_2 v2
      [9] invokeinterface #53
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [14] aload_3 v3
      [15] invokevirtual #44
        + Methodref [a/a/a/b/v.a (La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
      [18] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       a(La/a/a/b/ao;La/a/a/b/ao;)V
    Access flags: 0x0
      = void a(a.a.a.b.ao,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 37, locals = 3, stack = 3):
      [0] aload_2 v2
      [1] aload_1 v1
      [2] invokeinterface #55
        + InterfaceMethodref [a/a/a/b/ao.e ()J]
      [7] invokeinterface #51
        + InterfaceMethodref [a/a/a/b/ao.a (J)V]
      [12] aload_1 v1
      [13] invokeinterface #57
        + InterfaceMethodref [a/a/a/b/ao.g ()La/a/a/b/ao;]
      [18] aload_2 v2
      [19] invokestatic #39
        + Methodref [a/a/a/b/n.a (La/a/a/b/ao;La/a/a/b/ao;)V]
      [22] aload_2 v2
      [23] aload_1 v1
      [24] invokeinterface #56
        + InterfaceMethodref [a/a/a/b/ao.f ()La/a/a/b/ao;]
      [29] invokestatic #39
        + Methodref [a/a/a/b/n.a (La/a/a/b/ao;La/a/a/b/ao;)V]
      [32] aload_1 v1
      [33] invokestatic #40
        + Methodref [a/a/a/b/n.b (La/a/a/b/ao;)V]
      [36] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       b(La/a/a/b/ao;La/a/a/b/ao;)V
    Access flags: 0x0
      = void b(a.a.a.b.ao,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 37, locals = 3, stack = 3):
      [0] aload_2 v2
      [1] aload_1 v1
      [2] invokeinterface #58
        + InterfaceMethodref [a/a/a/b/ao.h ()J]
      [7] invokeinterface #52
        + InterfaceMethodref [a/a/a/b/ao.b (J)V]
      [12] aload_1 v1
      [13] invokeinterface #60
        + InterfaceMethodref [a/a/a/b/ao.j ()La/a/a/b/ao;]
      [18] aload_2 v2
      [19] invokestatic #41
        + Methodref [a/a/a/b/n.b (La/a/a/b/ao;La/a/a/b/ao;)V]
      [22] aload_2 v2
      [23] aload_1 v1
      [24] invokeinterface #59
        + InterfaceMethodref [a/a/a/b/ao.i ()La/a/a/b/ao;]
      [29] invokestatic #41
        + Methodref [a/a/a/b/n.b (La/a/a/b/ao;La/a/a/b/ao;)V]
      [32] aload_1 v1
      [33] invokestatic #42
        + Methodref [a/a/a/b/n.c (La/a/a/b/ao;)V]
      [36] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  - Method:       <init>(Ljava/lang/String;ILa/a/a/b/o;)V
    Access flags: 0x1000
      = synthetic v(java.lang.String,int,a.a.a.b.o)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #43
        + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 223, locals = 0, stack = 4):
      [0] new #18
        + Class [a/a/a/b/w]
      [3] dup
      [4] ldc #1
        + String [STRONG]
      [6] iconst_0
      [7] invokespecial #45
        + Methodref [a/a/a/b/w.<init> (Ljava/lang/String;I)V]
      [10] putstatic #24
        + Fieldref [a/a/a/b/v.a La/a/a/b/v;]
      [13] new #19
        + Class [a/a/a/b/x]
      [16] dup
      [17] ldc #2
        + String [STRONG_ACCESS]
      [19] iconst_1
      [20] invokespecial #46
        + Methodref [a/a/a/b/x.<init> (Ljava/lang/String;I)V]
      [23] putstatic #25
        + Fieldref [a/a/a/b/v.b La/a/a/b/v;]
      [26] new #20
        + Class [a/a/a/b/y]
      [29] dup
      [30] ldc #4
        + String [STRONG_WRITE]
      [32] iconst_2
      [33] invokespecial #47
        + Methodref [a/a/a/b/y.<init> (Ljava/lang/String;I)V]
      [36] putstatic #26
        + Fieldref [a/a/a/b/v.c La/a/a/b/v;]
      [39] new #21
        + Class [a/a/a/b/z]
      [42] dup
      [43] ldc #3
        + String [STRONG_ACCESS_WRITE]
      [45] iconst_3
      [46] invokespecial #48
        + Methodref [a/a/a/b/z.<init> (Ljava/lang/String;I)V]
      [49] putstatic #27
        + Fieldref [a/a/a/b/v.d La/a/a/b/v;]
      [52] new #10
        + Class [a/a/a/b/aa]
      [55] dup
      [56] ldc #5
        + String [WEAK]
      [58] iconst_4
      [59] invokespecial #35
        + Methodref [a/a/a/b/aa.<init> (Ljava/lang/String;I)V]
      [62] putstatic #28
        + Fieldref [a/a/a/b/v.e La/a/a/b/v;]
      [65] new #11
        + Class [a/a/a/b/ab]
      [68] dup
      [69] ldc #6
        + String [WEAK_ACCESS]
      [71] iconst_5
      [72] invokespecial #36
        + Methodref [a/a/a/b/ab.<init> (Ljava/lang/String;I)V]
      [75] putstatic #29
        + Fieldref [a/a/a/b/v.f La/a/a/b/v;]
      [78] new #12
        + Class [a/a/a/b/ac]
      [81] dup
      [82] ldc #8
        + String [WEAK_WRITE]
      [84] bipush 6
      [86] invokespecial #37
        + Methodref [a/a/a/b/ac.<init> (Ljava/lang/String;I)V]
      [89] putstatic #30
        + Fieldref [a/a/a/b/v.g La/a/a/b/v;]
      [92] new #13
        + Class [a/a/a/b/ad]
      [95] dup
      [96] ldc #7
        + String [WEAK_ACCESS_WRITE]
      [98] bipush 7
      [100] invokespecial #38
        + Methodref [a/a/a/b/ad.<init> (Ljava/lang/String;I)V]
      [103] putstatic #31
        + Fieldref [a/a/a/b/v.h La/a/a/b/v;]
      [106] bipush 8
      [108] anewarray #17
        + Class [a/a/a/b/v]
      [111] dup
      [112] iconst_0
      [113] getstatic #24
        + Fieldref [a/a/a/b/v.a La/a/a/b/v;]
      [116] aastore
      [117] dup
      [118] iconst_1
      [119] getstatic #25
        + Fieldref [a/a/a/b/v.b La/a/a/b/v;]
      [122] aastore
      [123] dup
      [124] iconst_2
      [125] getstatic #26
        + Fieldref [a/a/a/b/v.c La/a/a/b/v;]
      [128] aastore
      [129] dup
      [130] iconst_3
      [131] getstatic #27
        + Fieldref [a/a/a/b/v.d La/a/a/b/v;]
      [134] aastore
      [135] dup
      [136] iconst_4
      [137] getstatic #28
        + Fieldref [a/a/a/b/v.e La/a/a/b/v;]
      [140] aastore
      [141] dup
      [142] iconst_5
      [143] getstatic #29
        + Fieldref [a/a/a/b/v.f La/a/a/b/v;]
      [146] aastore
      [147] dup
      [148] bipush 6
      [150] getstatic #30
        + Fieldref [a/a/a/b/v.g La/a/a/b/v;]
      [153] aastore
      [154] dup
      [155] bipush 7
      [157] getstatic #31
        + Fieldref [a/a/a/b/v.h La/a/a/b/v;]
      [160] aastore
      [161] putstatic #33
        + Fieldref [a/a/a/b/v.j [La/a/a/b/v;]
      [164] bipush 8
      [166] anewarray #17
        + Class [a/a/a/b/v]
      [169] dup
      [170] iconst_0
      [171] getstatic #24
        + Fieldref [a/a/a/b/v.a La/a/a/b/v;]
      [174] aastore
      [175] dup
      [176] iconst_1
      [177] getstatic #25
        + Fieldref [a/a/a/b/v.b La/a/a/b/v;]
      [180] aastore
      [181] dup
      [182] iconst_2
      [183] getstatic #26
        + Fieldref [a/a/a/b/v.c La/a/a/b/v;]
      [186] aastore
      [187] dup
      [188] iconst_3
      [189] getstatic #27
        + Fieldref [a/a/a/b/v.d La/a/a/b/v;]
      [192] aastore
      [193] dup
      [194] iconst_4
      [195] getstatic #28
        + Fieldref [a/a/a/b/v.e La/a/a/b/v;]
      [198] aastore
      [199] dup
      [200] iconst_5
      [201] getstatic #29
        + Fieldref [a/a/a/b/v.f La/a/a/b/v;]
      [204] aastore
      [205] dup
      [206] bipush 6
      [208] getstatic #30
        + Fieldref [a/a/a/b/v.g La/a/a/b/v;]
      [211] aastore
      [212] dup
      [213] bipush 7
      [215] getstatic #31
        + Fieldref [a/a/a/b/v.h La/a/a/b/v;]
      [218] aastore
      [219] putstatic #32
        + Fieldref [a/a/a/b/v.i [La/a/a/b/v;]
      [222] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/w
  Superclass:    a/a/a/b/v
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.w extends a.a.a.b.v

Interfaces (count = 0):

Constant Pool (count = 20):
  + Class [a/a/a/b/ay]
  + Class [a/a/a/b/v]
  + Class [a/a/a/b/w]
  + Methodref [a/a/a/b/ay.<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + NameAndType [<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + Utf8 [(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/o;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ay]
  + Utf8 [a/a/a/b/v]
  + Utf8 [a/a/a/b/w]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = w(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #5
        + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ap,java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 12, locals = 5, stack = 5):
      [0] new #1
        + Class [a/a/a/b/ay]
      [3] dup
      [4] aload_2 v2
      [5] iload_3 v3
      [6] aload v4
      [8] invokespecial #4
        + Methodref [a/a/a/b/ay.<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/x
  Superclass:    a/a/a/b/v
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.x extends a.a.a.b.v

Interfaces (count = 0):

Constant Pool (count = 26):
  + Class [a/a/a/b/aw]
  + Class [a/a/a/b/v]
  + Class [a/a/a/b/x]
  + Methodref [a/a/a/b/aw.<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + Methodref [a/a/a/b/v.a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + Methodref [a/a/a/b/x.a (La/a/a/b/ao;La/a/a/b/ao;)V]
  + NameAndType [<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + NameAndType [a (La/a/a/b/ao;La/a/a/b/ao;)V]
  + NameAndType [a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/ao;La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/o;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/b/aw]
  + Utf8 [a/a/a/b/v]
  + Utf8 [a/a/a/b/x]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = x(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #5
        + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ap,java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 12, locals = 5, stack = 5):
      [0] new #1
        + Class [a/a/a/b/aw]
      [3] dup
      [4] aload_2 v2
      [5] iload_3 v3
      [6] aload v4
      [8] invokespecial #4
        + Methodref [a/a/a/b/aw.<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ap,a.a.a.b.ao,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 5, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] aload_3 v3
      [4] invokespecial #6
        + Methodref [a/a/a/b/v.a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
      [7] astore v4
      [9] aload_0 v0
      [10] aload_2 v2
      [11] aload v4
      [13] invokevirtual #7
        + Methodref [a/a/a/b/x.a (La/a/a/b/ao;La/a/a/b/ao;)V]
      [16] aload v4
      [18] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/y
  Superclass:    a/a/a/b/v
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.y extends a.a.a.b.v

Interfaces (count = 0):

Constant Pool (count = 27):
  + Class [a/a/a/b/ba]
  + Class [a/a/a/b/v]
  + Class [a/a/a/b/y]
  + Methodref [a/a/a/b/ba.<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + Methodref [a/a/a/b/v.a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + Methodref [a/a/a/b/y.b (La/a/a/b/ao;La/a/a/b/ao;)V]
  + NameAndType [<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + NameAndType [a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + NameAndType [b (La/a/a/b/ao;La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/ao;La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/o;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ba]
  + Utf8 [a/a/a/b/v]
  + Utf8 [a/a/a/b/y]
  + Utf8 [b]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = y(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #5
        + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ap,java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 12, locals = 5, stack = 5):
      [0] new #1
        + Class [a/a/a/b/ba]
      [3] dup
      [4] aload_2 v2
      [5] iload_3 v3
      [6] aload v4
      [8] invokespecial #4
        + Methodref [a/a/a/b/ba.<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ap,a.a.a.b.ao,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 5, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] aload_3 v3
      [4] invokespecial #6
        + Methodref [a/a/a/b/v.a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
      [7] astore v4
      [9] aload_0 v0
      [10] aload_2 v2
      [11] aload v4
      [13] invokevirtual #7
        + Methodref [a/a/a/b/y.b (La/a/a/b/ao;La/a/a/b/ao;)V]
      [16] aload v4
      [18] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/z
  Superclass:    a/a/a/b/v
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.z extends a.a.a.b.v

Interfaces (count = 0):

Constant Pool (count = 29):
  + Class [a/a/a/b/ax]
  + Class [a/a/a/b/v]
  + Class [a/a/a/b/z]
  + Methodref [a/a/a/b/ax.<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + Methodref [a/a/a/b/v.a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + Methodref [a/a/a/b/z.a (La/a/a/b/ao;La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/z.b (La/a/a/b/ao;La/a/a/b/ao;)V]
  + NameAndType [<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + NameAndType [a (La/a/a/b/ao;La/a/a/b/ao;)V]
  + NameAndType [a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + NameAndType [b (La/a/a/b/ao;La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/ao;La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/o;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ax]
  + Utf8 [a/a/a/b/v]
  + Utf8 [a/a/a/b/z]
  + Utf8 [b]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = z(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #5
        + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ap,java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 12, locals = 5, stack = 5):
      [0] new #1
        + Class [a/a/a/b/ax]
      [3] dup
      [4] aload_2 v2
      [5] iload_3 v3
      [6] aload v4
      [8] invokespecial #4
        + Methodref [a/a/a/b/ax.<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ap,a.a.a.b.ao,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 26, locals = 5, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] aload_3 v3
      [4] invokespecial #6
        + Methodref [a/a/a/b/v.a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
      [7] astore v4
      [9] aload_0 v0
      [10] aload_2 v2
      [11] aload v4
      [13] invokevirtual #7
        + Methodref [a/a/a/b/z.a (La/a/a/b/ao;La/a/a/b/ao;)V]
      [16] aload_0 v0
      [17] aload_2 v2
      [18] aload v4
      [20] invokevirtual #8
        + Methodref [a/a/a/b/z.b (La/a/a/b/ao;La/a/a/b/ao;)V]
      [23] aload v4
      [25] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/aa
  Superclass:    a/a/a/b/v
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.aa extends a.a.a.b.v

Interfaces (count = 0):

Constant Pool (count = 26):
  + Class [a/a/a/b/aa]
  + Class [a/a/a/b/ap]
  + Class [a/a/a/b/bg]
  + Class [a/a/a/b/v]
  + Fieldref [a/a/a/b/ap.h Ljava/lang/ref/ReferenceQueue;]
  + Methodref [a/a/a/b/bg.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + NameAndType [h Ljava/lang/ref/ReferenceQueue;]
  + Utf8 [(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/o;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/ref/ReferenceQueue;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/b/aa]
  + Utf8 [a/a/a/b/ap]
  + Utf8 [a/a/a/b/bg]
  + Utf8 [a/a/a/b/v]
  + Utf8 [h]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = aa(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #7
        + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ap,java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 16, locals = 5, stack = 6):
      [0] new #3
        + Class [a/a/a/b/bg]
      [3] dup
      [4] aload_1 v1
      [5] getfield #5
        + Fieldref [a/a/a/b/ap.h Ljava/lang/ref/ReferenceQueue;]
      [8] aload_2 v2
      [9] iload_3 v3
      [10] aload v4
      [12] invokespecial #6
        + Methodref [a/a/a/b/bg.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
      [15] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ab
  Superclass:    a/a/a/b/v
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.ab extends a.a.a.b.v

Interfaces (count = 0):

Constant Pool (count = 32):
  + Class [a/a/a/b/ab]
  + Class [a/a/a/b/ap]
  + Class [a/a/a/b/be]
  + Class [a/a/a/b/v]
  + Fieldref [a/a/a/b/ap.h Ljava/lang/ref/ReferenceQueue;]
  + Methodref [a/a/a/b/ab.a (La/a/a/b/ao;La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/be.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + Methodref [a/a/a/b/v.a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + NameAndType [a (La/a/a/b/ao;La/a/a/b/ao;)V]
  + NameAndType [a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + NameAndType [h Ljava/lang/ref/ReferenceQueue;]
  + Utf8 [(La/a/a/b/ao;La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/o;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/ref/ReferenceQueue;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ab]
  + Utf8 [a/a/a/b/ap]
  + Utf8 [a/a/a/b/be]
  + Utf8 [a/a/a/b/v]
  + Utf8 [h]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = ab(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #8
        + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ap,java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 16, locals = 5, stack = 6):
      [0] new #3
        + Class [a/a/a/b/be]
      [3] dup
      [4] aload_1 v1
      [5] getfield #5
        + Fieldref [a/a/a/b/ap.h Ljava/lang/ref/ReferenceQueue;]
      [8] aload_2 v2
      [9] iload_3 v3
      [10] aload v4
      [12] invokespecial #7
        + Methodref [a/a/a/b/be.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
      [15] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ap,a.a.a.b.ao,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 5, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] aload_3 v3
      [4] invokespecial #9
        + Methodref [a/a/a/b/v.a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
      [7] astore v4
      [9] aload_0 v0
      [10] aload_2 v2
      [11] aload v4
      [13] invokevirtual #6
        + Methodref [a/a/a/b/ab.a (La/a/a/b/ao;La/a/a/b/ao;)V]
      [16] aload v4
      [18] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ac
  Superclass:    a/a/a/b/v
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.ac extends a.a.a.b.v

Interfaces (count = 0):

Constant Pool (count = 33):
  + Class [a/a/a/b/ac]
  + Class [a/a/a/b/ap]
  + Class [a/a/a/b/bi]
  + Class [a/a/a/b/v]
  + Fieldref [a/a/a/b/ap.h Ljava/lang/ref/ReferenceQueue;]
  + Methodref [a/a/a/b/ac.b (La/a/a/b/ao;La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/bi.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + Methodref [a/a/a/b/v.a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + NameAndType [a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + NameAndType [b (La/a/a/b/ao;La/a/a/b/ao;)V]
  + NameAndType [h Ljava/lang/ref/ReferenceQueue;]
  + Utf8 [(La/a/a/b/ao;La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/o;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/ref/ReferenceQueue;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ac]
  + Utf8 [a/a/a/b/ap]
  + Utf8 [a/a/a/b/bi]
  + Utf8 [a/a/a/b/v]
  + Utf8 [b]
  + Utf8 [h]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = ac(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #8
        + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ap,java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 16, locals = 5, stack = 6):
      [0] new #3
        + Class [a/a/a/b/bi]
      [3] dup
      [4] aload_1 v1
      [5] getfield #5
        + Fieldref [a/a/a/b/ap.h Ljava/lang/ref/ReferenceQueue;]
      [8] aload_2 v2
      [9] iload_3 v3
      [10] aload v4
      [12] invokespecial #7
        + Methodref [a/a/a/b/bi.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
      [15] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ap,a.a.a.b.ao,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 5, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] aload_3 v3
      [4] invokespecial #9
        + Methodref [a/a/a/b/v.a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
      [7] astore v4
      [9] aload_0 v0
      [10] aload_2 v2
      [11] aload v4
      [13] invokevirtual #6
        + Methodref [a/a/a/b/ac.b (La/a/a/b/ao;La/a/a/b/ao;)V]
      [16] aload v4
      [18] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ad
  Superclass:    a/a/a/b/v
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.ad extends a.a.a.b.v

Interfaces (count = 0):

Constant Pool (count = 35):
  + Class [a/a/a/b/ad]
  + Class [a/a/a/b/ap]
  + Class [a/a/a/b/bf]
  + Class [a/a/a/b/v]
  + Fieldref [a/a/a/b/ap.h Ljava/lang/ref/ReferenceQueue;]
  + Methodref [a/a/a/b/ad.a (La/a/a/b/ao;La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/ad.b (La/a/a/b/ao;La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/bf.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + Methodref [a/a/a/b/v.a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + NameAndType [a (La/a/a/b/ao;La/a/a/b/ao;)V]
  + NameAndType [a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + NameAndType [b (La/a/a/b/ao;La/a/a/b/ao;)V]
  + NameAndType [h Ljava/lang/ref/ReferenceQueue;]
  + Utf8 [(La/a/a/b/ao;La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/o;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/ref/ReferenceQueue;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ad]
  + Utf8 [a/a/a/b/ap]
  + Utf8 [a/a/a/b/bf]
  + Utf8 [a/a/a/b/v]
  + Utf8 [b]
  + Utf8 [h]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = ad(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #9
        + Methodref [a/a/a/b/v.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ap,java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 16, locals = 5, stack = 6):
      [0] new #3
        + Class [a/a/a/b/bf]
      [3] dup
      [4] aload_1 v1
      [5] getfield #5
        + Fieldref [a/a/a/b/ap.h Ljava/lang/ref/ReferenceQueue;]
      [8] aload_2 v2
      [9] iload_3 v3
      [10] aload v4
      [12] invokespecial #8
        + Methodref [a/a/a/b/bf.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
      [15] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ap,a.a.a.b.ao,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 26, locals = 5, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] aload_3 v3
      [4] invokespecial #10
        + Methodref [a/a/a/b/v.a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
      [7] astore v4
      [9] aload_0 v0
      [10] aload_2 v2
      [11] aload v4
      [13] invokevirtual #6
        + Methodref [a/a/a/b/ad.a (La/a/a/b/ao;La/a/a/b/ao;)V]
      [16] aload_0 v0
      [17] aload_2 v2
      [18] aload v4
      [20] invokevirtual #7
        + Methodref [a/a/a/b/ad.b (La/a/a/b/ao;La/a/a/b/ao;)V]
      [23] aload v4
      [25] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ae
  Superclass:    a/a/a/b/ag
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.ae extends a.a.a.b.ag

Interfaces (count = 0):

Constant Pool (count = 23):
  + Class [a/a/a/b/ae]
  + Class [a/a/a/b/ag]
  + Fieldref [a/a/a/b/ae.a La/a/a/b/n;]
  + Methodref [a/a/a/b/ae.a ()Ljava/util/Map$Entry;]
  + Methodref [a/a/a/b/ae.e ()La/a/a/b/bp;]
  + Methodref [a/a/a/b/ag.<init> (La/a/a/b/n;)V]
  + NameAndType [<init> (La/a/a/b/n;)V]
  + NameAndType [a ()Ljava/util/Map$Entry;]
  + NameAndType [a La/a/a/b/n;]
  + NameAndType [e ()La/a/a/b/bp;]
  + Utf8 [()La/a/a/b/bp;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Map$Entry;]
  + Utf8 [(La/a/a/b/n;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/n;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ae]
  + Utf8 [a/a/a/b/ag]
  + Utf8 [e]
  + Utf8 [next]

Fields (count = 1):
  + Field:        a La/a/a/b/n;
    Access flags: 0x1010
      = final synthetic a.a.a.b.n a

Methods (count = 3):
  - Method:       <init>(La/a/a/b/n;)V
    Access flags: 0x0
      = ae(a.a.a.b.n)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #3
        + Fieldref [a/a/a/b/ae.a La/a/a/b/n;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] invokespecial #6
        + Methodref [a/a/a/b/ag.<init> (La/a/a/b/n;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/Map$Entry;
    Access flags: 0x1
      = public java.util.Map$Entry a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #5
        + Methodref [a/a/a/b/ae.e ()La/a/a/b/bp;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x1001
      = public synthetic java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/b/ae.a ()Ljava/util/Map$Entry;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/af
  Superclass:    a/a/a/b/q
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.af extends a.a.a.b.q

Interfaces (count = 0):

Constant Pool (count = 54):
  + Class [a/a/a/a/b]
  + Class [a/a/a/b/ae]
  + Class [a/a/a/b/af]
  + Class [a/a/a/b/n]
  + Class [a/a/a/b/q]
  + Class [java/lang/Object]
  + Class [java/util/Map$Entry]
  + Fieldref [a/a/a/b/af.c La/a/a/b/n;]
  + Fieldref [a/a/a/b/n.h La/a/a/a/b;]
  + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/b/ae.<init> (La/a/a/b/n;)V]
  + Methodref [a/a/a/b/n.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/n.remove (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/b/q.<init> (La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + NameAndType [<init> (La/a/a/b/n;)V]
  + NameAndType [<init> (La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [c La/a/a/b/n;]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [h La/a/a/a/b;]
  + NameAndType [remove (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [(La/a/a/b/n;)V]
  + Utf8 [(La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/b;]
  + Utf8 [La/a/a/b/n;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/b]
  + Utf8 [a/a/a/b/ae]
  + Utf8 [a/a/a/b/af]
  + Utf8 [a/a/a/b/n]
  + Utf8 [a/a/a/b/q]
  + Utf8 [c]
  + Utf8 [contains]
  + Utf8 [get]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [h]
  + Utf8 [iterator]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [remove]

Fields (count = 1):
  + Field:        c La/a/a/b/n;
    Access flags: 0x1010
      = final synthetic a.a.a.b.n c

Methods (count = 4):
  - Method:       <init>(La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V
    Access flags: 0x0
      = af(a.a.a.b.n,java.util.concurrent.ConcurrentMap)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #8
        + Fieldref [a/a/a/b/af.c La/a/a/b/n;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] aload_2 v2
      [8] invokespecial #14
        + Methodref [a/a/a/b/q.<init> (La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 1, stack = 3):
      [0] new #2
        + Class [a/a/a/b/ae]
      [3] dup
      [4] aload_0 v0
      [5] getfield #8
        + Fieldref [a/a/a/b/af.c La/a/a/b/n;]
      [8] invokespecial #11
        + Methodref [a/a/a/b/ae.<init> (La/a/a/b/n;)V]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 69, locals = 5, stack = 3):
      [0] aload_1 v1
      [1] instanceof #7
        + Class [java/util/Map$Entry]
      [4] ifne +5 (target=9)
      [7] iconst_0
      [8] ireturn
      [9] aload_1 v1
      [10] checkcast #7
        + Class [java/util/Map$Entry]
      [13] astore_2 v2
      [14] aload_2 v2
      [15] invokeinterface #15
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [20] astore_3 v3
      [21] aload_3 v3
      [22] ifnonnull +5 (target=27)
      [25] iconst_0
      [26] ireturn
      [27] aload_0 v0
      [28] getfield #8
        + Fieldref [a/a/a/b/af.c La/a/a/b/n;]
      [31] aload_3 v3
      [32] invokevirtual #12
        + Methodref [a/a/a/b/n.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [35] astore v4
      [37] aload v4
      [39] ifnull +28 (target=67)
      [42] aload_0 v0
      [43] getfield #8
        + Fieldref [a/a/a/b/af.c La/a/a/b/n;]
      [46] getfield #9
        + Fieldref [a/a/a/b/n.h La/a/a/a/b;]
      [49] aload_2 v2
      [50] invokeinterface #16
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [55] aload v4
      [57] invokevirtual #10
        + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [60] ifeq +7 (target=67)
      [63] iconst_1
      [64] goto +4 (target=68)
      [67] iconst_0
      [68] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [9] Var: ..., Stack: (empty)
        - [27] Var: ...[a:java/util/Map$Entry][a:java/lang/Object], Stack: (empty)
        - [67] Var: ...[a:java/lang/Object], Stack: (empty)
        - [68] Var: ..., Stack: [i]
  + Method:       remove(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean remove(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 48, locals = 4, stack = 3):
      [0] aload_1 v1
      [1] instanceof #7
        + Class [java/util/Map$Entry]
      [4] ifne +5 (target=9)
      [7] iconst_0
      [8] ireturn
      [9] aload_1 v1
      [10] checkcast #7
        + Class [java/util/Map$Entry]
      [13] astore_2 v2
      [14] aload_2 v2
      [15] invokeinterface #15
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [20] astore_3 v3
      [21] aload_3 v3
      [22] ifnull +24 (target=46)
      [25] aload_0 v0
      [26] getfield #8
        + Fieldref [a/a/a/b/af.c La/a/a/b/n;]
      [29] aload_3 v3
      [30] aload_2 v2
      [31] invokeinterface #16
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [36] invokevirtual #13
        + Methodref [a/a/a/b/n.remove (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [39] ifeq +7 (target=46)
      [42] iconst_1
      [43] goto +4 (target=47)
      [46] iconst_0
      [47] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [9] Var: ..., Stack: (empty)
        - [46] Var: ...[a:java/util/Map$Entry][a:java/lang/Object], Stack: (empty)
        - [47] Var: ..., Stack: [i]

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ag
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.b.ag extends java.lang.Object

Interfaces (count = 1):
  + Class [java/util/Iterator]

Constant Pool (count = 122):
  + Class [a/a/a/a/af]
  + Class [a/a/a/a/o]
  + Class [a/a/a/b/ag]
  + Class [a/a/a/b/ao]
  + Class [a/a/a/b/ap]
  + Class [a/a/a/b/bp]
  + Class [a/a/a/b/n]
  + Class [java/lang/Object]
  + Class [java/lang/Throwable]
  + Class [java/util/Iterator]
  + Class [java/util/NoSuchElementException]
  + Class [java/util/concurrent/atomic/AtomicReferenceArray]
  + Fieldref [a/a/a/b/ag.b I]
  + Fieldref [a/a/a/b/ag.c I]
  + Fieldref [a/a/a/b/ag.d La/a/a/b/ap;]
  + Fieldref [a/a/a/b/ag.e Ljava/util/concurrent/atomic/AtomicReferenceArray;]
  + Fieldref [a/a/a/b/ag.f La/a/a/b/ao;]
  + Fieldref [a/a/a/b/ag.g La/a/a/b/bp;]
  + Fieldref [a/a/a/b/ag.h La/a/a/b/bp;]
  + Fieldref [a/a/a/b/ag.i La/a/a/b/n;]
  + Fieldref [a/a/a/b/ap.b I]
  + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
  + Fieldref [a/a/a/b/n.e [La/a/a/b/ap;]
  + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
  + Methodref [a/a/a/a/af.a ()J]
  + Methodref [a/a/a/a/o.b (Z)V]
  + Methodref [a/a/a/b/ag.a (La/a/a/b/ao;)Z]
  + Methodref [a/a/a/b/ag.b ()V]
  + Methodref [a/a/a/b/ag.c ()Z]
  + Methodref [a/a/a/b/ag.d ()Z]
  + Methodref [a/a/a/b/ap.m ()V]
  + Methodref [a/a/a/b/bp.<init> (La/a/a/b/n;Ljava/lang/Object;Ljava/lang/Object;)V]
  + Methodref [a/a/a/b/bp.getKey ()Ljava/lang/Object;]
  + Methodref [a/a/a/b/n.a (La/a/a/b/ao;J)Ljava/lang/Object;]
  + Methodref [a/a/a/b/n.remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/util/NoSuchElementException.<init> ()V]
  + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
  + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
  + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
  + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/b/n;Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [a ()J]
  + NameAndType [a (La/a/a/b/ao;)Z]
  + NameAndType [a (La/a/a/b/ao;J)Ljava/lang/Object;]
  + NameAndType [b ()La/a/a/b/ao;]
  + NameAndType [b ()V]
  + NameAndType [b (Z)V]
  + NameAndType [b I]
  + NameAndType [c ()Z]
  + NameAndType [c I]
  + NameAndType [d ()Ljava/lang/Object;]
  + NameAndType [d ()Z]
  + NameAndType [d La/a/a/b/ap;]
  + NameAndType [e Ljava/util/concurrent/atomic/AtomicReferenceArray;]
  + NameAndType [e [La/a/a/b/ap;]
  + NameAndType [f La/a/a/b/ao;]
  + NameAndType [f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
  + NameAndType [g La/a/a/b/bp;]
  + NameAndType [get (I)Ljava/lang/Object;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [h La/a/a/b/bp;]
  + NameAndType [i La/a/a/b/n;]
  + NameAndType [length ()I]
  + NameAndType [m ()V]
  + NameAndType [r La/a/a/a/af;]
  + NameAndType [remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [()I]
  + Utf8 [()J]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()La/a/a/b/bp;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(La/a/a/b/ao;)Z]
  + Utf8 [(La/a/a/b/ao;J)Ljava/lang/Object;]
  + Utf8 [(La/a/a/b/n;)V]
  + Utf8 [(La/a/a/b/n;Ljava/lang/Object;Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Z)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [La/a/a/a/af;]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [La/a/a/b/ap;]
  + Utf8 [La/a/a/b/bp;]
  + Utf8 [La/a/a/b/n;]
  + Utf8 [Ljava/util/concurrent/atomic/AtomicReferenceArray;]
  + Utf8 [StackMapTable]
  + Utf8 [[La/a/a/b/ap;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/af]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/b/ag]
  + Utf8 [a/a/a/b/ao]
  + Utf8 [a/a/a/b/ap]
  + Utf8 [a/a/a/b/bp]
  + Utf8 [a/a/a/b/n]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [get]
  + Utf8 [getKey]
  + Utf8 [h]
  + Utf8 [hasNext]
  + Utf8 [i]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/Throwable]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/NoSuchElementException]
  + Utf8 [java/util/concurrent/atomic/AtomicReferenceArray]
  + Utf8 [length]
  + Utf8 [m]
  + Utf8 [r]
  + Utf8 [remove]

Fields (count = 8):
  + Field:        b I
    Access flags: 0x0
      = int b
  + Field:        c I
    Access flags: 0x0
      = int c
  + Field:        d La/a/a/b/ap;
    Access flags: 0x0
      = a.a.a.b.ap d
  + Field:        e Ljava/util/concurrent/atomic/AtomicReferenceArray;
    Access flags: 0x0
      = java.util.concurrent.atomic.AtomicReferenceArray e
  + Field:        f La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao f
  + Field:        g La/a/a/b/bp;
    Access flags: 0x0
      = a.a.a.b.bp g
  + Field:        h La/a/a/b/bp;
    Access flags: 0x0
      = a.a.a.b.bp h
  + Field:        i La/a/a/b/n;
    Access flags: 0x1010
      = final synthetic a.a.a.b.n i

Methods (count = 8):
  - Method:       <init>(La/a/a/b/n;)V
    Access flags: 0x0
      = ag(a.a.a.b.n)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 30, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #20
        + Fieldref [a/a/a/b/ag.i La/a/a/b/n;]
      [5] aload_0 v0
      [6] invokespecial #36
        + Methodref [java/lang/Object.<init> ()V]
      [9] aload_0 v0
      [10] aload_1 v1
      [11] getfield #23
        + Fieldref [a/a/a/b/n.e [La/a/a/b/ap;]
      [14] arraylength
      [15] iconst_1
      [16] isub
      [17] putfield #13
        + Fieldref [a/a/a/b/ag.b I]
      [20] aload_0 v0
      [21] iconst_m1
      [22] putfield #14
        + Fieldref [a/a/a/b/ag.c I]
      [25] aload_0 v0
      [26] invokevirtual #28
        + Methodref [a/a/a/b/ag.b ()V]
      [29] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()V
    Access flags: 0x10
      = final void b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 94, locals = 1, stack = 6):
      [0] aload_0 v0
      [1] aconst_null
      [2] putfield #18
        + Fieldref [a/a/a/b/ag.g La/a/a/b/bp;]
      [5] aload_0 v0
      [6] invokevirtual #29
        + Methodref [a/a/a/b/ag.c ()Z]
      [9] ifeq +4 (target=13)
      [12] return
      [13] aload_0 v0
      [14] invokevirtual #30
        + Methodref [a/a/a/b/ag.d ()Z]
      [17] ifeq +4 (target=21)
      [20] return
      [21] aload_0 v0
      [22] getfield #13
        + Fieldref [a/a/a/b/ag.b I]
      [25] iflt +68 (target=93)
      [28] aload_0 v0
      [29] aload_0 v0
      [30] getfield #20
        + Fieldref [a/a/a/b/ag.i La/a/a/b/n;]
      [33] getfield #23
        + Fieldref [a/a/a/b/n.e [La/a/a/b/ap;]
      [36] aload_0 v0
      [37] dup
      [38] getfield #13
        + Fieldref [a/a/a/b/ag.b I]
      [41] dup_x1
      [42] iconst_1
      [43] isub
      [44] putfield #13
        + Fieldref [a/a/a/b/ag.b I]
      [47] aaload
      [48] putfield #15
        + Fieldref [a/a/a/b/ag.d La/a/a/b/ap;]
      [51] aload_0 v0
      [52] getfield #15
        + Fieldref [a/a/a/b/ag.d La/a/a/b/ap;]
      [55] getfield #21
        + Fieldref [a/a/a/b/ap.b I]
      [58] ifeq -37 (target=21)
      [61] aload_0 v0
      [62] aload_0 v0
      [63] getfield #15
        + Fieldref [a/a/a/b/ag.d La/a/a/b/ap;]
      [66] getfield #22
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [69] putfield #16
        + Fieldref [a/a/a/b/ag.e Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [72] aload_0 v0
      [73] aload_0 v0
      [74] getfield #16
        + Fieldref [a/a/a/b/ag.e Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [77] invokevirtual #39
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [80] iconst_1
      [81] isub
      [82] putfield #14
        + Fieldref [a/a/a/b/ag.c I]
      [85] aload_0 v0
      [86] invokevirtual #30
        + Methodref [a/a/a/b/ag.d ()Z]
      [89] ifeq -68 (target=21)
      [92] return
      [93] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [13] Var: ..., Stack: (empty)
        - [21] Var: ..., Stack: (empty)
        - [93] Var: ..., Stack: (empty)
  + Method:       c()Z
    Access flags: 0x0
      = boolean c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 58, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #17
        + Fieldref [a/a/a/b/ag.f La/a/a/b/ao;]
      [4] ifnull +52 (target=56)
      [7] aload_0 v0
      [8] aload_0 v0
      [9] getfield #17
        + Fieldref [a/a/a/b/ag.f La/a/a/b/ao;]
      [12] invokeinterface #40
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [17] putfield #17
        + Fieldref [a/a/a/b/ag.f La/a/a/b/ao;]
      [20] aload_0 v0
      [21] getfield #17
        + Fieldref [a/a/a/b/ag.f La/a/a/b/ao;]
      [24] ifnull +32 (target=56)
      [27] aload_0 v0
      [28] aload_0 v0
      [29] getfield #17
        + Fieldref [a/a/a/b/ag.f La/a/a/b/ao;]
      [32] invokevirtual #27
        + Methodref [a/a/a/b/ag.a (La/a/a/b/ao;)Z]
      [35] ifeq +5 (target=40)
      [38] iconst_1
      [39] ireturn
      [40] aload_0 v0
      [41] aload_0 v0
      [42] getfield #17
        + Fieldref [a/a/a/b/ag.f La/a/a/b/ao;]
      [45] invokeinterface #40
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [50] putfield #17
        + Fieldref [a/a/a/b/ag.f La/a/a/b/ao;]
      [53] goto -33 (target=20)
      [56] iconst_0
      [57] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [20] Var: ..., Stack: (empty)
        - [40] Var: ..., Stack: (empty)
        - [56] Var: ..., Stack: (empty)
  + Method:       d()Z
    Access flags: 0x0
      = boolean d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 58, locals = 1, stack = 6):
      [0] aload_0 v0
      [1] getfield #14
        + Fieldref [a/a/a/b/ag.c I]
      [4] iflt +52 (target=56)
      [7] aload_0 v0
      [8] aload_0 v0
      [9] getfield #16
        + Fieldref [a/a/a/b/ag.e Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [12] aload_0 v0
      [13] dup
      [14] getfield #14
        + Fieldref [a/a/a/b/ag.c I]
      [17] dup_x1
      [18] iconst_1
      [19] isub
      [20] putfield #14
        + Fieldref [a/a/a/b/ag.c I]
      [23] invokevirtual #38
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [26] checkcast #4
        + Class [a/a/a/b/ao]
      [29] dup_x1
      [30] putfield #17
        + Fieldref [a/a/a/b/ag.f La/a/a/b/ao;]
      [33] ifnull -33 (target=0)
      [36] aload_0 v0
      [37] aload_0 v0
      [38] getfield #17
        + Fieldref [a/a/a/b/ag.f La/a/a/b/ao;]
      [41] invokevirtual #27
        + Methodref [a/a/a/b/ag.a (La/a/a/b/ao;)Z]
      [44] ifne +10 (target=54)
      [47] aload_0 v0
      [48] invokevirtual #29
        + Methodref [a/a/a/b/ag.c ()Z]
      [51] ifeq -51 (target=0)
      [54] iconst_1
      [55] ireturn
      [56] iconst_0
      [57] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [0] Var: ..., Stack: (empty)
        - [54] Var: ..., Stack: (empty)
        - [56] Var: ..., Stack: (empty)
  + Method:       a(La/a/a/b/ao;)Z
    Access flags: 0x0
      = boolean a(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 92, locals = 8, stack = 6):
      [0] aload_0 v0
      [1] getfield #20
        + Fieldref [a/a/a/b/ag.i La/a/a/b/n;]
      [4] getfield #24
        + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
      [7] invokevirtual #25
        + Methodref [a/a/a/a/af.a ()J]
      [10] lstore_2 v2
      [11] aload_1 v1
      [12] invokeinterface #41
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [17] astore v4
      [19] aload_0 v0
      [20] getfield #20
        + Fieldref [a/a/a/b/ag.i La/a/a/b/n;]
      [23] aload_1 v1
      [24] lload_2 v2
      [25] invokevirtual #34
        + Methodref [a/a/a/b/n.a (La/a/a/b/ao;J)Ljava/lang/Object;]
      [28] astore v5
      [30] aload v5
      [32] ifnull +35 (target=67)
      [35] aload_0 v0
      [36] new #6
        + Class [a/a/a/b/bp]
      [39] dup
      [40] aload_0 v0
      [41] getfield #20
        + Fieldref [a/a/a/b/ag.i La/a/a/b/n;]
      [44] aload v4
      [46] aload v5
      [48] invokespecial #32
        + Methodref [a/a/a/b/bp.<init> (La/a/a/b/n;Ljava/lang/Object;Ljava/lang/Object;)V]
      [51] putfield #18
        + Fieldref [a/a/a/b/ag.g La/a/a/b/bp;]
      [54] iconst_1
      [55] istore v6
      [57] aload_0 v0
      [58] getfield #15
        + Fieldref [a/a/a/b/ag.d La/a/a/b/ap;]
      [61] invokevirtual #31
        + Methodref [a/a/a/b/ap.m ()V]
      [64] iload v6
      [66] ireturn
      [67] iconst_0
      [68] istore v6
      [70] aload_0 v0
      [71] getfield #15
        + Fieldref [a/a/a/b/ag.d La/a/a/b/ap;]
      [74] invokevirtual #31
        + Methodref [a/a/a/b/ap.m ()V]
      [77] iload v6
      [79] ireturn
      [80] astore v7
      [82] aload_0 v0
      [83] getfield #15
        + Fieldref [a/a/a/b/ag.d La/a/a/b/ap;]
      [86] invokevirtual #31
        + Methodref [a/a/a/b/ap.m ()V]
      [89] aload v7
      [91] athrow
      Code attribute exceptions (count = 3):
      - ExceptionInfo (0 -> 57: 80):
      - ExceptionInfo (67 -> 70: 80):
      - ExceptionInfo (80 -> 82: 80):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [67] Var: ...[l][a:java/lang/Object][a:java/lang/Object], Stack: (empty)
        - [80] Var: [a:a/a/a/b/ag][a:a/a/a/b/ao], Stack: [a:java/lang/Throwable]
  + Method:       hasNext()Z
    Access flags: 0x1
      = public boolean hasNext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #18
        + Fieldref [a/a/a/b/ag.g La/a/a/b/bp;]
      [4] ifnull +7 (target=11)
      [7] iconst_1
      [8] goto +4 (target=12)
      [11] iconst_0
      [12] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [12] Var: ..., Stack: [i]
  + Method:       e()La/a/a/b/bp;
    Access flags: 0x0
      = a.a.a.b.bp e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 32, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #18
        + Fieldref [a/a/a/b/ag.g La/a/a/b/bp;]
      [4] ifnonnull +11 (target=15)
      [7] new #11
        + Class [java/util/NoSuchElementException]
      [10] dup
      [11] invokespecial #37
        + Methodref [java/util/NoSuchElementException.<init> ()V]
      [14] athrow
      [15] aload_0 v0
      [16] aload_0 v0
      [17] getfield #18
        + Fieldref [a/a/a/b/ag.g La/a/a/b/bp;]
      [20] putfield #19
        + Fieldref [a/a/a/b/ag.h La/a/a/b/bp;]
      [23] aload_0 v0
      [24] invokevirtual #28
        + Methodref [a/a/a/b/ag.b ()V]
      [27] aload_0 v0
      [28] getfield #19
        + Fieldref [a/a/a/b/ag.h La/a/a/b/bp;]
      [31] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [15] Var: ..., Stack: (empty)
  + Method:       remove()V
    Access flags: 0x1
      = public void remove()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 36, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #19
        + Fieldref [a/a/a/b/ag.h La/a/a/b/bp;]
      [4] ifnull +7 (target=11)
      [7] iconst_1
      [8] goto +4 (target=12)
      [11] iconst_0
      [12] invokestatic #26
        + Methodref [a/a/a/a/o.b (Z)V]
      [15] aload_0 v0
      [16] getfield #20
        + Fieldref [a/a/a/b/ag.i La/a/a/b/n;]
      [19] aload_0 v0
      [20] getfield #19
        + Fieldref [a/a/a/b/ag.h La/a/a/b/bp;]
      [23] invokevirtual #33
        + Methodref [a/a/a/b/bp.getKey ()Ljava/lang/Object;]
      [26] invokevirtual #35
        + Methodref [a/a/a/b/n.remove (Ljava/lang/Object;)Ljava/lang/Object;]
      [29] pop
      [30] aload_0 v0
      [31] aconst_null
      [32] putfield #19
        + Fieldref [a/a/a/b/ag.h La/a/a/b/bp;]
      [35] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [12] Var: ..., Stack: [i]

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ah
  Superclass:    a/a/a/b/ag
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.ah extends a.a.a.b.ag

Interfaces (count = 0):

Constant Pool (count = 25):
  + Class [a/a/a/b/ag]
  + Class [a/a/a/b/ah]
  + Class [a/a/a/b/bp]
  + Fieldref [a/a/a/b/ah.a La/a/a/b/n;]
  + Methodref [a/a/a/b/ag.<init> (La/a/a/b/n;)V]
  + Methodref [a/a/a/b/ah.e ()La/a/a/b/bp;]
  + Methodref [a/a/a/b/bp.getKey ()Ljava/lang/Object;]
  + NameAndType [<init> (La/a/a/b/n;)V]
  + NameAndType [a La/a/a/b/n;]
  + NameAndType [e ()La/a/a/b/bp;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + Utf8 [()La/a/a/b/bp;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [(La/a/a/b/n;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/n;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ag]
  + Utf8 [a/a/a/b/ah]
  + Utf8 [a/a/a/b/bp]
  + Utf8 [e]
  + Utf8 [getKey]
  + Utf8 [next]

Fields (count = 1):
  + Field:        a La/a/a/b/n;
    Access flags: 0x1010
      = final synthetic a.a.a.b.n a

Methods (count = 2):
  - Method:       <init>(La/a/a/b/n;)V
    Access flags: 0x0
      = ah(a.a.a.b.n)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #4
        + Fieldref [a/a/a/b/ah.a La/a/a/b/n;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] invokespecial #5
        + Methodref [a/a/a/b/ag.<init> (La/a/a/b/n;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #6
        + Methodref [a/a/a/b/ah.e ()La/a/a/b/bp;]
      [4] invokevirtual #7
        + Methodref [a/a/a/b/bp.getKey ()Ljava/lang/Object;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ai
  Superclass:    a/a/a/b/q
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.ai extends a.a.a.b.q

Interfaces (count = 0):

Constant Pool (count = 37):
  + Class [a/a/a/b/ah]
  + Class [a/a/a/b/ai]
  + Class [a/a/a/b/q]
  + Class [java/util/concurrent/ConcurrentMap]
  + Fieldref [a/a/a/b/ai.a Ljava/util/concurrent/ConcurrentMap;]
  + Fieldref [a/a/a/b/ai.c La/a/a/b/n;]
  + Methodref [a/a/a/b/ah.<init> (La/a/a/b/n;)V]
  + Methodref [a/a/a/b/q.<init> (La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
  + InterfaceMethodref [java/util/concurrent/ConcurrentMap.containsKey (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/concurrent/ConcurrentMap.remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [<init> (La/a/a/b/n;)V]
  + NameAndType [<init> (La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
  + NameAndType [a Ljava/util/concurrent/ConcurrentMap;]
  + NameAndType [c La/a/a/b/n;]
  + NameAndType [containsKey (Ljava/lang/Object;)Z]
  + NameAndType [remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [(La/a/a/b/n;)V]
  + Utf8 [(La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/n;]
  + Utf8 [Ljava/util/concurrent/ConcurrentMap;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ah]
  + Utf8 [a/a/a/b/ai]
  + Utf8 [a/a/a/b/q]
  + Utf8 [c]
  + Utf8 [contains]
  + Utf8 [containsKey]
  + Utf8 [iterator]
  + Utf8 [java/util/concurrent/ConcurrentMap]
  + Utf8 [remove]

Fields (count = 1):
  + Field:        c La/a/a/b/n;
    Access flags: 0x1010
      = final synthetic a.a.a.b.n c

Methods (count = 4):
  - Method:       <init>(La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V
    Access flags: 0x0
      = ai(a.a.a.b.n,java.util.concurrent.ConcurrentMap)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/b/ai.c La/a/a/b/n;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] aload_2 v2
      [8] invokespecial #8
        + Methodref [a/a/a/b/q.<init> (La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 1, stack = 3):
      [0] new #1
        + Class [a/a/a/b/ah]
      [3] dup
      [4] aload_0 v0
      [5] getfield #6
        + Fieldref [a/a/a/b/ai.c La/a/a/b/n;]
      [8] invokespecial #7
        + Methodref [a/a/a/b/ah.<init> (La/a/a/b/n;)V]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/b/ai.a Ljava/util/concurrent/ConcurrentMap;]
      [4] aload_1 v1
      [5] invokeinterface #9
        + InterfaceMethodref [java/util/concurrent/ConcurrentMap.containsKey (Ljava/lang/Object;)Z]
      [10] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean remove(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/b/ai.a Ljava/util/concurrent/ConcurrentMap;]
      [4] aload_1 v1
      [5] invokeinterface #10
        + InterfaceMethodref [java/util/concurrent/ConcurrentMap.remove (Ljava/lang/Object;)Ljava/lang/Object;]
      [10] ifnull +7 (target=17)
      [13] iconst_1
      [14] goto +4 (target=18)
      [17] iconst_0
      [18] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [17] Var: ..., Stack: (empty)
        - [18] Var: ..., Stack: [i]

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/aj
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.b.aj extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/b/bc]

Constant Pool (count = 131):
  + Class [a/a/a/a/aa]
  + Class [a/a/a/b/aj]
  + Class [a/a/a/b/ak]
  + Class [a/a/a/b/bc]
  + Class [a/a/a/b/j]
  + Class [a/a/a/b/n]
  + Class [a/a/a/g/a/h]
  + Class [a/a/a/g/a/q]
  + Class [a/a/a/g/a/w]
  + Class [a/a/a/g/a/y]
  + Class [java/lang/InterruptedException]
  + Class [java/lang/Object]
  + Class [java/lang/Thread]
  + Class [java/lang/Throwable]
  + Class [java/util/concurrent/TimeUnit]
  + Fieldref [a/a/a/b/aj.a La/a/a/b/bc;]
  + Fieldref [a/a/a/b/aj.b La/a/a/g/a/w;]
  + Fieldref [a/a/a/b/aj.c La/a/a/a/aa;]
  + Fieldref [java/util/concurrent/TimeUnit.NANOSECONDS Ljava/util/concurrent/TimeUnit;]
  + Methodref [a/a/a/a/aa.a ()La/a/a/a/aa;]
  + Methodref [a/a/a/a/aa.a (Ljava/util/concurrent/TimeUnit;)J]
  + Methodref [a/a/a/a/aa.b ()La/a/a/a/aa;]
  + Methodref [a/a/a/b/aj.<init> (La/a/a/b/bc;)V]
  + Methodref [a/a/a/b/aj.a (Ljava/lang/Throwable;)Z]
  + Methodref [a/a/a/b/aj.b (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/b/aj.b (Ljava/lang/Throwable;)La/a/a/g/a/q;]
  + Methodref [a/a/a/b/ak.<init> (La/a/a/b/aj;)V]
  + Methodref [a/a/a/b/j.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/j.a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/g/a/q;]
  + Methodref [a/a/a/b/n.o ()La/a/a/b/bc;]
  + Methodref [a/a/a/g/a/h.a (La/a/a/g/a/q;La/a/a/a/e;)La/a/a/g/a/q;]
  + Methodref [a/a/a/g/a/h.a (Ljava/lang/Object;)La/a/a/g/a/q;]
  + Methodref [a/a/a/g/a/h.a (Ljava/lang/Throwable;)La/a/a/g/a/q;]
  + Methodref [a/a/a/g/a/w.a (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/g/a/w.a (Ljava/lang/Throwable;)Z]
  + Methodref [a/a/a/g/a/w.c ()La/a/a/g/a/w;]
  + Methodref [a/a/a/g/a/y.a (Ljava/util/concurrent/Future;)Ljava/lang/Object;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Thread.currentThread ()Ljava/lang/Thread;]
  + Methodref [java/lang/Thread.interrupt ()V]
  + InterfaceMethodref [a/a/a/b/bc.a ()I]
  + InterfaceMethodref [a/a/a/b/bc.d ()Z]
  + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/b/aj;)V]
  + NameAndType [<init> (La/a/a/b/bc;)V]
  + NameAndType [NANOSECONDS Ljava/util/concurrent/TimeUnit;]
  + NameAndType [a ()I]
  + NameAndType [a ()La/a/a/a/aa;]
  + NameAndType [a (La/a/a/g/a/q;La/a/a/a/e;)La/a/a/g/a/q;]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/g/a/q;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;)Z]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/g/a/q;]
  + NameAndType [a (Ljava/lang/Throwable;)La/a/a/g/a/q;]
  + NameAndType [a (Ljava/lang/Throwable;)Z]
  + NameAndType [a (Ljava/util/concurrent/Future;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/util/concurrent/TimeUnit;)J]
  + NameAndType [a La/a/a/b/bc;]
  + NameAndType [b ()La/a/a/a/aa;]
  + NameAndType [b (Ljava/lang/Object;)Z]
  + NameAndType [b (Ljava/lang/Throwable;)La/a/a/g/a/q;]
  + NameAndType [b La/a/a/g/a/w;]
  + NameAndType [c ()La/a/a/g/a/w;]
  + NameAndType [c La/a/a/a/aa;]
  + NameAndType [currentThread ()Ljava/lang/Thread;]
  + NameAndType [d ()Z]
  + NameAndType [get ()Ljava/lang/Object;]
  + NameAndType [interrupt ()V]
  + NameAndType [o ()La/a/a/b/bc;]
  + Utf8 [()I]
  + Utf8 [()J]
  + Utf8 [()La/a/a/a/aa;]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()La/a/a/b/bc;]
  + Utf8 [()La/a/a/g/a/w;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Thread;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/b/aj;)V]
  + Utf8 [(La/a/a/b/bc;)V]
  + Utf8 [(La/a/a/g/a/q;La/a/a/a/e;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;La/a/a/b/j;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/lang/Throwable;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/lang/Throwable;)Z]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;]
  + Utf8 [(Ljava/util/concurrent/Future;)Ljava/lang/Object;]
  + Utf8 [(Ljava/util/concurrent/TimeUnit;)J]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/aa;]
  + Utf8 [La/a/a/b/bc;]
  + Utf8 [La/a/a/g/a/w;]
  + Utf8 [Ljava/util/concurrent/TimeUnit;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [NANOSECONDS]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/aa]
  + Utf8 [a/a/a/b/aj]
  + Utf8 [a/a/a/b/ak]
  + Utf8 [a/a/a/b/bc]
  + Utf8 [a/a/a/b/j]
  + Utf8 [a/a/a/b/n]
  + Utf8 [a/a/a/g/a/h]
  + Utf8 [a/a/a/g/a/q]
  + Utf8 [a/a/a/g/a/w]
  + Utf8 [a/a/a/g/a/y]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [currentThread]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [get]
  + Utf8 [interrupt]
  + Utf8 [java/lang/InterruptedException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/Thread]
  + Utf8 [java/lang/Throwable]
  + Utf8 [java/util/concurrent/TimeUnit]
  + Utf8 [o]

Fields (count = 3):
  + Field:        a La/a/a/b/bc;
    Access flags: 0x40
      = volatile a.a.a.b.bc a
  + Field:        b La/a/a/g/a/w;
    Access flags: 0x10
      = final a.a.a.g.a.w b
  + Field:        c La/a/a/a/aa;
    Access flags: 0x10
      = final a.a.a.a.aa c

Methods (count = 16):
  - Method:       <init>()V
    Access flags: 0x1
      = public aj()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokestatic #30
        + Methodref [a/a/a/b/n.o ()La/a/a/b/bc;]
      [4] invokespecial #23
        + Methodref [a/a/a/b/aj.<init> (La/a/a/b/bc;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/b/bc;)V
    Access flags: 0x1
      = public aj(a.a.a.b.bc)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #38
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] invokestatic #36
        + Methodref [a/a/a/g/a/w.c ()La/a/a/g/a/w;]
      [8] putfield #17
        + Fieldref [a/a/a/b/aj.b La/a/a/g/a/w;]
      [11] aload_0 v0
      [12] invokestatic #20
        + Methodref [a/a/a/a/aa.a ()La/a/a/a/aa;]
      [15] putfield #18
        + Fieldref [a/a/a/b/aj.c La/a/a/a/aa;]
      [18] aload_0 v0
      [19] aload_1 v1
      [20] putfield #16
        + Fieldref [a/a/a/b/aj.a La/a/a/b/bc;]
      [23] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()Z
    Access flags: 0x1
      = public boolean c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()Z
    Access flags: 0x1
      = public boolean d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #16
        + Fieldref [a/a/a/b/aj.a La/a/a/b/bc;]
      [4] invokeinterface #42
        + InterfaceMethodref [a/a/a/b/bc.d ()Z]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()I
    Access flags: 0x1
      = public int a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #16
        + Fieldref [a/a/a/b/aj.a La/a/a/b/bc;]
      [4] invokeinterface #41
        + InterfaceMethodref [a/a/a/b/bc.a ()I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean b(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #17
        + Fieldref [a/a/a/b/aj.b La/a/a/g/a/w;]
      [4] aload_1 v1
      [5] invokevirtual #34
        + Methodref [a/a/a/g/a/w.a (Ljava/lang/Object;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Throwable;)Z
    Access flags: 0x1
      = public boolean a(java.lang.Throwable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #17
        + Fieldref [a/a/a/b/aj.b La/a/a/g/a/w;]
      [4] aload_1 v1
      [5] invokevirtual #35
        + Methodref [a/a/a/g/a/w.a (Ljava/lang/Throwable;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Throwable;)La/a/a/g/a/q;
    Access flags: 0x2
      = private a.a.a.g.a.q b(java.lang.Throwable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokestatic #33
        + Methodref [a/a/a/g/a/h.a (Ljava/lang/Throwable;)La/a/a/g/a/q;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 21, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] ifnull +12 (target=13)
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokevirtual #25
        + Methodref [a/a/a/b/aj.b (Ljava/lang/Object;)Z]
      [9] pop
      [10] goto +10 (target=20)
      [13] aload_0 v0
      [14] invokestatic #30
        + Methodref [a/a/a/b/n.o ()La/a/a/b/bc;]
      [17] putfield #16
        + Fieldref [a/a/a/b/aj.a La/a/a/b/bc;]
      [20] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ..., Stack: (empty)
        - [20] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Object;La/a/a/b/j;)La/a/a/g/a/q;
    Access flags: 0x1
      = public a.a.a.g.a.q a(java.lang.Object,a.a.a.b.j)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 122, locals = 5, stack = 4):
      [0] aload_0 v0
      [1] getfield #18
        + Fieldref [a/a/a/b/aj.c La/a/a/a/aa;]
      [4] invokevirtual #22
        + Methodref [a/a/a/a/aa.b ()La/a/a/a/aa;]
      [7] pop
      [8] aload_0 v0
      [9] getfield #16
        + Fieldref [a/a/a/b/aj.a La/a/a/b/bc;]
      [12] invokeinterface #43
        + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
      [17] astore_3 v3
      [18] aload_3 v3
      [19] ifnonnull +32 (target=51)
      [22] aload_2 v2
      [23] aload_1 v1
      [24] invokevirtual #28
        + Methodref [a/a/a/b/j.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [27] astore v4
      [29] aload_0 v0
      [30] aload v4
      [32] invokevirtual #25
        + Methodref [a/a/a/b/aj.b (Ljava/lang/Object;)Z]
      [35] ifeq +10 (target=45)
      [38] aload_0 v0
      [39] getfield #17
        + Fieldref [a/a/a/b/aj.b La/a/a/g/a/w;]
      [42] goto +8 (target=50)
      [45] aload v4
      [47] invokestatic #32
        + Methodref [a/a/a/g/a/h.a (Ljava/lang/Object;)La/a/a/g/a/q;]
      [50] areturn
      [51] aload_2 v2
      [52] aload_1 v1
      [53] aload_3 v3
      [54] invokevirtual #29
        + Methodref [a/a/a/b/j.a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/g/a/q;]
      [57] astore v4
      [59] aload v4
      [61] ifnonnull +8 (target=69)
      [64] aconst_null
      [65] invokestatic #32
        + Methodref [a/a/a/g/a/h.a (Ljava/lang/Object;)La/a/a/g/a/q;]
      [68] areturn
      [69] aload v4
      [71] new #3
        + Class [a/a/a/b/ak]
      [74] dup
      [75] aload_0 v0
      [76] invokespecial #27
        + Methodref [a/a/a/b/ak.<init> (La/a/a/b/aj;)V]
      [79] invokestatic #31
        + Methodref [a/a/a/g/a/h.a (La/a/a/g/a/q;La/a/a/a/e;)La/a/a/g/a/q;]
      [82] areturn
      [83] astore v4
      [85] aload v4
      [87] instanceof #11
        + Class [java/lang/InterruptedException]
      [90] ifeq +9 (target=99)
      [93] invokestatic #39
        + Methodref [java/lang/Thread.currentThread ()Ljava/lang/Thread;]
      [96] invokevirtual #40
        + Methodref [java/lang/Thread.interrupt ()V]
      [99] aload_0 v0
      [100] aload v4
      [102] invokevirtual #24
        + Methodref [a/a/a/b/aj.a (Ljava/lang/Throwable;)Z]
      [105] ifeq +10 (target=115)
      [108] aload_0 v0
      [109] getfield #17
        + Fieldref [a/a/a/b/aj.b La/a/a/g/a/w;]
      [112] goto +9 (target=121)
      [115] aload_0 v0
      [116] aload v4
      [118] invokespecial #26
        + Methodref [a/a/a/b/aj.b (Ljava/lang/Throwable;)La/a/a/g/a/q;]
      [121] areturn
      Code attribute exceptions (count = 3):
      - ExceptionInfo (18 -> 50: 83):
      + Class [java/lang/Throwable]
      - ExceptionInfo (51 -> 68: 83):
      + Class [java/lang/Throwable]
      - ExceptionInfo (69 -> 82: 83):
      + Class [java/lang/Throwable]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 8):
        - [45] Var: ...[a:java/lang/Object][a:java/lang/Object], Stack: (empty)
        - [50] Var: ..., Stack: [a:a/a/a/g/a/q]
        - [51] Var: -1, Stack: (empty)
        - [69] Var: ...[a:a/a/a/g/a/q], Stack: (empty)
        - [83] Var: [a:a/a/a/b/aj][a:java/lang/Object][a:a/a/a/b/j][a:java/lang/Object], Stack: [a:java/lang/Throwable]
        - [99] Var: ...[a:java/lang/Throwable], Stack: (empty)
        - [115] Var: ..., Stack: (empty)
        - [121] Var: ..., Stack: [a:a/a/a/g/a/q]
  + Method:       f()J
    Access flags: 0x1
      = public long f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #18
        + Fieldref [a/a/a/b/aj.c La/a/a/a/aa;]
      [4] getstatic #19
        + Fieldref [java/util/concurrent/TimeUnit.NANOSECONDS Ljava/util/concurrent/TimeUnit;]
      [7] invokevirtual #21
        + Methodref [a/a/a/a/aa.a (Ljava/util/concurrent/TimeUnit;)J]
      [10] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #17
        + Fieldref [a/a/a/b/aj.b La/a/a/g/a/w;]
      [4] invokestatic #37
        + Methodref [a/a/a/g/a/y.a (Ljava/util/concurrent/Future;)Ljava/lang/Object;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #16
        + Fieldref [a/a/a/b/aj.a La/a/a/b/bc;]
      [4] invokeinterface #43
        + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       g()La/a/a/b/bc;
    Access flags: 0x1
      = public a.a.a.b.bc g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #16
        + Fieldref [a/a/a/b/aj.a La/a/a/b/bc;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aconst_null
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;
    Access flags: 0x1
      = public a.a.a.b.bc a(java.lang.ref.ReferenceQueue,java.lang.Object,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 2, locals = 4, stack = 1):
      [0] aload_0 v0
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ak
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.b.ak extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/a/e]

Constant Pool (count = 24):
  + Class [a/a/a/a/e]
  + Class [a/a/a/b/aj]
  + Class [a/a/a/b/ak]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/b/ak.a La/a/a/b/aj;]
  + Methodref [a/a/a/b/aj.b (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a La/a/a/b/aj;]
  + NameAndType [b (Ljava/lang/Object;)Z]
  + Utf8 [()V]
  + Utf8 [(La/a/a/b/aj;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/aj;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/e]
  + Utf8 [a/a/a/b/aj]
  + Utf8 [a/a/a/b/ak]
  + Utf8 [b]
  + Utf8 [java/lang/Object]

Fields (count = 1):
  + Field:        a La/a/a/b/aj;
    Access flags: 0x1010
      = final synthetic a.a.a.b.aj a

Methods (count = 2):
  - Method:       <init>(La/a/a/b/aj;)V
    Access flags: 0x0
      = ak(a.a.a.b.aj)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #5
        + Fieldref [a/a/a/b/ak.a La/a/a/b/aj;]
      [5] aload_0 v0
      [6] invokespecial #7
        + Methodref [java/lang/Object.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/b/ak.a La/a/a/b/aj;]
      [4] aload_1 v1
      [5] invokevirtual #6
        + Methodref [a/a/a/b/aj.b (Ljava/lang/Object;)Z]
      [8] pop
      [9] aload_1 v1
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/al
  Superclass:    a/a/a/b/am
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.b.al extends a.a.a.b.am

Interfaces (count = 1):
  + Class [a/a/a/b/m]

Constant Pool (count = 47):
  + Class [a/a/a/a/o]
  + Class [a/a/a/b/al]
  + Class [a/a/a/b/am]
  + Class [a/a/a/b/j]
  + Class [a/a/a/b/m]
  + Class [a/a/a/b/n]
  + Class [a/a/a/g/a/x]
  + Class [java/util/concurrent/ExecutionException]
  + Fieldref [a/a/a/b/al.a La/a/a/b/n;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/al.b (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/al.c (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/am.<init> (La/a/a/b/n;La/a/a/b/o;)V]
  + Methodref [a/a/a/b/n.<init> (La/a/a/b/d;La/a/a/b/j;)V]
  + Methodref [a/a/a/b/n.b (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/g/a/x.<init> (Ljava/lang/Throwable;)V]
  + Methodref [java/util/concurrent/ExecutionException.getCause ()Ljava/lang/Throwable;]
  + NameAndType [<init> (La/a/a/b/d;La/a/a/b/j;)V]
  + NameAndType [<init> (La/a/a/b/n;La/a/a/b/o;)V]
  + NameAndType [<init> (Ljava/lang/Throwable;)V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a La/a/a/b/n;]
  + NameAndType [b (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [c (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [getCause ()Ljava/lang/Throwable;]
  + Utf8 [()Ljava/lang/Throwable;]
  + Utf8 [(La/a/a/b/d;La/a/a/b/j;)V]
  + Utf8 [(La/a/a/b/n;La/a/a/b/o;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Throwable;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/n;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/b/al]
  + Utf8 [a/a/a/b/am]
  + Utf8 [a/a/a/b/j]
  + Utf8 [a/a/a/b/m]
  + Utf8 [a/a/a/b/n]
  + Utf8 [a/a/a/g/a/x]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [getCause]
  + Utf8 [java/util/concurrent/ExecutionException]

Fields (count = 0):

Methods (count = 4):
  - Method:       <init>(La/a/a/b/d;La/a/a/b/j;)V
    Access flags: 0x0
      = al(a.a.a.b.d,a.a.a.b.j)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 3, stack = 5):
      [0] aload_0 v0
      [1] new #6
        + Class [a/a/a/b/n]
      [4] dup
      [5] aload_1 v1
      [6] aload_2 v2
      [7] invokestatic #10
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [10] checkcast #4
        + Class [a/a/a/b/j]
      [13] invokespecial #14
        + Methodref [a/a/a/b/n.<init> (La/a/a/b/d;La/a/a/b/j;)V]
      [16] aconst_null
      [17] invokespecial #13
        + Methodref [a/a/a/b/am.<init> (La/a/a/b/n;La/a/a/b/o;)V]
      [20] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object b(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/b/al.a La/a/a/b/n;]
      [4] aload_1 v1
      [5] invokevirtual #15
        + Methodref [a/a/a/b/n.b (Ljava/lang/Object;)Ljava/lang/Object;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object c(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #11
        + Methodref [a/a/a/b/al.b (Ljava/lang/Object;)Ljava/lang/Object;]
      [5] areturn
      [6] astore_2 v2
      [7] new #7
        + Class [a/a/a/g/a/x]
      [10] dup
      [11] aload_2 v2
      [12] invokevirtual #17
        + Methodref [java/util/concurrent/ExecutionException.getCause ()Ljava/lang/Throwable;]
      [15] invokespecial #16
        + Methodref [a/a/a/g/a/x.<init> (Ljava/lang/Throwable;)V]
      [18] athrow
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 5: 6):
      + Class [java/util/concurrent/ExecutionException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [6] Var: ..., Stack: [a:java/util/concurrent/ExecutionException]
  + Method:       a(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #12
        + Methodref [a/a/a/b/al.c (Ljava/lang/Object;)Ljava/lang/Object;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/am
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.b.am extends java.lang.Object

Interfaces (count = 1):
  + Class [java/io/Serializable]

Constant Pool (count = 20):
  + Class [a/a/a/b/am]
  + Class [java/io/Serializable]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/b/am.a La/a/a/b/n;]
  + Methodref [a/a/a/b/am.<init> (La/a/a/b/n;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/b/n;)V]
  + NameAndType [a La/a/a/b/n;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/b/n;)V]
  + Utf8 [(La/a/a/b/n;La/a/a/b/o;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/n;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/am]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Object]

Fields (count = 1):
  + Field:        a La/a/a/b/n;
    Access flags: 0x10
      = final a.a.a.b.n a

Methods (count = 2):
  - Method:       <init>(La/a/a/b/n;)V
    Access flags: 0x2
      = private am(a.a.a.b.n)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #6
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #4
        + Fieldref [a/a/a/b/am.a La/a/a/b/n;]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/b/n;La/a/a/b/o;)V
    Access flags: 0x1000
      = synthetic am(a.a.a.b.n,a.a.a.b.o)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #5
        + Methodref [a/a/a/b/am.<init> (La/a/a/b/n;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/an
  Superclass:    java/lang/Enum
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.an extends java.lang.Enum

Interfaces (count = 1):
  + Class [a/a/a/b/ao]

Constant Pool (count = 52):
  + String [INSTANCE]
  + Class [[La/a/a/b/an;]
  + Class [a/a/a/b/an]
  + Class [a/a/a/b/ao]
  + Class [java/lang/Enum]
  + Fieldref [a/a/a/b/an.a La/a/a/b/an;]
  + Fieldref [a/a/a/b/an.b [La/a/a/b/an;]
  + Methodref [[La/a/a/b/an;.clone ()Ljava/lang/Object;]
  + Methodref [a/a/a/b/an.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + NameAndType [<init> (Ljava/lang/String;I)V]
  + NameAndType [a La/a/a/b/an;]
  + NameAndType [b [La/a/a/b/an;]
  + NameAndType [clone ()Ljava/lang/Object;]
  + NameAndType [valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [()I]
  + Utf8 [()J]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()La/a/a/b/bc;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()[La/a/a/b/an;]
  + Utf8 [(J)V]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/bc;)V]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [(Ljava/lang/String;)La/a/a/b/an;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [INSTANCE]
  + Utf8 [La/a/a/b/an;]
  + Utf8 [[La/a/a/b/an;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/an]
  + Utf8 [a/a/a/b/ao]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clone]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [h]
  + Utf8 [i]
  + Utf8 [j]
  + Utf8 [java/lang/Enum]
  + Utf8 [valueOf]
  + Utf8 [values]

Fields (count = 2):
  + Field:        a La/a/a/b/an;
    Access flags: 0x4019
      = public static final a.a.a.b.an a
  + Field:        b [La/a/a/b/an;
    Access flags: 0x101a
      = private static final synthetic a.a.a.b.an[] b

Methods (count = 21):
  + Method:       values()[La/a/a/b/an;
    Access flags: 0x9
      = public static a.a.a.b.an[] values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 0, stack = 1):
      [0] getstatic #7
        + Fieldref [a/a/a/b/an.b [La/a/a/b/an;]
      [3] invokevirtual #8
        + Methodref [[La/a/a/b/an;.clone ()Ljava/lang/Object;]
      [6] checkcast #2
        + Class [[La/a/a/b/an;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       valueOf(Ljava/lang/String;)La/a/a/b/an;
    Access flags: 0x9
      = public static a.a.a.b.an valueOf(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 2):
      [0] ldc #3
        + Class [a/a/a/b/an]
      [2] aload_0 v0
      [3] invokestatic #11
        + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
      [6] checkcast #3
        + Class [a/a/a/b/an]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x2
      = private an(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #10
        + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/b/bc;
    Access flags: 0x1
      = public a.a.a.b.bc a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aconst_null
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/bc;)V
    Access flags: 0x1
      = public void a(a.a.a.b.bc)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aconst_null
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()I
    Access flags: 0x1
      = public int c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aconst_null
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()J
    Access flags: 0x1
      = public long e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 2):
      [0] lconst_0
      [1] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(J)V
    Access flags: 0x1
      = public void a(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 3, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void a(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       g()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void b(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       h()J
    Access flags: 0x1
      = public long h()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 2):
      [0] lconst_0
      [1] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(J)V
    Access flags: 0x1
      = public void b(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 3, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       i()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao i()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void c(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       j()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao j()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void d(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 27, locals = 0, stack = 4):
      [0] new #3
        + Class [a/a/a/b/an]
      [3] dup
      [4] ldc #1
        + String [INSTANCE]
      [6] iconst_0
      [7] invokespecial #9
        + Methodref [a/a/a/b/an.<init> (Ljava/lang/String;I)V]
      [10] putstatic #6
        + Fieldref [a/a/a/b/an.a La/a/a/b/an;]
      [13] iconst_1
      [14] anewarray #3
        + Class [a/a/a/b/an]
      [17] dup
      [18] iconst_0
      [19] getstatic #6
        + Fieldref [a/a/a/b/an.a La/a/a/b/an;]
      [22] aastore
      [23] putstatic #7
        + Fieldref [a/a/a/b/an.b [La/a/a/b/an;]
      [26] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ao
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x600
    = interface a.a.a.b.ao extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 25):
  + Class [a/a/a/b/ao]
  + Class [java/lang/Object]
  + Utf8 [()I]
  + Utf8 [()J]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()La/a/a/b/bc;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [(J)V]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/bc;)V]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ao]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [h]
  + Utf8 [i]
  + Utf8 [j]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 17):
  + Method:       a()La/a/a/b/bc;
    Access flags: 0x401
      = public abstract a.a.a.b.bc a()
  + Method:       a(La/a/a/b/bc;)V
    Access flags: 0x401
      = public abstract void a(a.a.a.b.bc)
  + Method:       b()La/a/a/b/ao;
    Access flags: 0x401
      = public abstract a.a.a.b.ao b()
    Class member attributes (count = 1):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       c()I
    Access flags: 0x401
      = public abstract int c()
  + Method:       d()Ljava/lang/Object;
    Access flags: 0x401
      = public abstract java.lang.Object d()
    Class member attributes (count = 1):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       e()J
    Access flags: 0x401
      = public abstract long e()
  + Method:       a(J)V
    Access flags: 0x401
      = public abstract void a(long)
  + Method:       f()La/a/a/b/ao;
    Access flags: 0x401
      = public abstract a.a.a.b.ao f()
  + Method:       a(La/a/a/b/ao;)V
    Access flags: 0x401
      = public abstract void a(a.a.a.b.ao)
  + Method:       g()La/a/a/b/ao;
    Access flags: 0x401
      = public abstract a.a.a.b.ao g()
  + Method:       b(La/a/a/b/ao;)V
    Access flags: 0x401
      = public abstract void b(a.a.a.b.ao)
  + Method:       h()J
    Access flags: 0x401
      = public abstract long h()
  + Method:       b(J)V
    Access flags: 0x401
      = public abstract void b(long)
  + Method:       i()La/a/a/b/ao;
    Access flags: 0x401
      = public abstract a.a.a.b.ao i()
  + Method:       c(La/a/a/b/ao;)V
    Access flags: 0x401
      = public abstract void c(a.a.a.b.ao)
  + Method:       j()La/a/a/b/ao;
    Access flags: 0x401
      = public abstract a.a.a.b.ao j()
  + Method:       d(La/a/a/b/ao;)V
    Access flags: 0x401
      = public abstract void d(a.a.a.b.ao)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ap
  Superclass:    java/util/concurrent/locks/ReentrantLock
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.b.ap extends java.util.concurrent.locks.ReentrantLock

Interfaces (count = 0):

Constant Pool (count = 562):
  + Integer [1073741824]
  + String [.]
  + String [CacheLoader returned null for key ]
  + String [Recursive load of: %s]
  + String [Weights must be non-negative]
  + Class [a/a/a/a/af]
  + Class [a/a/a/a/b]
  + Class [a/a/a/a/o]
  + Class [a/a/a/b/aj]
  + Class [a/a/a/b/ao]
  + Class [a/a/a/b/ap]
  + Class [a/a/a/b/aq]
  + Class [a/a/a/b/as]
  + Class [a/a/a/b/bc]
  + Class [a/a/a/b/bk]
  + Class [a/a/a/b/bm]
  + Class [a/a/a/b/bw]
  + Class [a/a/a/b/c]
  + Class [a/a/a/b/cd]
  + Class [a/a/a/b/cj]
  + Class [a/a/a/b/j]
  + Class [a/a/a/b/k]
  + Class [a/a/a/b/n]
  + Class [a/a/a/b/s]
  + Class [a/a/a/b/v]
  + Class [a/a/a/g/a/e]
  + Class [a/a/a/g/a/q]
  + Class [a/a/a/g/a/x]
  + Class [a/a/a/g/a/y]
  + Class [java/lang/AssertionError]
  + Class [java/lang/Error]
  + Class [java/lang/Object]
  + Class [java/lang/RuntimeException]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/Thread]
  + Class [java/lang/Throwable]
  + Class [java/lang/ref/Reference]
  + Class [java/lang/ref/ReferenceQueue]
  + Class [java/util/Iterator]
  + Class [java/util/Queue]
  + Class [java/util/concurrent/ConcurrentLinkedQueue]
  + Class [java/util/concurrent/ExecutionException]
  + Class [java/util/concurrent/atomic/AtomicInteger]
  + Class [java/util/concurrent/atomic/AtomicReferenceArray]
  + Class [java/util/concurrent/locks/ReentrantLock]
  + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
  + Fieldref [a/a/a/b/ap.b I]
  + Fieldref [a/a/a/b/ap.c I]
  + Fieldref [a/a/a/b/ap.d I]
  + Fieldref [a/a/a/b/ap.e I]
  + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
  + Fieldref [a/a/a/b/ap.g J]
  + Fieldref [a/a/a/b/ap.h Ljava/lang/ref/ReferenceQueue;]
  + Fieldref [a/a/a/b/ap.i Ljava/lang/ref/ReferenceQueue;]
  + Fieldref [a/a/a/b/ap.j Ljava/util/Queue;]
  + Fieldref [a/a/a/b/ap.k Ljava/util/concurrent/atomic/AtomicInteger;]
  + Fieldref [a/a/a/b/ap.l Ljava/util/Queue;]
  + Fieldref [a/a/a/b/ap.m Ljava/util/Queue;]
  + Fieldref [a/a/a/b/ap.n La/a/a/b/c;]
  + Fieldref [a/a/a/b/bw.a La/a/a/b/bw;]
  + Fieldref [a/a/a/b/bw.b La/a/a/b/bw;]
  + Fieldref [a/a/a/b/bw.c La/a/a/b/bw;]
  + Fieldref [a/a/a/b/bw.d La/a/a/b/bw;]
  + Fieldref [a/a/a/b/bw.e La/a/a/b/bw;]
  + Fieldref [a/a/a/b/n.b La/a/a/g/a/s;]
  + Fieldref [a/a/a/b/n.g La/a/a/a/b;]
  + Fieldref [a/a/a/b/n.h La/a/a/a/b;]
  + Fieldref [a/a/a/b/n.j La/a/a/b/as;]
  + Fieldref [a/a/a/b/n.l La/a/a/b/cj;]
  + Fieldref [a/a/a/b/n.o J]
  + Fieldref [a/a/a/b/n.p Ljava/util/Queue;]
  + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
  + Fieldref [a/a/a/b/n.s La/a/a/b/v;]
  + Fieldref [a/a/a/b/n.u La/a/a/b/j;]
  + Fieldref [a/a/a/b/n.v La/a/a/b/bc;]
  + Fieldref [a/a/a/b/n.w Ljava/util/Queue;]
  + Methodref [a/a/a/a/af.a ()J]
  + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/a/o.b (ZLjava/lang/Object;)V]
  + Methodref [a/a/a/a/o.b (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Methodref [a/a/a/b/aj.<init> ()V]
  + Methodref [a/a/a/b/aj.<init> (La/a/a/b/bc;)V]
  + Methodref [a/a/a/b/aj.a (Ljava/lang/Object;La/a/a/b/j;)La/a/a/g/a/q;]
  + Methodref [a/a/a/b/aj.d ()Z]
  + Methodref [a/a/a/b/aj.f ()J]
  + Methodref [a/a/a/b/aj.g ()La/a/a/b/bc;]
  + Methodref [a/a/a/b/ap.a ()V]
  + Methodref [a/a/a/b/ap.a (I)Ljava/util/concurrent/atomic/AtomicReferenceArray;]
  + Methodref [a/a/a/b/ap.a (J)V]
  + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;IJ)V]
  + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;ILa/a/a/b/bw;)Z]
  + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;J)V]
  + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;La/a/a/b/ao;Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)La/a/a/b/ao;]
  + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;La/a/a/b/bw;)V]
  + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;Ljava/lang/Object;ILjava/lang/Object;JLa/a/a/b/j;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;Ljava/lang/Object;La/a/a/b/bc;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;Ljava/lang/Object;Ljava/lang/Object;J)V]
  + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;I)La/a/a/b/ao;]
  + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;IJ)La/a/a/b/ao;]
  + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/aj;)Z]
  + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/b/j;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/g/a/q;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/aj;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)V]
  + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/j;Z)Ljava/lang/Object;]
  + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;IZ)La/a/a/b/aj;]
  + Methodref [a/a/a/b/ap.a (Ljava/util/concurrent/atomic/AtomicReferenceArray;)V]
  + Methodref [a/a/a/b/ap.b ()V]
  + Methodref [a/a/a/b/ap.b (I)La/a/a/b/ao;]
  + Methodref [a/a/a/b/ap.b (J)V]
  + Methodref [a/a/a/b/ap.b (La/a/a/b/ao;J)V]
  + Methodref [a/a/a/b/ap.b (La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + Methodref [a/a/a/b/ap.b (Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/b/j;)La/a/a/g/a/q;]
  + Methodref [a/a/a/b/ap.b (Ljava/lang/Object;ILa/a/a/b/j;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/ap.c ()V]
  + Methodref [a/a/a/b/ap.c (J)V]
  + Methodref [a/a/a/b/ap.c (La/a/a/b/ao;J)Ljava/lang/Object;]
  + Methodref [a/a/a/b/ap.d ()V]
  + Methodref [a/a/a/b/ap.d (J)V]
  + Methodref [a/a/a/b/ap.e ()V]
  + Methodref [a/a/a/b/ap.f ()V]
  + Methodref [a/a/a/b/ap.g ()V]
  + Methodref [a/a/a/b/ap.h ()V]
  + Methodref [a/a/a/b/ap.i ()V]
  + Methodref [a/a/a/b/ap.isHeldByCurrentThread ()Z]
  + Methodref [a/a/a/b/ap.j ()La/a/a/b/ao;]
  + Methodref [a/a/a/b/ap.k ()V]
  + Methodref [a/a/a/b/ap.lock ()V]
  + Methodref [a/a/a/b/ap.m ()V]
  + Methodref [a/a/a/b/ap.n ()V]
  + Methodref [a/a/a/b/ap.o ()V]
  + Methodref [a/a/a/b/ap.p ()V]
  + Methodref [a/a/a/b/ap.tryLock ()Z]
  + Methodref [a/a/a/b/ap.unlock ()V]
  + Methodref [a/a/a/b/aq.<init> (La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/g/a/q;)V]
  + Methodref [a/a/a/b/as.a (La/a/a/b/ap;La/a/a/b/ao;Ljava/lang/Object;I)La/a/a/b/bc;]
  + Methodref [a/a/a/b/bk.<init> (Ljava/lang/Object;I)V]
  + Methodref [a/a/a/b/bm.<init> ()V]
  + Methodref [a/a/a/b/bw.a ()Z]
  + Methodref [a/a/a/b/cd.<init> (Ljava/lang/Object;Ljava/lang/Object;La/a/a/b/bw;)V]
  + Methodref [a/a/a/b/k.<init> (Ljava/lang/String;)V]
  + Methodref [a/a/a/b/n.a ()Z]
  + Methodref [a/a/a/b/n.a (La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/n.a (La/a/a/b/bc;)V]
  + Methodref [a/a/a/b/n.b ()Z]
  + Methodref [a/a/a/b/n.b (La/a/a/b/ao;J)Z]
  + Methodref [a/a/a/b/n.e ()Z]
  + Methodref [a/a/a/b/n.f ()Z]
  + Methodref [a/a/a/b/n.g ()Z]
  + Methodref [a/a/a/b/n.h ()Z]
  + Methodref [a/a/a/b/n.i ()Z]
  + Methodref [a/a/a/b/n.m ()Z]
  + Methodref [a/a/a/b/n.n ()Z]
  + Methodref [a/a/a/b/n.q ()Ljava/util/Queue;]
  + Methodref [a/a/a/b/n.r ()V]
  + Methodref [a/a/a/b/s.<init> ()V]
  + Methodref [a/a/a/b/v.a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + Methodref [a/a/a/b/v.a (La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + Methodref [a/a/a/g/a/e.<init> (Ljava/lang/Error;)V]
  + Methodref [a/a/a/g/a/x.<init> (Ljava/lang/Throwable;)V]
  + Methodref [a/a/a/g/a/y.a (Ljava/util/concurrent/Future;)Ljava/lang/Object;]
  + Methodref [java/lang/AssertionError.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/lang/Thread.holdsLock (Ljava/lang/Object;)Z]
  + Methodref [java/lang/ref/ReferenceQueue.<init> ()V]
  + Methodref [java/lang/ref/ReferenceQueue.poll ()Ljava/lang/ref/Reference;]
  + Methodref [java/util/concurrent/ConcurrentLinkedQueue.<init> ()V]
  + Methodref [java/util/concurrent/ExecutionException.getCause ()Ljava/lang/Throwable;]
  + Methodref [java/util/concurrent/atomic/AtomicInteger.<init> ()V]
  + Methodref [java/util/concurrent/atomic/AtomicInteger.incrementAndGet ()I]
  + Methodref [java/util/concurrent/atomic/AtomicInteger.set (I)V]
  + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.<init> (I)V]
  + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
  + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
  + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
  + Methodref [java/util/concurrent/locks/ReentrantLock.<init> ()V]
  + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
  + InterfaceMethodref [a/a/a/b/ao.a (J)V]
  + InterfaceMethodref [a/a/a/b/ao.a (La/a/a/b/bc;)V]
  + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
  + InterfaceMethodref [a/a/a/b/ao.b (J)V]
  + InterfaceMethodref [a/a/a/b/ao.c ()I]
  + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
  + InterfaceMethodref [a/a/a/b/ao.h ()J]
  + InterfaceMethodref [a/a/a/b/bc.a ()I]
  + InterfaceMethodref [a/a/a/b/bc.a (Ljava/lang/Object;)V]
  + InterfaceMethodref [a/a/a/b/bc.a (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;]
  + InterfaceMethodref [a/a/a/b/bc.c ()Z]
  + InterfaceMethodref [a/a/a/b/bc.d ()Z]
  + InterfaceMethodref [a/a/a/b/bc.e ()Ljava/lang/Object;]
  + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
  + InterfaceMethodref [a/a/a/b/c.a ()V]
  + InterfaceMethodref [a/a/a/b/c.a (I)V]
  + InterfaceMethodref [a/a/a/b/c.a (J)V]
  + InterfaceMethodref [a/a/a/b/c.b (I)V]
  + InterfaceMethodref [a/a/a/b/c.b (J)V]
  + InterfaceMethodref [a/a/a/b/cj.a (Ljava/lang/Object;Ljava/lang/Object;)I]
  + InterfaceMethodref [a/a/a/g/a/q.a (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + InterfaceMethodref [a/a/a/g/a/q.isDone ()Z]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Queue.add (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Queue.clear ()V]
  + InterfaceMethodref [java/util/Queue.contains (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Queue.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [java/util/Queue.offer (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Queue.peek ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Queue.poll ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Queue.remove (Ljava/lang/Object;)Z]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (I)V]
  + NameAndType [<init> (La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/g/a/q;)V]
  + NameAndType [<init> (La/a/a/b/bc;)V]
  + NameAndType [<init> (Ljava/lang/Error;)V]
  + NameAndType [<init> (Ljava/lang/Object;I)V]
  + NameAndType [<init> (Ljava/lang/Object;Ljava/lang/Object;La/a/a/b/bw;)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (Ljava/lang/Throwable;)V]
  + NameAndType [a ()I]
  + NameAndType [a ()J]
  + NameAndType [a ()La/a/a/b/bc;]
  + NameAndType [a ()V]
  + NameAndType [a ()Z]
  + NameAndType [a (I)Ljava/util/concurrent/atomic/AtomicReferenceArray;]
  + NameAndType [a (I)V]
  + NameAndType [a (J)V]
  + NameAndType [a (La/a/a/b/ao;)V]
  + NameAndType [a (La/a/a/b/ao;IJ)V]
  + NameAndType [a (La/a/a/b/ao;ILa/a/a/b/bw;)Z]
  + NameAndType [a (La/a/a/b/ao;J)V]
  + NameAndType [a (La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + NameAndType [a (La/a/a/b/ao;La/a/a/b/ao;Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)La/a/a/b/ao;]
  + NameAndType [a (La/a/a/b/ao;La/a/a/b/bw;)V]
  + NameAndType [a (La/a/a/b/ao;Ljava/lang/Object;ILjava/lang/Object;JLa/a/a/b/j;)Ljava/lang/Object;]
  + NameAndType [a (La/a/a/b/ao;Ljava/lang/Object;La/a/a/b/bc;)Ljava/lang/Object;]
  + NameAndType [a (La/a/a/b/ao;Ljava/lang/Object;Ljava/lang/Object;J)V]
  + NameAndType [a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + NameAndType [a (La/a/a/b/ap;La/a/a/b/ao;Ljava/lang/Object;I)La/a/a/b/bc;]
  + NameAndType [a (La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + NameAndType [a (La/a/a/b/bc;)V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;)V]
  + NameAndType [a (Ljava/lang/Object;I)La/a/a/b/ao;]
  + NameAndType [a (Ljava/lang/Object;IJ)La/a/a/b/ao;]
  + NameAndType [a (Ljava/lang/Object;ILa/a/a/b/aj;)Z]
  + NameAndType [a (Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/b/j;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/g/a/q;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;ILa/a/a/b/aj;Ljava/lang/Object;)Z]
  + NameAndType [a (Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + NameAndType [a (Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)V]
  + NameAndType [a (Ljava/lang/Object;ILa/a/a/b/j;Z)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;IZ)La/a/a/b/aj;]
  + NameAndType [a (Ljava/lang/Object;La/a/a/b/j;)La/a/a/g/a/q;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)I]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [a (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + NameAndType [a (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;]
  + NameAndType [a (Ljava/util/concurrent/Future;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/util/concurrent/atomic/AtomicReferenceArray;)V]
  + NameAndType [a La/a/a/b/bw;]
  + NameAndType [a La/a/a/b/n;]
  + NameAndType [add (Ljava/lang/Object;)Z]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b ()La/a/a/b/ao;]
  + NameAndType [b ()V]
  + NameAndType [b ()Z]
  + NameAndType [b (I)La/a/a/b/ao;]
  + NameAndType [b (I)V]
  + NameAndType [b (J)V]
  + NameAndType [b (La/a/a/b/ao;J)V]
  + NameAndType [b (La/a/a/b/ao;J)Z]
  + NameAndType [b (La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + NameAndType [b (Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/b/j;)La/a/a/g/a/q;]
  + NameAndType [b (Ljava/lang/Object;ILa/a/a/b/j;)Ljava/lang/Object;]
  + NameAndType [b (ZLjava/lang/Object;)V]
  + NameAndType [b (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + NameAndType [b I]
  + NameAndType [b La/a/a/b/bw;]
  + NameAndType [b La/a/a/g/a/s;]
  + NameAndType [c ()I]
  + NameAndType [c ()V]
  + NameAndType [c ()Z]
  + NameAndType [c (J)V]
  + NameAndType [c (La/a/a/b/ao;J)Ljava/lang/Object;]
  + NameAndType [c I]
  + NameAndType [c La/a/a/b/bw;]
  + NameAndType [clear ()V]
  + NameAndType [contains (Ljava/lang/Object;)Z]
  + NameAndType [d ()Ljava/lang/Object;]
  + NameAndType [d ()V]
  + NameAndType [d ()Z]
  + NameAndType [d (J)V]
  + NameAndType [d I]
  + NameAndType [d La/a/a/b/bw;]
  + NameAndType [e ()Ljava/lang/Object;]
  + NameAndType [e ()V]
  + NameAndType [e ()Z]
  + NameAndType [e I]
  + NameAndType [e La/a/a/b/bw;]
  + NameAndType [f ()J]
  + NameAndType [f ()V]
  + NameAndType [f ()Z]
  + NameAndType [f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
  + NameAndType [g ()La/a/a/b/bc;]
  + NameAndType [g ()V]
  + NameAndType [g ()Z]
  + NameAndType [g J]
  + NameAndType [g La/a/a/a/b;]
  + NameAndType [get ()Ljava/lang/Object;]
  + NameAndType [get (I)Ljava/lang/Object;]
  + NameAndType [getCause ()Ljava/lang/Throwable;]
  + NameAndType [h ()J]
  + NameAndType [h ()V]
  + NameAndType [h ()Z]
  + NameAndType [h La/a/a/a/b;]
  + NameAndType [h Ljava/lang/ref/ReferenceQueue;]
  + NameAndType [hasNext ()Z]
  + NameAndType [holdsLock (Ljava/lang/Object;)Z]
  + NameAndType [i ()V]
  + NameAndType [i ()Z]
  + NameAndType [i Ljava/lang/ref/ReferenceQueue;]
  + NameAndType [incrementAndGet ()I]
  + NameAndType [isDone ()Z]
  + NameAndType [isHeldByCurrentThread ()Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [j ()La/a/a/b/ao;]
  + NameAndType [j La/a/a/b/as;]
  + NameAndType [j Ljava/util/Queue;]
  + NameAndType [k ()V]
  + NameAndType [k Ljava/util/concurrent/atomic/AtomicInteger;]
  + NameAndType [l La/a/a/b/cj;]
  + NameAndType [l Ljava/util/Queue;]
  + NameAndType [length ()I]
  + NameAndType [lock ()V]
  + NameAndType [m ()V]
  + NameAndType [m ()Z]
  + NameAndType [m Ljava/util/Queue;]
  + NameAndType [n ()V]
  + NameAndType [n ()Z]
  + NameAndType [n La/a/a/b/c;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [o ()V]
  + NameAndType [o J]
  + NameAndType [offer (Ljava/lang/Object;)Z]
  + NameAndType [p ()V]
  + NameAndType [p Ljava/util/Queue;]
  + NameAndType [peek ()Ljava/lang/Object;]
  + NameAndType [poll ()Ljava/lang/Object;]
  + NameAndType [poll ()Ljava/lang/ref/Reference;]
  + NameAndType [q ()Ljava/util/Queue;]
  + NameAndType [r ()V]
  + NameAndType [r La/a/a/a/af;]
  + NameAndType [remove (Ljava/lang/Object;)Z]
  + NameAndType [s La/a/a/b/v;]
  + NameAndType [set (I)V]
  + NameAndType [set (ILjava/lang/Object;)V]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [tryLock ()Z]
  + NameAndType [u La/a/a/b/j;]
  + NameAndType [unlock ()V]
  + NameAndType [v La/a/a/b/bc;]
  + NameAndType [w Ljava/util/Queue;]
  + Utf8 [()I]
  + Utf8 [()J]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()La/a/a/b/bc;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/Throwable;]
  + Utf8 [()Ljava/lang/ref/Reference;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Queue;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)La/a/a/b/ao;]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(I)Ljava/util/concurrent/atomic/AtomicReferenceArray;]
  + Utf8 [(I)V]
  + Utf8 [(ILjava/lang/Object;)V]
  + Utf8 [(J)V]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/ao;I)Z]
  + Utf8 [(La/a/a/b/ao;IJ)V]
  + Utf8 [(La/a/a/b/ao;ILa/a/a/b/bw;)Z]
  + Utf8 [(La/a/a/b/ao;J)Ljava/lang/Object;]
  + Utf8 [(La/a/a/b/ao;J)V]
  + Utf8 [(La/a/a/b/ao;J)Z]
  + Utf8 [(La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/ao;La/a/a/b/ao;Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/ao;La/a/a/b/bw;)V]
  + Utf8 [(La/a/a/b/ao;Ljava/lang/Object;ILjava/lang/Object;JLa/a/a/b/j;)Ljava/lang/Object;]
  + Utf8 [(La/a/a/b/ao;Ljava/lang/Object;La/a/a/b/bc;)Ljava/lang/Object;]
  + Utf8 [(La/a/a/b/ao;Ljava/lang/Object;Ljava/lang/Object;J)V]
  + Utf8 [(La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/ap;La/a/a/b/ao;Ljava/lang/Object;I)La/a/a/b/bc;]
  + Utf8 [(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/g/a/q;)V]
  + Utf8 [(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/bc;)V]
  + Utf8 [(La/a/a/b/n;IJLa/a/a/b/c;)V]
  + Utf8 [(Ljava/lang/Error;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;I)La/a/a/b/ao;]
  + Utf8 [(Ljava/lang/Object;I)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;I)V]
  + Utf8 [(Ljava/lang/Object;I)Z]
  + Utf8 [(Ljava/lang/Object;IJ)La/a/a/b/ao;]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/aj;)Z]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/b/j;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/b/j;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/g/a/q;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/aj;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/bc;)Z]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)V]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/j;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/j;Z)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;IZ)La/a/a/b/aj;]
  + Utf8 [(Ljava/lang/Object;La/a/a/b/j;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;La/a/a/b/bw;)V]
  + Utf8 [(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/Throwable;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;]
  + Utf8 [(Ljava/util/concurrent/Future;)Ljava/lang/Object;]
  + Utf8 [(Ljava/util/concurrent/atomic/AtomicReferenceArray;)V]
  + Utf8 [(ZLjava/lang/Object;)V]
  + Utf8 [(ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Utf8 [.]
  + Utf8 [<init>]
  + Utf8 [CacheLoader returned null for key ]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [J]
  + Utf8 [La/a/a/a/af;]
  + Utf8 [La/a/a/a/b;]
  + Utf8 [La/a/a/b/as;]
  + Utf8 [La/a/a/b/bc;]
  + Utf8 [La/a/a/b/bw;]
  + Utf8 [La/a/a/b/c;]
  + Utf8 [La/a/a/b/cj;]
  + Utf8 [La/a/a/b/j;]
  + Utf8 [La/a/a/b/n;]
  + Utf8 [La/a/a/b/v;]
  + Utf8 [La/a/a/g/a/s;]
  + Utf8 [Ljava/lang/ref/ReferenceQueue;]
  + Utf8 [Ljava/util/Queue;]
  + Utf8 [Ljava/util/concurrent/atomic/AtomicInteger;]
  + Utf8 [Ljava/util/concurrent/atomic/AtomicReferenceArray;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [Ljavax/annotation/concurrent/GuardedBy;]
  + Utf8 [Recursive load of: %s]
  + Utf8 [RuntimeInvisibleAnnotations]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [Segment.this]
  + Utf8 [StackMapTable]
  + Utf8 [Weights must be non-negative]
  + Utf8 [a]
  + Utf8 [a/a/a/a/af]
  + Utf8 [a/a/a/a/b]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/b/aj]
  + Utf8 [a/a/a/b/ao]
  + Utf8 [a/a/a/b/ap]
  + Utf8 [a/a/a/b/aq]
  + Utf8 [a/a/a/b/as]
  + Utf8 [a/a/a/b/bc]
  + Utf8 [a/a/a/b/bk]
  + Utf8 [a/a/a/b/bm]
  + Utf8 [a/a/a/b/bw]
  + Utf8 [a/a/a/b/c]
  + Utf8 [a/a/a/b/cd]
  + Utf8 [a/a/a/b/cj]
  + Utf8 [a/a/a/b/j]
  + Utf8 [a/a/a/b/k]
  + Utf8 [a/a/a/b/n]
  + Utf8 [a/a/a/b/s]
  + Utf8 [a/a/a/b/v]
  + Utf8 [a/a/a/g/a/e]
  + Utf8 [a/a/a/g/a/q]
  + Utf8 [a/a/a/g/a/x]
  + Utf8 [a/a/a/g/a/y]
  + Utf8 [add]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clear]
  + Utf8 [contains]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [get]
  + Utf8 [getCause]
  + Utf8 [h]
  + Utf8 [hasNext]
  + Utf8 [holdsLock]
  + Utf8 [i]
  + Utf8 [incrementAndGet]
  + Utf8 [isDone]
  + Utf8 [isHeldByCurrentThread]
  + Utf8 [iterator]
  + Utf8 [j]
  + Utf8 [java/lang/AssertionError]
  + Utf8 [java/lang/Error]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/RuntimeException]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/Thread]
  + Utf8 [java/lang/Throwable]
  + Utf8 [java/lang/ref/Reference]
  + Utf8 [java/lang/ref/ReferenceQueue]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Queue]
  + Utf8 [java/util/concurrent/ConcurrentLinkedQueue]
  + Utf8 [java/util/concurrent/ExecutionException]
  + Utf8 [java/util/concurrent/atomic/AtomicInteger]
  + Utf8 [java/util/concurrent/atomic/AtomicReferenceArray]
  + Utf8 [java/util/concurrent/locks/ReentrantLock]
  + Utf8 [k]
  + Utf8 [l]
  + Utf8 [length]
  + Utf8 [lock]
  + Utf8 [m]
  + Utf8 [n]
  + Utf8 [next]
  + Utf8 [o]
  + Utf8 [offer]
  + Utf8 [p]
  + Utf8 [peek]
  + Utf8 [poll]
  + Utf8 [q]
  + Utf8 [r]
  + Utf8 [remove]
  + Utf8 [s]
  + Utf8 [set]
  + Utf8 [toString]
  + Utf8 [tryLock]
  + Utf8 [u]
  + Utf8 [unlock]
  + Utf8 [v]
  + Utf8 [value]
  + Utf8 [w]

Fields (count = 14):
  + Field:        a La/a/a/b/n;
    Access flags: 0x10
      = final a.a.a.b.n a
  + Field:        b I
    Access flags: 0x40
      = volatile int b
  + Field:        c I
    Access flags: 0x0
      = int c
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Field:        d I
    Access flags: 0x0
      = int d
  + Field:        e I
    Access flags: 0x0
      = int e
  + Field:        f Ljava/util/concurrent/atomic/AtomicReferenceArray;
    Access flags: 0x40
      = volatile java.util.concurrent.atomic.AtomicReferenceArray f
  + Field:        g J
    Access flags: 0x10
      = final long g
  + Field:        h Ljava/lang/ref/ReferenceQueue;
    Access flags: 0x10
      = final java.lang.ref.ReferenceQueue h
  + Field:        i Ljava/lang/ref/ReferenceQueue;
    Access flags: 0x10
      = final java.lang.ref.ReferenceQueue i
  + Field:        j Ljava/util/Queue;
    Access flags: 0x10
      = final java.util.Queue j
  + Field:        k Ljava/util/concurrent/atomic/AtomicInteger;
    Access flags: 0x10
      = final java.util.concurrent.atomic.AtomicInteger k
  + Field:        l Ljava/util/Queue;
    Access flags: 0x10
      = final java.util.Queue l
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Field:        m Ljava/util/Queue;
    Access flags: 0x10
      = final java.util.Queue m
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Field:        n La/a/a/b/c;
    Access flags: 0x10
      = final a.a.a.b.c n

Methods (count = 59):
  - Method:       <init>(La/a/a/b/n;IJLa/a/a/b/c;)V
    Access flags: 0x0
      = ap(a.a.a.b.n,int,long,a.a.a.b.c)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 163, locals = 6, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #183
        + Methodref [java/util/concurrent/locks/ReentrantLock.<init> ()V]
      [4] aload_0 v0
      [5] new #43
        + Class [java/util/concurrent/atomic/AtomicInteger]
      [8] dup
      [9] invokespecial #176
        + Methodref [java/util/concurrent/atomic/AtomicInteger.<init> ()V]
      [12] putfield #56
        + Fieldref [a/a/a/b/ap.k Ljava/util/concurrent/atomic/AtomicInteger;]
      [15] aload_0 v0
      [16] aload_1 v1
      [17] putfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [20] aload_0 v0
      [21] lload_3 v3
      [22] putfield #52
        + Fieldref [a/a/a/b/ap.g J]
      [25] aload_0 v0
      [26] aload v5
      [28] invokestatic #79
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [31] checkcast #18
        + Class [a/a/a/b/c]
      [34] putfield #59
        + Fieldref [a/a/a/b/ap.n La/a/a/b/c;]
      [37] aload_0 v0
      [38] aload_0 v0
      [39] iload_2 v2
      [40] invokevirtual #89
        + Methodref [a/a/a/b/ap.a (I)Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [43] invokevirtual #111
        + Methodref [a/a/a/b/ap.a (Ljava/util/concurrent/atomic/AtomicReferenceArray;)V]
      [46] aload_0 v0
      [47] aload_1 v1
      [48] invokevirtual #156
        + Methodref [a/a/a/b/n.m ()Z]
      [51] ifeq +13 (target=64)
      [54] new #38
        + Class [java/lang/ref/ReferenceQueue]
      [57] dup
      [58] invokespecial #172
        + Methodref [java/lang/ref/ReferenceQueue.<init> ()V]
      [61] goto +4 (target=65)
      [64] aconst_null
      [65] putfield #53
        + Fieldref [a/a/a/b/ap.h Ljava/lang/ref/ReferenceQueue;]
      [68] aload_0 v0
      [69] aload_1 v1
      [70] invokevirtual #157
        + Methodref [a/a/a/b/n.n ()Z]
      [73] ifeq +13 (target=86)
      [76] new #38
        + Class [java/lang/ref/ReferenceQueue]
      [79] dup
      [80] invokespecial #172
        + Methodref [java/lang/ref/ReferenceQueue.<init> ()V]
      [83] goto +4 (target=87)
      [86] aconst_null
      [87] putfield #54
        + Fieldref [a/a/a/b/ap.i Ljava/lang/ref/ReferenceQueue;]
      [90] aload_0 v0
      [91] aload_1 v1
      [92] invokevirtual #152
        + Methodref [a/a/a/b/n.f ()Z]
      [95] ifeq +13 (target=108)
      [98] new #41
        + Class [java/util/concurrent/ConcurrentLinkedQueue]
      [101] dup
      [102] invokespecial #174
        + Methodref [java/util/concurrent/ConcurrentLinkedQueue.<init> ()V]
      [105] goto +6 (target=111)
      [108] invokestatic #158
        + Methodref [a/a/a/b/n.q ()Ljava/util/Queue;]
      [111] putfield #55
        + Fieldref [a/a/a/b/ap.j Ljava/util/Queue;]
      [114] aload_0 v0
      [115] aload_1 v1
      [116] invokevirtual #153
        + Methodref [a/a/a/b/n.g ()Z]
      [119] ifeq +13 (target=132)
      [122] new #16
        + Class [a/a/a/b/bm]
      [125] dup
      [126] invokespecial #142
        + Methodref [a/a/a/b/bm.<init> ()V]
      [129] goto +6 (target=135)
      [132] invokestatic #158
        + Methodref [a/a/a/b/n.q ()Ljava/util/Queue;]
      [135] putfield #57
        + Fieldref [a/a/a/b/ap.l Ljava/util/Queue;]
      [138] aload_0 v0
      [139] aload_1 v1
      [140] invokevirtual #152
        + Methodref [a/a/a/b/n.f ()Z]
      [143] ifeq +13 (target=156)
      [146] new #24
        + Class [a/a/a/b/s]
      [149] dup
      [150] invokespecial #160
        + Methodref [a/a/a/b/s.<init> ()V]
      [153] goto +6 (target=159)
      [156] invokestatic #158
        + Methodref [a/a/a/b/n.q ()Ljava/util/Queue;]
      [159] putfield #58
        + Fieldref [a/a/a/b/ap.m Ljava/util/Queue;]
      [162] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 10):
        - [64] Var: [a:a/a/a/b/ap][a:a/a/a/b/n][i][l][a:a/a/a/b/c], Stack: [a:a/a/a/b/ap]
        - [65] Var: [a:a/a/a/b/ap][a:a/a/a/b/n][i][l][a:a/a/a/b/c], Stack: [a:a/a/a/b/ap][a:java/lang/ref/ReferenceQueue]
        - [86] Var: ..., Stack: [a:a/a/a/b/ap]
        - [87] Var: [a:a/a/a/b/ap][a:a/a/a/b/n][i][l][a:a/a/a/b/c], Stack: [a:a/a/a/b/ap][a:java/lang/ref/ReferenceQueue]
        - [108] Var: ..., Stack: [a:a/a/a/b/ap]
        - [111] Var: [a:a/a/a/b/ap][a:a/a/a/b/n][i][l][a:a/a/a/b/c], Stack: [a:a/a/a/b/ap][a:java/util/Queue]
        - [132] Var: ..., Stack: [a:a/a/a/b/ap]
        - [135] Var: [a:a/a/a/b/ap][a:a/a/a/b/n][i][l][a:a/a/a/b/c], Stack: [a:a/a/a/b/ap][a:java/util/Queue]
        - [156] Var: ..., Stack: [a:a/a/a/b/ap]
        - [159] Var: [a:a/a/a/b/ap][a:a/a/a/b/n][i][l][a:a/a/a/b/c], Stack: [a:a/a/a/b/ap][a:java/util/Queue]
  + Method:       a(I)Ljava/util/concurrent/atomic/AtomicReferenceArray;
    Access flags: 0x0
      = java.util.concurrent.atomic.AtomicReferenceArray a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 3):
      [0] new #44
        + Class [java/util/concurrent/atomic/AtomicReferenceArray]
      [3] dup
      [4] iload_1 v1
      [5] invokespecial #179
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.<init> (I)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/concurrent/atomic/AtomicReferenceArray;)V
    Access flags: 0x0
      = void a(java.util.concurrent.atomic.AtomicReferenceArray)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 51, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [5] iconst_3
      [6] imul
      [7] iconst_4
      [8] idiv
      [9] putfield #50
        + Fieldref [a/a/a/b/ap.e I]
      [12] aload_0 v0
      [13] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [16] invokevirtual #149
        + Methodref [a/a/a/b/n.b ()Z]
      [19] ifne +26 (target=45)
      [22] aload_0 v0
      [23] getfield #50
        + Fieldref [a/a/a/b/ap.e I]
      [26] i2l
      [27] aload_0 v0
      [28] getfield #52
        + Fieldref [a/a/a/b/ap.g J]
      [31] lcmp
      [32] ifne +13 (target=45)
      [35] aload_0 v0
      [36] dup
      [37] getfield #50
        + Fieldref [a/a/a/b/ap.e I]
      [40] iconst_1
      [41] iadd
      [42] putfield #50
        + Fieldref [a/a/a/b/ap.e I]
      [45] aload_0 v0
      [46] aload_1 v1
      [47] putfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [50] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [45] Var: ..., Stack: (empty)
  + Method:       a(Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 3):
    + Code attribute instructions (code length = 18, locals = 4, stack = 5):
      [0] aload_0 v0
      [1] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [4] getfield #73
        + Fieldref [a/a/a/b/n.s La/a/a/b/v;]
      [7] aload_0 v0
      [8] aload_1 v1
      [9] invokestatic #79
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [12] iload_2 v2
      [13] aload_3 v3
      [14] invokevirtual #162
        + Methodref [a/a/a/b/v.a (La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
      [17] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ao,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 81, locals = 6, stack = 5):
      [0] aload_1 v1
      [1] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [6] ifnonnull +5 (target=11)
      [9] aconst_null
      [10] areturn
      [11] aload_1 v1
      [12] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [17] astore_3 v3
      [18] aload_3 v3
      [19] invokeinterface #198
        + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
      [24] astore v4
      [26] aload v4
      [28] ifnonnull +14 (target=42)
      [31] aload_3 v3
      [32] invokeinterface #196
        + InterfaceMethodref [a/a/a/b/bc.d ()Z]
      [37] ifeq +5 (target=42)
      [40] aconst_null
      [41] areturn
      [42] aload_0 v0
      [43] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [46] getfield #73
        + Fieldref [a/a/a/b/n.s La/a/a/b/v;]
      [49] aload_0 v0
      [50] aload_1 v1
      [51] aload_2 v2
      [52] invokevirtual #161
        + Methodref [a/a/a/b/v.a (La/a/a/b/ap;La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
      [55] astore v5
      [57] aload v5
      [59] aload_3 v3
      [60] aload_0 v0
      [61] getfield #54
        + Fieldref [a/a/a/b/ap.i Ljava/lang/ref/ReferenceQueue;]
      [64] aload v4
      [66] aload v5
      [68] invokeinterface #194
        + InterfaceMethodref [a/a/a/b/bc.a (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;]
      [73] invokeinterface #186
        + InterfaceMethodref [a/a/a/b/ao.a (La/a/a/b/bc;)V]
      [78] aload v5
      [80] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [42] Var: ...[a:a/a/a/b/bc][a:java/lang/Object], Stack: (empty)
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       a(La/a/a/b/ao;Ljava/lang/Object;Ljava/lang/Object;J)V
    Access flags: 0x0
      = void a(a.a.a.b.ao,java.lang.Object,java.lang.Object,long)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 82, locals = 9, stack = 5):
      [0] aload_1 v1
      [1] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [6] astore v6
      [8] aload_0 v0
      [9] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [12] getfield #69
        + Fieldref [a/a/a/b/n.l La/a/a/b/cj;]
      [15] aload_2 v2
      [16] aload_3 v3
      [17] invokeinterface #204
        + InterfaceMethodref [a/a/a/b/cj.a (Ljava/lang/Object;Ljava/lang/Object;)I]
      [22] istore v7
      [24] iload v7
      [26] iflt +7 (target=33)
      [29] iconst_1
      [30] goto +4 (target=34)
      [33] iconst_0
      [34] ldc #5
        + String [Weights must be non-negative]
      [36] invokestatic #80
        + Methodref [a/a/a/a/o.b (ZLjava/lang/Object;)V]
      [39] aload_0 v0
      [40] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [43] getfield #68
        + Fieldref [a/a/a/b/n.j La/a/a/b/as;]
      [46] aload_0 v0
      [47] aload_1 v1
      [48] aload_3 v3
      [49] iload v7
      [51] invokevirtual #140
        + Methodref [a/a/a/b/as.a (La/a/a/b/ap;La/a/a/b/ao;Ljava/lang/Object;I)La/a/a/b/bc;]
      [54] astore v8
      [56] aload_1 v1
      [57] aload v8
      [59] invokeinterface #186
        + InterfaceMethodref [a/a/a/b/ao.a (La/a/a/b/bc;)V]
      [64] aload_0 v0
      [65] aload_1 v1
      [66] iload v7
      [68] lload v4
      [70] invokevirtual #92
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;IJ)V]
      [73] aload v6
      [75] aload_3 v3
      [76] invokeinterface #193
        + InterfaceMethodref [a/a/a/b/bc.a (Ljava/lang/Object;)V]
      [81] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [33] Var: ...[a:a/a/a/b/bc][i], Stack: (empty)
        - [34] Var: ..., Stack: [i]
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       a(Ljava/lang/Object;ILa/a/a/b/j;)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object a(java.lang.Object,int,a.a.a.b.j)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 210, locals = 11, stack = 8):
      [0] aload_1 v1
      [1] invokestatic #79
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_3 v3
      [6] invokestatic #79
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] pop
      [10] aload_0 v0
      [11] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [14] ifeq +120 (target=134)
      [17] aload_0 v0
      [18] aload_1 v1
      [19] iload_2 v2
      [20] invokevirtual #101
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;I)La/a/a/b/ao;]
      [23] astore v4
      [25] aload v4
      [27] ifnull +107 (target=134)
      [30] aload_0 v0
      [31] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [34] getfield #72
        + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
      [37] invokevirtual #77
        + Methodref [a/a/a/a/af.a ()J]
      [40] lstore v5
      [42] aload_0 v0
      [43] aload v4
      [45] lload v5
      [47] invokevirtual #121
        + Methodref [a/a/a/b/ap.c (La/a/a/b/ao;J)Ljava/lang/Object;]
      [50] astore v7
      [52] aload v7
      [54] ifnull +43 (target=97)
      [57] aload_0 v0
      [58] aload v4
      [60] lload v5
      [62] invokevirtual #94
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;J)V]
      [65] aload_0 v0
      [66] getfield #59
        + Fieldref [a/a/a/b/ap.n La/a/a/b/c;]
      [69] iconst_1
      [70] invokeinterface #200
        + InterfaceMethodref [a/a/a/b/c.a (I)V]
      [75] aload_0 v0
      [76] aload v4
      [78] aload_1 v1
      [79] iload_2 v2
      [80] aload v7
      [82] lload v5
      [84] aload_3 v3
      [85] invokevirtual #98
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;Ljava/lang/Object;ILjava/lang/Object;JLa/a/a/b/j;)Ljava/lang/Object;]
      [88] astore v8
      [90] aload_0 v0
      [91] invokevirtual #133
        + Methodref [a/a/a/b/ap.m ()V]
      [94] aload v8
      [96] areturn
      [97] aload v4
      [99] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [104] astore v8
      [106] aload v8
      [108] invokeinterface #195
        + InterfaceMethodref [a/a/a/b/bc.c ()Z]
      [113] ifeq +21 (target=134)
      [116] aload_0 v0
      [117] aload v4
      [119] aload_1 v1
      [120] aload v8
      [122] invokevirtual #99
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;Ljava/lang/Object;La/a/a/b/bc;)Ljava/lang/Object;]
      [125] astore v9
      [127] aload_0 v0
      [128] invokevirtual #133
        + Methodref [a/a/a/b/ap.m ()V]
      [131] aload v9
      [133] areturn
      [134] aload_0 v0
      [135] aload_1 v1
      [136] iload_2 v2
      [137] aload_3 v3
      [138] invokevirtual #118
        + Methodref [a/a/a/b/ap.b (Ljava/lang/Object;ILa/a/a/b/j;)Ljava/lang/Object;]
      [141] astore v4
      [143] aload_0 v0
      [144] invokevirtual #133
        + Methodref [a/a/a/b/ap.m ()V]
      [147] aload v4
      [149] areturn
      [150] astore v4
      [152] aload v4
      [154] invokevirtual #175
        + Methodref [java/util/concurrent/ExecutionException.getCause ()Ljava/lang/Throwable;]
      [157] astore v5
      [159] aload v5
      [161] instanceof #31
        + Class [java/lang/Error]
      [164] ifeq +16 (target=180)
      [167] new #26
        + Class [a/a/a/g/a/e]
      [170] dup
      [171] aload v5
      [173] checkcast #31
        + Class [java/lang/Error]
      [176] invokespecial #163
        + Methodref [a/a/a/g/a/e.<init> (Ljava/lang/Error;)V]
      [179] athrow
      [180] aload v5
      [182] instanceof #33
        + Class [java/lang/RuntimeException]
      [185] ifeq +13 (target=198)
      [188] new #28
        + Class [a/a/a/g/a/x]
      [191] dup
      [192] aload v5
      [194] invokespecial #164
        + Methodref [a/a/a/g/a/x.<init> (Ljava/lang/Throwable;)V]
      [197] athrow
      [198] aload v4
      [200] athrow
      [201] astore v10
      [203] aload_0 v0
      [204] invokevirtual #133
        + Methodref [a/a/a/b/ap.m ()V]
      [207] aload v10
      [209] athrow
      Code attribute exceptions (count = 7):
      - ExceptionInfo (10 -> 90: 150):
      + Class [java/util/concurrent/ExecutionException]
      - ExceptionInfo (97 -> 127: 150):
      + Class [java/util/concurrent/ExecutionException]
      - ExceptionInfo (134 -> 143: 150):
      + Class [java/util/concurrent/ExecutionException]
      - ExceptionInfo (10 -> 90: 201):
      - ExceptionInfo (97 -> 127: 201):
      - ExceptionInfo (134 -> 143: 201):
      - ExceptionInfo (150 -> 203: 201):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [97] Var: ...[a:a/a/a/b/ao][l][a:java/lang/Object], Stack: (empty)
        - [134] Var: -3, Stack: (empty)
        - [150] Var: ..., Stack: [a:java/util/concurrent/ExecutionException]
        - [180] Var: ...[a:java/util/concurrent/ExecutionException][a:java/lang/Throwable], Stack: (empty)
        - [198] Var: ..., Stack: (empty)
        - [201] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/j], Stack: [a:java/lang/Throwable]
  + Method:       b(Ljava/lang/Object;ILa/a/a/b/j;)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object b(java.lang.Object,int,a.a.a.b.j)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 433, locals = 20, stack = 5):
      [0] aconst_null
      [1] astore v5
      [3] aconst_null
      [4] astore v6
      [6] iconst_1
      [7] istore v7
      [9] aload_0 v0
      [10] invokevirtual #132
        + Methodref [a/a/a/b/ap.lock ()V]
      [13] aload_0 v0
      [14] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [17] getfield #72
        + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
      [20] invokevirtual #77
        + Methodref [a/a/a/a/af.a ()J]
      [23] lstore v8
      [25] aload_0 v0
      [26] lload v8
      [28] invokevirtual #120
        + Methodref [a/a/a/b/ap.c (J)V]
      [31] aload_0 v0
      [32] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [35] iconst_1
      [36] isub
      [37] istore v10
      [39] aload_0 v0
      [40] getfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [43] astore v11
      [45] iload_2 v2
      [46] aload v11
      [48] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [51] iconst_1
      [52] isub
      [53] iand
      [54] istore v12
      [56] aload v11
      [58] iload v12
      [60] invokevirtual #180
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [63] checkcast #10
        + Class [a/a/a/b/ao]
      [66] astore v13
      [68] aload v13
      [70] astore v4
      [72] aload v4
      [74] ifnull +205 (target=279)
      [77] aload v4
      [79] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [84] astore v14
      [86] aload v4
      [88] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [93] iload_2 v2
      [94] ificmpne +173 (target=267)
      [97] aload v14
      [99] ifnull +168 (target=267)
      [102] aload_0 v0
      [103] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [106] getfield #66
        + Fieldref [a/a/a/b/n.g La/a/a/a/b;]
      [109] aload_1 v1
      [110] aload v14
      [112] invokevirtual #78
        + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [115] ifeq +152 (target=267)
      [118] aload v4
      [120] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [125] astore v5
      [127] aload v5
      [129] invokeinterface #195
        + InterfaceMethodref [a/a/a/b/bc.c ()Z]
      [134] ifeq +9 (target=143)
      [137] iconst_0
      [138] istore v7
      [140] goto +139 (target=279)
      [143] aload v5
      [145] invokeinterface #198
        + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
      [150] astore v15
      [152] aload v15
      [154] ifnonnull +18 (target=172)
      [157] aload_0 v0
      [158] aload v14
      [160] iload_2 v2
      [161] aload v5
      [163] getstatic #62
        + Fieldref [a/a/a/b/bw.c La/a/a/b/bw;]
      [166] invokevirtual #108
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)V]
      [169] goto +65 (target=234)
      [172] aload_0 v0
      [173] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [176] aload v4
      [178] lload v8
      [180] invokevirtual #150
        + Methodref [a/a/a/b/n.b (La/a/a/b/ao;J)Z]
      [183] ifeq +18 (target=201)
      [186] aload_0 v0
      [187] aload v14
      [189] iload_2 v2
      [190] aload v5
      [192] getstatic #63
        + Fieldref [a/a/a/b/bw.d La/a/a/b/bw;]
      [195] invokevirtual #108
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)V]
      [198] goto +36 (target=234)
      [201] aload_0 v0
      [202] aload v4
      [204] lload v8
      [206] invokevirtual #115
        + Methodref [a/a/a/b/ap.b (La/a/a/b/ao;J)V]
      [209] aload_0 v0
      [210] getfield #59
        + Fieldref [a/a/a/b/ap.n La/a/a/b/c;]
      [213] iconst_1
      [214] invokeinterface #200
        + InterfaceMethodref [a/a/a/b/c.a (I)V]
      [219] aload v15
      [221] astore v16
      [223] aload_0 v0
      [224] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [227] aload_0 v0
      [228] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [231] aload v16
      [233] areturn
      [234] aload_0 v0
      [235] getfield #57
        + Fieldref [a/a/a/b/ap.l Ljava/util/Queue;]
      [238] aload v4
      [240] invokeinterface #216
        + InterfaceMethodref [java/util/Queue.remove (Ljava/lang/Object;)Z]
      [245] pop
      [246] aload_0 v0
      [247] getfield #58
        + Fieldref [a/a/a/b/ap.m Ljava/util/Queue;]
      [250] aload v4
      [252] invokeinterface #216
        + InterfaceMethodref [java/util/Queue.remove (Ljava/lang/Object;)Z]
      [257] pop
      [258] aload_0 v0
      [259] iload v10
      [261] putfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [264] goto +15 (target=279)
      [267] aload v4
      [269] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [274] astore v4
      [276] goto -204 (target=72)
      [279] iload v7
      [281] ifeq +57 (target=338)
      [284] new #9
        + Class [a/a/a/b/aj]
      [287] dup
      [288] invokespecial #82
        + Methodref [a/a/a/b/aj.<init> ()V]
      [291] astore v6
      [293] aload v4
      [295] ifnonnull +34 (target=329)
      [298] aload_0 v0
      [299] aload_1 v1
      [300] iload_2 v2
      [301] aload v13
      [303] invokevirtual #107
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
      [306] astore v4
      [308] aload v4
      [310] aload v6
      [312] invokeinterface #186
        + InterfaceMethodref [a/a/a/b/ao.a (La/a/a/b/bc;)V]
      [317] aload v11
      [319] iload v12
      [321] aload v4
      [323] invokevirtual #182
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
      [326] goto +12 (target=338)
      [329] aload v4
      [331] aload v6
      [333] invokeinterface #186
        + InterfaceMethodref [a/a/a/b/ao.a (La/a/a/b/bc;)V]
      [338] aload_0 v0
      [339] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [342] aload_0 v0
      [343] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [346] goto +16 (target=362)
      [349] astore v17
      [351] aload_0 v0
      [352] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [355] aload_0 v0
      [356] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [359] aload v17
      [361] athrow
      [362] iload v7
      [364] ifeq +59 (target=423)
      [367] aload v4
      [369] dup
      [370] astore v8
      [372] monitorenter
      [373] aload_0 v0
      [374] aload_1 v1
      [375] iload_2 v2
      [376] aload v6
      [378] aload_3 v3
      [379] invokevirtual #104
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/b/j;)Ljava/lang/Object;]
      [382] astore v9
      [384] aload v8
      [386] monitorexit
      [387] aload_0 v0
      [388] getfield #59
        + Fieldref [a/a/a/b/ap.n La/a/a/b/c;]
      [391] iconst_1
      [392] invokeinterface #202
        + InterfaceMethodref [a/a/a/b/c.b (I)V]
      [397] aload v9
      [399] areturn
      [400] astore v18
      [402] aload v8
      [404] monitorexit
      [405] aload v18
      [407] athrow
      [408] astore v19
      [410] aload_0 v0
      [411] getfield #59
        + Fieldref [a/a/a/b/ap.n La/a/a/b/c;]
      [414] iconst_1
      [415] invokeinterface #202
        + InterfaceMethodref [a/a/a/b/c.b (I)V]
      [420] aload v19
      [422] athrow
      [423] aload_0 v0
      [424] aload v4
      [426] aload_1 v1
      [427] aload v5
      [429] invokevirtual #99
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;Ljava/lang/Object;La/a/a/b/bc;)Ljava/lang/Object;]
      [432] areturn
      Code attribute exceptions (count = 7):
      - ExceptionInfo (13 -> 223: 349):
      - ExceptionInfo (234 -> 338: 349):
      - ExceptionInfo (349 -> 351: 349):
      - ExceptionInfo (373 -> 387: 400):
      - ExceptionInfo (400 -> 405: 400):
      - ExceptionInfo (367 -> 387: 408):
      - ExceptionInfo (400 -> 410: 408):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 14):
        - [72] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/j][a:a/a/a/b/ao][a:a/a/a/b/bc][a:a/a/a/b/aj][i][l][i][a:java/util/concurrent/atomic/AtomicReferenceArray][i][a:a/a/a/b/ao], Stack: 
        - [143] Var: ...[a:java/lang/Object], Stack: (empty)
        - [172] Var: ...[a:java/lang/Object], Stack: (empty)
        - [201] Var: ..., Stack: (empty)
        - [234] Var: ..., Stack: (empty)
        - [267] Var: -2, Stack: (empty)
        - [279] Var: ..., Stack: (empty)
        - [329] Var: ..., Stack: (empty)
        - [338] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/j][a:a/a/a/b/ao][a:a/a/a/b/bc][a:a/a/a/b/aj][i], Stack: 
        - [349] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/j][T][a:a/a/a/b/bc][a:a/a/a/b/aj][i], Stack: [a:java/lang/Throwable]
        - [362] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/j][a:a/a/a/b/ao][a:a/a/a/b/bc][a:a/a/a/b/aj][i], Stack: 
        - [400] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/j][a:a/a/a/b/ao][a:a/a/a/b/bc][a:a/a/a/b/aj][i][a:java/lang/Object], Stack: [a:java/lang/Throwable]
        - [408] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/j][a:a/a/a/b/ao][a:a/a/a/b/bc][a:a/a/a/b/aj][i], Stack: [a:java/lang/Throwable]
        - [423] Var: ..., Stack: (empty)
  + Method:       a(La/a/a/b/ao;Ljava/lang/Object;La/a/a/b/bc;)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object a(a.a.a.b.ao,java.lang.Object,a.a.a.b.bc)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 138, locals = 9, stack = 6):
      [0] aload_3 v3
      [1] invokeinterface #195
        + InterfaceMethodref [a/a/a/b/bc.c ()Z]
      [6] ifne +11 (target=17)
      [9] new #30
        + Class [java/lang/AssertionError]
      [12] dup
      [13] invokespecial #166
        + Methodref [java/lang/AssertionError.<init> ()V]
      [16] athrow
      [17] aload_1 v1
      [18] invokestatic #171
        + Methodref [java/lang/Thread.holdsLock (Ljava/lang/Object;)Z]
      [21] ifne +7 (target=28)
      [24] iconst_1
      [25] goto +4 (target=29)
      [28] iconst_0
      [29] ldc #4
        + String [Recursive load of: %s]
      [31] iconst_1
      [32] anewarray #32
        + Class [java/lang/Object]
      [35] dup
      [36] iconst_0
      [37] aload_2 v2
      [38] aastore
      [39] invokestatic #81
        + Methodref [a/a/a/a/o.b (ZLjava/lang/String;[Ljava/lang/Object;)V]
      [42] aload_3 v3
      [43] invokeinterface #197
        + InterfaceMethodref [a/a/a/b/bc.e ()Ljava/lang/Object;]
      [48] astore v4
      [50] aload v4
      [52] ifnonnull +35 (target=87)
      [55] new #22
        + Class [a/a/a/b/k]
      [58] dup
      [59] new #34
        + Class [java/lang/StringBuilder]
      [62] dup
      [63] invokespecial #167
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [66] ldc #3
        + String [CacheLoader returned null for key ]
      [68] invokevirtual #169
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [71] aload_2 v2
      [72] invokevirtual #168
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [75] ldc #2
        + String [.]
      [77] invokevirtual #169
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [80] invokevirtual #170
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [83] invokespecial #145
        + Methodref [a/a/a/b/k.<init> (Ljava/lang/String;)V]
      [86] athrow
      [87] aload_0 v0
      [88] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [91] getfield #72
        + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
      [94] invokevirtual #77
        + Methodref [a/a/a/a/af.a ()J]
      [97] lstore v5
      [99] aload_0 v0
      [100] aload_1 v1
      [101] lload v5
      [103] invokevirtual #94
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;J)V]
      [106] aload v4
      [108] astore v7
      [110] aload_0 v0
      [111] getfield #59
        + Fieldref [a/a/a/b/ap.n La/a/a/b/c;]
      [114] iconst_1
      [115] invokeinterface #202
        + InterfaceMethodref [a/a/a/b/c.b (I)V]
      [120] aload v7
      [122] areturn
      [123] astore v8
      [125] aload_0 v0
      [126] getfield #59
        + Fieldref [a/a/a/b/ap.n La/a/a/b/c;]
      [129] iconst_1
      [130] invokeinterface #202
        + InterfaceMethodref [a/a/a/b/c.b (I)V]
      [135] aload v8
      [137] athrow
      Code attribute exceptions (count = 2):
      - ExceptionInfo (42 -> 110: 123):
      - ExceptionInfo (123 -> 125: 123):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 5):
        - [17] Var: ..., Stack: (empty)
        - [28] Var: ..., Stack: (empty)
        - [29] Var: ..., Stack: [i]
        - [87] Var: ...[a:java/lang/Object], Stack: (empty)
        - [123] Var: [a:a/a/a/b/ap][a:a/a/a/b/ao][a:java/lang/Object][a:a/a/a/b/bc], Stack: [a:java/lang/Throwable]
  + Method:       a(Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/b/j;)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object a(java.lang.Object,int,a.a.a.b.aj,a.a.a.b.j)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 6, stack = 5):
      [0] aload_3 v3
      [1] aload_1 v1
      [2] aload v4
      [4] invokevirtual #84
        + Methodref [a/a/a/b/aj.a (Ljava/lang/Object;La/a/a/b/j;)La/a/a/g/a/q;]
      [7] astore v5
      [9] aload_0 v0
      [10] aload_1 v1
      [11] iload_2 v2
      [12] aload_3 v3
      [13] aload v5
      [15] invokevirtual #105
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/g/a/q;)Ljava/lang/Object;]
      [18] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/b/j;)La/a/a/g/a/q;
    Access flags: 0x0
      = a.a.a.g.a.q b(java.lang.Object,int,a.a.a.b.aj,a.a.a.b.j)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 35, locals = 6, stack = 8):
      [0] aload_3 v3
      [1] aload_1 v1
      [2] aload v4
      [4] invokevirtual #84
        + Methodref [a/a/a/b/aj.a (Ljava/lang/Object;La/a/a/b/j;)La/a/a/g/a/q;]
      [7] astore v5
      [9] aload v5
      [11] new #12
        + Class [a/a/a/b/aq]
      [14] dup
      [15] aload_0 v0
      [16] aload_1 v1
      [17] iload_2 v2
      [18] aload_3 v3
      [19] aload v5
      [21] invokespecial #139
        + Methodref [a/a/a/b/aq.<init> (La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/g/a/q;)V]
      [24] getstatic #65
        + Fieldref [a/a/a/b/n.b La/a/a/g/a/s;]
      [27] invokeinterface #205
        + InterfaceMethodref [a/a/a/g/a/q.a (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
      [32] aload v5
      [34] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/g/a/q;)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object a(java.lang.Object,int,a.a.a.b.aj,a.a.a.g.a.q)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 134, locals = 8, stack = 5):
      [0] aconst_null
      [1] astore v5
      [3] aload v4
      [5] invokestatic #165
        + Methodref [a/a/a/g/a/y.a (Ljava/util/concurrent/Future;)Ljava/lang/Object;]
      [8] astore v5
      [10] aload v5
      [12] ifnonnull +35 (target=47)
      [15] new #22
        + Class [a/a/a/b/k]
      [18] dup
      [19] new #34
        + Class [java/lang/StringBuilder]
      [22] dup
      [23] invokespecial #167
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [26] ldc #3
        + String [CacheLoader returned null for key ]
      [28] invokevirtual #169
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [31] aload_1 v1
      [32] invokevirtual #168
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [35] ldc #2
        + String [.]
      [37] invokevirtual #169
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [40] invokevirtual #170
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [43] invokespecial #145
        + Methodref [a/a/a/b/k.<init> (Ljava/lang/String;)V]
      [46] athrow
      [47] aload_0 v0
      [48] getfield #59
        + Fieldref [a/a/a/b/ap.n La/a/a/b/c;]
      [51] aload_3 v3
      [52] invokevirtual #86
        + Methodref [a/a/a/b/aj.f ()J]
      [55] invokeinterface #201
        + InterfaceMethodref [a/a/a/b/c.a (J)V]
      [60] aload_0 v0
      [61] aload_1 v1
      [62] iload_2 v2
      [63] aload_3 v3
      [64] aload v5
      [66] invokevirtual #106
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/aj;Ljava/lang/Object;)Z]
      [69] pop
      [70] aload v5
      [72] astore v6
      [74] aload v5
      [76] ifnonnull +24 (target=100)
      [79] aload_0 v0
      [80] getfield #59
        + Fieldref [a/a/a/b/ap.n La/a/a/b/c;]
      [83] aload_3 v3
      [84] invokevirtual #86
        + Methodref [a/a/a/b/aj.f ()J]
      [87] invokeinterface #203
        + InterfaceMethodref [a/a/a/b/c.b (J)V]
      [92] aload_0 v0
      [93] aload_1 v1
      [94] iload_2 v2
      [95] aload_3 v3
      [96] invokevirtual #103
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/aj;)Z]
      [99] pop
      [100] aload v6
      [102] areturn
      [103] astore v7
      [105] aload v5
      [107] ifnonnull +24 (target=131)
      [110] aload_0 v0
      [111] getfield #59
        + Fieldref [a/a/a/b/ap.n La/a/a/b/c;]
      [114] aload_3 v3
      [115] invokevirtual #86
        + Methodref [a/a/a/b/aj.f ()J]
      [118] invokeinterface #203
        + InterfaceMethodref [a/a/a/b/c.b (J)V]
      [123] aload_0 v0
      [124] aload_1 v1
      [125] iload_2 v2
      [126] aload_3 v3
      [127] invokevirtual #103
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/aj;)Z]
      [130] pop
      [131] aload v7
      [133] athrow
      Code attribute exceptions (count = 2):
      - ExceptionInfo (3 -> 74: 103):
      - ExceptionInfo (103 -> 105: 103):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [47] Var: ...[a:java/lang/Object], Stack: (empty)
        - [100] Var: ...[a:java/lang/Object], Stack: (empty)
        - [103] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/aj][a:a/a/a/g/a/q][a:java/lang/Object], Stack: [a:java/lang/Throwable]
        - [131] Var: ...[T][a:java/lang/Throwable], Stack: (empty)
  + Method:       a(La/a/a/b/ao;Ljava/lang/Object;ILjava/lang/Object;JLa/a/a/b/j;)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object a(a.a.a.b.ao,java.lang.Object,int,java.lang.Object,long,a.a.a.b.j)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 66, locals = 9, stack = 5):
      [0] aload_0 v0
      [1] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [4] invokevirtual #151
        + Methodref [a/a/a/b/n.e ()Z]
      [7] ifeq +56 (target=63)
      [10] lload v5
      [12] aload_1 v1
      [13] invokeinterface #191
        + InterfaceMethodref [a/a/a/b/ao.h ()J]
      [18] lsub
      [19] aload_0 v0
      [20] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [23] getfield #70
        + Fieldref [a/a/a/b/n.o J]
      [26] lcmp
      [27] ifle +36 (target=63)
      [30] aload_1 v1
      [31] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [36] invokeinterface #195
        + InterfaceMethodref [a/a/a/b/bc.c ()Z]
      [41] ifne +22 (target=63)
      [44] aload_0 v0
      [45] aload_2 v2
      [46] iload_3 v3
      [47] aload v7
      [49] iconst_1
      [50] invokevirtual #109
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/j;Z)Ljava/lang/Object;]
      [53] astore v8
      [55] aload v8
      [57] ifnull +6 (target=63)
      [60] aload v8
      [62] areturn
      [63] aload v4
      [65] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [63] Var: ..., Stack: (empty)
  + Method:       a(Ljava/lang/Object;ILa/a/a/b/j;Z)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object a(java.lang.Object,int,a.a.a.b.j,boolean)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 48, locals = 8, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] iload v4
      [5] invokevirtual #110
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;IZ)La/a/a/b/aj;]
      [8] astore v5
      [10] aload v5
      [12] ifnonnull +5 (target=17)
      [15] aconst_null
      [16] areturn
      [17] aload_0 v0
      [18] aload_1 v1
      [19] iload_2 v2
      [20] aload v5
      [22] aload_3 v3
      [23] invokevirtual #117
        + Methodref [a/a/a/b/ap.b (Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/b/j;)La/a/a/g/a/q;]
      [26] astore v6
      [28] aload v6
      [30] invokeinterface #206
        + InterfaceMethodref [a/a/a/g/a/q.isDone ()Z]
      [35] ifeq +11 (target=46)
      [38] aload v6
      [40] invokestatic #165
        + Methodref [a/a/a/g/a/y.a (Ljava/util/concurrent/Future;)Ljava/lang/Object;]
      [43] areturn
      [44] astore v7
      [46] aconst_null
      [47] areturn
      Code attribute exceptions (count = 1):
      - ExceptionInfo (38 -> 43: 44):
      + Class [java/lang/Throwable]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [17] Var: ...[a:a/a/a/b/aj], Stack: (empty)
        - [44] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/j][i][a:a/a/a/b/aj][a:a/a/a/g/a/q], Stack: [a:java/lang/Throwable]
        - [46] Var: ..., Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Object;IZ)La/a/a/b/aj;
    Access flags: 0x0
      = a.a.a.b.aj a(java.lang.Object,int,boolean)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 294, locals = 15, stack = 4):
      [0] aconst_null
      [1] astore v4
      [3] aload_0 v0
      [4] invokevirtual #132
        + Methodref [a/a/a/b/ap.lock ()V]
      [7] aload_0 v0
      [8] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [11] getfield #72
        + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
      [14] invokevirtual #77
        + Methodref [a/a/a/a/af.a ()J]
      [17] lstore v5
      [19] aload_0 v0
      [20] lload v5
      [22] invokevirtual #120
        + Methodref [a/a/a/b/ap.c (J)V]
      [25] aload_0 v0
      [26] getfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [29] astore v7
      [31] iload_2 v2
      [32] aload v7
      [34] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [37] iconst_1
      [38] isub
      [39] iand
      [40] istore v8
      [42] aload v7
      [44] iload v8
      [46] invokevirtual #180
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [49] checkcast #10
        + Class [a/a/a/b/ao]
      [52] astore v9
      [54] aload v9
      [56] astore v4
      [58] aload v4
      [60] ifnull +159 (target=219)
      [63] aload v4
      [65] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [70] astore v10
      [72] aload v4
      [74] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [79] iload_2 v2
      [80] ificmpne +127 (target=207)
      [83] aload v10
      [85] ifnull +122 (target=207)
      [88] aload_0 v0
      [89] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [92] getfield #66
        + Fieldref [a/a/a/b/n.g La/a/a/a/b;]
      [95] aload_1 v1
      [96] aload v10
      [98] invokevirtual #78
        + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [101] ifeq +106 (target=207)
      [104] aload v4
      [106] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [111] astore v11
      [113] aload v11
      [115] invokeinterface #195
        + InterfaceMethodref [a/a/a/b/bc.c ()Z]
      [120] ifne +28 (target=148)
      [123] iload_3 v3
      [124] ifeq +38 (target=162)
      [127] lload v5
      [129] aload v4
      [131] invokeinterface #191
        + InterfaceMethodref [a/a/a/b/ao.h ()J]
      [136] lsub
      [137] aload_0 v0
      [138] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [141] getfield #70
        + Fieldref [a/a/a/b/n.o J]
      [144] lcmp
      [145] ifge +17 (target=162)
      [148] aconst_null
      [149] astore v12
      [151] aload_0 v0
      [152] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [155] aload_0 v0
      [156] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [159] aload v12
      [161] areturn
      [162] aload_0 v0
      [163] dup
      [164] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [167] iconst_1
      [168] iadd
      [169] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [172] new #9
        + Class [a/a/a/b/aj]
      [175] dup
      [176] aload v11
      [178] invokespecial #83
        + Methodref [a/a/a/b/aj.<init> (La/a/a/b/bc;)V]
      [181] astore v12
      [183] aload v4
      [185] aload v12
      [187] invokeinterface #186
        + InterfaceMethodref [a/a/a/b/ao.a (La/a/a/b/bc;)V]
      [192] aload v12
      [194] astore v13
      [196] aload_0 v0
      [197] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [200] aload_0 v0
      [201] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [204] aload v13
      [206] areturn
      [207] aload v4
      [209] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [214] astore v4
      [216] goto -158 (target=58)
      [219] aload_0 v0
      [220] dup
      [221] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [224] iconst_1
      [225] iadd
      [226] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [229] new #9
        + Class [a/a/a/b/aj]
      [232] dup
      [233] invokespecial #82
        + Methodref [a/a/a/b/aj.<init> ()V]
      [236] astore v10
      [238] aload_0 v0
      [239] aload_1 v1
      [240] iload_2 v2
      [241] aload v9
      [243] invokevirtual #107
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
      [246] astore v4
      [248] aload v4
      [250] aload v10
      [252] invokeinterface #186
        + InterfaceMethodref [a/a/a/b/ao.a (La/a/a/b/bc;)V]
      [257] aload v7
      [259] iload v8
      [261] aload v4
      [263] invokevirtual #182
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
      [266] aload v10
      [268] astore v11
      [270] aload_0 v0
      [271] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [274] aload_0 v0
      [275] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [278] aload v11
      [280] areturn
      [281] astore v14
      [283] aload_0 v0
      [284] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [287] aload_0 v0
      [288] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [291] aload v14
      [293] athrow
      Code attribute exceptions (count = 4):
      - ExceptionInfo (7 -> 151: 281):
      - ExceptionInfo (162 -> 196: 281):
      - ExceptionInfo (207 -> 270: 281):
      - ExceptionInfo (281 -> 283: 281):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [58] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][i][a:a/a/a/b/ao][l][a:java/util/concurrent/atomic/AtomicReferenceArray][i][a:a/a/a/b/ao], Stack: 
        - [148] Var: ...[a:java/lang/Object][a:a/a/a/b/bc], Stack: (empty)
        - [162] Var: ..., Stack: (empty)
        - [207] Var: -2, Stack: (empty)
        - [219] Var: ..., Stack: (empty)
        - [281] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][i][a:a/a/a/b/ao], Stack: [a:java/lang/Throwable]
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a()V
    Access flags: 0x0
      = void a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 26, locals = 2, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #137
        + Methodref [a/a/a/b/ap.tryLock ()Z]
      [4] ifeq +21 (target=25)
      [7] aload_0 v0
      [8] invokevirtual #112
        + Methodref [a/a/a/b/ap.b ()V]
      [11] aload_0 v0
      [12] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [15] goto +10 (target=25)
      [18] astore_1 v1
      [19] aload_0 v0
      [20] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [23] aload_1 v1
      [24] athrow
      [25] return
      Code attribute exceptions (count = 2):
      - ExceptionInfo (7 -> 11: 18):
      - ExceptionInfo (18 -> 19: 18):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [18] Var: ..., Stack: [a:java/lang/Throwable]
        - [25] Var: ..., Stack: (empty)
  + Method:       b()V
    Access flags: 0x0
      = void b()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 29, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [4] invokevirtual #156
        + Methodref [a/a/a/b/n.m ()Z]
      [7] ifeq +7 (target=14)
      [10] aload_0 v0
      [11] invokevirtual #119
        + Methodref [a/a/a/b/ap.c ()V]
      [14] aload_0 v0
      [15] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [18] invokevirtual #157
        + Methodref [a/a/a/b/n.n ()Z]
      [21] ifeq +7 (target=28)
      [24] aload_0 v0
      [25] invokevirtual #122
        + Methodref [a/a/a/b/ap.d ()V]
      [28] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [14] Var: ..., Stack: (empty)
        - [28] Var: ..., Stack: (empty)
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       c()V
    Access flags: 0x0
      = void c()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 43, locals = 4, stack = 2):
      [0] iconst_0
      [1] istore_2 v2
      [2] aload_0 v0
      [3] getfield #53
        + Fieldref [a/a/a/b/ap.h Ljava/lang/ref/ReferenceQueue;]
      [6] invokevirtual #173
        + Methodref [java/lang/ref/ReferenceQueue.poll ()Ljava/lang/ref/Reference;]
      [9] dup
      [10] astore_1 v1
      [11] ifnull +31 (target=42)
      [14] aload_1 v1
      [15] checkcast #10
        + Class [a/a/a/b/ao]
      [18] astore_3 v3
      [19] aload_0 v0
      [20] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [23] aload_3 v3
      [24] invokevirtual #147
        + Methodref [a/a/a/b/n.a (La/a/a/b/ao;)V]
      [27] iinc v2, 1
      [30] iload_2 v2
      [31] bipush 16
      [33] ificmpne +6 (target=39)
      [36] goto +6 (target=42)
      [39] goto -37 (target=2)
      [42] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [2] Var: ...[T][i], Stack: (empty)
        - [39] Var: [a:a/a/a/b/ap][a:java/lang/ref/Reference][i], Stack: 
        - [42] Var: ..., Stack: (empty)
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       d()V
    Access flags: 0x0
      = void d()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 43, locals = 4, stack = 2):
      [0] iconst_0
      [1] istore_2 v2
      [2] aload_0 v0
      [3] getfield #54
        + Fieldref [a/a/a/b/ap.i Ljava/lang/ref/ReferenceQueue;]
      [6] invokevirtual #173
        + Methodref [java/lang/ref/ReferenceQueue.poll ()Ljava/lang/ref/Reference;]
      [9] dup
      [10] astore_1 v1
      [11] ifnull +31 (target=42)
      [14] aload_1 v1
      [15] checkcast #14
        + Class [a/a/a/b/bc]
      [18] astore_3 v3
      [19] aload_0 v0
      [20] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [23] aload_3 v3
      [24] invokevirtual #148
        + Methodref [a/a/a/b/n.a (La/a/a/b/bc;)V]
      [27] iinc v2, 1
      [30] iload_2 v2
      [31] bipush 16
      [33] ificmpne +6 (target=39)
      [36] goto +6 (target=42)
      [39] goto -37 (target=2)
      [42] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [2] Var: ...[T][i], Stack: (empty)
        - [39] Var: [a:a/a/a/b/ap][a:java/lang/ref/Reference][i], Stack: 
        - [42] Var: ..., Stack: (empty)
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       e()V
    Access flags: 0x0
      = void e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 29, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [4] invokevirtual #156
        + Methodref [a/a/a/b/n.m ()Z]
      [7] ifeq +7 (target=14)
      [10] aload_0 v0
      [11] invokevirtual #125
        + Methodref [a/a/a/b/ap.f ()V]
      [14] aload_0 v0
      [15] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [18] invokevirtual #157
        + Methodref [a/a/a/b/n.n ()Z]
      [21] ifeq +7 (target=28)
      [24] aload_0 v0
      [25] invokevirtual #126
        + Methodref [a/a/a/b/ap.g ()V]
      [28] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [14] Var: ..., Stack: (empty)
        - [28] Var: ..., Stack: (empty)
  + Method:       f()V
    Access flags: 0x0
      = void f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #53
        + Fieldref [a/a/a/b/ap.h Ljava/lang/ref/ReferenceQueue;]
      [4] invokevirtual #173
        + Methodref [java/lang/ref/ReferenceQueue.poll ()Ljava/lang/ref/Reference;]
      [7] ifnull +6 (target=13)
      [10] goto -10 (target=0)
      [13] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [0] Var: ..., Stack: (empty)
        - [13] Var: ..., Stack: (empty)
  + Method:       g()V
    Access flags: 0x0
      = void g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #54
        + Fieldref [a/a/a/b/ap.i Ljava/lang/ref/ReferenceQueue;]
      [4] invokevirtual #173
        + Methodref [java/lang/ref/ReferenceQueue.poll ()Ljava/lang/ref/Reference;]
      [7] ifnull +6 (target=13)
      [10] goto -10 (target=0)
      [13] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [0] Var: ..., Stack: (empty)
        - [13] Var: ..., Stack: (empty)
  + Method:       a(La/a/a/b/ao;J)V
    Access flags: 0x0
      = void a(a.a.a.b.ao,long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 29, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [4] invokevirtual #155
        + Methodref [a/a/a/b/n.i ()Z]
      [7] ifeq +10 (target=17)
      [10] aload_1 v1
      [11] lload_2 v2
      [12] invokeinterface #185
        + InterfaceMethodref [a/a/a/b/ao.a (J)V]
      [17] aload_0 v0
      [18] getfield #55
        + Fieldref [a/a/a/b/ap.j Ljava/util/Queue;]
      [21] aload_1 v1
      [22] invokeinterface #209
        + InterfaceMethodref [java/util/Queue.add (Ljava/lang/Object;)Z]
      [27] pop
      [28] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [17] Var: ..., Stack: (empty)
  + Method:       b(La/a/a/b/ao;J)V
    Access flags: 0x0
      = void b(a.a.a.b.ao,long)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 29, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [4] invokevirtual #155
        + Methodref [a/a/a/b/n.i ()Z]
      [7] ifeq +10 (target=17)
      [10] aload_1 v1
      [11] lload_2 v2
      [12] invokeinterface #185
        + InterfaceMethodref [a/a/a/b/ao.a (J)V]
      [17] aload_0 v0
      [18] getfield #58
        + Fieldref [a/a/a/b/ap.m Ljava/util/Queue;]
      [21] aload_1 v1
      [22] invokeinterface #209
        + InterfaceMethodref [java/util/Queue.add (Ljava/lang/Object;)Z]
      [27] pop
      [28] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [17] Var: ..., Stack: (empty)
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       a(La/a/a/b/ao;IJ)V
    Access flags: 0x0
      = void a(a.a.a.b.ao,int,long)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 71, locals = 5, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #127
        + Methodref [a/a/a/b/ap.h ()V]
      [4] aload_0 v0
      [5] dup
      [6] getfield #48
        + Fieldref [a/a/a/b/ap.c I]
      [9] iload_2 v2
      [10] iadd
      [11] putfield #48
        + Fieldref [a/a/a/b/ap.c I]
      [14] aload_0 v0
      [15] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [18] invokevirtual #155
        + Methodref [a/a/a/b/n.i ()Z]
      [21] ifeq +10 (target=31)
      [24] aload_1 v1
      [25] lload_3 v3
      [26] invokeinterface #185
        + InterfaceMethodref [a/a/a/b/ao.a (J)V]
      [31] aload_0 v0
      [32] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [35] invokevirtual #154
        + Methodref [a/a/a/b/n.h ()Z]
      [38] ifeq +10 (target=48)
      [41] aload_1 v1
      [42] lload_3 v3
      [43] invokeinterface #188
        + InterfaceMethodref [a/a/a/b/ao.b (J)V]
      [48] aload_0 v0
      [49] getfield #58
        + Fieldref [a/a/a/b/ap.m Ljava/util/Queue;]
      [52] aload_1 v1
      [53] invokeinterface #209
        + InterfaceMethodref [java/util/Queue.add (Ljava/lang/Object;)Z]
      [58] pop
      [59] aload_0 v0
      [60] getfield #57
        + Fieldref [a/a/a/b/ap.l Ljava/util/Queue;]
      [63] aload_1 v1
      [64] invokeinterface #209
        + InterfaceMethodref [java/util/Queue.add (Ljava/lang/Object;)Z]
      [69] pop
      [70] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [31] Var: ..., Stack: (empty)
        - [48] Var: ..., Stack: (empty)
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       h()V
    Access flags: 0x0
      = void h()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 45, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #55
        + Fieldref [a/a/a/b/ap.j Ljava/util/Queue;]
      [4] invokeinterface #215
        + InterfaceMethodref [java/util/Queue.poll ()Ljava/lang/Object;]
      [9] checkcast #10
        + Class [a/a/a/b/ao]
      [12] dup
      [13] astore_1 v1
      [14] ifnull +30 (target=44)
      [17] aload_0 v0
      [18] getfield #58
        + Fieldref [a/a/a/b/ap.m Ljava/util/Queue;]
      [21] aload_1 v1
      [22] invokeinterface #211
        + InterfaceMethodref [java/util/Queue.contains (Ljava/lang/Object;)Z]
      [27] ifeq -27 (target=0)
      [30] aload_0 v0
      [31] getfield #58
        + Fieldref [a/a/a/b/ap.m Ljava/util/Queue;]
      [34] aload_1 v1
      [35] invokeinterface #209
        + InterfaceMethodref [java/util/Queue.add (Ljava/lang/Object;)Z]
      [40] pop
      [41] goto -41 (target=0)
      [44] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [0] Var: ..., Stack: (empty)
        - [44] Var: ...[a:a/a/a/b/ao], Stack: (empty)
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       a(J)V
    Access flags: 0x0
      = void a(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 27, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #137
        + Methodref [a/a/a/b/ap.tryLock ()Z]
      [4] ifeq +22 (target=26)
      [7] aload_0 v0
      [8] lload_1 v1
      [9] invokevirtual #114
        + Methodref [a/a/a/b/ap.b (J)V]
      [12] aload_0 v0
      [13] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [16] goto +10 (target=26)
      [19] astore_3 v3
      [20] aload_0 v0
      [21] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [24] aload_3 v3
      [25] athrow
      [26] return
      Code attribute exceptions (count = 2):
      - ExceptionInfo (7 -> 12: 19):
      - ExceptionInfo (19 -> 20: 19):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [19] Var: ..., Stack: [a:java/lang/Throwable]
        - [26] Var: ..., Stack: (empty)
  + Method:       b(J)V
    Access flags: 0x0
      = void b(long)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 113, locals = 4, stack = 4):
      [0] aload_0 v0
      [1] invokevirtual #127
        + Methodref [a/a/a/b/ap.h ()V]
      [4] aload_0 v0
      [5] getfield #57
        + Fieldref [a/a/a/b/ap.l Ljava/util/Queue;]
      [8] invokeinterface #214
        + InterfaceMethodref [java/util/Queue.peek ()Ljava/lang/Object;]
      [13] checkcast #10
        + Class [a/a/a/b/ao]
      [16] dup
      [17] astore_3 v3
      [18] ifnull +40 (target=58)
      [21] aload_0 v0
      [22] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [25] aload_3 v3
      [26] lload_1 v1
      [27] invokevirtual #150
        + Methodref [a/a/a/b/n.b (La/a/a/b/ao;J)Z]
      [30] ifeq +28 (target=58)
      [33] aload_0 v0
      [34] aload_3 v3
      [35] aload_3 v3
      [36] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [41] getstatic #63
        + Fieldref [a/a/a/b/bw.d La/a/a/b/bw;]
      [44] invokevirtual #93
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;ILa/a/a/b/bw;)Z]
      [47] ifne -43 (target=4)
      [50] new #30
        + Class [java/lang/AssertionError]
      [53] dup
      [54] invokespecial #166
        + Methodref [java/lang/AssertionError.<init> ()V]
      [57] athrow
      [58] aload_0 v0
      [59] getfield #58
        + Fieldref [a/a/a/b/ap.m Ljava/util/Queue;]
      [62] invokeinterface #214
        + InterfaceMethodref [java/util/Queue.peek ()Ljava/lang/Object;]
      [67] checkcast #10
        + Class [a/a/a/b/ao]
      [70] dup
      [71] astore_3 v3
      [72] ifnull +40 (target=112)
      [75] aload_0 v0
      [76] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [79] aload_3 v3
      [80] lload_1 v1
      [81] invokevirtual #150
        + Methodref [a/a/a/b/n.b (La/a/a/b/ao;J)Z]
      [84] ifeq +28 (target=112)
      [87] aload_0 v0
      [88] aload_3 v3
      [89] aload_3 v3
      [90] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [95] getstatic #63
        + Fieldref [a/a/a/b/bw.d La/a/a/b/bw;]
      [98] invokevirtual #93
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;ILa/a/a/b/bw;)Z]
      [101] ifne -43 (target=58)
      [104] new #30
        + Class [java/lang/AssertionError]
      [107] dup
      [108] invokespecial #166
        + Methodref [java/lang/AssertionError.<init> ()V]
      [111] athrow
      [112] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [4] Var: ..., Stack: (empty)
        - [58] Var: ...[a:a/a/a/b/ao], Stack: (empty)
        - [112] Var: ..., Stack: (empty)
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       a(La/a/a/b/ao;La/a/a/b/bw;)V
    Access flags: 0x0
      = void a(a.a.a.b.ao,a.a.a.b.bw)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 24, locals = 3, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [7] aload_1 v1
      [8] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [13] aload_1 v1
      [14] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [19] aload_2 v2
      [20] invokevirtual #108
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)V]
      [23] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       a(Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)V
    Access flags: 0x0
      = void a(java.lang.Object,int,a.a.a.b.bc,a.a.a.b.bw)
    Class member attributes (count = 3):
    + Code attribute instructions (code length = 83, locals = 7, stack = 5):
      [0] aload_0 v0
      [1] dup
      [2] getfield #48
        + Fieldref [a/a/a/b/ap.c I]
      [5] aload_3 v3
      [6] invokeinterface #192
        + InterfaceMethodref [a/a/a/b/bc.a ()I]
      [11] isub
      [12] putfield #48
        + Fieldref [a/a/a/b/ap.c I]
      [15] aload v4
      [17] invokevirtual #143
        + Methodref [a/a/a/b/bw.a ()Z]
      [20] ifeq +12 (target=32)
      [23] aload_0 v0
      [24] getfield #59
        + Fieldref [a/a/a/b/ap.n La/a/a/b/c;]
      [27] invokeinterface #199
        + InterfaceMethodref [a/a/a/b/c.a ()V]
      [32] aload_0 v0
      [33] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [36] getfield #71
        + Fieldref [a/a/a/b/n.p Ljava/util/Queue;]
      [39] getstatic #76
        + Fieldref [a/a/a/b/n.w Ljava/util/Queue;]
      [42] ifacmpeq +40 (target=82)
      [45] aload_3 v3
      [46] invokeinterface #198
        + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
      [51] astore v5
      [53] new #19
        + Class [a/a/a/b/cd]
      [56] dup
      [57] aload_1 v1
      [58] aload v5
      [60] aload v4
      [62] invokespecial #144
        + Methodref [a/a/a/b/cd.<init> (Ljava/lang/Object;Ljava/lang/Object;La/a/a/b/bw;)V]
      [65] astore v6
      [67] aload_0 v0
      [68] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [71] getfield #71
        + Fieldref [a/a/a/b/n.p Ljava/util/Queue;]
      [74] aload v6
      [76] invokeinterface #213
        + InterfaceMethodref [java/util/Queue.offer (Ljava/lang/Object;)Z]
      [81] pop
      [82] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [32] Var: ..., Stack: (empty)
        - [82] Var: ..., Stack: (empty)
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       i()V
    Access flags: 0x0
      = void i()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 62, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [4] invokevirtual #146
        + Methodref [a/a/a/b/n.a ()Z]
      [7] ifne +4 (target=11)
      [10] return
      [11] aload_0 v0
      [12] invokevirtual #127
        + Methodref [a/a/a/b/ap.h ()V]
      [15] aload_0 v0
      [16] getfield #48
        + Fieldref [a/a/a/b/ap.c I]
      [19] i2l
      [20] aload_0 v0
      [21] getfield #52
        + Fieldref [a/a/a/b/ap.g J]
      [24] lcmp
      [25] ifle +36 (target=61)
      [28] aload_0 v0
      [29] invokevirtual #130
        + Methodref [a/a/a/b/ap.j ()La/a/a/b/ao;]
      [32] astore_1 v1
      [33] aload_0 v0
      [34] aload_1 v1
      [35] aload_1 v1
      [36] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [41] getstatic #64
        + Fieldref [a/a/a/b/bw.e La/a/a/b/bw;]
      [44] invokevirtual #93
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;ILa/a/a/b/bw;)Z]
      [47] ifne +11 (target=58)
      [50] new #30
        + Class [java/lang/AssertionError]
      [53] dup
      [54] invokespecial #166
        + Methodref [java/lang/AssertionError.<init> ()V]
      [57] athrow
      [58] goto -43 (target=15)
      [61] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [11] Var: ..., Stack: (empty)
        - [15] Var: ..., Stack: (empty)
        - [58] Var: ..., Stack: (empty)
        - [61] Var: ..., Stack: (empty)
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       j()La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao j()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 58, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] getfield #58
        + Fieldref [a/a/a/b/ap.m Ljava/util/Queue;]
      [4] invokeinterface #212
        + InterfaceMethodref [java/util/Queue.iterator ()Ljava/util/Iterator;]
      [9] astore_1 v1
      [10] aload_1 v1
      [11] invokeinterface #207
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [16] ifeq +34 (target=50)
      [19] aload_1 v1
      [20] invokeinterface #208
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [25] checkcast #10
        + Class [a/a/a/b/ao]
      [28] astore_2 v2
      [29] aload_2 v2
      [30] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [35] invokeinterface #192
        + InterfaceMethodref [a/a/a/b/bc.a ()I]
      [40] istore_3 v3
      [41] iload_3 v3
      [42] ifle +5 (target=47)
      [45] aload_2 v2
      [46] areturn
      [47] goto -37 (target=10)
      [50] new #30
        + Class [java/lang/AssertionError]
      [53] dup
      [54] invokespecial #166
        + Methodref [java/lang/AssertionError.<init> ()V]
      [57] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [10] Var: ...[a:java/util/Iterator], Stack: (empty)
        - [47] Var: ..., Stack: (empty)
        - [50] Var: -1, Stack: (empty)
  + Method:       b(I)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao b(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] getfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [4] astore_2 v2
      [5] aload_2 v2
      [6] iload_1 v1
      [7] aload_2 v2
      [8] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [11] iconst_1
      [12] isub
      [13] iand
      [14] invokevirtual #180
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [17] checkcast #10
        + Class [a/a/a/b/ao]
      [20] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;I)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(java.lang.Object,int)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 73, locals = 5, stack = 3):
      [0] aload_0 v0
      [1] iload_2 v2
      [2] invokevirtual #113
        + Methodref [a/a/a/b/ap.b (I)La/a/a/b/ao;]
      [5] astore_3 v3
      [6] aload_3 v3
      [7] ifnull +64 (target=71)
      [10] aload_3 v3
      [11] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [16] iload_2 v2
      [17] ificmpeq +6 (target=23)
      [20] goto +41 (target=61)
      [23] aload_3 v3
      [24] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [29] astore v4
      [31] aload v4
      [33] ifnonnull +10 (target=43)
      [36] aload_0 v0
      [37] invokevirtual #88
        + Methodref [a/a/a/b/ap.a ()V]
      [40] goto +21 (target=61)
      [43] aload_0 v0
      [44] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [47] getfield #66
        + Fieldref [a/a/a/b/n.g La/a/a/a/b;]
      [50] aload_1 v1
      [51] aload v4
      [53] invokevirtual #78
        + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [56] ifeq +5 (target=61)
      [59] aload_3 v3
      [60] areturn
      [61] aload_3 v3
      [62] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [67] astore_3 v3
      [68] goto -62 (target=6)
      [71] aconst_null
      [72] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 5):
        - [6] Var: ...[a:a/a/a/b/ao], Stack: (empty)
        - [23] Var: ..., Stack: (empty)
        - [43] Var: ...[a:java/lang/Object], Stack: (empty)
        - [61] Var: -1, Stack: (empty)
        - [71] Var: -1, Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Object;IJ)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(java.lang.Object,int,long)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 38, locals = 6, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokevirtual #101
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;I)La/a/a/b/ao;]
      [6] astore v5
      [8] aload v5
      [10] ifnonnull +5 (target=15)
      [13] aconst_null
      [14] areturn
      [15] aload_0 v0
      [16] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [19] aload v5
      [21] lload_3 v3
      [22] invokevirtual #150
        + Methodref [a/a/a/b/n.b (La/a/a/b/ao;J)Z]
      [25] ifeq +10 (target=35)
      [28] aload_0 v0
      [29] lload_3 v3
      [30] invokevirtual #90
        + Methodref [a/a/a/b/ap.a (J)V]
      [33] aconst_null
      [34] areturn
      [35] aload v5
      [37] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [15] Var: ...[a:a/a/a/b/ao], Stack: (empty)
        - [35] Var: ..., Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       c(La/a/a/b/ao;J)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object c(a.a.a.b.ao,long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 61, locals = 5, stack = 4):
      [0] aload_1 v1
      [1] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [6] ifnonnull +9 (target=15)
      [9] aload_0 v0
      [10] invokevirtual #88
        + Methodref [a/a/a/b/ap.a ()V]
      [13] aconst_null
      [14] areturn
      [15] aload_1 v1
      [16] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [21] invokeinterface #198
        + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
      [26] astore v4
      [28] aload v4
      [30] ifnonnull +9 (target=39)
      [33] aload_0 v0
      [34] invokevirtual #88
        + Methodref [a/a/a/b/ap.a ()V]
      [37] aconst_null
      [38] areturn
      [39] aload_0 v0
      [40] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [43] aload_1 v1
      [44] lload_2 v2
      [45] invokevirtual #150
        + Methodref [a/a/a/b/n.b (La/a/a/b/ao;J)Z]
      [48] ifeq +10 (target=58)
      [51] aload_0 v0
      [52] lload_2 v2
      [53] invokevirtual #90
        + Methodref [a/a/a/b/ap.a (J)V]
      [56] aconst_null
      [57] areturn
      [58] aload v4
      [60] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [15] Var: ..., Stack: (empty)
        - [39] Var: ...[a:java/lang/Object], Stack: (empty)
        - [58] Var: ..., Stack: (empty)
  + Method:       b(Ljava/lang/Object;I)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object b(java.lang.Object,int)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 122, locals = 9, stack = 8):
      [0] aload_0 v0
      [1] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [4] ifeq +101 (target=105)
      [7] aload_0 v0
      [8] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [11] getfield #72
        + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
      [14] invokevirtual #77
        + Methodref [a/a/a/a/af.a ()J]
      [17] lstore_3 v3
      [18] aload_0 v0
      [19] aload_1 v1
      [20] iload_2 v2
      [21] lload_3 v3
      [22] invokevirtual #102
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;IJ)La/a/a/b/ao;]
      [25] astore v5
      [27] aload v5
      [29] ifnonnull +13 (target=42)
      [32] aconst_null
      [33] astore v6
      [35] aload_0 v0
      [36] invokevirtual #133
        + Methodref [a/a/a/b/ap.m ()V]
      [39] aload v6
      [41] areturn
      [42] aload v5
      [44] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [49] invokeinterface #198
        + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
      [54] astore v6
      [56] aload v6
      [58] ifnull +43 (target=101)
      [61] aload_0 v0
      [62] aload v5
      [64] lload_3 v3
      [65] invokevirtual #94
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;J)V]
      [68] aload_0 v0
      [69] aload v5
      [71] aload v5
      [73] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [78] iload_2 v2
      [79] aload v6
      [81] lload_3 v3
      [82] aload_0 v0
      [83] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [86] getfield #74
        + Fieldref [a/a/a/b/n.u La/a/a/b/j;]
      [89] invokevirtual #98
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;Ljava/lang/Object;ILjava/lang/Object;JLa/a/a/b/j;)Ljava/lang/Object;]
      [92] astore v7
      [94] aload_0 v0
      [95] invokevirtual #133
        + Methodref [a/a/a/b/ap.m ()V]
      [98] aload v7
      [100] areturn
      [101] aload_0 v0
      [102] invokevirtual #88
        + Methodref [a/a/a/b/ap.a ()V]
      [105] aconst_null
      [106] astore_3 v3
      [107] aload_0 v0
      [108] invokevirtual #133
        + Methodref [a/a/a/b/ap.m ()V]
      [111] aload_3 v3
      [112] areturn
      [113] astore v8
      [115] aload_0 v0
      [116] invokevirtual #133
        + Methodref [a/a/a/b/ap.m ()V]
      [119] aload v8
      [121] athrow
      Code attribute exceptions (count = 4):
      - ExceptionInfo (0 -> 35: 113):
      - ExceptionInfo (42 -> 94: 113):
      - ExceptionInfo (101 -> 107: 113):
      - ExceptionInfo (113 -> 115: 113):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [42] Var: ...[l][a:a/a/a/b/ao], Stack: (empty)
        - [101] Var: ...[a:java/lang/Object], Stack: (empty)
        - [105] Var: -3, Stack: (empty)
        - [113] Var: ..., Stack: [a:java/lang/Throwable]
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       c(Ljava/lang/Object;I)Z
    Access flags: 0x0
      = boolean c(java.lang.Object,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 88, locals = 8, stack = 5):
      [0] aload_0 v0
      [1] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [4] ifeq +67 (target=71)
      [7] aload_0 v0
      [8] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [11] getfield #72
        + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
      [14] invokevirtual #77
        + Methodref [a/a/a/a/af.a ()J]
      [17] lstore_3 v3
      [18] aload_0 v0
      [19] aload_1 v1
      [20] iload_2 v2
      [21] lload_3 v3
      [22] invokevirtual #102
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;IJ)La/a/a/b/ao;]
      [25] astore v5
      [27] aload v5
      [29] ifnonnull +13 (target=42)
      [32] iconst_0
      [33] istore v6
      [35] aload_0 v0
      [36] invokevirtual #133
        + Methodref [a/a/a/b/ap.m ()V]
      [39] iload v6
      [41] ireturn
      [42] aload v5
      [44] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [49] invokeinterface #198
        + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
      [54] ifnull +7 (target=61)
      [57] iconst_1
      [58] goto +4 (target=62)
      [61] iconst_0
      [62] istore v6
      [64] aload_0 v0
      [65] invokevirtual #133
        + Methodref [a/a/a/b/ap.m ()V]
      [68] iload v6
      [70] ireturn
      [71] iconst_0
      [72] istore_3 v3
      [73] aload_0 v0
      [74] invokevirtual #133
        + Methodref [a/a/a/b/ap.m ()V]
      [77] iload_3 v3
      [78] ireturn
      [79] astore v7
      [81] aload_0 v0
      [82] invokevirtual #133
        + Methodref [a/a/a/b/ap.m ()V]
      [85] aload v7
      [87] athrow
      Code attribute exceptions (count = 4):
      - ExceptionInfo (0 -> 35: 79):
      - ExceptionInfo (42 -> 64: 79):
      - ExceptionInfo (71 -> 73: 79):
      - ExceptionInfo (79 -> 81: 79):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 5):
        - [42] Var: ...[l][a:a/a/a/b/ao], Stack: (empty)
        - [61] Var: ..., Stack: (empty)
        - [62] Var: ..., Stack: [i]
        - [71] Var: -2, Stack: (empty)
        - [79] Var: ..., Stack: [a:java/lang/Throwable]
  + Method:       a(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object a(java.lang.Object,int,java.lang.Object,boolean)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 419, locals = 17, stack = 6):
      [0] aload_0 v0
      [1] invokevirtual #132
        + Methodref [a/a/a/b/ap.lock ()V]
      [4] aload_0 v0
      [5] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [8] getfield #72
        + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
      [11] invokevirtual #77
        + Methodref [a/a/a/a/af.a ()J]
      [14] lstore v5
      [16] aload_0 v0
      [17] lload v5
      [19] invokevirtual #120
        + Methodref [a/a/a/b/ap.c (J)V]
      [22] aload_0 v0
      [23] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [26] iconst_1
      [27] iadd
      [28] istore v7
      [30] iload v7
      [32] aload_0 v0
      [33] getfield #50
        + Fieldref [a/a/a/b/ap.e I]
      [36] ificmple +15 (target=51)
      [39] aload_0 v0
      [40] invokevirtual #131
        + Methodref [a/a/a/b/ap.k ()V]
      [43] aload_0 v0
      [44] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [47] iconst_1
      [48] iadd
      [49] istore v7
      [51] aload_0 v0
      [52] getfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [55] astore v8
      [57] iload_2 v2
      [58] aload v8
      [60] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [63] iconst_1
      [64] isub
      [65] iand
      [66] istore v9
      [68] aload v8
      [70] iload v9
      [72] invokevirtual #180
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [75] checkcast #10
        + Class [a/a/a/b/ao]
      [78] astore v10
      [80] aload v10
      [82] astore v11
      [84] aload v11
      [86] ifnull +249 (target=335)
      [89] aload v11
      [91] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [96] astore v12
      [98] aload v11
      [100] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [105] iload_2 v2
      [106] ificmpne +217 (target=323)
      [109] aload v12
      [111] ifnull +212 (target=323)
      [114] aload_0 v0
      [115] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [118] getfield #66
        + Fieldref [a/a/a/b/n.g La/a/a/a/b;]
      [121] aload_1 v1
      [122] aload v12
      [124] invokevirtual #78
        + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [127] ifeq +196 (target=323)
      [130] aload v11
      [132] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [137] astore v13
      [139] aload v13
      [141] invokeinterface #198
        + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
      [146] astore v14
      [148] aload v14
      [150] ifnonnull +95 (target=245)
      [153] aload_0 v0
      [154] dup
      [155] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [158] iconst_1
      [159] iadd
      [160] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [163] aload v13
      [165] invokeinterface #196
        + InterfaceMethodref [a/a/a/b/bc.d ()Z]
      [170] ifeq +33 (target=203)
      [173] aload_0 v0
      [174] aload_1 v1
      [175] iload_2 v2
      [176] aload v13
      [178] getstatic #62
        + Fieldref [a/a/a/b/bw.c La/a/a/b/bw;]
      [181] invokevirtual #108
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)V]
      [184] aload_0 v0
      [185] aload v11
      [187] aload_1 v1
      [188] aload_3 v3
      [189] lload v5
      [191] invokevirtual #100
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;Ljava/lang/Object;Ljava/lang/Object;J)V]
      [194] aload_0 v0
      [195] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [198] istore v7
      [200] goto +21 (target=221)
      [203] aload_0 v0
      [204] aload v11
      [206] aload_1 v1
      [207] aload_3 v3
      [208] lload v5
      [210] invokevirtual #100
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;Ljava/lang/Object;Ljava/lang/Object;J)V]
      [213] aload_0 v0
      [214] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [217] iconst_1
      [218] iadd
      [219] istore v7
      [221] aload_0 v0
      [222] iload v7
      [224] putfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [227] aload_0 v0
      [228] invokevirtual #128
        + Methodref [a/a/a/b/ap.i ()V]
      [231] aconst_null
      [232] astore v15
      [234] aload_0 v0
      [235] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [238] aload_0 v0
      [239] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [242] aload v15
      [244] areturn
      [245] iload v4
      [247] ifeq +26 (target=273)
      [250] aload_0 v0
      [251] aload v11
      [253] lload v5
      [255] invokevirtual #115
        + Methodref [a/a/a/b/ap.b (La/a/a/b/ao;J)V]
      [258] aload v14
      [260] astore v15
      [262] aload_0 v0
      [263] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [266] aload_0 v0
      [267] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [270] aload v15
      [272] areturn
      [273] aload_0 v0
      [274] dup
      [275] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [278] iconst_1
      [279] iadd
      [280] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [283] aload_0 v0
      [284] aload_1 v1
      [285] iload_2 v2
      [286] aload v13
      [288] getstatic #61
        + Fieldref [a/a/a/b/bw.b La/a/a/b/bw;]
      [291] invokevirtual #108
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)V]
      [294] aload_0 v0
      [295] aload v11
      [297] aload_1 v1
      [298] aload_3 v3
      [299] lload v5
      [301] invokevirtual #100
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;Ljava/lang/Object;Ljava/lang/Object;J)V]
      [304] aload_0 v0
      [305] invokevirtual #128
        + Methodref [a/a/a/b/ap.i ()V]
      [308] aload v14
      [310] astore v15
      [312] aload_0 v0
      [313] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [316] aload_0 v0
      [317] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [320] aload v15
      [322] areturn
      [323] aload v11
      [325] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [330] astore v11
      [332] goto -248 (target=84)
      [335] aload_0 v0
      [336] dup
      [337] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [340] iconst_1
      [341] iadd
      [342] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [345] aload_0 v0
      [346] aload_1 v1
      [347] iload_2 v2
      [348] aload v10
      [350] invokevirtual #107
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
      [353] astore v11
      [355] aload_0 v0
      [356] aload v11
      [358] aload_1 v1
      [359] aload_3 v3
      [360] lload v5
      [362] invokevirtual #100
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;Ljava/lang/Object;Ljava/lang/Object;J)V]
      [365] aload v8
      [367] iload v9
      [369] aload v11
      [371] invokevirtual #182
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
      [374] aload_0 v0
      [375] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [378] iconst_1
      [379] iadd
      [380] istore v7
      [382] aload_0 v0
      [383] iload v7
      [385] putfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [388] aload_0 v0
      [389] invokevirtual #128
        + Methodref [a/a/a/b/ap.i ()V]
      [392] aconst_null
      [393] astore v12
      [395] aload_0 v0
      [396] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [399] aload_0 v0
      [400] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [403] aload v12
      [405] areturn
      [406] astore v16
      [408] aload_0 v0
      [409] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [412] aload_0 v0
      [413] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [416] aload v16
      [418] athrow
      Code attribute exceptions (count = 5):
      - ExceptionInfo (4 -> 234: 406):
      - ExceptionInfo (245 -> 262: 406):
      - ExceptionInfo (273 -> 312: 406):
      - ExceptionInfo (323 -> 395: 406):
      - ExceptionInfo (406 -> 408: 406):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 9):
        - [51] Var: ...[l][i], Stack: (empty)
        - [84] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:java/lang/Object][i][l][i][a:java/util/concurrent/atomic/AtomicReferenceArray][i][a:a/a/a/b/ao][a:a/a/a/b/ao], Stack: 
        - [203] Var: ...[a:java/lang/Object][a:a/a/a/b/bc][a:java/lang/Object], Stack: (empty)
        - [221] Var: ..., Stack: (empty)
        - [245] Var: ..., Stack: (empty)
        - [273] Var: ..., Stack: (empty)
        - [323] Var: -3, Stack: (empty)
        - [335] Var: -1, Stack: (empty)
        - [406] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:java/lang/Object][i], Stack: [a:java/lang/Throwable]
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       k()V
    Access flags: 0x0
      = void k()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 282, locals = 16, stack = 3):
      [0] aload_0 v0
      [1] getfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [9] istore_2 v2
      [10] iload_2 v2
      [11] ldc #1
        + Integer [1073741824]
      [13] ificmplt +4 (target=17)
      [16] return
      [17] aload_0 v0
      [18] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [21] istore_3 v3
      [22] aload_0 v0
      [23] iload_2 v2
      [24] iconst_1
      [25] ishl
      [26] invokevirtual #89
        + Methodref [a/a/a/b/ap.a (I)Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [29] astore v4
      [31] aload_0 v0
      [32] aload v4
      [34] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [37] iconst_3
      [38] imul
      [39] iconst_4
      [40] idiv
      [41] putfield #50
        + Fieldref [a/a/a/b/ap.e I]
      [44] aload v4
      [46] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [49] iconst_1
      [50] isub
      [51] istore v5
      [53] iconst_0
      [54] istore v6
      [56] iload v6
      [58] iload_2 v2
      [59] ificmpge +211 (target=270)
      [62] aload_1 v1
      [63] iload v6
      [65] invokevirtual #180
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [68] checkcast #10
        + Class [a/a/a/b/ao]
      [71] astore v7
      [73] aload v7
      [75] ifnull +189 (target=264)
      [78] aload v7
      [80] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [85] astore v8
      [87] aload v7
      [89] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [94] iload v5
      [96] iand
      [97] istore v9
      [99] aload v8
      [101] ifnonnull +15 (target=116)
      [104] aload v4
      [106] iload v9
      [108] aload v7
      [110] invokevirtual #182
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
      [113] goto +151 (target=264)
      [116] aload v7
      [118] astore v10
      [120] iload v9
      [122] istore v11
      [124] aload v8
      [126] astore v12
      [128] aload v12
      [130] ifnull +42 (target=172)
      [133] aload v12
      [135] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [140] iload v5
      [142] iand
      [143] istore v13
      [145] iload v13
      [147] iload v11
      [149] ificmpeq +11 (target=160)
      [152] iload v13
      [154] istore v11
      [156] aload v12
      [158] astore v10
      [160] aload v12
      [162] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [167] astore v12
      [169] goto -41 (target=128)
      [172] aload v4
      [174] iload v11
      [176] aload v10
      [178] invokevirtual #182
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
      [181] aload v7
      [183] astore v12
      [185] aload v12
      [187] aload v10
      [189] ifacmpeq +75 (target=264)
      [192] aload v12
      [194] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [199] iload v5
      [201] iand
      [202] istore v13
      [204] aload v4
      [206] iload v13
      [208] invokevirtual #180
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [211] checkcast #10
        + Class [a/a/a/b/ao]
      [214] astore v14
      [216] aload_0 v0
      [217] aload v12
      [219] aload v14
      [221] invokevirtual #95
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
      [224] astore v15
      [226] aload v15
      [228] ifnull +15 (target=243)
      [231] aload v4
      [233] iload v13
      [235] aload v15
      [237] invokevirtual #182
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
      [240] goto +12 (target=252)
      [243] aload_0 v0
      [244] aload v12
      [246] invokevirtual #91
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;)V]
      [249] iinc v3, -1
      [252] aload v12
      [254] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [259] astore v12
      [261] goto -76 (target=185)
      [264] iinc v6, 1
      [267] goto -211 (target=56)
      [270] aload_0 v0
      [271] aload v4
      [273] putfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [276] aload_0 v0
      [277] iload_3 v3
      [278] putfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [281] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 11):
        - [17] Var: ...[a:java/util/concurrent/atomic/AtomicReferenceArray][i], Stack: (empty)
        - [56] Var: [a:a/a/a/b/ap][a:java/util/concurrent/atomic/AtomicReferenceArray][i][i][a:java/util/concurrent/atomic/AtomicReferenceArray][i][i], Stack: 
        - [116] Var: ...[a:a/a/a/b/ao][a:a/a/a/b/ao][i], Stack: (empty)
        - [128] Var: ...[a:a/a/a/b/ao][i][a:a/a/a/b/ao], Stack: (empty)
        - [160] Var: ..., Stack: (empty)
        - [172] Var: -1, Stack: (empty)
        - [185] Var: ...[a:a/a/a/b/ao], Stack: (empty)
        - [243] Var: ...[i][a:a/a/a/b/ao][a:a/a/a/b/ao], Stack: (empty)
        - [252] Var: -3, Stack: (empty)
        - [264] Var: [a:a/a/a/b/ap][a:java/util/concurrent/atomic/AtomicReferenceArray][i][i][a:java/util/concurrent/atomic/AtomicReferenceArray][i][i], Stack: 
        - [270] Var: -1, Stack: (empty)
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       a(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Z
    Access flags: 0x0
      = boolean a(java.lang.Object,int,java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 334, locals = 17, stack = 7):
      [0] aload_0 v0
      [1] invokevirtual #132
        + Methodref [a/a/a/b/ap.lock ()V]
      [4] aload_0 v0
      [5] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [8] getfield #72
        + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
      [11] invokevirtual #77
        + Methodref [a/a/a/a/af.a ()J]
      [14] lstore v5
      [16] aload_0 v0
      [17] lload v5
      [19] invokevirtual #120
        + Methodref [a/a/a/b/ap.c (J)V]
      [22] aload_0 v0
      [23] getfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [26] astore v7
      [28] iload_2 v2
      [29] aload v7
      [31] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [34] iconst_1
      [35] isub
      [36] iand
      [37] istore v8
      [39] aload v7
      [41] iload v8
      [43] invokevirtual #180
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [46] checkcast #10
        + Class [a/a/a/b/ao]
      [49] astore v9
      [51] aload v9
      [53] astore v10
      [55] aload v10
      [57] ifnull +250 (target=307)
      [60] aload v10
      [62] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [67] astore v11
      [69] aload v10
      [71] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [76] iload_2 v2
      [77] ificmpne +218 (target=295)
      [80] aload v11
      [82] ifnull +213 (target=295)
      [85] aload_0 v0
      [86] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [89] getfield #66
        + Fieldref [a/a/a/b/n.g La/a/a/a/b;]
      [92] aload_1 v1
      [93] aload v11
      [95] invokevirtual #78
        + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [98] ifeq +197 (target=295)
      [101] aload v10
      [103] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [108] astore v12
      [110] aload v12
      [112] invokeinterface #198
        + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
      [117] astore v13
      [119] aload v13
      [121] ifnonnull +86 (target=207)
      [124] aload v12
      [126] invokeinterface #196
        + InterfaceMethodref [a/a/a/b/bc.d ()Z]
      [131] ifeq +62 (target=193)
      [134] aload_0 v0
      [135] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [138] iconst_1
      [139] isub
      [140] istore v14
      [142] aload_0 v0
      [143] dup
      [144] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [147] iconst_1
      [148] iadd
      [149] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [152] aload_0 v0
      [153] aload v9
      [155] aload v10
      [157] aload v11
      [159] iload_2 v2
      [160] aload v12
      [162] getstatic #62
        + Fieldref [a/a/a/b/bw.c La/a/a/b/bw;]
      [165] invokevirtual #96
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;La/a/a/b/ao;Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)La/a/a/b/ao;]
      [168] astore v15
      [170] aload_0 v0
      [171] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [174] iconst_1
      [175] isub
      [176] istore v14
      [178] aload v7
      [180] iload v8
      [182] aload v15
      [184] invokevirtual #182
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
      [187] aload_0 v0
      [188] iload v14
      [190] putfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [193] iconst_0
      [194] istore v14
      [196] aload_0 v0
      [197] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [200] aload_0 v0
      [201] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [204] iload v14
      [206] ireturn
      [207] aload_0 v0
      [208] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [211] getfield #67
        + Fieldref [a/a/a/b/n.h La/a/a/a/b;]
      [214] aload_3 v3
      [215] aload v13
      [217] invokevirtual #78
        + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [220] ifeq +53 (target=273)
      [223] aload_0 v0
      [224] dup
      [225] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [228] iconst_1
      [229] iadd
      [230] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [233] aload_0 v0
      [234] aload_1 v1
      [235] iload_2 v2
      [236] aload v12
      [238] getstatic #61
        + Fieldref [a/a/a/b/bw.b La/a/a/b/bw;]
      [241] invokevirtual #108
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)V]
      [244] aload_0 v0
      [245] aload v10
      [247] aload_1 v1
      [248] aload v4
      [250] lload v5
      [252] invokevirtual #100
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;Ljava/lang/Object;Ljava/lang/Object;J)V]
      [255] aload_0 v0
      [256] invokevirtual #128
        + Methodref [a/a/a/b/ap.i ()V]
      [259] iconst_1
      [260] istore v14
      [262] aload_0 v0
      [263] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [266] aload_0 v0
      [267] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [270] iload v14
      [272] ireturn
      [273] aload_0 v0
      [274] aload v10
      [276] lload v5
      [278] invokevirtual #115
        + Methodref [a/a/a/b/ap.b (La/a/a/b/ao;J)V]
      [281] iconst_0
      [282] istore v14
      [284] aload_0 v0
      [285] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [288] aload_0 v0
      [289] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [292] iload v14
      [294] ireturn
      [295] aload v10
      [297] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [302] astore v10
      [304] goto -249 (target=55)
      [307] iconst_0
      [308] istore v10
      [310] aload_0 v0
      [311] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [314] aload_0 v0
      [315] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [318] iload v10
      [320] ireturn
      [321] astore v16
      [323] aload_0 v0
      [324] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [327] aload_0 v0
      [328] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [331] aload v16
      [333] athrow
      Code attribute exceptions (count = 5):
      - ExceptionInfo (4 -> 196: 321):
      - ExceptionInfo (207 -> 262: 321):
      - ExceptionInfo (273 -> 284: 321):
      - ExceptionInfo (295 -> 310: 321):
      - ExceptionInfo (321 -> 323: 321):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 7):
        - [55] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:java/lang/Object][a:java/lang/Object][l][a:java/util/concurrent/atomic/AtomicReferenceArray][i][a:a/a/a/b/ao][a:a/a/a/b/ao], Stack: 
        - [193] Var: ...[a:java/lang/Object][a:a/a/a/b/bc][a:java/lang/Object], Stack: (empty)
        - [207] Var: ..., Stack: (empty)
        - [273] Var: ..., Stack: (empty)
        - [295] Var: -3, Stack: (empty)
        - [307] Var: -1, Stack: (empty)
        - [321] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:java/lang/Object][a:java/lang/Object], Stack: [a:java/lang/Throwable]
  + Method:       a(Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object a(java.lang.Object,int,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 296, locals = 16, stack = 7):
      [0] aload_0 v0
      [1] invokevirtual #132
        + Methodref [a/a/a/b/ap.lock ()V]
      [4] aload_0 v0
      [5] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [8] getfield #72
        + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
      [11] invokevirtual #77
        + Methodref [a/a/a/a/af.a ()J]
      [14] lstore v4
      [16] aload_0 v0
      [17] lload v4
      [19] invokevirtual #120
        + Methodref [a/a/a/b/ap.c (J)V]
      [22] aload_0 v0
      [23] getfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [26] astore v6
      [28] iload_2 v2
      [29] aload v6
      [31] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [34] iconst_1
      [35] isub
      [36] iand
      [37] istore v7
      [39] aload v6
      [41] iload v7
      [43] invokevirtual #180
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [46] checkcast #10
        + Class [a/a/a/b/ao]
      [49] astore v8
      [51] aload v8
      [53] astore v9
      [55] aload v9
      [57] ifnull +212 (target=269)
      [60] aload v9
      [62] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [67] astore v10
      [69] aload v9
      [71] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [76] iload_2 v2
      [77] ificmpne +180 (target=257)
      [80] aload v10
      [82] ifnull +175 (target=257)
      [85] aload_0 v0
      [86] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [89] getfield #66
        + Fieldref [a/a/a/b/n.g La/a/a/a/b;]
      [92] aload_1 v1
      [93] aload v10
      [95] invokevirtual #78
        + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [98] ifeq +159 (target=257)
      [101] aload v9
      [103] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [108] astore v11
      [110] aload v11
      [112] invokeinterface #198
        + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
      [117] astore v12
      [119] aload v12
      [121] ifnonnull +86 (target=207)
      [124] aload v11
      [126] invokeinterface #196
        + InterfaceMethodref [a/a/a/b/bc.d ()Z]
      [131] ifeq +62 (target=193)
      [134] aload_0 v0
      [135] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [138] iconst_1
      [139] isub
      [140] istore v13
      [142] aload_0 v0
      [143] dup
      [144] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [147] iconst_1
      [148] iadd
      [149] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [152] aload_0 v0
      [153] aload v8
      [155] aload v9
      [157] aload v10
      [159] iload_2 v2
      [160] aload v11
      [162] getstatic #62
        + Fieldref [a/a/a/b/bw.c La/a/a/b/bw;]
      [165] invokevirtual #96
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;La/a/a/b/ao;Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)La/a/a/b/ao;]
      [168] astore v14
      [170] aload_0 v0
      [171] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [174] iconst_1
      [175] isub
      [176] istore v13
      [178] aload v6
      [180] iload v7
      [182] aload v14
      [184] invokevirtual #182
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
      [187] aload_0 v0
      [188] iload v13
      [190] putfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [193] aconst_null
      [194] astore v13
      [196] aload_0 v0
      [197] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [200] aload_0 v0
      [201] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [204] aload v13
      [206] areturn
      [207] aload_0 v0
      [208] dup
      [209] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [212] iconst_1
      [213] iadd
      [214] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [217] aload_0 v0
      [218] aload_1 v1
      [219] iload_2 v2
      [220] aload v11
      [222] getstatic #61
        + Fieldref [a/a/a/b/bw.b La/a/a/b/bw;]
      [225] invokevirtual #108
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)V]
      [228] aload_0 v0
      [229] aload v9
      [231] aload_1 v1
      [232] aload_3 v3
      [233] lload v4
      [235] invokevirtual #100
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;Ljava/lang/Object;Ljava/lang/Object;J)V]
      [238] aload_0 v0
      [239] invokevirtual #128
        + Methodref [a/a/a/b/ap.i ()V]
      [242] aload v12
      [244] astore v13
      [246] aload_0 v0
      [247] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [250] aload_0 v0
      [251] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [254] aload v13
      [256] areturn
      [257] aload v9
      [259] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [264] astore v9
      [266] goto -211 (target=55)
      [269] aconst_null
      [270] astore v9
      [272] aload_0 v0
      [273] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [276] aload_0 v0
      [277] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [280] aload v9
      [282] areturn
      [283] astore v15
      [285] aload_0 v0
      [286] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [289] aload_0 v0
      [290] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [293] aload v15
      [295] athrow
      Code attribute exceptions (count = 4):
      - ExceptionInfo (4 -> 196: 283):
      - ExceptionInfo (207 -> 246: 283):
      - ExceptionInfo (257 -> 272: 283):
      - ExceptionInfo (283 -> 285: 283):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [55] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:java/lang/Object][l][a:java/util/concurrent/atomic/AtomicReferenceArray][i][a:a/a/a/b/ao][a:a/a/a/b/ao], Stack: 
        - [193] Var: ...[a:java/lang/Object][a:a/a/a/b/bc][a:java/lang/Object], Stack: (empty)
        - [207] Var: ..., Stack: (empty)
        - [257] Var: -3, Stack: (empty)
        - [269] Var: -1, Stack: (empty)
        - [283] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:java/lang/Object], Stack: [a:java/lang/Throwable]
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       d(Ljava/lang/Object;I)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object d(java.lang.Object,int)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 274, locals = 17, stack = 7):
      [0] aload_0 v0
      [1] invokevirtual #132
        + Methodref [a/a/a/b/ap.lock ()V]
      [4] aload_0 v0
      [5] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [8] getfield #72
        + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
      [11] invokevirtual #77
        + Methodref [a/a/a/a/af.a ()J]
      [14] lstore_3 v3
      [15] aload_0 v0
      [16] lload_3 v3
      [17] invokevirtual #120
        + Methodref [a/a/a/b/ap.c (J)V]
      [20] aload_0 v0
      [21] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [24] iconst_1
      [25] isub
      [26] istore v5
      [28] aload_0 v0
      [29] getfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [32] astore v6
      [34] iload_2 v2
      [35] aload v6
      [37] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [40] iconst_1
      [41] isub
      [42] iand
      [43] istore v7
      [45] aload v6
      [47] iload v7
      [49] invokevirtual #180
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [52] checkcast #10
        + Class [a/a/a/b/ao]
      [55] astore v8
      [57] aload v8
      [59] astore v9
      [61] aload v9
      [63] ifnull +184 (target=247)
      [66] aload v9
      [68] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [73] astore v10
      [75] aload v9
      [77] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [82] iload_2 v2
      [83] ificmpne +152 (target=235)
      [86] aload v10
      [88] ifnull +147 (target=235)
      [91] aload_0 v0
      [92] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [95] getfield #66
        + Fieldref [a/a/a/b/n.g La/a/a/a/b;]
      [98] aload_1 v1
      [99] aload v10
      [101] invokevirtual #78
        + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [104] ifeq +131 (target=235)
      [107] aload v9
      [109] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [114] astore v11
      [116] aload v11
      [118] invokeinterface #198
        + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
      [123] astore v12
      [125] aload v12
      [127] ifnull +11 (target=138)
      [130] getstatic #60
        + Fieldref [a/a/a/b/bw.a La/a/a/b/bw;]
      [133] astore v13
      [135] goto +35 (target=170)
      [138] aload v11
      [140] invokeinterface #196
        + InterfaceMethodref [a/a/a/b/bc.d ()Z]
      [145] ifeq +11 (target=156)
      [148] getstatic #62
        + Fieldref [a/a/a/b/bw.c La/a/a/b/bw;]
      [151] astore v13
      [153] goto +17 (target=170)
      [156] aconst_null
      [157] astore v14
      [159] aload_0 v0
      [160] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [163] aload_0 v0
      [164] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [167] aload v14
      [169] areturn
      [170] aload_0 v0
      [171] dup
      [172] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [175] iconst_1
      [176] iadd
      [177] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [180] aload_0 v0
      [181] aload v8
      [183] aload v9
      [185] aload v10
      [187] iload_2 v2
      [188] aload v11
      [190] aload v13
      [192] invokevirtual #96
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;La/a/a/b/ao;Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)La/a/a/b/ao;]
      [195] astore v14
      [197] aload_0 v0
      [198] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [201] iconst_1
      [202] isub
      [203] istore v5
      [205] aload v6
      [207] iload v7
      [209] aload v14
      [211] invokevirtual #182
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
      [214] aload_0 v0
      [215] iload v5
      [217] putfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [220] aload v12
      [222] astore v15
      [224] aload_0 v0
      [225] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [228] aload_0 v0
      [229] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [232] aload v15
      [234] areturn
      [235] aload v9
      [237] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [242] astore v9
      [244] goto -183 (target=61)
      [247] aconst_null
      [248] astore v9
      [250] aload_0 v0
      [251] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [254] aload_0 v0
      [255] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [258] aload v9
      [260] areturn
      [261] astore v16
      [263] aload_0 v0
      [264] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [267] aload_0 v0
      [268] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [271] aload v16
      [273] athrow
      Code attribute exceptions (count = 4):
      - ExceptionInfo (4 -> 159: 261):
      - ExceptionInfo (170 -> 224: 261):
      - ExceptionInfo (235 -> 250: 261):
      - ExceptionInfo (261 -> 263: 261):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 7):
        - [61] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][l][i][a:java/util/concurrent/atomic/AtomicReferenceArray][i][a:a/a/a/b/ao][a:a/a/a/b/ao], Stack: 
        - [138] Var: ...[a:java/lang/Object][a:a/a/a/b/bc][a:java/lang/Object], Stack: (empty)
        - [156] Var: ..., Stack: (empty)
        - [170] Var: ...[a:a/a/a/b/bw], Stack: (empty)
        - [235] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][l][i][a:java/util/concurrent/atomic/AtomicReferenceArray][i][a:a/a/a/b/ao][a:a/a/a/b/ao], Stack: 
        - [247] Var: -1, Stack: (empty)
        - [261] Var: [a:a/a/a/b/ap][a:java/lang/Object][i], Stack: [a:java/lang/Throwable]
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Object;ILa/a/a/b/aj;Ljava/lang/Object;)Z
    Access flags: 0x0
      = boolean a(java.lang.Object,int,a.a.a.b.aj,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 373, locals = 17, stack = 6):
      [0] aload_0 v0
      [1] invokevirtual #132
        + Methodref [a/a/a/b/ap.lock ()V]
      [4] aload_0 v0
      [5] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [8] getfield #72
        + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
      [11] invokevirtual #77
        + Methodref [a/a/a/a/af.a ()J]
      [14] lstore v5
      [16] aload_0 v0
      [17] lload v5
      [19] invokevirtual #120
        + Methodref [a/a/a/b/ap.c (J)V]
      [22] aload_0 v0
      [23] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [26] iconst_1
      [27] iadd
      [28] istore v7
      [30] iload v7
      [32] aload_0 v0
      [33] getfield #50
        + Fieldref [a/a/a/b/ap.e I]
      [36] ificmple +15 (target=51)
      [39] aload_0 v0
      [40] invokevirtual #131
        + Methodref [a/a/a/b/ap.k ()V]
      [43] aload_0 v0
      [44] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [47] iconst_1
      [48] iadd
      [49] istore v7
      [51] aload_0 v0
      [52] getfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [55] astore v8
      [57] iload_2 v2
      [58] aload v8
      [60] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [63] iconst_1
      [64] isub
      [65] iand
      [66] istore v9
      [68] aload v8
      [70] iload v9
      [72] invokevirtual #180
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [75] checkcast #10
        + Class [a/a/a/b/ao]
      [78] astore v10
      [80] aload v10
      [82] astore v11
      [84] aload v11
      [86] ifnull +210 (target=296)
      [89] aload v11
      [91] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [96] astore v12
      [98] aload v11
      [100] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [105] iload_2 v2
      [106] ificmpne +178 (target=284)
      [109] aload v12
      [111] ifnull +173 (target=284)
      [114] aload_0 v0
      [115] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [118] getfield #66
        + Fieldref [a/a/a/b/n.g La/a/a/a/b;]
      [121] aload_1 v1
      [122] aload v12
      [124] invokevirtual #78
        + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [127] ifeq +157 (target=284)
      [130] aload v11
      [132] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [137] astore v13
      [139] aload v13
      [141] invokeinterface #198
        + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
      [146] astore v14
      [148] aload_3 v3
      [149] aload v13
      [151] ifacmpeq +16 (target=167)
      [154] aload v14
      [156] ifnonnull +91 (target=247)
      [159] aload v13
      [161] getstatic #75
        + Fieldref [a/a/a/b/n.v La/a/a/b/bc;]
      [164] ifacmpeq +83 (target=247)
      [167] aload_0 v0
      [168] dup
      [169] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [172] iconst_1
      [173] iadd
      [174] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [177] aload_3 v3
      [178] invokevirtual #85
        + Methodref [a/a/a/b/aj.d ()Z]
      [181] ifeq +31 (target=212)
      [184] aload v14
      [186] ifnonnull +9 (target=195)
      [189] getstatic #62
        + Fieldref [a/a/a/b/bw.c La/a/a/b/bw;]
      [192] goto +6 (target=198)
      [195] getstatic #61
        + Fieldref [a/a/a/b/bw.b La/a/a/b/bw;]
      [198] astore v15
      [200] aload_0 v0
      [201] aload_1 v1
      [202] iload_2 v2
      [203] aload_3 v3
      [204] aload v15
      [206] invokevirtual #108
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)V]
      [209] iinc v7, -1
      [212] aload_0 v0
      [213] aload v11
      [215] aload_1 v1
      [216] aload v4
      [218] lload v5
      [220] invokevirtual #100
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;Ljava/lang/Object;Ljava/lang/Object;J)V]
      [223] aload_0 v0
      [224] iload v7
      [226] putfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [229] aload_0 v0
      [230] invokevirtual #128
        + Methodref [a/a/a/b/ap.i ()V]
      [233] iconst_1
      [234] istore v15
      [236] aload_0 v0
      [237] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [240] aload_0 v0
      [241] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [244] iload v15
      [246] ireturn
      [247] new #15
        + Class [a/a/a/b/bk]
      [250] dup
      [251] aload v4
      [253] iconst_0
      [254] invokespecial #141
        + Methodref [a/a/a/b/bk.<init> (Ljava/lang/Object;I)V]
      [257] astore v13
      [259] aload_0 v0
      [260] aload_1 v1
      [261] iload_2 v2
      [262] aload v13
      [264] getstatic #61
        + Fieldref [a/a/a/b/bw.b La/a/a/b/bw;]
      [267] invokevirtual #108
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)V]
      [270] iconst_0
      [271] istore v15
      [273] aload_0 v0
      [274] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [277] aload_0 v0
      [278] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [281] iload v15
      [283] ireturn
      [284] aload v11
      [286] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [291] astore v11
      [293] goto -209 (target=84)
      [296] aload_0 v0
      [297] dup
      [298] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [301] iconst_1
      [302] iadd
      [303] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [306] aload_0 v0
      [307] aload_1 v1
      [308] iload_2 v2
      [309] aload v10
      [311] invokevirtual #107
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/ao;)La/a/a/b/ao;]
      [314] astore v11
      [316] aload_0 v0
      [317] aload v11
      [319] aload_1 v1
      [320] aload v4
      [322] lload v5
      [324] invokevirtual #100
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;Ljava/lang/Object;Ljava/lang/Object;J)V]
      [327] aload v8
      [329] iload v9
      [331] aload v11
      [333] invokevirtual #182
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
      [336] aload_0 v0
      [337] iload v7
      [339] putfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [342] aload_0 v0
      [343] invokevirtual #128
        + Methodref [a/a/a/b/ap.i ()V]
      [346] iconst_1
      [347] istore v12
      [349] aload_0 v0
      [350] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [353] aload_0 v0
      [354] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [357] iload v12
      [359] ireturn
      [360] astore v16
      [362] aload_0 v0
      [363] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [366] aload_0 v0
      [367] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [370] aload v16
      [372] athrow
      Code attribute exceptions (count = 4):
      - ExceptionInfo (4 -> 236: 360):
      - ExceptionInfo (247 -> 273: 360):
      - ExceptionInfo (284 -> 349: 360):
      - ExceptionInfo (360 -> 362: 360):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 10):
        - [51] Var: ...[l][i], Stack: (empty)
        - [84] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/aj][a:java/lang/Object][l][i][a:java/util/concurrent/atomic/AtomicReferenceArray][i][a:a/a/a/b/ao][a:a/a/a/b/ao], Stack: 
        - [167] Var: ...[a:java/lang/Object][a:a/a/a/b/bc][a:java/lang/Object], Stack: (empty)
        - [195] Var: ..., Stack: (empty)
        - [198] Var: ..., Stack: [a:a/a/a/b/bw]
        - [212] Var: ..., Stack: (empty)
        - [247] Var: ..., Stack: (empty)
        - [284] Var: -3, Stack: (empty)
        - [296] Var: -1, Stack: (empty)
        - [360] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/aj][a:java/lang/Object], Stack: [a:java/lang/Throwable]
  + Method:       b(Ljava/lang/Object;ILjava/lang/Object;)Z
    Access flags: 0x0
      = boolean b(java.lang.Object,int,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 303, locals = 18, stack = 7):
      [0] aload_0 v0
      [1] invokevirtual #132
        + Methodref [a/a/a/b/ap.lock ()V]
      [4] aload_0 v0
      [5] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [8] getfield #72
        + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
      [11] invokevirtual #77
        + Methodref [a/a/a/a/af.a ()J]
      [14] lstore v4
      [16] aload_0 v0
      [17] lload v4
      [19] invokevirtual #120
        + Methodref [a/a/a/b/ap.c (J)V]
      [22] aload_0 v0
      [23] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [26] iconst_1
      [27] isub
      [28] istore v6
      [30] aload_0 v0
      [31] getfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [34] astore v7
      [36] iload_2 v2
      [37] aload v7
      [39] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [42] iconst_1
      [43] isub
      [44] iand
      [45] istore v8
      [47] aload v7
      [49] iload v8
      [51] invokevirtual #180
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [54] checkcast #10
        + Class [a/a/a/b/ao]
      [57] astore v9
      [59] aload v9
      [61] astore v10
      [63] aload v10
      [65] ifnull +211 (target=276)
      [68] aload v10
      [70] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [75] astore v11
      [77] aload v10
      [79] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [84] iload_2 v2
      [85] ificmpne +179 (target=264)
      [88] aload v11
      [90] ifnull +174 (target=264)
      [93] aload_0 v0
      [94] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [97] getfield #66
        + Fieldref [a/a/a/b/n.g La/a/a/a/b;]
      [100] aload_1 v1
      [101] aload v11
      [103] invokevirtual #78
        + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [106] ifeq +158 (target=264)
      [109] aload v10
      [111] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [116] astore v12
      [118] aload v12
      [120] invokeinterface #198
        + InterfaceMethodref [a/a/a/b/bc.get ()Ljava/lang/Object;]
      [125] astore v13
      [127] aload_0 v0
      [128] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [131] getfield #67
        + Fieldref [a/a/a/b/n.h La/a/a/a/b;]
      [134] aload_3 v3
      [135] aload v13
      [137] invokevirtual #78
        + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [140] ifeq +11 (target=151)
      [143] getstatic #60
        + Fieldref [a/a/a/b/bw.a La/a/a/b/bw;]
      [146] astore v14
      [148] goto +40 (target=188)
      [151] aload v13
      [153] ifnonnull +21 (target=174)
      [156] aload v12
      [158] invokeinterface #196
        + InterfaceMethodref [a/a/a/b/bc.d ()Z]
      [163] ifeq +11 (target=174)
      [166] getstatic #62
        + Fieldref [a/a/a/b/bw.c La/a/a/b/bw;]
      [169] astore v14
      [171] goto +17 (target=188)
      [174] iconst_0
      [175] istore v15
      [177] aload_0 v0
      [178] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [181] aload_0 v0
      [182] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [185] iload v15
      [187] ireturn
      [188] aload_0 v0
      [189] dup
      [190] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [193] iconst_1
      [194] iadd
      [195] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [198] aload_0 v0
      [199] aload v9
      [201] aload v10
      [203] aload v11
      [205] iload_2 v2
      [206] aload v12
      [208] aload v14
      [210] invokevirtual #96
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;La/a/a/b/ao;Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)La/a/a/b/ao;]
      [213] astore v15
      [215] aload_0 v0
      [216] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [219] iconst_1
      [220] isub
      [221] istore v6
      [223] aload v7
      [225] iload v8
      [227] aload v15
      [229] invokevirtual #182
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
      [232] aload_0 v0
      [233] iload v6
      [235] putfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [238] aload v14
      [240] getstatic #60
        + Fieldref [a/a/a/b/bw.a La/a/a/b/bw;]
      [243] ifacmpne +7 (target=250)
      [246] iconst_1
      [247] goto +4 (target=251)
      [250] iconst_0
      [251] istore v16
      [253] aload_0 v0
      [254] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [257] aload_0 v0
      [258] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [261] iload v16
      [263] ireturn
      [264] aload v10
      [266] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [271] astore v10
      [273] goto -210 (target=63)
      [276] iconst_0
      [277] istore v10
      [279] aload_0 v0
      [280] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [283] aload_0 v0
      [284] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [287] iload v10
      [289] ireturn
      [290] astore v17
      [292] aload_0 v0
      [293] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [296] aload_0 v0
      [297] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [300] aload v17
      [302] athrow
      Code attribute exceptions (count = 4):
      - ExceptionInfo (4 -> 177: 290):
      - ExceptionInfo (188 -> 253: 290):
      - ExceptionInfo (264 -> 279: 290):
      - ExceptionInfo (290 -> 292: 290):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 9):
        - [63] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:java/lang/Object][l][i][a:java/util/concurrent/atomic/AtomicReferenceArray][i][a:a/a/a/b/ao][a:a/a/a/b/ao], Stack: 
        - [151] Var: ...[a:java/lang/Object][a:a/a/a/b/bc][a:java/lang/Object], Stack: (empty)
        - [174] Var: ..., Stack: (empty)
        - [188] Var: ...[a:a/a/a/b/bw], Stack: (empty)
        - [250] Var: ...[a:a/a/a/b/ao], Stack: (empty)
        - [251] Var: ..., Stack: [i]
        - [264] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:java/lang/Object][l][i][a:java/util/concurrent/atomic/AtomicReferenceArray][i][a:a/a/a/b/ao][a:a/a/a/b/ao], Stack: 
        - [276] Var: -1, Stack: (empty)
        - [290] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:java/lang/Object], Stack: [a:java/lang/Throwable]
  + Method:       l()V
    Access flags: 0x0
      = void l()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 169, locals = 5, stack = 3):
      [0] aload_0 v0
      [1] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [4] ifeq +164 (target=168)
      [7] aload_0 v0
      [8] invokevirtual #132
        + Methodref [a/a/a/b/ap.lock ()V]
      [11] aload_0 v0
      [12] getfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [15] astore_1 v1
      [16] iconst_0
      [17] istore_2 v2
      [18] iload_2 v2
      [19] aload_1 v1
      [20] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [23] ificmpge +54 (target=77)
      [26] aload_1 v1
      [27] iload_2 v2
      [28] invokevirtual #180
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [31] checkcast #10
        + Class [a/a/a/b/ao]
      [34] astore_3 v3
      [35] aload_3 v3
      [36] ifnull +35 (target=71)
      [39] aload_3 v3
      [40] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [45] invokeinterface #196
        + InterfaceMethodref [a/a/a/b/bc.d ()Z]
      [50] ifeq +11 (target=61)
      [53] aload_0 v0
      [54] aload_3 v3
      [55] getstatic #60
        + Fieldref [a/a/a/b/bw.a La/a/a/b/bw;]
      [58] invokevirtual #97
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;La/a/a/b/bw;)V]
      [61] aload_3 v3
      [62] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [67] astore_3 v3
      [68] goto -33 (target=35)
      [71] iinc v2, 1
      [74] goto -56 (target=18)
      [77] iconst_0
      [78] istore_2 v2
      [79] iload_2 v2
      [80] aload_1 v1
      [81] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [84] ificmpge +15 (target=99)
      [87] aload_1 v1
      [88] iload_2 v2
      [89] aconst_null
      [90] invokevirtual #182
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
      [93] iinc v2, 1
      [96] goto -17 (target=79)
      [99] aload_0 v0
      [100] invokevirtual #124
        + Methodref [a/a/a/b/ap.e ()V]
      [103] aload_0 v0
      [104] getfield #57
        + Fieldref [a/a/a/b/ap.l Ljava/util/Queue;]
      [107] invokeinterface #210
        + InterfaceMethodref [java/util/Queue.clear ()V]
      [112] aload_0 v0
      [113] getfield #58
        + Fieldref [a/a/a/b/ap.m Ljava/util/Queue;]
      [116] invokeinterface #210
        + InterfaceMethodref [java/util/Queue.clear ()V]
      [121] aload_0 v0
      [122] getfield #56
        + Fieldref [a/a/a/b/ap.k Ljava/util/concurrent/atomic/AtomicInteger;]
      [125] iconst_0
      [126] invokevirtual #178
        + Methodref [java/util/concurrent/atomic/AtomicInteger.set (I)V]
      [129] aload_0 v0
      [130] dup
      [131] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [134] iconst_1
      [135] iadd
      [136] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [139] aload_0 v0
      [140] iconst_0
      [141] putfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [144] aload_0 v0
      [145] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [148] aload_0 v0
      [149] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [152] goto +16 (target=168)
      [155] astore v4
      [157] aload_0 v0
      [158] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [161] aload_0 v0
      [162] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [165] aload v4
      [167] athrow
      [168] return
      Code attribute exceptions (count = 2):
      - ExceptionInfo (11 -> 144: 155):
      - ExceptionInfo (155 -> 157: 155):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 9):
        - [18] Var: ...[a:java/util/concurrent/atomic/AtomicReferenceArray][i], Stack: (empty)
        - [35] Var: ...[a:a/a/a/b/ao], Stack: (empty)
        - [61] Var: ..., Stack: (empty)
        - [71] Var: -1, Stack: (empty)
        - [77] Var: -1, Stack: (empty)
        - [79] Var: ...[i], Stack: (empty)
        - [99] Var: -1, Stack: (empty)
        - [155] Var: [a:a/a/a/b/ap], Stack: [a:java/lang/Throwable]
        - [168] Var: ..., Stack: (empty)
  + Method:       a(La/a/a/b/ao;La/a/a/b/ao;Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a(a.a.a.b.ao,a.a.a.b.ao,java.lang.Object,int,a.a.a.b.bc,a.a.a.b.bw)
    Class member attributes (count = 4):
    + Code attribute instructions (code length = 60, locals = 7, stack = 5):
      [0] aload_0 v0
      [1] aload_3 v3
      [2] iload v4
      [4] aload v5
      [6] aload v6
      [8] invokevirtual #108
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)V]
      [11] aload_0 v0
      [12] getfield #57
        + Fieldref [a/a/a/b/ap.l Ljava/util/Queue;]
      [15] aload_2 v2
      [16] invokeinterface #216
        + InterfaceMethodref [java/util/Queue.remove (Ljava/lang/Object;)Z]
      [21] pop
      [22] aload_0 v0
      [23] getfield #58
        + Fieldref [a/a/a/b/ap.m Ljava/util/Queue;]
      [26] aload_2 v2
      [27] invokeinterface #216
        + InterfaceMethodref [java/util/Queue.remove (Ljava/lang/Object;)Z]
      [32] pop
      [33] aload v5
      [35] invokeinterface #195
        + InterfaceMethodref [a/a/a/b/bc.c ()Z]
      [40] ifeq +13 (target=53)
      [43] aload v5
      [45] aconst_null
      [46] invokeinterface #193
        + InterfaceMethodref [a/a/a/b/bc.a (Ljava/lang/Object;)V]
      [51] aload_1 v1
      [52] areturn
      [53] aload_0 v0
      [54] aload_1 v1
      [55] aload_2 v2
      [56] invokevirtual #116
        + Methodref [a/a/a/b/ap.b (La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
      [59] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [53] Var: ..., Stack: (empty)
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
    + Runtime visible parameter annotations attribute (parameter count = 6):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b(La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao b(a.a.a.b.ao,a.a.a.b.ao)
    Class member attributes (count = 3):
    + Code attribute instructions (code length = 73, locals = 7, stack = 3):
      [0] aload_0 v0
      [1] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [4] istore_3 v3
      [5] aload_2 v2
      [6] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [11] astore v4
      [13] aload_1 v1
      [14] astore v5
      [16] aload v5
      [18] aload_2 v2
      [19] ifacmpeq +46 (target=65)
      [22] aload_0 v0
      [23] aload v5
      [25] aload v4
      [27] invokevirtual #95
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
      [30] astore v6
      [32] aload v6
      [34] ifnull +10 (target=44)
      [37] aload v6
      [39] astore v4
      [41] goto +12 (target=53)
      [44] aload_0 v0
      [45] aload v5
      [47] invokevirtual #91
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;)V]
      [50] iinc v3, -1
      [53] aload v5
      [55] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [60] astore v5
      [62] goto -46 (target=16)
      [65] aload_0 v0
      [66] iload_3 v3
      [67] putfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [70] aload v4
      [72] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [16] Var: ...[i][a:a/a/a/b/ao][a:a/a/a/b/ao], Stack: (empty)
        - [44] Var: ...[a:a/a/a/b/ao], Stack: (empty)
        - [53] Var: -1, Stack: (empty)
        - [65] Var: -1, Stack: (empty)
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(La/a/a/b/ao;)V
    Access flags: 0x0
      = void a(a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 31, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] getstatic #62
        + Fieldref [a/a/a/b/bw.c La/a/a/b/bw;]
      [5] invokevirtual #97
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;La/a/a/b/bw;)V]
      [8] aload_0 v0
      [9] getfield #57
        + Fieldref [a/a/a/b/ap.l Ljava/util/Queue;]
      [12] aload_1 v1
      [13] invokeinterface #216
        + InterfaceMethodref [java/util/Queue.remove (Ljava/lang/Object;)Z]
      [18] pop
      [19] aload_0 v0
      [20] getfield #58
        + Fieldref [a/a/a/b/ap.m Ljava/util/Queue;]
      [23] aload_1 v1
      [24] invokeinterface #216
        + InterfaceMethodref [java/util/Queue.remove (Ljava/lang/Object;)Z]
      [29] pop
      [30] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       a(La/a/a/b/ao;I)Z
    Access flags: 0x0
      = boolean a(a.a.a.b.ao,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 167, locals = 11, stack = 7):
      [0] aload_0 v0
      [1] invokevirtual #132
        + Methodref [a/a/a/b/ap.lock ()V]
      [4] aload_0 v0
      [5] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [8] iconst_1
      [9] isub
      [10] istore_3 v3
      [11] aload_0 v0
      [12] getfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [15] astore v4
      [17] iload_2 v2
      [18] aload v4
      [20] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [23] iconst_1
      [24] isub
      [25] iand
      [26] istore v5
      [28] aload v4
      [30] iload v5
      [32] invokevirtual #180
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [35] checkcast #10
        + Class [a/a/a/b/ao]
      [38] astore v6
      [40] aload v6
      [42] astore v7
      [44] aload v7
      [46] ifnull +94 (target=140)
      [49] aload v7
      [51] aload_1 v1
      [52] ifacmpne +76 (target=128)
      [55] aload_0 v0
      [56] dup
      [57] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [60] iconst_1
      [61] iadd
      [62] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [65] aload_0 v0
      [66] aload v6
      [68] aload v7
      [70] aload v7
      [72] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [77] iload_2 v2
      [78] aload v7
      [80] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [85] getstatic #62
        + Fieldref [a/a/a/b/bw.c La/a/a/b/bw;]
      [88] invokevirtual #96
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;La/a/a/b/ao;Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)La/a/a/b/ao;]
      [91] astore v8
      [93] aload_0 v0
      [94] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [97] iconst_1
      [98] isub
      [99] istore_3 v3
      [100] aload v4
      [102] iload v5
      [104] aload v8
      [106] invokevirtual #182
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
      [109] aload_0 v0
      [110] iload_3 v3
      [111] putfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [114] iconst_1
      [115] istore v9
      [117] aload_0 v0
      [118] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [121] aload_0 v0
      [122] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [125] iload v9
      [127] ireturn
      [128] aload v7
      [130] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [135] astore v7
      [137] goto -93 (target=44)
      [140] iconst_0
      [141] istore v7
      [143] aload_0 v0
      [144] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [147] aload_0 v0
      [148] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [151] iload v7
      [153] ireturn
      [154] astore v10
      [156] aload_0 v0
      [157] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [160] aload_0 v0
      [161] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [164] aload v10
      [166] athrow
      Code attribute exceptions (count = 3):
      - ExceptionInfo (4 -> 117: 154):
      - ExceptionInfo (128 -> 143: 154):
      - ExceptionInfo (154 -> 156: 154):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [44] Var: [a:a/a/a/b/ap][a:a/a/a/b/ao][i][i][a:java/util/concurrent/atomic/AtomicReferenceArray][i][a:a/a/a/b/ao][a:a/a/a/b/ao], Stack: 
        - [128] Var: ..., Stack: (empty)
        - [140] Var: -1, Stack: (empty)
        - [154] Var: [a:a/a/a/b/ap][a:a/a/a/b/ao][i], Stack: [a:java/lang/Throwable]
  + Method:       a(Ljava/lang/Object;ILa/a/a/b/bc;)Z
    Access flags: 0x0
      = boolean a(java.lang.Object,int,a.a.a.b.bc)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 251, locals = 14, stack = 7):
      [0] aload_0 v0
      [1] invokevirtual #132
        + Methodref [a/a/a/b/ap.lock ()V]
      [4] aload_0 v0
      [5] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [8] iconst_1
      [9] isub
      [10] istore v4
      [12] aload_0 v0
      [13] getfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [16] astore v5
      [18] iload_2 v2
      [19] aload v5
      [21] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [24] iconst_1
      [25] isub
      [26] iand
      [27] istore v6
      [29] aload v5
      [31] iload v6
      [33] invokevirtual #180
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [36] checkcast #10
        + Class [a/a/a/b/ao]
      [39] astore v7
      [41] aload v7
      [43] astore v8
      [45] aload v8
      [47] ifnull +163 (target=210)
      [50] aload v8
      [52] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [57] astore v9
      [59] aload v8
      [61] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [66] iload_2 v2
      [67] ificmpne +131 (target=198)
      [70] aload v9
      [72] ifnull +126 (target=198)
      [75] aload_0 v0
      [76] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [79] getfield #66
        + Fieldref [a/a/a/b/n.g La/a/a/a/b;]
      [82] aload_1 v1
      [83] aload v9
      [85] invokevirtual #78
        + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [88] ifeq +110 (target=198)
      [91] aload v8
      [93] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [98] astore v10
      [100] aload v10
      [102] aload_3 v3
      [103] ifacmpne +74 (target=177)
      [106] aload_0 v0
      [107] dup
      [108] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [111] iconst_1
      [112] iadd
      [113] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [116] aload_0 v0
      [117] aload v7
      [119] aload v8
      [121] aload v9
      [123] iload_2 v2
      [124] aload_3 v3
      [125] getstatic #62
        + Fieldref [a/a/a/b/bw.c La/a/a/b/bw;]
      [128] invokevirtual #96
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;La/a/a/b/ao;Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)La/a/a/b/ao;]
      [131] astore v11
      [133] aload_0 v0
      [134] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [137] iconst_1
      [138] isub
      [139] istore v4
      [141] aload v5
      [143] iload v6
      [145] aload v11
      [147] invokevirtual #182
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
      [150] aload_0 v0
      [151] iload v4
      [153] putfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [156] iconst_1
      [157] istore v12
      [159] aload_0 v0
      [160] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [163] aload_0 v0
      [164] invokevirtual #129
        + Methodref [a/a/a/b/ap.isHeldByCurrentThread ()Z]
      [167] ifne +7 (target=174)
      [170] aload_0 v0
      [171] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [174] iload v12
      [176] ireturn
      [177] iconst_0
      [178] istore v11
      [180] aload_0 v0
      [181] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [184] aload_0 v0
      [185] invokevirtual #129
        + Methodref [a/a/a/b/ap.isHeldByCurrentThread ()Z]
      [188] ifne +7 (target=195)
      [191] aload_0 v0
      [192] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [195] iload v11
      [197] ireturn
      [198] aload v8
      [200] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [205] astore v8
      [207] goto -162 (target=45)
      [210] iconst_0
      [211] istore v8
      [213] aload_0 v0
      [214] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [217] aload_0 v0
      [218] invokevirtual #129
        + Methodref [a/a/a/b/ap.isHeldByCurrentThread ()Z]
      [221] ifne +7 (target=228)
      [224] aload_0 v0
      [225] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [228] iload v8
      [230] ireturn
      [231] astore v13
      [233] aload_0 v0
      [234] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [237] aload_0 v0
      [238] invokevirtual #129
        + Methodref [a/a/a/b/ap.isHeldByCurrentThread ()Z]
      [241] ifne +7 (target=248)
      [244] aload_0 v0
      [245] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [248] aload v13
      [250] athrow
      Code attribute exceptions (count = 4):
      - ExceptionInfo (4 -> 159: 231):
      - ExceptionInfo (177 -> 180: 231):
      - ExceptionInfo (198 -> 213: 231):
      - ExceptionInfo (231 -> 233: 231):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 9):
        - [45] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/bc][i][a:java/util/concurrent/atomic/AtomicReferenceArray][i][a:a/a/a/b/ao][a:a/a/a/b/ao], Stack: 
        - [174] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/bc][i][a:java/util/concurrent/atomic/AtomicReferenceArray][i][a:a/a/a/b/ao][a:a/a/a/b/ao][a:java/lang/Object][a:a/a/a/b/bc][a:a/a/a/b/ao][i], Stack: 
        - [177] Var: -2, Stack: (empty)
        - [195] Var: ...[i], Stack: (empty)
        - [198] Var: -3, Stack: (empty)
        - [210] Var: -1, Stack: (empty)
        - [228] Var: ...[i], Stack: (empty)
        - [231] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/bc], Stack: [a:java/lang/Throwable]
        - [248] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/bc][T][T][T][T][T][T][T][T][T][a:java/lang/Throwable], Stack: 
  + Method:       a(Ljava/lang/Object;ILa/a/a/b/aj;)Z
    Access flags: 0x0
      = boolean a(java.lang.Object,int,a.a.a.b.aj)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 205, locals = 12, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #132
        + Methodref [a/a/a/b/ap.lock ()V]
      [4] aload_0 v0
      [5] getfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [8] astore v4
      [10] iload_2 v2
      [11] aload v4
      [13] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [16] iconst_1
      [17] isub
      [18] iand
      [19] istore v5
      [21] aload v4
      [23] iload v5
      [25] invokevirtual #180
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [28] checkcast #10
        + Class [a/a/a/b/ao]
      [31] astore v6
      [33] aload v6
      [35] astore v7
      [37] aload v7
      [39] ifnull +139 (target=178)
      [42] aload v7
      [44] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [49] astore v8
      [51] aload v7
      [53] invokeinterface #189
        + InterfaceMethodref [a/a/a/b/ao.c ()I]
      [58] iload_2 v2
      [59] ificmpne +107 (target=166)
      [62] aload v8
      [64] ifnull +102 (target=166)
      [67] aload_0 v0
      [68] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [71] getfield #66
        + Fieldref [a/a/a/b/n.g La/a/a/a/b;]
      [74] aload_1 v1
      [75] aload v8
      [77] invokevirtual #78
        + Methodref [a/a/a/a/b.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [80] ifeq +86 (target=166)
      [83] aload v7
      [85] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [90] astore v9
      [92] aload v9
      [94] aload_3 v3
      [95] ifacmpne +57 (target=152)
      [98] aload_3 v3
      [99] invokevirtual #85
        + Methodref [a/a/a/b/aj.d ()Z]
      [102] ifeq +17 (target=119)
      [105] aload v7
      [107] aload_3 v3
      [108] invokevirtual #87
        + Methodref [a/a/a/b/aj.g ()La/a/a/b/bc;]
      [111] invokeinterface #186
        + InterfaceMethodref [a/a/a/b/ao.a (La/a/a/b/bc;)V]
      [116] goto +22 (target=138)
      [119] aload_0 v0
      [120] aload v6
      [122] aload v7
      [124] invokevirtual #116
        + Methodref [a/a/a/b/ap.b (La/a/a/b/ao;La/a/a/b/ao;)La/a/a/b/ao;]
      [127] astore v10
      [129] aload v4
      [131] iload v5
      [133] aload v10
      [135] invokevirtual #182
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
      [138] iconst_1
      [139] istore v10
      [141] aload_0 v0
      [142] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [145] aload_0 v0
      [146] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [149] iload v10
      [151] ireturn
      [152] iconst_0
      [153] istore v10
      [155] aload_0 v0
      [156] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [159] aload_0 v0
      [160] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [163] iload v10
      [165] ireturn
      [166] aload v7
      [168] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [173] astore v7
      [175] goto -138 (target=37)
      [178] iconst_0
      [179] istore v7
      [181] aload_0 v0
      [182] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [185] aload_0 v0
      [186] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [189] iload v7
      [191] ireturn
      [192] astore v11
      [194] aload_0 v0
      [195] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [198] aload_0 v0
      [199] invokevirtual #134
        + Methodref [a/a/a/b/ap.n ()V]
      [202] aload v11
      [204] athrow
      Code attribute exceptions (count = 4):
      - ExceptionInfo (4 -> 141: 192):
      - ExceptionInfo (152 -> 155: 192):
      - ExceptionInfo (166 -> 181: 192):
      - ExceptionInfo (192 -> 194: 192):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 7):
        - [37] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/aj][a:java/util/concurrent/atomic/AtomicReferenceArray][i][a:a/a/a/b/ao][a:a/a/a/b/ao], Stack: 
        - [119] Var: ...[a:java/lang/Object][a:a/a/a/b/bc], Stack: (empty)
        - [138] Var: ..., Stack: (empty)
        - [152] Var: ..., Stack: (empty)
        - [166] Var: -2, Stack: (empty)
        - [178] Var: -1, Stack: (empty)
        - [192] Var: [a:a/a/a/b/ap][a:java/lang/Object][i][a:a/a/a/b/aj], Stack: [a:java/lang/Throwable]
  + Method:       a(La/a/a/b/ao;ILa/a/a/b/bw;)Z
    Access flags: 0x0
      = boolean a(a.a.a.b.ao,int,a.a.a.b.bw)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 127, locals = 10, stack = 7):
      [0] aload_0 v0
      [1] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [4] iconst_1
      [5] isub
      [6] istore v4
      [8] aload_0 v0
      [9] getfield #51
        + Fieldref [a/a/a/b/ap.f Ljava/util/concurrent/atomic/AtomicReferenceArray;]
      [12] astore v5
      [14] iload_2 v2
      [15] aload v5
      [17] invokevirtual #181
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.length ()I]
      [20] iconst_1
      [21] isub
      [22] iand
      [23] istore v6
      [25] aload v5
      [27] iload v6
      [29] invokevirtual #180
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.get (I)Ljava/lang/Object;]
      [32] checkcast #10
        + Class [a/a/a/b/ao]
      [35] astore v7
      [37] aload v7
      [39] astore v8
      [41] aload v8
      [43] ifnull +82 (target=125)
      [46] aload v8
      [48] aload_1 v1
      [49] ifacmpne +64 (target=113)
      [52] aload_0 v0
      [53] dup
      [54] getfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [57] iconst_1
      [58] iadd
      [59] putfield #49
        + Fieldref [a/a/a/b/ap.d I]
      [62] aload_0 v0
      [63] aload v7
      [65] aload v8
      [67] aload v8
      [69] invokeinterface #190
        + InterfaceMethodref [a/a/a/b/ao.d ()Ljava/lang/Object;]
      [74] iload_2 v2
      [75] aload v8
      [77] invokeinterface #184
        + InterfaceMethodref [a/a/a/b/ao.a ()La/a/a/b/bc;]
      [82] aload_3 v3
      [83] invokevirtual #96
        + Methodref [a/a/a/b/ap.a (La/a/a/b/ao;La/a/a/b/ao;Ljava/lang/Object;ILa/a/a/b/bc;La/a/a/b/bw;)La/a/a/b/ao;]
      [86] astore v9
      [88] aload_0 v0
      [89] getfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [92] iconst_1
      [93] isub
      [94] istore v4
      [96] aload v5
      [98] iload v6
      [100] aload v9
      [102] invokevirtual #182
        + Methodref [java/util/concurrent/atomic/AtomicReferenceArray.set (ILjava/lang/Object;)V]
      [105] aload_0 v0
      [106] iload v4
      [108] putfield #47
        + Fieldref [a/a/a/b/ap.b I]
      [111] iconst_1
      [112] ireturn
      [113] aload v8
      [115] invokeinterface #187
        + InterfaceMethodref [a/a/a/b/ao.b ()La/a/a/b/ao;]
      [120] astore v8
      [122] goto -81 (target=41)
      [125] iconst_0
      [126] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [41] Var: [a:a/a/a/b/ap][a:a/a/a/b/ao][i][a:a/a/a/b/bw][i][a:java/util/concurrent/atomic/AtomicReferenceArray][i][a:a/a/a/b/ao][a:a/a/a/b/ao], Stack: 
        - [113] Var: ..., Stack: (empty)
        - [125] Var: -1, Stack: (empty)
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       m()V
    Access flags: 0x0
      = void m()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #56
        + Fieldref [a/a/a/b/ap.k Ljava/util/concurrent/atomic/AtomicInteger;]
      [4] invokevirtual #177
        + Methodref [java/util/concurrent/atomic/AtomicInteger.incrementAndGet ()I]
      [7] bipush 63
      [9] iand
      [10] ifne +7 (target=17)
      [13] aload_0 v0
      [14] invokevirtual #135
        + Methodref [a/a/a/b/ap.o ()V]
      [17] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [17] Var: ..., Stack: (empty)
  + Method:       c(J)V
    Access flags: 0x0
      = void c(long)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 6, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] lload_1 v1
      [2] invokevirtual #123
        + Methodref [a/a/a/b/ap.d (J)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Method:       n()V
    Access flags: 0x0
      = void n()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #136
        + Methodref [a/a/a/b/ap.p ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       o()V
    Access flags: 0x0
      = void o()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [4] getfield #72
        + Fieldref [a/a/a/b/n.r La/a/a/a/af;]
      [7] invokevirtual #77
        + Methodref [a/a/a/a/af.a ()J]
      [10] lstore_1 v1
      [11] aload_0 v0
      [12] lload_1 v1
      [13] invokevirtual #123
        + Methodref [a/a/a/b/ap.d (J)V]
      [16] aload_0 v0
      [17] invokevirtual #136
        + Methodref [a/a/a/b/ap.p ()V]
      [20] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d(J)V
    Access flags: 0x0
      = void d(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 39, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #137
        + Methodref [a/a/a/b/ap.tryLock ()Z]
      [4] ifeq +34 (target=38)
      [7] aload_0 v0
      [8] invokevirtual #112
        + Methodref [a/a/a/b/ap.b ()V]
      [11] aload_0 v0
      [12] lload_1 v1
      [13] invokevirtual #114
        + Methodref [a/a/a/b/ap.b (J)V]
      [16] aload_0 v0
      [17] getfield #56
        + Fieldref [a/a/a/b/ap.k Ljava/util/concurrent/atomic/AtomicInteger;]
      [20] iconst_0
      [21] invokevirtual #178
        + Methodref [java/util/concurrent/atomic/AtomicInteger.set (I)V]
      [24] aload_0 v0
      [25] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [28] goto +10 (target=38)
      [31] astore_3 v3
      [32] aload_0 v0
      [33] invokevirtual #138
        + Methodref [a/a/a/b/ap.unlock ()V]
      [36] aload_3 v3
      [37] athrow
      [38] return
      Code attribute exceptions (count = 2):
      - ExceptionInfo (7 -> 24: 31):
      - ExceptionInfo (31 -> 32: 31):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [31] Var: ..., Stack: [a:java/lang/Throwable]
        - [38] Var: ..., Stack: (empty)
  + Method:       p()V
    Access flags: 0x0
      = void p()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #129
        + Methodref [a/a/a/b/ap.isHeldByCurrentThread ()Z]
      [4] ifne +10 (target=14)
      [7] aload_0 v0
      [8] getfield #46
        + Fieldref [a/a/a/b/ap.a La/a/a/b/n;]
      [11] invokevirtual #159
        + Methodref [a/a/a/b/n.r ()V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [14] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/aq
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.b.aq extends java.lang.Object

Interfaces (count = 1):
  + Class [java/lang/Runnable]

Constant Pool (count = 66):
  + String [Exception thrown during refresh]
  + Class [a/a/a/b/aj]
  + Class [a/a/a/b/ap]
  + Class [a/a/a/b/aq]
  + Class [a/a/a/b/n]
  + Class [java/lang/Object]
  + Class [java/lang/Runnable]
  + Class [java/lang/Throwable]
  + Class [java/util/logging/Level]
  + Class [java/util/logging/Logger]
  + Fieldref [a/a/a/b/aq.a Ljava/lang/Object;]
  + Fieldref [a/a/a/b/aq.b I]
  + Fieldref [a/a/a/b/aq.c La/a/a/b/aj;]
  + Fieldref [a/a/a/b/aq.d La/a/a/g/a/q;]
  + Fieldref [a/a/a/b/aq.e La/a/a/b/ap;]
  + Fieldref [a/a/a/b/n.a Ljava/util/logging/Logger;]
  + Fieldref [java/util/logging/Level.WARNING Ljava/util/logging/Level;]
  + Methodref [a/a/a/b/aj.a (Ljava/lang/Throwable;)Z]
  + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/g/a/q;)Ljava/lang/Object;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/util/logging/Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V]
  + NameAndType [<init> ()V]
  + NameAndType [WARNING Ljava/util/logging/Level;]
  + NameAndType [a (Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/g/a/q;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Throwable;)Z]
  + NameAndType [a Ljava/lang/Object;]
  + NameAndType [a Ljava/util/logging/Logger;]
  + NameAndType [b I]
  + NameAndType [c La/a/a/b/aj;]
  + NameAndType [d La/a/a/g/a/q;]
  + NameAndType [e La/a/a/b/ap;]
  + NameAndType [log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V]
  + Utf8 [()V]
  + Utf8 [(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/g/a/q;)V]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/g/a/q;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Throwable;)Z]
  + Utf8 [(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Exception thrown during refresh]
  + Utf8 [I]
  + Utf8 [La/a/a/b/aj;]
  + Utf8 [La/a/a/b/ap;]
  + Utf8 [La/a/a/g/a/q;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljava/util/logging/Level;]
  + Utf8 [Ljava/util/logging/Logger;]
  + Utf8 [StackMapTable]
  + Utf8 [WARNING]
  + Utf8 [a]
  + Utf8 [a/a/a/b/aj]
  + Utf8 [a/a/a/b/ap]
  + Utf8 [a/a/a/b/aq]
  + Utf8 [a/a/a/b/n]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/Runnable]
  + Utf8 [java/lang/Throwable]
  + Utf8 [java/util/logging/Level]
  + Utf8 [java/util/logging/Logger]
  + Utf8 [log]
  + Utf8 [run]

Fields (count = 5):
  + Field:        a Ljava/lang/Object;
    Access flags: 0x1010
      = final synthetic java.lang.Object a
  + Field:        b I
    Access flags: 0x1010
      = final synthetic int b
  + Field:        c La/a/a/b/aj;
    Access flags: 0x1010
      = final synthetic a.a.a.b.aj c
  + Field:        d La/a/a/g/a/q;
    Access flags: 0x1010
      = final synthetic a.a.a.g.a.q d
  + Field:        e La/a/a/b/ap;
    Access flags: 0x1010
      = final synthetic a.a.a.b.ap e

Methods (count = 2):
  - Method:       <init>(La/a/a/b/ap;Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/g/a/q;)V
    Access flags: 0x0
      = aq(a.a.a.b.ap,java.lang.Object,int,a.a.a.b.aj,a.a.a.g.a.q)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 32, locals = 6, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #15
        + Fieldref [a/a/a/b/aq.e La/a/a/b/ap;]
      [5] aload_0 v0
      [6] aload_2 v2
      [7] putfield #11
        + Fieldref [a/a/a/b/aq.a Ljava/lang/Object;]
      [10] aload_0 v0
      [11] iload_3 v3
      [12] putfield #12
        + Fieldref [a/a/a/b/aq.b I]
      [15] aload_0 v0
      [16] aload v4
      [18] putfield #13
        + Fieldref [a/a/a/b/aq.c La/a/a/b/aj;]
      [21] aload_0 v0
      [22] aload v5
      [24] putfield #14
        + Fieldref [a/a/a/b/aq.d La/a/a/g/a/q;]
      [27] aload_0 v0
      [28] invokespecial #20
        + Methodref [java/lang/Object.<init> ()V]
      [31] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       run()V
    Access flags: 0x1
      = public void run()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 50, locals = 2, stack = 5):
      [0] aload_0 v0
      [1] getfield #15
        + Fieldref [a/a/a/b/aq.e La/a/a/b/ap;]
      [4] aload_0 v0
      [5] getfield #11
        + Fieldref [a/a/a/b/aq.a Ljava/lang/Object;]
      [8] aload_0 v0
      [9] getfield #12
        + Fieldref [a/a/a/b/aq.b I]
      [12] aload_0 v0
      [13] getfield #13
        + Fieldref [a/a/a/b/aq.c La/a/a/b/aj;]
      [16] aload_0 v0
      [17] getfield #14
        + Fieldref [a/a/a/b/aq.d La/a/a/g/a/q;]
      [20] invokevirtual #19
        + Methodref [a/a/a/b/ap.a (Ljava/lang/Object;ILa/a/a/b/aj;La/a/a/g/a/q;)Ljava/lang/Object;]
      [23] astore_1 v1
      [24] goto +25 (target=49)
      [27] astore_1 v1
      [28] getstatic #16
        + Fieldref [a/a/a/b/n.a Ljava/util/logging/Logger;]
      [31] getstatic #17
        + Fieldref [java/util/logging/Level.WARNING Ljava/util/logging/Level;]
      [34] ldc #1
        + String [Exception thrown during refresh]
      [36] aload_1 v1
      [37] invokevirtual #21
        + Methodref [java/util/logging/Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V]
      [40] aload_0 v0
      [41] getfield #13
        + Fieldref [a/a/a/b/aq.c La/a/a/b/aj;]
      [44] aload_1 v1
      [45] invokevirtual #18
        + Methodref [a/a/a/b/aj.a (Ljava/lang/Throwable;)Z]
      [48] pop
      [49] return
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 24: 27):
      + Class [java/lang/Throwable]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [27] Var: ..., Stack: [a:java/lang/Throwable]
        - [49] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ar
  Superclass:    java/lang/ref/SoftReference
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.b.ar extends java.lang.ref.SoftReference

Interfaces (count = 1):
  + Class [a/a/a/b/bc]

Constant Pool (count = 32):
  + Class [a/a/a/b/ar]
  + Class [a/a/a/b/bc]
  + Class [java/lang/ref/SoftReference]
  + Fieldref [a/a/a/b/ar.a La/a/a/b/ao;]
  + Methodref [a/a/a/b/ar.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/ar.get ()Ljava/lang/Object;]
  + Methodref [java/lang/ref/SoftReference.<init> (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V]
  + NameAndType [<init> (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + NameAndType [a La/a/a/b/ao;]
  + NameAndType [get ()Ljava/lang/Object;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ar]
  + Utf8 [a/a/a/b/bc]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [get]
  + Utf8 [java/lang/ref/SoftReference]

Fields (count = 1):
  + Field:        a La/a/a/b/ao;
    Access flags: 0x10
      = final a.a.a.b.ao a

Methods (count = 8):
  - Method:       <init>(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V
    Access flags: 0x0
      = ar(java.lang.ref.ReferenceQueue,java.lang.Object,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_2 v2
      [2] aload_1 v1
      [3] invokespecial #7
        + Methodref [java/lang/ref/SoftReference.<init> (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V]
      [6] aload_0 v0
      [7] aload_3 v3
      [8] putfield #4
        + Fieldref [a/a/a/b/ar.a La/a/a/b/ao;]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()I
    Access flags: 0x1
      = public int a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/b/ar.a La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;
    Access flags: 0x1
      = public a.a.a.b.bc a(java.lang.ref.ReferenceQueue,java.lang.Object,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 4, stack = 5):
      [0] new #1
        + Class [a/a/a/b/ar]
      [3] dup
      [4] aload_1 v1
      [5] aload_2 v2
      [6] aload_3 v3
      [7] invokespecial #5
        + Methodref [a/a/a/b/ar.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()Z
    Access flags: 0x1
      = public boolean c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()Z
    Access flags: 0x1
      = public boolean d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #6
        + Methodref [a/a/a/b/ar.get ()Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/as
  Superclass:    java/lang/Enum
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4420
    = enum enum a.a.a.b.as extends java.lang.Enum

Interfaces (count = 0):

Constant Pool (count = 57):
  + String [SOFT]
  + String [STRONG]
  + String [WEAK]
  + Class [[La/a/a/b/as;]
  + Class [a/a/a/b/as]
  + Class [a/a/a/b/at]
  + Class [a/a/a/b/au]
  + Class [a/a/a/b/av]
  + Class [java/lang/Enum]
  + Fieldref [a/a/a/b/as.a La/a/a/b/as;]
  + Fieldref [a/a/a/b/as.b La/a/a/b/as;]
  + Fieldref [a/a/a/b/as.c La/a/a/b/as;]
  + Fieldref [a/a/a/b/as.d [La/a/a/b/as;]
  + Methodref [[La/a/a/b/as;.clone ()Ljava/lang/Object;]
  + Methodref [a/a/a/b/as.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/b/at.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/b/au.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/b/av.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + NameAndType [<init> (Ljava/lang/String;I)V]
  + NameAndType [a La/a/a/b/as;]
  + NameAndType [b La/a/a/b/as;]
  + NameAndType [c La/a/a/b/as;]
  + NameAndType [clone ()Ljava/lang/Object;]
  + NameAndType [d [La/a/a/b/as;]
  + NameAndType [valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [()La/a/a/a/b;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()[La/a/a/b/as;]
  + Utf8 [(La/a/a/b/ap;La/a/a/b/ao;Ljava/lang/Object;I)La/a/a/b/bc;]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [(Ljava/lang/String;)La/a/a/b/as;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/o;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/as;]
  + Utf8 [SOFT]
  + Utf8 [STRONG]
  + Utf8 [WEAK]
  + Utf8 [[La/a/a/b/as;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/as]
  + Utf8 [a/a/a/b/at]
  + Utf8 [a/a/a/b/au]
  + Utf8 [a/a/a/b/av]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clone]
  + Utf8 [d]
  + Utf8 [java/lang/Enum]
  + Utf8 [valueOf]
  + Utf8 [values]

Fields (count = 4):
  + Field:        a La/a/a/b/as;
    Access flags: 0x4019
      = public static final a.a.a.b.as a
  + Field:        b La/a/a/b/as;
    Access flags: 0x4019
      = public static final a.a.a.b.as b
  + Field:        c La/a/a/b/as;
    Access flags: 0x4019
      = public static final a.a.a.b.as c
  + Field:        d [La/a/a/b/as;
    Access flags: 0x101a
      = private static final synthetic a.a.a.b.as[] d

Methods (count = 7):
  + Method:       values()[La/a/a/b/as;
    Access flags: 0x9
      = public static a.a.a.b.as[] values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 0, stack = 1):
      [0] getstatic #13
        + Fieldref [a/a/a/b/as.d [La/a/a/b/as;]
      [3] invokevirtual #14
        + Methodref [[La/a/a/b/as;.clone ()Ljava/lang/Object;]
      [6] checkcast #4
        + Class [[La/a/a/b/as;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       valueOf(Ljava/lang/String;)La/a/a/b/as;
    Access flags: 0x9
      = public static a.a.a.b.as valueOf(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 1, stack = 2):
      [0] ldc_w #5
        + Class [a/a/a/b/as]
      [3] aload_0 v0
      [4] invokestatic #20
        + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
      [7] checkcast #5
        + Class [a/a/a/b/as]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x2
      = private as(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #19
        + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ap;La/a/a/b/ao;Ljava/lang/Object;I)La/a/a/b/bc;
    Access flags: 0x400
      = abstract a.a.a.b.bc a(a.a.a.b.ap,a.a.a.b.ao,java.lang.Object,int)
  + Method:       a()La/a/a/a/b;
    Access flags: 0x400
      = abstract a.a.a.a.b a()
  - Method:       <init>(Ljava/lang/String;ILa/a/a/b/o;)V
    Access flags: 0x1000
      = synthetic as(java.lang.String,int,a.a.a.b.o)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #15
        + Methodref [a/a/a/b/as.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 65, locals = 0, stack = 4):
      [0] new #6
        + Class [a/a/a/b/at]
      [3] dup
      [4] ldc #2
        + String [STRONG]
      [6] iconst_0
      [7] invokespecial #16
        + Methodref [a/a/a/b/at.<init> (Ljava/lang/String;I)V]
      [10] putstatic #10
        + Fieldref [a/a/a/b/as.a La/a/a/b/as;]
      [13] new #7
        + Class [a/a/a/b/au]
      [16] dup
      [17] ldc #1
        + String [SOFT]
      [19] iconst_1
      [20] invokespecial #17
        + Methodref [a/a/a/b/au.<init> (Ljava/lang/String;I)V]
      [23] putstatic #11
        + Fieldref [a/a/a/b/as.b La/a/a/b/as;]
      [26] new #8
        + Class [a/a/a/b/av]
      [29] dup
      [30] ldc #3
        + String [WEAK]
      [32] iconst_2
      [33] invokespecial #18
        + Methodref [a/a/a/b/av.<init> (Ljava/lang/String;I)V]
      [36] putstatic #12
        + Fieldref [a/a/a/b/as.c La/a/a/b/as;]
      [39] iconst_3
      [40] anewarray #5
        + Class [a/a/a/b/as]
      [43] dup
      [44] iconst_0
      [45] getstatic #10
        + Fieldref [a/a/a/b/as.a La/a/a/b/as;]
      [48] aastore
      [49] dup
      [50] iconst_1
      [51] getstatic #11
        + Fieldref [a/a/a/b/as.b La/a/a/b/as;]
      [54] aastore
      [55] dup
      [56] iconst_2
      [57] getstatic #12
        + Fieldref [a/a/a/b/as.c La/a/a/b/as;]
      [60] aastore
      [61] putstatic #13
        + Fieldref [a/a/a/b/as.d [La/a/a/b/as;]
      [64] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/at
  Superclass:    a/a/a/b/as
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.at extends a.a.a.b.as

Interfaces (count = 0):

Constant Pool (count = 29):
  + Class [a/a/a/a/b]
  + Class [a/a/a/b/as]
  + Class [a/a/a/b/at]
  + Class [a/a/a/b/az]
  + Class [a/a/a/b/bk]
  + Methodref [a/a/a/a/b.a ()La/a/a/a/b;]
  + Methodref [a/a/a/b/as.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + Methodref [a/a/a/b/az.<init> (Ljava/lang/Object;)V]
  + Methodref [a/a/a/b/bk.<init> (Ljava/lang/Object;I)V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/Object;I)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + NameAndType [a ()La/a/a/a/b;]
  + Utf8 [()La/a/a/a/b;]
  + Utf8 [(La/a/a/b/ap;La/a/a/b/ao;Ljava/lang/Object;I)La/a/a/b/bc;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;I)V]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/o;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/b]
  + Utf8 [a/a/a/b/as]
  + Utf8 [a/a/a/b/at]
  + Utf8 [a/a/a/b/az]
  + Utf8 [a/a/a/b/bk]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = at(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #7
        + Methodref [a/a/a/b/as.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ap;La/a/a/b/ao;Ljava/lang/Object;I)La/a/a/b/bc;
    Access flags: 0x0
      = a.a.a.b.bc a(a.a.a.b.ap,a.a.a.b.ao,java.lang.Object,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 5, stack = 4):
      [0] iload v4
      [2] iconst_1
      [3] ificmpne +14 (target=17)
      [6] new #4
        + Class [a/a/a/b/az]
      [9] dup
      [10] aload_3 v3
      [11] invokespecial #8
        + Methodref [a/a/a/b/az.<init> (Ljava/lang/Object;)V]
      [14] goto +13 (target=27)
      [17] new #5
        + Class [a/a/a/b/bk]
      [20] dup
      [21] aload_3 v3
      [22] iload v4
      [24] invokespecial #9
        + Methodref [a/a/a/b/bk.<init> (Ljava/lang/Object;I)V]
      [27] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [17] Var: ..., Stack: (empty)
        - [27] Var: ..., Stack: [a:a/a/a/b/az]
  + Method:       a()La/a/a/a/b;
    Access flags: 0x0
      = a.a.a.a.b a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 1):
      [0] invokestatic #6
        + Methodref [a/a/a/a/b.a ()La/a/a/a/b;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/au
  Superclass:    a/a/a/b/as
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.au extends a.a.a.b.as

Interfaces (count = 0):

Constant Pool (count = 36):
  + Class [a/a/a/a/b]
  + Class [a/a/a/b/ap]
  + Class [a/a/a/b/ar]
  + Class [a/a/a/b/as]
  + Class [a/a/a/b/au]
  + Class [a/a/a/b/bj]
  + Fieldref [a/a/a/b/ap.i Ljava/lang/ref/ReferenceQueue;]
  + Methodref [a/a/a/a/b.b ()La/a/a/a/b;]
  + Methodref [a/a/a/b/ar.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/as.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + Methodref [a/a/a/b/bj.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V]
  + NameAndType [b ()La/a/a/a/b;]
  + NameAndType [i Ljava/lang/ref/ReferenceQueue;]
  + Utf8 [()La/a/a/a/b;]
  + Utf8 [(La/a/a/b/ap;La/a/a/b/ao;Ljava/lang/Object;I)La/a/a/b/bc;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/o;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/ref/ReferenceQueue;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/b]
  + Utf8 [a/a/a/b/ap]
  + Utf8 [a/a/a/b/ar]
  + Utf8 [a/a/a/b/as]
  + Utf8 [a/a/a/b/au]
  + Utf8 [a/a/a/b/bj]
  + Utf8 [b]
  + Utf8 [i]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = au(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #10
        + Methodref [a/a/a/b/as.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ap;La/a/a/b/ao;Ljava/lang/Object;I)La/a/a/b/bc;
    Access flags: 0x0
      = a.a.a.b.bc a(a.a.a.b.ap,a.a.a.b.ao,java.lang.Object,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 38, locals = 5, stack = 6):
      [0] iload v4
      [2] iconst_1
      [3] ificmpne +19 (target=22)
      [6] new #3
        + Class [a/a/a/b/ar]
      [9] dup
      [10] aload_1 v1
      [11] getfield #7
        + Fieldref [a/a/a/b/ap.i Ljava/lang/ref/ReferenceQueue;]
      [14] aload_3 v3
      [15] aload_2 v2
      [16] invokespecial #9
        + Methodref [a/a/a/b/ar.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
      [19] goto +18 (target=37)
      [22] new #6
        + Class [a/a/a/b/bj]
      [25] dup
      [26] aload_1 v1
      [27] getfield #7
        + Fieldref [a/a/a/b/ap.i Ljava/lang/ref/ReferenceQueue;]
      [30] aload_3 v3
      [31] aload_2 v2
      [32] iload v4
      [34] invokespecial #11
        + Methodref [a/a/a/b/bj.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V]
      [37] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [22] Var: ..., Stack: (empty)
        - [37] Var: ..., Stack: [a:a/a/a/b/ar]
  + Method:       a()La/a/a/a/b;
    Access flags: 0x0
      = a.a.a.a.b a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 1):
      [0] invokestatic #8
        + Methodref [a/a/a/a/b.b ()La/a/a/a/b;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/av
  Superclass:    a/a/a/b/as
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.av extends a.a.a.b.as

Interfaces (count = 0):

Constant Pool (count = 36):
  + Class [a/a/a/a/b]
  + Class [a/a/a/b/ap]
  + Class [a/a/a/b/as]
  + Class [a/a/a/b/av]
  + Class [a/a/a/b/bh]
  + Class [a/a/a/b/bl]
  + Fieldref [a/a/a/b/ap.i Ljava/lang/ref/ReferenceQueue;]
  + Methodref [a/a/a/a/b.b ()La/a/a/a/b;]
  + Methodref [a/a/a/b/as.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + Methodref [a/a/a/b/bh.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/bl.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V]
  + NameAndType [b ()La/a/a/a/b;]
  + NameAndType [i Ljava/lang/ref/ReferenceQueue;]
  + Utf8 [()La/a/a/a/b;]
  + Utf8 [(La/a/a/b/ap;La/a/a/b/ao;Ljava/lang/Object;I)La/a/a/b/bc;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/o;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/ref/ReferenceQueue;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/b]
  + Utf8 [a/a/a/b/ap]
  + Utf8 [a/a/a/b/as]
  + Utf8 [a/a/a/b/av]
  + Utf8 [a/a/a/b/bh]
  + Utf8 [a/a/a/b/bl]
  + Utf8 [b]
  + Utf8 [i]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = av(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #9
        + Methodref [a/a/a/b/as.<init> (Ljava/lang/String;ILa/a/a/b/o;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ap;La/a/a/b/ao;Ljava/lang/Object;I)La/a/a/b/bc;
    Access flags: 0x0
      = a.a.a.b.bc a(a.a.a.b.ap,a.a.a.b.ao,java.lang.Object,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 38, locals = 5, stack = 6):
      [0] iload v4
      [2] iconst_1
      [3] ificmpne +19 (target=22)
      [6] new #5
        + Class [a/a/a/b/bh]
      [9] dup
      [10] aload_1 v1
      [11] getfield #7
        + Fieldref [a/a/a/b/ap.i Ljava/lang/ref/ReferenceQueue;]
      [14] aload_3 v3
      [15] aload_2 v2
      [16] invokespecial #10
        + Methodref [a/a/a/b/bh.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
      [19] goto +18 (target=37)
      [22] new #6
        + Class [a/a/a/b/bl]
      [25] dup
      [26] aload_1 v1
      [27] getfield #7
        + Fieldref [a/a/a/b/ap.i Ljava/lang/ref/ReferenceQueue;]
      [30] aload_3 v3
      [31] aload_2 v2
      [32] iload v4
      [34] invokespecial #11
        + Methodref [a/a/a/b/bl.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V]
      [37] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [22] Var: ..., Stack: (empty)
        - [37] Var: ..., Stack: [a:a/a/a/b/bh]
  + Method:       a()La/a/a/a/b;
    Access flags: 0x0
      = a.a.a.a.b a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 1):
      [0] invokestatic #8
        + Methodref [a/a/a/a/b.b ()La/a/a/a/b;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/aw
  Superclass:    a/a/a/b/ay
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.aw extends a.a.a.b.ay

Interfaces (count = 0):

Constant Pool (count = 41):
  + Class [a/a/a/b/aw]
  + Class [a/a/a/b/ay]
  + Class [a/a/a/b/n]
  + Long [9223372036854775807]
  + Fieldref [a/a/a/b/aw.a J]
  + Fieldref [a/a/a/b/aw.b La/a/a/b/ao;]
  + Fieldref [a/a/a/b/aw.c La/a/a/b/ao;]
  + Methodref [a/a/a/b/ay.<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
  + NameAndType [<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + NameAndType [a J]
  + NameAndType [b La/a/a/b/ao;]
  + NameAndType [c La/a/a/b/ao;]
  + NameAndType [p ()La/a/a/b/ao;]
  + Utf8 [()J]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [(J)V]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [J]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [Ljavax/annotation/concurrent/GuardedBy;]
  + Utf8 [RuntimeInvisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [Segment.this]
  + Utf8 [a]
  + Utf8 [a/a/a/b/aw]
  + Utf8 [a/a/a/b/ay]
  + Utf8 [a/a/a/b/n]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [p]
  + Utf8 [value]

Fields (count = 3):
  + Field:        a J
    Access flags: 0x40
      = volatile long a
  + Field:        b La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao b
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Field:        c La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao c
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]

Methods (count = 7):
  - Method:       <init>(Ljava/lang/Object;ILa/a/a/b/ao;)V
    Access flags: 0x0
      = aw(java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 29, locals = 4, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aload_3 v3
      [4] invokespecial #9
        + Methodref [a/a/a/b/ay.<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
      [7] aload_0 v0
      [8] ldc2_w #4
        + Long [9223372036854775807]
      [11] putfield #6
        + Fieldref [a/a/a/b/aw.a J]
      [14] aload_0 v0
      [15] invokestatic #10
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [18] putfield #7
        + Fieldref [a/a/a/b/aw.b La/a/a/b/ao;]
      [21] aload_0 v0
      [22] invokestatic #10
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [25] putfield #8
        + Fieldref [a/a/a/b/aw.c La/a/a/b/ao;]
      [28] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       e()J
    Access flags: 0x1
      = public long e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/b/aw.a J]
      [4] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(J)V
    Access flags: 0x1
      = public void a(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] lload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/b/aw.a J]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/b/aw.b La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void a(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #7
        + Fieldref [a/a/a/b/aw.b La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       g()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/b/aw.c La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void b(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #8
        + Fieldref [a/a/a/b/aw.c La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ax
  Superclass:    a/a/a/b/ay
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.ax extends a.a.a.b.ay

Interfaces (count = 0):

Constant Pool (count = 51):
  + Class [a/a/a/b/ax]
  + Class [a/a/a/b/ay]
  + Class [a/a/a/b/n]
  + Long [9223372036854775807]
  + Fieldref [a/a/a/b/ax.a J]
  + Fieldref [a/a/a/b/ax.b La/a/a/b/ao;]
  + Fieldref [a/a/a/b/ax.c La/a/a/b/ao;]
  + Fieldref [a/a/a/b/ax.d J]
  + Fieldref [a/a/a/b/ax.e La/a/a/b/ao;]
  + Fieldref [a/a/a/b/ax.f La/a/a/b/ao;]
  + Methodref [a/a/a/b/ay.<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
  + NameAndType [<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + NameAndType [a J]
  + NameAndType [b La/a/a/b/ao;]
  + NameAndType [c La/a/a/b/ao;]
  + NameAndType [d J]
  + NameAndType [e La/a/a/b/ao;]
  + NameAndType [f La/a/a/b/ao;]
  + NameAndType [p ()La/a/a/b/ao;]
  + Utf8 [()J]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [(J)V]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [J]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [Ljavax/annotation/concurrent/GuardedBy;]
  + Utf8 [RuntimeInvisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [Segment.this]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ax]
  + Utf8 [a/a/a/b/ay]
  + Utf8 [a/a/a/b/n]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [h]
  + Utf8 [i]
  + Utf8 [j]
  + Utf8 [p]
  + Utf8 [value]

Fields (count = 6):
  + Field:        a J
    Access flags: 0x40
      = volatile long a
  + Field:        b La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao b
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Field:        c La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao c
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Field:        d J
    Access flags: 0x40
      = volatile long d
  + Field:        e La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao e
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Field:        f La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao f
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]

Methods (count = 13):
  - Method:       <init>(Ljava/lang/Object;ILa/a/a/b/ao;)V
    Access flags: 0x0
      = ax(java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 50, locals = 4, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aload_3 v3
      [4] invokespecial #12
        + Methodref [a/a/a/b/ay.<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
      [7] aload_0 v0
      [8] ldc2_w #4
        + Long [9223372036854775807]
      [11] putfield #6
        + Fieldref [a/a/a/b/ax.a J]
      [14] aload_0 v0
      [15] invokestatic #13
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [18] putfield #7
        + Fieldref [a/a/a/b/ax.b La/a/a/b/ao;]
      [21] aload_0 v0
      [22] invokestatic #13
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [25] putfield #8
        + Fieldref [a/a/a/b/ax.c La/a/a/b/ao;]
      [28] aload_0 v0
      [29] ldc2_w #4
        + Long [9223372036854775807]
      [32] putfield #9
        + Fieldref [a/a/a/b/ax.d J]
      [35] aload_0 v0
      [36] invokestatic #13
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [39] putfield #10
        + Fieldref [a/a/a/b/ax.e La/a/a/b/ao;]
      [42] aload_0 v0
      [43] invokestatic #13
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [46] putfield #11
        + Fieldref [a/a/a/b/ax.f La/a/a/b/ao;]
      [49] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       e()J
    Access flags: 0x1
      = public long e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/b/ax.a J]
      [4] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(J)V
    Access flags: 0x1
      = public void a(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] lload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/b/ax.a J]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/b/ax.b La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void a(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #7
        + Fieldref [a/a/a/b/ax.b La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       g()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/b/ax.c La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void b(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #8
        + Fieldref [a/a/a/b/ax.c La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       h()J
    Access flags: 0x1
      = public long h()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/b/ax.d J]
      [4] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(J)V
    Access flags: 0x1
      = public void b(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] lload_1 v1
      [2] putfield #9
        + Fieldref [a/a/a/b/ax.d J]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       i()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao i()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/b/ax.e La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void c(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #10
        + Fieldref [a/a/a/b/ax.e La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       j()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao j()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/b/ax.f La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void d(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #11
        + Fieldref [a/a/a/b/ax.f La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ay
  Superclass:    a/a/a/b/r
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.b.ay extends a.a.a.b.r

Interfaces (count = 0):

Constant Pool (count = 43):
  + Class [a/a/a/b/ay]
  + Class [a/a/a/b/n]
  + Class [a/a/a/b/r]
  + Fieldref [a/a/a/b/ay.g Ljava/lang/Object;]
  + Fieldref [a/a/a/b/ay.h I]
  + Fieldref [a/a/a/b/ay.i La/a/a/b/ao;]
  + Fieldref [a/a/a/b/ay.j La/a/a/b/bc;]
  + Methodref [a/a/a/b/n.o ()La/a/a/b/bc;]
  + Methodref [a/a/a/b/r.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [g Ljava/lang/Object;]
  + NameAndType [h I]
  + NameAndType [i La/a/a/b/ao;]
  + NameAndType [j La/a/a/b/bc;]
  + NameAndType [o ()La/a/a/b/bc;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()La/a/a/b/bc;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/b/bc;)V]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [La/a/a/b/bc;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ay]
  + Utf8 [a/a/a/b/n]
  + Utf8 [a/a/a/b/r]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [g]
  + Utf8 [h]
  + Utf8 [i]
  + Utf8 [j]
  + Utf8 [o]

Fields (count = 4):
  + Field:        g Ljava/lang/Object;
    Access flags: 0x10
      = final java.lang.Object g
  + Field:        h I
    Access flags: 0x10
      = final int h
  + Field:        i La/a/a/b/ao;
    Access flags: 0x10
      = final a.a.a.b.ao i
  + Field:        j La/a/a/b/bc;
    Access flags: 0x40
      = volatile a.a.a.b.bc j

Methods (count = 6):
  - Method:       <init>(Ljava/lang/Object;ILa/a/a/b/ao;)V
    Access flags: 0x0
      = ay(java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 27, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #9
        + Methodref [a/a/a/b/r.<init> ()V]
      [4] aload_0 v0
      [5] invokestatic #8
        + Methodref [a/a/a/b/n.o ()La/a/a/b/bc;]
      [8] putfield #7
        + Fieldref [a/a/a/b/ay.j La/a/a/b/bc;]
      [11] aload_0 v0
      [12] aload_1 v1
      [13] putfield #4
        + Fieldref [a/a/a/b/ay.g Ljava/lang/Object;]
      [16] aload_0 v0
      [17] iload_2 v2
      [18] putfield #5
        + Fieldref [a/a/a/b/ay.h I]
      [21] aload_0 v0
      [22] aload_3 v3
      [23] putfield #6
        + Fieldref [a/a/a/b/ay.i La/a/a/b/ao;]
      [26] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       d()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/b/ay.g Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/b/bc;
    Access flags: 0x1
      = public a.a.a.b.bc a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/b/ay.j La/a/a/b/bc;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/bc;)V
    Access flags: 0x1
      = public void a(a.a.a.b.bc)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #7
        + Fieldref [a/a/a/b/ay.j La/a/a/b/bc;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()I
    Access flags: 0x1
      = public int c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/b/ay.h I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/b/ay.i La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/az
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.b.az extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/b/bc]

Constant Pool (count = 29):
  + Class [a/a/a/b/az]
  + Class [a/a/a/b/bc]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/b/az.a Ljava/lang/Object;]
  + Methodref [a/a/a/b/az.get ()Ljava/lang/Object;]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a Ljava/lang/Object;]
  + NameAndType [get ()Ljava/lang/Object;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/az]
  + Utf8 [a/a/a/b/bc]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [get]
  + Utf8 [java/lang/Object]

Fields (count = 1):
  + Field:        a Ljava/lang/Object;
    Access flags: 0x10
      = final java.lang.Object a

Methods (count = 9):
  - Method:       <init>(Ljava/lang/Object;)V
    Access flags: 0x0
      = az(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #6
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #4
        + Fieldref [a/a/a/b/az.a Ljava/lang/Object;]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/b/az.a Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()I
    Access flags: 0x1
      = public int a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aconst_null
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;
    Access flags: 0x1
      = public a.a.a.b.bc a(java.lang.ref.ReferenceQueue,java.lang.Object,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 4, stack = 1):
      [0] aload_0 v0
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()Z
    Access flags: 0x1
      = public boolean c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()Z
    Access flags: 0x1
      = public boolean d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #5
        + Methodref [a/a/a/b/az.get ()Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ba
  Superclass:    a/a/a/b/ay
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.ba extends a.a.a.b.ay

Interfaces (count = 0):

Constant Pool (count = 42):
  + Class [a/a/a/b/ay]
  + Class [a/a/a/b/ba]
  + Class [a/a/a/b/n]
  + Long [9223372036854775807]
  + Fieldref [a/a/a/b/ba.a J]
  + Fieldref [a/a/a/b/ba.b La/a/a/b/ao;]
  + Fieldref [a/a/a/b/ba.c La/a/a/b/ao;]
  + Methodref [a/a/a/b/ay.<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
  + NameAndType [<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + NameAndType [a J]
  + NameAndType [b La/a/a/b/ao;]
  + NameAndType [c La/a/a/b/ao;]
  + NameAndType [p ()La/a/a/b/ao;]
  + Utf8 [()J]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [(J)V]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [J]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [Ljavax/annotation/concurrent/GuardedBy;]
  + Utf8 [RuntimeInvisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [Segment.this]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ay]
  + Utf8 [a/a/a/b/ba]
  + Utf8 [a/a/a/b/n]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [h]
  + Utf8 [i]
  + Utf8 [j]
  + Utf8 [p]
  + Utf8 [value]

Fields (count = 3):
  + Field:        a J
    Access flags: 0x40
      = volatile long a
  + Field:        b La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao b
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Field:        c La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao c
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]

Methods (count = 7):
  - Method:       <init>(Ljava/lang/Object;ILa/a/a/b/ao;)V
    Access flags: 0x0
      = ba(java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 29, locals = 4, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aload_3 v3
      [4] invokespecial #9
        + Methodref [a/a/a/b/ay.<init> (Ljava/lang/Object;ILa/a/a/b/ao;)V]
      [7] aload_0 v0
      [8] ldc2_w #4
        + Long [9223372036854775807]
      [11] putfield #6
        + Fieldref [a/a/a/b/ba.a J]
      [14] aload_0 v0
      [15] invokestatic #10
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [18] putfield #7
        + Fieldref [a/a/a/b/ba.b La/a/a/b/ao;]
      [21] aload_0 v0
      [22] invokestatic #10
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [25] putfield #8
        + Fieldref [a/a/a/b/ba.c La/a/a/b/ao;]
      [28] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       h()J
    Access flags: 0x1
      = public long h()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/b/ba.a J]
      [4] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(J)V
    Access flags: 0x1
      = public void b(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] lload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/b/ba.a J]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       i()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao i()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/b/ba.b La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void c(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #7
        + Fieldref [a/a/a/b/ba.b La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       j()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao j()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/b/ba.c La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void d(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #8
        + Fieldref [a/a/a/b/ba.c La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bb
  Superclass:    a/a/a/b/ag
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.bb extends a.a.a.b.ag

Interfaces (count = 0):

Constant Pool (count = 25):
  + Class [a/a/a/b/ag]
  + Class [a/a/a/b/bb]
  + Class [a/a/a/b/bp]
  + Fieldref [a/a/a/b/bb.a La/a/a/b/n;]
  + Methodref [a/a/a/b/ag.<init> (La/a/a/b/n;)V]
  + Methodref [a/a/a/b/bb.e ()La/a/a/b/bp;]
  + Methodref [a/a/a/b/bp.getValue ()Ljava/lang/Object;]
  + NameAndType [<init> (La/a/a/b/n;)V]
  + NameAndType [a La/a/a/b/n;]
  + NameAndType [e ()La/a/a/b/bp;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + Utf8 [()La/a/a/b/bp;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [(La/a/a/b/n;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/n;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ag]
  + Utf8 [a/a/a/b/bb]
  + Utf8 [a/a/a/b/bp]
  + Utf8 [e]
  + Utf8 [getValue]
  + Utf8 [next]

Fields (count = 1):
  + Field:        a La/a/a/b/n;
    Access flags: 0x1010
      = final synthetic a.a.a.b.n a

Methods (count = 2):
  - Method:       <init>(La/a/a/b/n;)V
    Access flags: 0x0
      = bb(a.a.a.b.n)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #4
        + Fieldref [a/a/a/b/bb.a La/a/a/b/n;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] invokespecial #5
        + Methodref [a/a/a/b/ag.<init> (La/a/a/b/n;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #6
        + Methodref [a/a/a/b/bb.e ()La/a/a/b/bp;]
      [4] invokevirtual #7
        + Methodref [a/a/a/b/bp.getValue ()Ljava/lang/Object;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bc
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x600
    = interface a.a.a.b.bc extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 20):
  + Class [a/a/a/b/bc]
  + Class [java/lang/Object]
  + Utf8 [()I]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bc]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [get]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 8):
  + Method:       get()Ljava/lang/Object;
    Access flags: 0x401
      = public abstract java.lang.Object get()
    Class member attributes (count = 1):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       e()Ljava/lang/Object;
    Access flags: 0x401
      = public abstract java.lang.Object e()
  + Method:       a()I
    Access flags: 0x401
      = public abstract int a()
  + Method:       b()La/a/a/b/ao;
    Access flags: 0x401
      = public abstract a.a.a.b.ao b()
    Class member attributes (count = 1):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;
    Access flags: 0x401
      = public abstract a.a.a.b.bc a(java.lang.ref.ReferenceQueue,java.lang.Object,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Object;)V
    Access flags: 0x401
      = public abstract void a(java.lang.Object)
    Class member attributes (count = 1):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       c()Z
    Access flags: 0x401
      = public abstract boolean c()
  + Method:       d()Z
    Access flags: 0x401
      = public abstract boolean d()

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bd
  Superclass:    java/util/AbstractCollection
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.bd extends java.util.AbstractCollection

Interfaces (count = 0):

Constant Pool (count = 44):
  + Class [a/a/a/b/bb]
  + Class [a/a/a/b/bd]
  + Class [java/util/AbstractCollection]
  + Class [java/util/concurrent/ConcurrentMap]
  + Fieldref [a/a/a/b/bd.a La/a/a/b/n;]
  + Fieldref [a/a/a/b/bd.b Ljava/util/concurrent/ConcurrentMap;]
  + Methodref [a/a/a/b/bb.<init> (La/a/a/b/n;)V]
  + Methodref [java/util/AbstractCollection.<init> ()V]
  + InterfaceMethodref [java/util/concurrent/ConcurrentMap.clear ()V]
  + InterfaceMethodref [java/util/concurrent/ConcurrentMap.containsValue (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/concurrent/ConcurrentMap.isEmpty ()Z]
  + InterfaceMethodref [java/util/concurrent/ConcurrentMap.size ()I]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/b/n;)V]
  + NameAndType [a La/a/a/b/n;]
  + NameAndType [b Ljava/util/concurrent/ConcurrentMap;]
  + NameAndType [clear ()V]
  + NameAndType [containsValue (Ljava/lang/Object;)Z]
  + NameAndType [isEmpty ()Z]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/b/n;)V]
  + Utf8 [(La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/n;]
  + Utf8 [Ljava/util/concurrent/ConcurrentMap;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bb]
  + Utf8 [a/a/a/b/bd]
  + Utf8 [b]
  + Utf8 [clear]
  + Utf8 [contains]
  + Utf8 [containsValue]
  + Utf8 [isEmpty]
  + Utf8 [iterator]
  + Utf8 [java/util/AbstractCollection]
  + Utf8 [java/util/concurrent/ConcurrentMap]
  + Utf8 [size]

Fields (count = 2):
  + Field:        b Ljava/util/concurrent/ConcurrentMap;
    Access flags: 0x12
      = private final java.util.concurrent.ConcurrentMap b
  + Field:        a La/a/a/b/n;
    Access flags: 0x1010
      = final synthetic a.a.a.b.n a

Methods (count = 6):
  - Method:       <init>(La/a/a/b/n;Ljava/util/concurrent/ConcurrentMap;)V
    Access flags: 0x0
      = bd(a.a.a.b.n,java.util.concurrent.ConcurrentMap)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #5
        + Fieldref [a/a/a/b/bd.a La/a/a/b/n;]
      [5] aload_0 v0
      [6] invokespecial #8
        + Methodref [java/util/AbstractCollection.<init> ()V]
      [9] aload_0 v0
      [10] aload_2 v2
      [11] putfield #6
        + Fieldref [a/a/a/b/bd.b Ljava/util/concurrent/ConcurrentMap;]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/b/bd.b Ljava/util/concurrent/ConcurrentMap;]
      [4] invokeinterface #12
        + InterfaceMethodref [java/util/concurrent/ConcurrentMap.size ()I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/b/bd.b Ljava/util/concurrent/ConcurrentMap;]
      [4] invokeinterface #11
        + InterfaceMethodref [java/util/concurrent/ConcurrentMap.isEmpty ()Z]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       clear()V
    Access flags: 0x1
      = public void clear()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/b/bd.b Ljava/util/concurrent/ConcurrentMap;]
      [4] invokeinterface #9
        + InterfaceMethodref [java/util/concurrent/ConcurrentMap.clear ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 1, stack = 3):
      [0] new #1
        + Class [a/a/a/b/bb]
      [3] dup
      [4] aload_0 v0
      [5] getfield #5
        + Fieldref [a/a/a/b/bd.a La/a/a/b/n;]
      [8] invokespecial #7
        + Methodref [a/a/a/b/bb.<init> (La/a/a/b/n;)V]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/b/bd.b Ljava/util/concurrent/ConcurrentMap;]
      [4] aload_1 v1
      [5] invokeinterface #10
        + InterfaceMethodref [java/util/concurrent/ConcurrentMap.containsValue (Ljava/lang/Object;)Z]
      [10] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/be
  Superclass:    a/a/a/b/bg
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.be extends a.a.a.b.bg

Interfaces (count = 0):

Constant Pool (count = 41):
  + Class [a/a/a/b/be]
  + Class [a/a/a/b/bg]
  + Class [a/a/a/b/n]
  + Long [9223372036854775807]
  + Fieldref [a/a/a/b/be.a J]
  + Fieldref [a/a/a/b/be.b La/a/a/b/ao;]
  + Fieldref [a/a/a/b/be.c La/a/a/b/ao;]
  + Methodref [a/a/a/b/bg.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + NameAndType [a J]
  + NameAndType [b La/a/a/b/ao;]
  + NameAndType [c La/a/a/b/ao;]
  + NameAndType [p ()La/a/a/b/ao;]
  + Utf8 [()J]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [(J)V]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [J]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [Ljavax/annotation/concurrent/GuardedBy;]
  + Utf8 [RuntimeInvisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [Segment.this]
  + Utf8 [a]
  + Utf8 [a/a/a/b/be]
  + Utf8 [a/a/a/b/bg]
  + Utf8 [a/a/a/b/n]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [p]
  + Utf8 [value]

Fields (count = 3):
  + Field:        a J
    Access flags: 0x40
      = volatile long a
  + Field:        b La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao b
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Field:        c La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao c
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]

Methods (count = 7):
  - Method:       <init>(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V
    Access flags: 0x0
      = be(java.lang.ref.ReferenceQueue,java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 31, locals = 5, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] iload_3 v3
      [4] aload v4
      [6] invokespecial #9
        + Methodref [a/a/a/b/bg.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
      [9] aload_0 v0
      [10] ldc2_w #4
        + Long [9223372036854775807]
      [13] putfield #6
        + Fieldref [a/a/a/b/be.a J]
      [16] aload_0 v0
      [17] invokestatic #10
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [20] putfield #7
        + Fieldref [a/a/a/b/be.b La/a/a/b/ao;]
      [23] aload_0 v0
      [24] invokestatic #10
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [27] putfield #8
        + Fieldref [a/a/a/b/be.c La/a/a/b/ao;]
      [30] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       e()J
    Access flags: 0x1
      = public long e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/b/be.a J]
      [4] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(J)V
    Access flags: 0x1
      = public void a(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] lload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/b/be.a J]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/b/be.b La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void a(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #7
        + Fieldref [a/a/a/b/be.b La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       g()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/b/be.c La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void b(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #8
        + Fieldref [a/a/a/b/be.c La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bf
  Superclass:    a/a/a/b/bg
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.bf extends a.a.a.b.bg

Interfaces (count = 0):

Constant Pool (count = 51):
  + Class [a/a/a/b/bf]
  + Class [a/a/a/b/bg]
  + Class [a/a/a/b/n]
  + Long [9223372036854775807]
  + Fieldref [a/a/a/b/bf.a J]
  + Fieldref [a/a/a/b/bf.b La/a/a/b/ao;]
  + Fieldref [a/a/a/b/bf.c La/a/a/b/ao;]
  + Fieldref [a/a/a/b/bf.d J]
  + Fieldref [a/a/a/b/bf.e La/a/a/b/ao;]
  + Fieldref [a/a/a/b/bf.f La/a/a/b/ao;]
  + Methodref [a/a/a/b/bg.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + NameAndType [a J]
  + NameAndType [b La/a/a/b/ao;]
  + NameAndType [c La/a/a/b/ao;]
  + NameAndType [d J]
  + NameAndType [e La/a/a/b/ao;]
  + NameAndType [f La/a/a/b/ao;]
  + NameAndType [p ()La/a/a/b/ao;]
  + Utf8 [()J]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [(J)V]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [J]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [Ljavax/annotation/concurrent/GuardedBy;]
  + Utf8 [RuntimeInvisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [Segment.this]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bf]
  + Utf8 [a/a/a/b/bg]
  + Utf8 [a/a/a/b/n]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [h]
  + Utf8 [i]
  + Utf8 [j]
  + Utf8 [p]
  + Utf8 [value]

Fields (count = 6):
  + Field:        a J
    Access flags: 0x40
      = volatile long a
  + Field:        b La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao b
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Field:        c La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao c
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Field:        d J
    Access flags: 0x40
      = volatile long d
  + Field:        e La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao e
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Field:        f La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao f
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]

Methods (count = 13):
  - Method:       <init>(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V
    Access flags: 0x0
      = bf(java.lang.ref.ReferenceQueue,java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 52, locals = 5, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] iload_3 v3
      [4] aload v4
      [6] invokespecial #12
        + Methodref [a/a/a/b/bg.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
      [9] aload_0 v0
      [10] ldc2_w #4
        + Long [9223372036854775807]
      [13] putfield #6
        + Fieldref [a/a/a/b/bf.a J]
      [16] aload_0 v0
      [17] invokestatic #13
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [20] putfield #7
        + Fieldref [a/a/a/b/bf.b La/a/a/b/ao;]
      [23] aload_0 v0
      [24] invokestatic #13
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [27] putfield #8
        + Fieldref [a/a/a/b/bf.c La/a/a/b/ao;]
      [30] aload_0 v0
      [31] ldc2_w #4
        + Long [9223372036854775807]
      [34] putfield #9
        + Fieldref [a/a/a/b/bf.d J]
      [37] aload_0 v0
      [38] invokestatic #13
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [41] putfield #10
        + Fieldref [a/a/a/b/bf.e La/a/a/b/ao;]
      [44] aload_0 v0
      [45] invokestatic #13
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [48] putfield #11
        + Fieldref [a/a/a/b/bf.f La/a/a/b/ao;]
      [51] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       e()J
    Access flags: 0x1
      = public long e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/b/bf.a J]
      [4] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(J)V
    Access flags: 0x1
      = public void a(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] lload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/b/bf.a J]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/b/bf.b La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void a(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #7
        + Fieldref [a/a/a/b/bf.b La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       g()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/b/bf.c La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void b(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #8
        + Fieldref [a/a/a/b/bf.c La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       h()J
    Access flags: 0x1
      = public long h()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/b/bf.d J]
      [4] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(J)V
    Access flags: 0x1
      = public void b(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] lload_1 v1
      [2] putfield #9
        + Fieldref [a/a/a/b/bf.d J]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       i()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao i()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/b/bf.e La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void c(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #10
        + Fieldref [a/a/a/b/bf.e La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       j()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao j()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/b/bf.f La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void d(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #11
        + Fieldref [a/a/a/b/bf.f La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bg
  Superclass:    java/lang/ref/WeakReference
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.b.bg extends java.lang.ref.WeakReference

Interfaces (count = 1):
  + Class [a/a/a/b/ao]

Constant Pool (count = 55):
  + Class [a/a/a/b/ao]
  + Class [a/a/a/b/bg]
  + Class [a/a/a/b/n]
  + Class [java/lang/UnsupportedOperationException]
  + Class [java/lang/ref/WeakReference]
  + Fieldref [a/a/a/b/bg.g I]
  + Fieldref [a/a/a/b/bg.h La/a/a/b/ao;]
  + Fieldref [a/a/a/b/bg.i La/a/a/b/bc;]
  + Methodref [a/a/a/b/bg.get ()Ljava/lang/Object;]
  + Methodref [a/a/a/b/n.o ()La/a/a/b/bc;]
  + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
  + Methodref [java/lang/ref/WeakReference.<init> (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V]
  + NameAndType [g I]
  + NameAndType [get ()Ljava/lang/Object;]
  + NameAndType [h La/a/a/b/ao;]
  + NameAndType [i La/a/a/b/bc;]
  + NameAndType [o ()La/a/a/b/bc;]
  + Utf8 [()I]
  + Utf8 [()J]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()La/a/a/b/bc;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [(J)V]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/bc;)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [La/a/a/b/bc;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ao]
  + Utf8 [a/a/a/b/bg]
  + Utf8 [a/a/a/b/n]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [get]
  + Utf8 [h]
  + Utf8 [i]
  + Utf8 [j]
  + Utf8 [java/lang/UnsupportedOperationException]
  + Utf8 [java/lang/ref/WeakReference]
  + Utf8 [o]

Fields (count = 3):
  + Field:        g I
    Access flags: 0x10
      = final int g
  + Field:        h La/a/a/b/ao;
    Access flags: 0x10
      = final a.a.a.b.ao h
  + Field:        i La/a/a/b/bc;
    Access flags: 0x40
      = volatile a.a.a.b.bc i

Methods (count = 18):
  - Method:       <init>(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V
    Access flags: 0x0
      = bg(java.lang.ref.ReferenceQueue,java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 25, locals = 5, stack = 3):
      [0] aload_0 v0
      [1] aload_2 v2
      [2] aload_1 v1
      [3] invokespecial #12
        + Methodref [java/lang/ref/WeakReference.<init> (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V]
      [6] aload_0 v0
      [7] invokestatic #10
        + Methodref [a/a/a/b/n.o ()La/a/a/b/bc;]
      [10] putfield #8
        + Fieldref [a/a/a/b/bg.i La/a/a/b/bc;]
      [13] aload_0 v0
      [14] iload_3 v3
      [15] putfield #6
        + Fieldref [a/a/a/b/bg.g I]
      [18] aload_0 v0
      [19] aload v4
      [21] putfield #7
        + Fieldref [a/a/a/b/bg.h La/a/a/b/ao;]
      [24] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       d()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/b/bg.get ()Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()J
    Access flags: 0x1
      = public long e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #11
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(J)V
    Access flags: 0x1
      = public void a(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #11
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #11
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void a(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #11
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       g()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #11
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void b(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #11
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       h()J
    Access flags: 0x1
      = public long h()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #11
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(J)V
    Access flags: 0x1
      = public void b(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #11
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       i()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao i()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #11
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void c(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #11
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       j()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao j()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #11
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void d(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #11
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/b/bc;
    Access flags: 0x1
      = public a.a.a.b.bc a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/b/bg.i La/a/a/b/bc;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/bc;)V
    Access flags: 0x1
      = public void a(a.a.a.b.bc)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #8
        + Fieldref [a/a/a/b/bg.i La/a/a/b/bc;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()I
    Access flags: 0x1
      = public int c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/b/bg.g I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/b/bg.h La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bh
  Superclass:    java/lang/ref/WeakReference
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.b.bh extends java.lang.ref.WeakReference

Interfaces (count = 1):
  + Class [a/a/a/b/bc]

Constant Pool (count = 32):
  + Class [a/a/a/b/bc]
  + Class [a/a/a/b/bh]
  + Class [java/lang/ref/WeakReference]
  + Fieldref [a/a/a/b/bh.a La/a/a/b/ao;]
  + Methodref [a/a/a/b/bh.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/bh.get ()Ljava/lang/Object;]
  + Methodref [java/lang/ref/WeakReference.<init> (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V]
  + NameAndType [<init> (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + NameAndType [a La/a/a/b/ao;]
  + NameAndType [get ()Ljava/lang/Object;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bc]
  + Utf8 [a/a/a/b/bh]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [get]
  + Utf8 [java/lang/ref/WeakReference]

Fields (count = 1):
  + Field:        a La/a/a/b/ao;
    Access flags: 0x10
      = final a.a.a.b.ao a

Methods (count = 8):
  - Method:       <init>(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V
    Access flags: 0x0
      = bh(java.lang.ref.ReferenceQueue,java.lang.Object,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_2 v2
      [2] aload_1 v1
      [3] invokespecial #7
        + Methodref [java/lang/ref/WeakReference.<init> (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V]
      [6] aload_0 v0
      [7] aload_3 v3
      [8] putfield #4
        + Fieldref [a/a/a/b/bh.a La/a/a/b/ao;]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()I
    Access flags: 0x1
      = public int a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/b/bh.a La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;
    Access flags: 0x1
      = public a.a.a.b.bc a(java.lang.ref.ReferenceQueue,java.lang.Object,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 4, stack = 5):
      [0] new #2
        + Class [a/a/a/b/bh]
      [3] dup
      [4] aload_1 v1
      [5] aload_2 v2
      [6] aload_3 v3
      [7] invokespecial #5
        + Methodref [a/a/a/b/bh.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()Z
    Access flags: 0x1
      = public boolean c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()Z
    Access flags: 0x1
      = public boolean d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #6
        + Methodref [a/a/a/b/bh.get ()Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bi
  Superclass:    a/a/a/b/bg
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.bi extends a.a.a.b.bg

Interfaces (count = 0):

Constant Pool (count = 42):
  + Class [a/a/a/b/bg]
  + Class [a/a/a/b/bi]
  + Class [a/a/a/b/n]
  + Long [9223372036854775807]
  + Fieldref [a/a/a/b/bi.a J]
  + Fieldref [a/a/a/b/bi.b La/a/a/b/ao;]
  + Fieldref [a/a/a/b/bi.c La/a/a/b/ao;]
  + Methodref [a/a/a/b/bg.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + NameAndType [a J]
  + NameAndType [b La/a/a/b/ao;]
  + NameAndType [c La/a/a/b/ao;]
  + NameAndType [p ()La/a/a/b/ao;]
  + Utf8 [()J]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [(J)V]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [J]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [Ljavax/annotation/concurrent/GuardedBy;]
  + Utf8 [RuntimeInvisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [Segment.this]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bg]
  + Utf8 [a/a/a/b/bi]
  + Utf8 [a/a/a/b/n]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [h]
  + Utf8 [i]
  + Utf8 [j]
  + Utf8 [p]
  + Utf8 [value]

Fields (count = 3):
  + Field:        a J
    Access flags: 0x40
      = volatile long a
  + Field:        b La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao b
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]
  + Field:        c La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao c
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [Segment.this]

Methods (count = 7):
  - Method:       <init>(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V
    Access flags: 0x0
      = bi(java.lang.ref.ReferenceQueue,java.lang.Object,int,a.a.a.b.ao)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 31, locals = 5, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] iload_3 v3
      [4] aload v4
      [6] invokespecial #9
        + Methodref [a/a/a/b/bg.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILa/a/a/b/ao;)V]
      [9] aload_0 v0
      [10] ldc2_w #4
        + Long [9223372036854775807]
      [13] putfield #6
        + Fieldref [a/a/a/b/bi.a J]
      [16] aload_0 v0
      [17] invokestatic #10
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [20] putfield #7
        + Fieldref [a/a/a/b/bi.b La/a/a/b/ao;]
      [23] aload_0 v0
      [24] invokestatic #10
        + Methodref [a/a/a/b/n.p ()La/a/a/b/ao;]
      [27] putfield #8
        + Fieldref [a/a/a/b/bi.c La/a/a/b/ao;]
      [30] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       h()J
    Access flags: 0x1
      = public long h()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/b/bi.a J]
      [4] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(J)V
    Access flags: 0x1
      = public void b(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] lload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/b/bi.a J]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       i()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao i()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/b/bi.b La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void c(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #7
        + Fieldref [a/a/a/b/bi.b La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       j()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao j()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/b/bi.c La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void d(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #8
        + Fieldref [a/a/a/b/bi.c La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bj
  Superclass:    a/a/a/b/ar
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.bj extends a.a.a.b.ar

Interfaces (count = 0):

Constant Pool (count = 20):
  + Class [a/a/a/b/ar]
  + Class [a/a/a/b/bj]
  + Fieldref [a/a/a/b/bj.b I]
  + Methodref [a/a/a/b/ar.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/bj.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V]
  + NameAndType [b I]
  + Utf8 [()I]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ar]
  + Utf8 [a/a/a/b/bj]
  + Utf8 [b]

Fields (count = 1):
  + Field:        b I
    Access flags: 0x10
      = final int b

Methods (count = 3):
  - Method:       <init>(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V
    Access flags: 0x0
      = bj(java.lang.ref.ReferenceQueue,java.lang.Object,a.a.a.b.ao,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 5, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] aload_3 v3
      [4] invokespecial #4
        + Methodref [a/a/a/b/ar.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
      [7] aload_0 v0
      [8] iload v4
      [10] putfield #3
        + Fieldref [a/a/a/b/bj.b I]
      [13] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()I
    Access flags: 0x1
      = public int a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #3
        + Fieldref [a/a/a/b/bj.b I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;
    Access flags: 0x1
      = public a.a.a.b.bc a(java.lang.ref.ReferenceQueue,java.lang.Object,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 4, stack = 6):
      [0] new #2
        + Class [a/a/a/b/bj]
      [3] dup
      [4] aload_1 v1
      [5] aload_2 v2
      [6] aload_3 v3
      [7] aload_0 v0
      [8] getfield #3
        + Fieldref [a/a/a/b/bj.b I]
      [11] invokespecial #5
        + Methodref [a/a/a/b/bj.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V]
      [14] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bk
  Superclass:    a/a/a/b/az
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.bk extends a.a.a.b.az

Interfaces (count = 0):

Constant Pool (count = 17):
  + Class [a/a/a/b/az]
  + Class [a/a/a/b/bk]
  + Fieldref [a/a/a/b/bk.b I]
  + Methodref [a/a/a/b/az.<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [b I]
  + Utf8 [()I]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;I)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [a]
  + Utf8 [a/a/a/b/az]
  + Utf8 [a/a/a/b/bk]
  + Utf8 [b]

Fields (count = 1):
  + Field:        b I
    Access flags: 0x10
      = final int b

Methods (count = 2):
  - Method:       <init>(Ljava/lang/Object;I)V
    Access flags: 0x0
      = bk(java.lang.Object,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #4
        + Methodref [a/a/a/b/az.<init> (Ljava/lang/Object;)V]
      [5] aload_0 v0
      [6] iload_2 v2
      [7] putfield #3
        + Fieldref [a/a/a/b/bk.b I]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()I
    Access flags: 0x1
      = public int a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #3
        + Fieldref [a/a/a/b/bk.b I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bl
  Superclass:    a/a/a/b/bh
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.bl extends a.a.a.b.bh

Interfaces (count = 0):

Constant Pool (count = 20):
  + Class [a/a/a/b/bh]
  + Class [a/a/a/b/bl]
  + Fieldref [a/a/a/b/bl.b I]
  + Methodref [a/a/a/b/bh.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/bl.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + NameAndType [<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V]
  + NameAndType [b I]
  + Utf8 [()I]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bh]
  + Utf8 [a/a/a/b/bl]
  + Utf8 [b]

Fields (count = 1):
  + Field:        b I
    Access flags: 0x10
      = final int b

Methods (count = 3):
  - Method:       <init>(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V
    Access flags: 0x0
      = bl(java.lang.ref.ReferenceQueue,java.lang.Object,a.a.a.b.ao,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 5, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] aload_3 v3
      [4] invokespecial #4
        + Methodref [a/a/a/b/bh.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)V]
      [7] aload_0 v0
      [8] iload v4
      [10] putfield #3
        + Fieldref [a/a/a/b/bl.b I]
      [13] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()I
    Access flags: 0x1
      = public int a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #3
        + Fieldref [a/a/a/b/bl.b I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;)La/a/a/b/bc;
    Access flags: 0x1
      = public a.a.a.b.bc a(java.lang.ref.ReferenceQueue,java.lang.Object,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 4, stack = 6):
      [0] new #2
        + Class [a/a/a/b/bl]
      [3] dup
      [4] aload_1 v1
      [5] aload_2 v2
      [6] aload_3 v3
      [7] aload_0 v0
      [8] getfield #3
        + Fieldref [a/a/a/b/bl.b I]
      [11] invokespecial #5
        + Methodref [a/a/a/b/bl.<init> (Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;La/a/a/b/ao;I)V]
      [14] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bm
  Superclass:    java/util/AbstractQueue
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.bm extends java.util.AbstractQueue

Interfaces (count = 0):

Constant Pool (count = 76):
  + Class [a/a/a/b/an]
  + Class [a/a/a/b/ao]
  + Class [a/a/a/b/bm]
  + Class [a/a/a/b/bn]
  + Class [a/a/a/b/bo]
  + Class [a/a/a/b/n]
  + Class [java/util/AbstractQueue]
  + Fieldref [a/a/a/b/an.a La/a/a/b/an;]
  + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
  + Methodref [a/a/a/b/bm.a ()La/a/a/b/ao;]
  + Methodref [a/a/a/b/bm.a (La/a/a/b/ao;)Z]
  + Methodref [a/a/a/b/bm.b ()La/a/a/b/ao;]
  + Methodref [a/a/a/b/bm.remove (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/b/bn.<init> (La/a/a/b/bm;)V]
  + Methodref [a/a/a/b/bo.<init> (La/a/a/b/bm;La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/n.b (La/a/a/b/ao;La/a/a/b/ao;)V]
  + Methodref [a/a/a/b/n.c (La/a/a/b/ao;)V]
  + Methodref [java/util/AbstractQueue.<init> ()V]
  + InterfaceMethodref [a/a/a/b/ao.c (La/a/a/b/ao;)V]
  + InterfaceMethodref [a/a/a/b/ao.d (La/a/a/b/ao;)V]
  + InterfaceMethodref [a/a/a/b/ao.i ()La/a/a/b/ao;]
  + InterfaceMethodref [a/a/a/b/ao.j ()La/a/a/b/ao;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/b/bm;)V]
  + NameAndType [<init> (La/a/a/b/bm;La/a/a/b/ao;)V]
  + NameAndType [a ()La/a/a/b/ao;]
  + NameAndType [a (La/a/a/b/ao;)Z]
  + NameAndType [a La/a/a/b/an;]
  + NameAndType [a La/a/a/b/ao;]
  + NameAndType [b ()La/a/a/b/ao;]
  + NameAndType [b (La/a/a/b/ao;La/a/a/b/ao;)V]
  + NameAndType [c (La/a/a/b/ao;)V]
  + NameAndType [d (La/a/a/b/ao;)V]
  + NameAndType [i ()La/a/a/b/ao;]
  + NameAndType [j ()La/a/a/b/ao;]
  + NameAndType [remove (Ljava/lang/Object;)Z]
  + Utf8 [()I]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/ao;)Z]
  + Utf8 [(La/a/a/b/ao;La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/bm;)V]
  + Utf8 [(La/a/a/b/bm;La/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/an;]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/b/an]
  + Utf8 [a/a/a/b/ao]
  + Utf8 [a/a/a/b/bm]
  + Utf8 [a/a/a/b/bn]
  + Utf8 [a/a/a/b/bo]
  + Utf8 [a/a/a/b/n]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clear]
  + Utf8 [contains]
  + Utf8 [d]
  + Utf8 [i]
  + Utf8 [isEmpty]
  + Utf8 [iterator]
  + Utf8 [j]
  + Utf8 [java/util/AbstractQueue]
  + Utf8 [offer]
  + Utf8 [peek]
  + Utf8 [poll]
  + Utf8 [remove]
  + Utf8 [size]

Fields (count = 1):
  + Field:        a La/a/a/b/ao;
    Access flags: 0x10
      = final a.a.a.b.ao a

Methods (count = 13):
  - Method:       <init>()V
    Access flags: 0x0
      = bm()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] invokespecial #18
        + Methodref [java/util/AbstractQueue.<init> ()V]
      [4] aload_0 v0
      [5] new #4
        + Class [a/a/a/b/bn]
      [8] dup
      [9] aload_0 v0
      [10] invokespecial #14
        + Methodref [a/a/a/b/bn.<init> (La/a/a/b/bm;)V]
      [13] putfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [16] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ao;)Z
    Access flags: 0x1
      = public boolean a(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 38, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] invokeinterface #22
        + InterfaceMethodref [a/a/a/b/ao.j ()La/a/a/b/ao;]
      [6] aload_1 v1
      [7] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.i ()La/a/a/b/ao;]
      [12] invokestatic #16
        + Methodref [a/a/a/b/n.b (La/a/a/b/ao;La/a/a/b/ao;)V]
      [15] aload_0 v0
      [16] getfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [19] invokeinterface #22
        + InterfaceMethodref [a/a/a/b/ao.j ()La/a/a/b/ao;]
      [24] aload_1 v1
      [25] invokestatic #16
        + Methodref [a/a/a/b/n.b (La/a/a/b/ao;La/a/a/b/ao;)V]
      [28] aload_1 v1
      [29] aload_0 v0
      [30] getfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [33] invokestatic #16
        + Methodref [a/a/a/b/n.b (La/a/a/b/ao;La/a/a/b/ao;)V]
      [36] iconst_1
      [37] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [4] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.i ()La/a/a/b/ao;]
      [9] astore_1 v1
      [10] aload_1 v1
      [11] aload_0 v0
      [12] getfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [15] ifacmpne +7 (target=22)
      [18] aconst_null
      [19] goto +4 (target=23)
      [22] aload_1 v1
      [23] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [22] Var: ...[a:a/a/a/b/ao], Stack: (empty)
        - [23] Var: ..., Stack: [a:a/a/a/b/ao]
  + Method:       b()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [4] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.i ()La/a/a/b/ao;]
      [9] astore_1 v1
      [10] aload_1 v1
      [11] aload_0 v0
      [12] getfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [15] ifacmpne +5 (target=20)
      [18] aconst_null
      [19] areturn
      [20] aload_0 v0
      [21] aload_1 v1
      [22] invokevirtual #13
        + Methodref [a/a/a/b/bm.remove (Ljava/lang/Object;)Z]
      [25] pop
      [26] aload_1 v1
      [27] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [20] Var: ...[a:a/a/a/b/ao], Stack: (empty)
  + Method:       remove(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean remove(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 44, locals = 5, stack = 2):
      [0] aload_1 v1
      [1] checkcast #2
        + Class [a/a/a/b/ao]
      [4] astore_2 v2
      [5] aload_2 v2
      [6] invokeinterface #22
        + InterfaceMethodref [a/a/a/b/ao.j ()La/a/a/b/ao;]
      [11] astore_3 v3
      [12] aload_2 v2
      [13] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.i ()La/a/a/b/ao;]
      [18] astore v4
      [20] aload_3 v3
      [21] aload v4
      [23] invokestatic #16
        + Methodref [a/a/a/b/n.b (La/a/a/b/ao;La/a/a/b/ao;)V]
      [26] aload_2 v2
      [27] invokestatic #17
        + Methodref [a/a/a/b/n.c (La/a/a/b/ao;)V]
      [30] aload v4
      [32] getstatic #8
        + Fieldref [a/a/a/b/an.a La/a/a/b/an;]
      [35] ifacmpeq +7 (target=42)
      [38] iconst_1
      [39] goto +4 (target=43)
      [42] iconst_0
      [43] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [42] Var: ...[a:a/a/a/b/ao][a:a/a/a/b/ao][a:a/a/a/b/ao], Stack: (empty)
        - [43] Var: ..., Stack: [i]
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] checkcast #2
        + Class [a/a/a/b/ao]
      [4] astore_2 v2
      [5] aload_2 v2
      [6] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.i ()La/a/a/b/ao;]
      [11] getstatic #8
        + Fieldref [a/a/a/b/an.a La/a/a/b/an;]
      [14] ifacmpeq +7 (target=21)
      [17] iconst_1
      [18] goto +4 (target=22)
      [21] iconst_0
      [22] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [21] Var: ...[a:a/a/a/b/ao], Stack: (empty)
        - [22] Var: ..., Stack: [i]
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [4] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.i ()La/a/a/b/ao;]
      [9] aload_0 v0
      [10] getfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [13] ifacmpne +7 (target=20)
      [16] iconst_1
      [17] goto +4 (target=21)
      [20] iconst_0
      [21] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [20] Var: ..., Stack: (empty)
        - [21] Var: ..., Stack: [i]
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 35, locals = 3, stack = 2):
      [0] iconst_0
      [1] istore_1 v1
      [2] aload_0 v0
      [3] getfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [6] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.i ()La/a/a/b/ao;]
      [11] astore_2 v2
      [12] aload_2 v2
      [13] aload_0 v0
      [14] getfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [17] ifacmpeq +16 (target=33)
      [20] iinc v1, 1
      [23] aload_2 v2
      [24] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.i ()La/a/a/b/ao;]
      [29] astore_2 v2
      [30] goto -18 (target=12)
      [33] iload_1 v1
      [34] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [12] Var: ...[i][a:a/a/a/b/ao], Stack: (empty)
        - [33] Var: -1, Stack: (empty)
  + Method:       clear()V
    Access flags: 0x1
      = public void clear()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 61, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [4] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.i ()La/a/a/b/ao;]
      [9] astore_1 v1
      [10] aload_1 v1
      [11] aload_0 v0
      [12] getfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [15] ifacmpeq +19 (target=34)
      [18] aload_1 v1
      [19] invokeinterface #21
        + InterfaceMethodref [a/a/a/b/ao.i ()La/a/a/b/ao;]
      [24] astore_2 v2
      [25] aload_1 v1
      [26] invokestatic #17
        + Methodref [a/a/a/b/n.c (La/a/a/b/ao;)V]
      [29] aload_2 v2
      [30] astore_1 v1
      [31] goto -21 (target=10)
      [34] aload_0 v0
      [35] getfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [38] aload_0 v0
      [39] getfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [42] invokeinterface #19
        + InterfaceMethodref [a/a/a/b/ao.c (La/a/a/b/ao;)V]
      [47] aload_0 v0
      [48] getfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [51] aload_0 v0
      [52] getfield #9
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [55] invokeinterface #20
        + InterfaceMethodref [a/a/a/b/ao.d (La/a/a/b/ao;)V]
      [60] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [10] Var: ...[a:a/a/a/b/ao], Stack: (empty)
        - [34] Var: ..., Stack: (empty)
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 4):
      [0] new #5
        + Class [a/a/a/b/bo]
      [3] dup
      [4] aload_0 v0
      [5] aload_0 v0
      [6] invokevirtual #10
        + Methodref [a/a/a/b/bm.a ()La/a/a/b/ao;]
      [9] invokespecial #15
        + Methodref [a/a/a/b/bo.<init> (La/a/a/b/bm;La/a/a/b/ao;)V]
      [12] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       peek()Ljava/lang/Object;
    Access flags: 0x1001
      = public synthetic java.lang.Object peek()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #10
        + Methodref [a/a/a/b/bm.a ()La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       poll()Ljava/lang/Object;
    Access flags: 0x1001
      = public synthetic java.lang.Object poll()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #12
        + Methodref [a/a/a/b/bm.b ()La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       offer(Ljava/lang/Object;)Z
    Access flags: 0x1001
      = public synthetic boolean offer(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #2
        + Class [a/a/a/b/ao]
      [5] invokevirtual #11
        + Methodref [a/a/a/b/bm.a (La/a/a/b/ao;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bn
  Superclass:    a/a/a/b/r
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.b.bn extends a.a.a.b.r

Interfaces (count = 0):

Constant Pool (count = 32):
  + Class [a/a/a/b/bn]
  + Class [a/a/a/b/r]
  + Long [9223372036854775807]
  + Fieldref [a/a/a/b/bn.a La/a/a/b/ao;]
  + Fieldref [a/a/a/b/bn.b La/a/a/b/ao;]
  + Fieldref [a/a/a/b/bn.c La/a/a/b/bm;]
  + Methodref [a/a/a/b/r.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a La/a/a/b/ao;]
  + NameAndType [b La/a/a/b/ao;]
  + NameAndType [c La/a/a/b/bm;]
  + Utf8 [()J]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [()V]
  + Utf8 [(J)V]
  + Utf8 [(La/a/a/b/ao;)V]
  + Utf8 [(La/a/a/b/bm;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [La/a/a/b/bm;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bn]
  + Utf8 [a/a/a/b/r]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [h]
  + Utf8 [i]
  + Utf8 [j]

Fields (count = 3):
  + Field:        a La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao a
  + Field:        b La/a/a/b/ao;
    Access flags: 0x0
      = a.a.a.b.ao b
  + Field:        c La/a/a/b/bm;
    Access flags: 0x1010
      = final synthetic a.a.a.b.bm c

Methods (count = 7):
  - Method:       <init>(La/a/a/b/bm;)V
    Access flags: 0x0
      = bn(a.a.a.b.bm)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #7
        + Fieldref [a/a/a/b/bn.c La/a/a/b/bm;]
      [5] aload_0 v0
      [6] invokespecial #8
        + Methodref [a/a/a/b/r.<init> ()V]
      [9] aload_0 v0
      [10] aload_0 v0
      [11] putfield #5
        + Fieldref [a/a/a/b/bn.a La/a/a/b/ao;]
      [14] aload_0 v0
      [15] aload_0 v0
      [16] putfield #6
        + Fieldref [a/a/a/b/bn.b La/a/a/b/ao;]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       h()J
    Access flags: 0x1
      = public long h()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 2):
      [0] ldc2_w #3
        + Long [9223372036854775807]
      [3] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(J)V
    Access flags: 0x1
      = public void b(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 3, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       i()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao i()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/b/bn.a La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void c(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #5
        + Fieldref [a/a/a/b/bn.a La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       j()La/a/a/b/ao;
    Access flags: 0x1
      = public a.a.a.b.ao j()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/b/bn.b La/a/a/b/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d(La/a/a/b/ao;)V
    Access flags: 0x1
      = public void d(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/b/bn.b La/a/a/b/ao;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bo
  Superclass:    a/a/a/c/v
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.b.bo extends a.a.a.c.v

Interfaces (count = 0):

Constant Pool (count = 31):
  + Class [a/a/a/b/ao]
  + Class [a/a/a/b/bm]
  + Class [a/a/a/b/bo]
  + Class [a/a/a/c/v]
  + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
  + Fieldref [a/a/a/b/bo.a La/a/a/b/bm;]
  + Methodref [a/a/a/b/bo.a (La/a/a/b/ao;)La/a/a/b/ao;]
  + Methodref [a/a/a/c/v.<init> (Ljava/lang/Object;)V]
  + InterfaceMethodref [a/a/a/b/ao.i ()La/a/a/b/ao;]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [a (La/a/a/b/ao;)La/a/a/b/ao;]
  + NameAndType [a La/a/a/b/ao;]
  + NameAndType [a La/a/a/b/bm;]
  + NameAndType [i ()La/a/a/b/ao;]
  + Utf8 [()La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/ao;)La/a/a/b/ao;]
  + Utf8 [(La/a/a/b/bm;La/a/a/b/ao;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/ao;]
  + Utf8 [La/a/a/b/bm;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ao]
  + Utf8 [a/a/a/b/bm]
  + Utf8 [a/a/a/b/bo]
  + Utf8 [a/a/a/c/v]
  + Utf8 [i]

Fields (count = 1):
  + Field:        a La/a/a/b/bm;
    Access flags: 0x1010
      = final synthetic a.a.a.b.bm a

Methods (count = 3):
  - Method:       <init>(La/a/a/b/bm;La/a/a/b/ao;)V
    Access flags: 0x0
      = bo(a.a.a.b.bm,a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/b/bo.a La/a/a/b/bm;]
      [5] aload_0 v0
      [6] aload_2 v2
      [7] invokespecial #8
        + Methodref [a/a/a/c/v.<init> (Ljava/lang/Object;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/b/ao;)La/a/a/b/ao;
    Access flags: 0x4
      = protected a.a.a.b.ao a(a.a.a.b.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] invokeinterface #9
        + InterfaceMethodref [a/a/a/b/ao.i ()La/a/a/b/ao;]
      [6] astore_2 v2
      [7] aload_2 v2
      [8] aload_0 v0
      [9] getfield #6
        + Fieldref [a/a/a/b/bo.a La/a/a/b/bm;]
      [12] getfield #5
        + Fieldref [a/a/a/b/bm.a La/a/a/b/ao;]
      [15] ifacmpne +7 (target=22)
      [18] aconst_null
      [19] goto +4 (target=23)
      [22] aload_2 v2
      [23] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [22] Var: ...[a:a/a/a/b/ao], Stack: (empty)
        - [23] Var: ..., Stack: [a:a/a/a/b/ao]
  + Method:       a(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1044
      = protected bridge synthetic java.lang.Object a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #1
        + Class [a/a/a/b/ao]
      [5] invokevirtual #7
        + Methodref [a/a/a/b/bo.a (La/a/a/b/ao;)La/a/a/b/ao;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bp
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.bp extends java.lang.Object

Interfaces (count = 1):
  + Class [java/util/Map$Entry]

Constant Pool (count = 65):
  + String [=]
  + Class [a/a/a/b/bp]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/UnsupportedOperationException]
  + Class [java/util/Map$Entry]
  + Fieldref [a/a/a/b/bp.a Ljava/lang/Object;]
  + Fieldref [a/a/a/b/bp.b Ljava/lang/Object;]
  + Fieldref [a/a/a/b/bp.c La/a/a/b/n;]
  + Methodref [a/a/a/b/bp.getKey ()Ljava/lang/Object;]
  + Methodref [a/a/a/b/bp.getValue ()Ljava/lang/Object;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [a Ljava/lang/Object;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b Ljava/lang/Object;]
  + NameAndType [c La/a/a/b/n;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [hashCode ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/b/n;Ljava/lang/Object;Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [<init>]
  + Utf8 [=]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/n;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bp]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [equals]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [hashCode]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/UnsupportedOperationException]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [setValue]
  + Utf8 [toString]

Fields (count = 3):
  + Field:        a Ljava/lang/Object;
    Access flags: 0x10
      = final java.lang.Object a
  + Field:        b Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object b
  + Field:        c La/a/a/b/n;
    Access flags: 0x1010
      = final synthetic a.a.a.b.n c

Methods (count = 7):
  - Method:       <init>(La/a/a/b/n;Ljava/lang/Object;Ljava/lang/Object;)V
    Access flags: 0x0
      = bp(a.a.a.b.n,java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #9
        + Fieldref [a/a/a/b/bp.c La/a/a/b/n;]
      [5] aload_0 v0
      [6] invokespecial #12
        + Methodref [java/lang/Object.<init> ()V]
      [9] aload_0 v0
      [10] aload_2 v2
      [11] putfield #7
        + Fieldref [a/a/a/b/bp.a Ljava/lang/Object;]
      [14] aload_0 v0
      [15] aload_3 v3
      [16] putfield #8
        + Fieldref [a/a/a/b/bp.b Ljava/lang/Object;]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getKey()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object getKey()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/b/bp.a Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getValue()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object getValue()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/b/bp.b Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 52, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] instanceof #6
        + Class [java/util/Map$Entry]
      [4] ifeq +46 (target=50)
      [7] aload_1 v1
      [8] checkcast #6
        + Class [java/util/Map$Entry]
      [11] astore_2 v2
      [12] aload_0 v0
      [13] getfield #7
        + Fieldref [a/a/a/b/bp.a Ljava/lang/Object;]
      [16] aload_2 v2
      [17] invokeinterface #20
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [22] invokevirtual #13
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [25] ifeq +23 (target=48)
      [28] aload_0 v0
      [29] getfield #8
        + Fieldref [a/a/a/b/bp.b Ljava/lang/Object;]
      [32] aload_2 v2
      [33] invokeinterface #21
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [38] invokevirtual #13
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [41] ifeq +7 (target=48)
      [44] iconst_1
      [45] goto +4 (target=49)
      [48] iconst_0
      [49] ireturn
      [50] iconst_0
      [51] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [48] Var: ...[a:java/util/Map$Entry], Stack: (empty)
        - [49] Var: ..., Stack: [i]
        - [50] Var: -1, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/b/bp.a Ljava/lang/Object;]
      [4] invokevirtual #14
        + Methodref [java/lang/Object.hashCode ()I]
      [7] aload_0 v0
      [8] getfield #8
        + Fieldref [a/a/a/b/bp.b Ljava/lang/Object;]
      [11] invokevirtual #14
        + Methodref [java/lang/Object.hashCode ()I]
      [14] ixor
      [15] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       setValue(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object setValue(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #5
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #19
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 30, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/StringBuilder]
      [3] dup
      [4] invokespecial #15
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [7] aload_0 v0
      [8] invokevirtual #10
        + Methodref [a/a/a/b/bp.getKey ()Ljava/lang/Object;]
      [11] invokevirtual #16
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [14] ldc #1
        + String [=]
      [16] invokevirtual #17
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [19] aload_0 v0
      [20] invokevirtual #11
        + Methodref [a/a/a/b/bp.getValue ()Ljava/lang/Object;]
      [23] invokevirtual #16
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [26] invokevirtual #18
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [29] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bq
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x600
    = interface a.a.a.b.bq extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 8):
  + Class [a/a/a/b/bq]
  + Class [java/lang/Object]
  + Utf8 [()V]
  + Utf8 [(J)V]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bq]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 2):
  + Method:       a()V
    Access flags: 0x401
      = public abstract void a()
  + Method:       a(J)V
    Access flags: 0x401
      = public abstract void a(long)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/br
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.br extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 34):
  + Class [a/a/a/a/ac]
  + Class [a/a/a/b/bq]
  + Class [a/a/a/b/br]
  + Class [a/a/a/b/bs]
  + Class [a/a/a/b/bt]
  + Class [a/a/a/b/bv]
  + Class [java/lang/Object]
  + Class [java/lang/Throwable]
  + Fieldref [a/a/a/b/br.a La/a/a/a/ac;]
  + Methodref [a/a/a/b/bs.<init> ()V]
  + Methodref [a/a/a/b/bt.<init> ()V]
  + Methodref [a/a/a/b/bv.<init> ()V]
  + InterfaceMethodref [a/a/a/a/ac.a ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [a ()Ljava/lang/Object;]
  + NameAndType [a La/a/a/a/ac;]
  + Utf8 [()La/a/a/b/bq;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/ac;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/ac]
  + Utf8 [a/a/a/b/bq]
  + Utf8 [a/a/a/b/br]
  + Utf8 [a/a/a/b/bs]
  + Utf8 [a/a/a/b/bt]
  + Utf8 [a/a/a/b/bv]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/Throwable]

Fields (count = 1):
  + Field:        a La/a/a/a/ac;
    Access flags: 0x1a
      = private static final a.a.a.a.ac a

Methods (count = 2):
  + Method:       a()La/a/a/b/bq;
    Access flags: 0x9
      = public static a.a.a.b.bq a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 0, stack = 1):
      [0] getstatic #9
        + Fieldref [a/a/a/b/br.a La/a/a/a/ac;]
      [3] invokeinterface #13
        + InterfaceMethodref [a/a/a/a/ac.a ()Ljava/lang/Object;]
      [8] checkcast #2
        + Class [a/a/a/b/bq]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 33, locals = 2, stack = 2):
      [0] new #6
        + Class [a/a/a/b/bv]
      [3] dup
      [4] invokespecial #12
        + Methodref [a/a/a/b/bv.<init> ()V]
      [7] pop
      [8] new #4
        + Class [a/a/a/b/bs]
      [11] dup
      [12] invokespecial #10
        + Methodref [a/a/a/b/bs.<init> ()V]
      [15] astore_0 v0
      [16] goto +12 (target=28)
      [19] astore_1 v1
      [20] new #5
        + Class [a/a/a/b/bt]
      [23] dup
      [24] invokespecial #11
        + Methodref [a/a/a/b/bt.<init> ()V]
      [27] astore_0 v0
      [28] aload_0 v0
      [29] putstatic #9
        + Fieldref [a/a/a/b/br.a La/a/a/a/ac;]
      [32] return
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 16: 19):
      + Class [java/lang/Throwable]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [19] Var: ..., Stack: [a:java/lang/Throwable]
        - [28] Var: ...[a:a/a/a/a/ac], Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bs
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.bs extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/a/ac]

Constant Pool (count = 21):
  + Class [a/a/a/a/ac]
  + Class [a/a/a/b/bs]
  + Class [a/a/a/b/bv]
  + Class [java/lang/Object]
  + Methodref [a/a/a/b/bs.b ()La/a/a/b/bq;]
  + Methodref [a/a/a/b/bv.<init> ()V]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [b ()La/a/a/b/bq;]
  + Utf8 [()La/a/a/b/bq;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/a/ac]
  + Utf8 [a/a/a/b/bs]
  + Utf8 [a/a/a/b/bv]
  + Utf8 [b]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x0
      = bs()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #7
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/b/bq;
    Access flags: 0x1
      = public a.a.a.b.bq b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #3
        + Class [a/a/a/b/bv]
      [3] dup
      [4] invokespecial #6
        + Methodref [a/a/a/b/bv.<init> ()V]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/lang/Object;
    Access flags: 0x1001
      = public synthetic java.lang.Object a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #5
        + Methodref [a/a/a/b/bs.b ()La/a/a/b/bq;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bt
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.bt extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/a/ac]

Constant Pool (count = 23):
  + Class [a/a/a/a/ac]
  + Class [a/a/a/b/bt]
  + Class [a/a/a/b/bu]
  + Class [java/lang/Object]
  + Methodref [a/a/a/b/bt.b ()La/a/a/b/bq;]
  + Methodref [a/a/a/b/bu.<init> (La/a/a/b/bs;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/b/bs;)V]
  + NameAndType [b ()La/a/a/b/bq;]
  + Utf8 [()La/a/a/b/bq;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/b/bs;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/a/ac]
  + Utf8 [a/a/a/b/bt]
  + Utf8 [a/a/a/b/bu]
  + Utf8 [b]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x0
      = bt()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #7
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/b/bq;
    Access flags: 0x1
      = public a.a.a.b.bq b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #3
        + Class [a/a/a/b/bu]
      [3] dup
      [4] aconst_null
      [5] invokespecial #6
        + Methodref [a/a/a/b/bu.<init> (La/a/a/b/bs;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/lang/Object;
    Access flags: 0x1001
      = public synthetic java.lang.Object a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #5
        + Methodref [a/a/a/b/bt.b ()La/a/a/b/bq;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bu
  Superclass:    java/util/concurrent/atomic/AtomicLong
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.bu extends java.util.concurrent.atomic.AtomicLong

Interfaces (count = 1):
  + Class [a/a/a/b/bq]

Constant Pool (count = 24):
  + Class [a/a/a/b/bq]
  + Class [a/a/a/b/bu]
  + Class [java/util/concurrent/atomic/AtomicLong]
  + Methodref [a/a/a/b/bu.<init> ()V]
  + Methodref [a/a/a/b/bu.getAndAdd (J)J]
  + Methodref [a/a/a/b/bu.getAndIncrement ()J]
  + Methodref [java/util/concurrent/atomic/AtomicLong.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [getAndAdd (J)J]
  + NameAndType [getAndIncrement ()J]
  + Utf8 [()J]
  + Utf8 [()V]
  + Utf8 [(J)J]
  + Utf8 [(J)V]
  + Utf8 [(La/a/a/b/bs;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bq]
  + Utf8 [a/a/a/b/bu]
  + Utf8 [getAndAdd]
  + Utf8 [getAndIncrement]
  + Utf8 [java/util/concurrent/atomic/AtomicLong]

Fields (count = 0):

Methods (count = 4):
  - Method:       <init>()V
    Access flags: 0x2
      = private bu()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #7
        + Methodref [java/util/concurrent/atomic/AtomicLong.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()V
    Access flags: 0x1
      = public void a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #6
        + Methodref [a/a/a/b/bu.getAndIncrement ()J]
      [4] pop2
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(J)V
    Access flags: 0x1
      = public void a(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] lload_1 v1
      [2] invokevirtual #5
        + Methodref [a/a/a/b/bu.getAndAdd (J)J]
      [5] pop2
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/b/bs;)V
    Access flags: 0x1000
      = synthetic bu(a.a.a.b.bs)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #4
        + Methodref [a/a/a/b/bu.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bv
  Superclass:    a/a/a/b/ce
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.bv extends a.a.a.b.ce

Interfaces (count = 2):
  + Class [a/a/a/b/bq]
  + Class [java/io/Serializable]

Constant Pool (count = 73):
  + Class [[La/a/a/b/cg;]
  + Class [a/a/a/b/bq]
  + Class [a/a/a/b/bv]
  + Class [a/a/a/b/ce]
  + Class [a/a/a/b/cg]
  + Class [a/a/a/b/ch]
  + Class [a/a/a/b/ci]
  + Class [java/io/Serializable]
  + Class [java/lang/Long]
  + Fieldref [a/a/a/b/bv.a La/a/a/b/ci;]
  + Fieldref [a/a/a/b/bv.c [La/a/a/b/cg;]
  + Fieldref [a/a/a/b/bv.d J]
  + Fieldref [a/a/a/b/cg.a J]
  + Fieldref [a/a/a/b/ch.b I]
  + Methodref [a/a/a/b/bv.a (J)V]
  + Methodref [a/a/a/b/bv.a (JLa/a/a/b/ch;Z)V]
  + Methodref [a/a/a/b/bv.b ()J]
  + Methodref [a/a/a/b/bv.b (JJ)Z]
  + Methodref [a/a/a/b/ce.<init> ()V]
  + Methodref [a/a/a/b/cg.a (JJ)Z]
  + Methodref [a/a/a/b/ci.get ()Ljava/lang/Object;]
  + Methodref [java/lang/Long.toString (J)Ljava/lang/String;]
  + NameAndType [<init> ()V]
  + NameAndType [a (J)V]
  + NameAndType [a (JJ)Z]
  + NameAndType [a (JLa/a/a/b/ch;Z)V]
  + NameAndType [a J]
  + NameAndType [a La/a/a/b/ci;]
  + NameAndType [b ()J]
  + NameAndType [b (JJ)Z]
  + NameAndType [b I]
  + NameAndType [c [La/a/a/b/cg;]
  + NameAndType [d J]
  + NameAndType [get ()Ljava/lang/Object;]
  + NameAndType [toString (J)Ljava/lang/String;]
  + Utf8 [()D]
  + Utf8 [()F]
  + Utf8 [()I]
  + Utf8 [()J]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(J)Ljava/lang/String;]
  + Utf8 [(J)V]
  + Utf8 [(JJ)J]
  + Utf8 [(JJ)Z]
  + Utf8 [(JLa/a/a/b/ch;Z)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [J]
  + Utf8 [La/a/a/b/ci;]
  + Utf8 [StackMapTable]
  + Utf8 [[La/a/a/b/cg;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bq]
  + Utf8 [a/a/a/b/bv]
  + Utf8 [a/a/a/b/ce]
  + Utf8 [a/a/a/b/cg]
  + Utf8 [a/a/a/b/ch]
  + Utf8 [a/a/a/b/ci]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [doubleValue]
  + Utf8 [floatValue]
  + Utf8 [get]
  + Utf8 [intValue]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Long]
  + Utf8 [longValue]
  + Utf8 [toString]

Fields (count = 0):

Methods (count = 10):
  + Method:       a(JJ)J
    Access flags: 0x10
      = final long a(long,long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 5, stack = 4):
      [0] lload_1 v1
      [1] lload_3 v3
      [2] ladd
      [3] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>()V
    Access flags: 0x1
      = public bv()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #19
        + Methodref [a/a/a/b/ce.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(J)V
    Access flags: 0x1
      = public void a(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 108, locals = 13, stack = 7):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/b/bv.c [La/a/a/b/cg;]
      [4] dup
      [5] astore_3 v3
      [6] ifnonnull +21 (target=27)
      [9] aload_0 v0
      [10] aload_0 v0
      [11] getfield #12
        + Fieldref [a/a/a/b/bv.d J]
      [14] dup2
      [15] lstore v4
      [17] lload v4
      [19] lload_1 v1
      [20] ladd
      [21] invokevirtual #18
        + Methodref [a/a/a/b/bv.b (JJ)Z]
      [24] ifne +83 (target=107)
      [27] iconst_1
      [28] istore v11
      [30] getstatic #10
        + Fieldref [a/a/a/b/bv.a La/a/a/b/ci;]
      [33] invokevirtual #21
        + Methodref [a/a/a/b/ci.get ()Ljava/lang/Object;]
      [36] checkcast #6
        + Class [a/a/a/b/ch]
      [39] dup
      [40] astore v8
      [42] getfield #14
        + Fieldref [a/a/a/b/ch.b I]
      [45] istore v12
      [47] aload_3 v3
      [48] ifnull +50 (target=98)
      [51] aload_3 v3
      [52] arraylength
      [53] dup
      [54] istore v10
      [56] iconst_1
      [57] ificmplt +41 (target=98)
      [60] aload_3 v3
      [61] iload v10
      [63] iconst_1
      [64] isub
      [65] iload v12
      [67] iand
      [68] aaload
      [69] dup
      [70] astore v9
      [72] ifnull +26 (target=98)
      [75] aload v9
      [77] aload v9
      [79] getfield #13
        + Fieldref [a/a/a/b/cg.a J]
      [82] dup2
      [83] lstore v6
      [85] lload v6
      [87] lload_1 v1
      [88] ladd
      [89] invokevirtual #20
        + Methodref [a/a/a/b/cg.a (JJ)Z]
      [92] dup
      [93] istore v11
      [95] ifne +12 (target=107)
      [98] aload_0 v0
      [99] lload_1 v1
      [100] aload v8
      [102] iload v11
      [104] invokevirtual #16
        + Methodref [a/a/a/b/bv.a (JLa/a/a/b/ch;Z)V]
      [107] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [27] Var: ...[a:[La/a/a/b/cg;], Stack: (empty)
        - [98] Var: [a:a/a/a/b/bv][l][a:[La/a/a/b/cg;][T][T][T][T][a:a/a/a/b/ch][T][T][i][i], Stack: 
        - [107] Var: [a:a/a/a/b/bv][l][a:[La/a/a/b/cg;], Stack: 
  + Method:       a()V
    Access flags: 0x1
      = public void a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] lconst_1
      [2] invokevirtual #15
        + Methodref [a/a/a/b/bv.a (J)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()J
    Access flags: 0x1
      = public long b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 55, locals = 7, stack = 4):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/b/bv.d J]
      [4] lstore_1 v1
      [5] aload_0 v0
      [6] getfield #11
        + Fieldref [a/a/a/b/bv.c [La/a/a/b/cg;]
      [9] astore_3 v3
      [10] aload_3 v3
      [11] ifnull +42 (target=53)
      [14] aload_3 v3
      [15] arraylength
      [16] istore v4
      [18] iconst_0
      [19] istore v5
      [21] iload v5
      [23] iload v4
      [25] ificmpge +28 (target=53)
      [28] aload_3 v3
      [29] iload v5
      [31] aaload
      [32] astore v6
      [34] aload v6
      [36] ifnull +11 (target=47)
      [39] lload_1 v1
      [40] aload v6
      [42] getfield #13
        + Fieldref [a/a/a/b/cg.a J]
      [45] ladd
      [46] lstore_1 v1
      [47] iinc v5, 1
      [50] goto -29 (target=21)
      [53] lload_1 v1
      [54] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [21] Var: [a:a/a/a/b/bv][l][a:[La/a/a/b/cg;][i][i], Stack: 
        - [47] Var: ..., Stack: (empty)
        - [53] Var: -2, Stack: (empty)
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #17
        + Methodref [a/a/a/b/bv.b ()J]
      [4] invokestatic #22
        + Methodref [java/lang/Long.toString (J)Ljava/lang/String;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       longValue()J
    Access flags: 0x1
      = public long longValue()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #17
        + Methodref [a/a/a/b/bv.b ()J]
      [4] lreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       intValue()I
    Access flags: 0x1
      = public int intValue()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #17
        + Methodref [a/a/a/b/bv.b ()J]
      [4] l2i
      [5] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       floatValue()F
    Access flags: 0x1
      = public float floatValue()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #17
        + Methodref [a/a/a/b/bv.b ()J]
      [4] l2f
      [5] freturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       doubleValue()D
    Access flags: 0x1
      = public double doubleValue()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #17
        + Methodref [a/a/a/b/bv.b ()J]
      [4] l2d
      [5] dreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bw
  Superclass:    java/lang/Enum
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4421
    = public enum enum a.a.a.b.bw extends java.lang.Enum

Interfaces (count = 0):

Constant Pool (count = 72):
  + String [COLLECTED]
  + String [EXPIRED]
  + String [EXPLICIT]
  + String [REPLACED]
  + String [SIZE]
  + Class [[La/a/a/b/bw;]
  + Class [a/a/a/b/bw]
  + Class [a/a/a/b/bx]
  + Class [a/a/a/b/by]
  + Class [a/a/a/b/bz]
  + Class [a/a/a/b/ca]
  + Class [a/a/a/b/cb]
  + Class [java/lang/Enum]
  + Fieldref [a/a/a/b/bw.a La/a/a/b/bw;]
  + Fieldref [a/a/a/b/bw.b La/a/a/b/bw;]
  + Fieldref [a/a/a/b/bw.c La/a/a/b/bw;]
  + Fieldref [a/a/a/b/bw.d La/a/a/b/bw;]
  + Fieldref [a/a/a/b/bw.e La/a/a/b/bw;]
  + Fieldref [a/a/a/b/bw.f [La/a/a/b/bw;]
  + Methodref [[La/a/a/b/bw;.clone ()Ljava/lang/Object;]
  + Methodref [a/a/a/b/bw.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/b/bx.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/b/by.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/b/bz.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/b/ca.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/b/cb.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + NameAndType [<init> (Ljava/lang/String;I)V]
  + NameAndType [a La/a/a/b/bw;]
  + NameAndType [b La/a/a/b/bw;]
  + NameAndType [c La/a/a/b/bw;]
  + NameAndType [clone ()Ljava/lang/Object;]
  + NameAndType [d La/a/a/b/bw;]
  + NameAndType [e La/a/a/b/bw;]
  + NameAndType [f [La/a/a/b/bw;]
  + NameAndType [valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [()[La/a/a/b/bw;]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [(Ljava/lang/String;)La/a/a/b/bw;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/bx;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [COLLECTED]
  + Utf8 [Code]
  + Utf8 [EXPIRED]
  + Utf8 [EXPLICIT]
  + Utf8 [La/a/a/b/bw;]
  + Utf8 [REPLACED]
  + Utf8 [SIZE]
  + Utf8 [[La/a/a/b/bw;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bw]
  + Utf8 [a/a/a/b/bx]
  + Utf8 [a/a/a/b/by]
  + Utf8 [a/a/a/b/bz]
  + Utf8 [a/a/a/b/ca]
  + Utf8 [a/a/a/b/cb]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clone]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [java/lang/Enum]
  + Utf8 [valueOf]
  + Utf8 [values]

Fields (count = 6):
  + Field:        a La/a/a/b/bw;
    Access flags: 0x4019
      = public static final a.a.a.b.bw a
  + Field:        b La/a/a/b/bw;
    Access flags: 0x4019
      = public static final a.a.a.b.bw b
  + Field:        c La/a/a/b/bw;
    Access flags: 0x4019
      = public static final a.a.a.b.bw c
  + Field:        d La/a/a/b/bw;
    Access flags: 0x4019
      = public static final a.a.a.b.bw d
  + Field:        e La/a/a/b/bw;
    Access flags: 0x4019
      = public static final a.a.a.b.bw e
  + Field:        f [La/a/a/b/bw;
    Access flags: 0x101a
      = private static final synthetic a.a.a.b.bw[] f

Methods (count = 6):
  + Method:       values()[La/a/a/b/bw;
    Access flags: 0x9
      = public static a.a.a.b.bw[] values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 0, stack = 1):
      [0] getstatic #19
        + Fieldref [a/a/a/b/bw.f [La/a/a/b/bw;]
      [3] invokevirtual #20
        + Methodref [[La/a/a/b/bw;.clone ()Ljava/lang/Object;]
      [6] checkcast #6
        + Class [[La/a/a/b/bw;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       valueOf(Ljava/lang/String;)La/a/a/b/bw;
    Access flags: 0x9
      = public static a.a.a.b.bw valueOf(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 2):
      [0] ldc #7
        + Class [a/a/a/b/bw]
      [2] aload_0 v0
      [3] invokestatic #28
        + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
      [6] checkcast #7
        + Class [a/a/a/b/bw]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x2
      = private bw(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #27
        + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Z
    Access flags: 0x400
      = abstract boolean a()
  - Method:       <init>(Ljava/lang/String;ILa/a/a/b/bx;)V
    Access flags: 0x1000
      = synthetic bw(java.lang.String,int,a.a.a.b.bx)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #21
        + Methodref [a/a/a/b/bw.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 103, locals = 0, stack = 4):
      [0] new #8
        + Class [a/a/a/b/bx]
      [3] dup
      [4] ldc #3
        + String [EXPLICIT]
      [6] iconst_0
      [7] invokespecial #22
        + Methodref [a/a/a/b/bx.<init> (Ljava/lang/String;I)V]
      [10] putstatic #14
        + Fieldref [a/a/a/b/bw.a La/a/a/b/bw;]
      [13] new #9
        + Class [a/a/a/b/by]
      [16] dup
      [17] ldc #4
        + String [REPLACED]
      [19] iconst_1
      [20] invokespecial #23
        + Methodref [a/a/a/b/by.<init> (Ljava/lang/String;I)V]
      [23] putstatic #15
        + Fieldref [a/a/a/b/bw.b La/a/a/b/bw;]
      [26] new #10
        + Class [a/a/a/b/bz]
      [29] dup
      [30] ldc #1
        + String [COLLECTED]
      [32] iconst_2
      [33] invokespecial #24
        + Methodref [a/a/a/b/bz.<init> (Ljava/lang/String;I)V]
      [36] putstatic #16
        + Fieldref [a/a/a/b/bw.c La/a/a/b/bw;]
      [39] new #11
        + Class [a/a/a/b/ca]
      [42] dup
      [43] ldc #2
        + String [EXPIRED]
      [45] iconst_3
      [46] invokespecial #25
        + Methodref [a/a/a/b/ca.<init> (Ljava/lang/String;I)V]
      [49] putstatic #17
        + Fieldref [a/a/a/b/bw.d La/a/a/b/bw;]
      [52] new #12
        + Class [a/a/a/b/cb]
      [55] dup
      [56] ldc #5
        + String [SIZE]
      [58] iconst_4
      [59] invokespecial #26
        + Methodref [a/a/a/b/cb.<init> (Ljava/lang/String;I)V]
      [62] putstatic #18
        + Fieldref [a/a/a/b/bw.e La/a/a/b/bw;]
      [65] iconst_5
      [66] anewarray #7
        + Class [a/a/a/b/bw]
      [69] dup
      [70] iconst_0
      [71] getstatic #14
        + Fieldref [a/a/a/b/bw.a La/a/a/b/bw;]
      [74] aastore
      [75] dup
      [76] iconst_1
      [77] getstatic #15
        + Fieldref [a/a/a/b/bw.b La/a/a/b/bw;]
      [80] aastore
      [81] dup
      [82] iconst_2
      [83] getstatic #16
        + Fieldref [a/a/a/b/bw.c La/a/a/b/bw;]
      [86] aastore
      [87] dup
      [88] iconst_3
      [89] getstatic #17
        + Fieldref [a/a/a/b/bw.d La/a/a/b/bw;]
      [92] aastore
      [93] dup
      [94] iconst_4
      [95] getstatic #18
        + Fieldref [a/a/a/b/bw.e La/a/a/b/bw;]
      [98] aastore
      [99] putstatic #19
        + Fieldref [a/a/a/b/bw.f [La/a/a/b/bw;]
      [102] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bx
  Superclass:    a/a/a/b/bw
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.bx extends a.a.a.b.bw

Interfaces (count = 0):

Constant Pool (count = 13):
  + Class [a/a/a/b/bw]
  + Class [a/a/a/b/bx]
  + Methodref [a/a/a/b/bw.<init> (Ljava/lang/String;ILa/a/a/b/bx;)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/b/bx;)V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/bx;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bw]
  + Utf8 [a/a/a/b/bx]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = bx(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #3
        + Methodref [a/a/a/b/bw.<init> (Ljava/lang/String;ILa/a/a/b/bx;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Z
    Access flags: 0x0
      = boolean a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/by
  Superclass:    a/a/a/b/bw
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.by extends a.a.a.b.bw

Interfaces (count = 0):

Constant Pool (count = 13):
  + Class [a/a/a/b/bw]
  + Class [a/a/a/b/by]
  + Methodref [a/a/a/b/bw.<init> (Ljava/lang/String;ILa/a/a/b/bx;)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/b/bx;)V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/bx;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bw]
  + Utf8 [a/a/a/b/by]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = by(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #3
        + Methodref [a/a/a/b/bw.<init> (Ljava/lang/String;ILa/a/a/b/bx;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Z
    Access flags: 0x0
      = boolean a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/bz
  Superclass:    a/a/a/b/bw
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.bz extends a.a.a.b.bw

Interfaces (count = 0):

Constant Pool (count = 13):
  + Class [a/a/a/b/bw]
  + Class [a/a/a/b/bz]
  + Methodref [a/a/a/b/bw.<init> (Ljava/lang/String;ILa/a/a/b/bx;)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/b/bx;)V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/bx;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bw]
  + Utf8 [a/a/a/b/bz]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = bz(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #3
        + Methodref [a/a/a/b/bw.<init> (Ljava/lang/String;ILa/a/a/b/bx;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Z
    Access flags: 0x0
      = boolean a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ca
  Superclass:    a/a/a/b/bw
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.ca extends a.a.a.b.bw

Interfaces (count = 0):

Constant Pool (count = 13):
  + Class [a/a/a/b/bw]
  + Class [a/a/a/b/ca]
  + Methodref [a/a/a/b/bw.<init> (Ljava/lang/String;ILa/a/a/b/bx;)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/b/bx;)V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/bx;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bw]
  + Utf8 [a/a/a/b/ca]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = ca(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #3
        + Methodref [a/a/a/b/bw.<init> (Ljava/lang/String;ILa/a/a/b/bx;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Z
    Access flags: 0x0
      = boolean a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/cb
  Superclass:    a/a/a/b/bw
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.b.cb extends a.a.a.b.bw

Interfaces (count = 0):

Constant Pool (count = 13):
  + Class [a/a/a/b/bw]
  + Class [a/a/a/b/cb]
  + Methodref [a/a/a/b/bw.<init> (Ljava/lang/String;ILa/a/a/b/bx;)V]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/b/bx;)V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/b/bx;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/b/bw]
  + Utf8 [a/a/a/b/cb]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = cb(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #3
        + Methodref [a/a/a/b/bw.<init> (Ljava/lang/String;ILa/a/a/b/bx;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Z
    Access flags: 0x0
      = boolean a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/cc
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface a.a.a.b.cc extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 7):
  + Class [a/a/a/b/cc]
  + Class [java/lang/Object]
  + Utf8 [(La/a/a/b/cd;)V]
  + Utf8 [a]
  + Utf8 [a/a/a/b/cc]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 1):
  + Method:       a(La/a/a/b/cd;)V
    Access flags: 0x401
      = public abstract void a(a.a.a.b.cd)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/cd
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.b.cd extends java.lang.Object

Interfaces (count = 1):
  + Class [java/util/Map$Entry]

Constant Pool (count = 75):
  + String [=]
  + Class [a/a/a/a/i]
  + Class [a/a/a/a/o]
  + Class [a/a/a/b/bw]
  + Class [a/a/a/b/cd]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/UnsupportedOperationException]
  + Class [java/util/Map$Entry]
  + Fieldref [a/a/a/b/cd.a Ljava/lang/Object;]
  + Fieldref [a/a/a/b/cd.b Ljava/lang/Object;]
  + Fieldref [a/a/a/b/cd.c La/a/a/b/bw;]
  + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/cd.getKey ()Ljava/lang/Object;]
  + Methodref [a/a/a/b/cd.getValue ()Ljava/lang/Object;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [a Ljava/lang/Object;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b Ljava/lang/Object;]
  + NameAndType [c La/a/a/b/bw;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [hashCode ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;La/a/a/b/bw;)V]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [<init>]
  + Utf8 [=]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/bw;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/b/bw]
  + Utf8 [a/a/a/b/cd]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [equals]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [hashCode]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/UnsupportedOperationException]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [setValue]
  + Utf8 [toString]

Fields (count = 3):
  + Field:        a Ljava/lang/Object;
    Access flags: 0x12
      = private final java.lang.Object a
    Class member attributes (count = 1):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Field:        b Ljava/lang/Object;
    Access flags: 0x12
      = private final java.lang.Object b
    Class member attributes (count = 1):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Field:        c La/a/a/b/bw;
    Access flags: 0x12
      = private final a.a.a.b.bw c

Methods (count = 7):
  - Method:       <init>(Ljava/lang/Object;Ljava/lang/Object;La/a/a/b/bw;)V
    Access flags: 0x0
      = cd(java.lang.Object,java.lang.Object,a.a.a.b.bw)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 26, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #17
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #10
        + Fieldref [a/a/a/b/cd.a Ljava/lang/Object;]
      [9] aload_0 v0
      [10] aload_2 v2
      [11] putfield #11
        + Fieldref [a/a/a/b/cd.b Ljava/lang/Object;]
      [14] aload_0 v0
      [15] aload_3 v3
      [16] invokestatic #14
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [19] checkcast #4
        + Class [a/a/a/b/bw]
      [22] putfield #12
        + Fieldref [a/a/a/b/cd.c La/a/a/b/bw;]
      [25] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       getKey()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object getKey()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/b/cd.a Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       getValue()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object getValue()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/b/cd.b Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       setValue(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object setValue(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #8
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #23
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 52, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] instanceof #9
        + Class [java/util/Map$Entry]
      [4] ifeq +46 (target=50)
      [7] aload_1 v1
      [8] checkcast #9
        + Class [java/util/Map$Entry]
      [11] astore_2 v2
      [12] aload_0 v0
      [13] invokevirtual #15
        + Methodref [a/a/a/b/cd.getKey ()Ljava/lang/Object;]
      [16] aload_2 v2
      [17] invokeinterface #24
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [22] invokestatic #13
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [25] ifeq +23 (target=48)
      [28] aload_0 v0
      [29] invokevirtual #16
        + Methodref [a/a/a/b/cd.getValue ()Ljava/lang/Object;]
      [32] aload_2 v2
      [33] invokeinterface #25
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [38] invokestatic #13
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [41] ifeq +7 (target=48)
      [44] iconst_1
      [45] goto +4 (target=49)
      [48] iconst_0
      [49] ireturn
      [50] iconst_0
      [51] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [48] Var: ...[a:java/util/Map$Entry], Stack: (empty)
        - [49] Var: ..., Stack: [i]
        - [50] Var: -1, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 36, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #15
        + Methodref [a/a/a/b/cd.getKey ()Ljava/lang/Object;]
      [4] astore_1 v1
      [5] aload_0 v0
      [6] invokevirtual #16
        + Methodref [a/a/a/b/cd.getValue ()Ljava/lang/Object;]
      [9] astore_2 v2
      [10] aload_1 v1
      [11] ifnonnull +7 (target=18)
      [14] iconst_0
      [15] goto +7 (target=22)
      [18] aload_1 v1
      [19] invokevirtual #18
        + Methodref [java/lang/Object.hashCode ()I]
      [22] aload_2 v2
      [23] ifnonnull +7 (target=30)
      [26] iconst_0
      [27] goto +7 (target=34)
      [30] aload_2 v2
      [31] invokevirtual #18
        + Methodref [java/lang/Object.hashCode ()I]
      [34] ixor
      [35] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [18] Var: ...[a:java/lang/Object][a:java/lang/Object], Stack: (empty)
        - [22] Var: ..., Stack: [i]
        - [30] Var: ..., Stack: [i]
        - [34] Var: [a:a/a/a/b/cd][a:java/lang/Object][a:java/lang/Object], Stack: [i][i]
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 30, locals = 1, stack = 2):
      [0] new #7
        + Class [java/lang/StringBuilder]
      [3] dup
      [4] invokespecial #19
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [7] aload_0 v0
      [8] invokevirtual #15
        + Methodref [a/a/a/b/cd.getKey ()Ljava/lang/Object;]
      [11] invokevirtual #20
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [14] ldc #1
        + String [=]
      [16] invokevirtual #21
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [19] aload_0 v0
      [20] invokevirtual #16
        + Methodref [a/a/a/b/cd.getValue ()Ljava/lang/Object;]
      [23] invokevirtual #20
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [26] invokevirtual #22
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [29] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ce
  Superclass:    java/lang/Number
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.b.ce extends java.lang.Number

Interfaces (count = 0):

Constant Pool (count = 140):
  + String [Could not initialize intrinsics]
  + String [base]
  + String [busy]
  + Class [[La/a/a/b/cg;]
  + Class [a/a/a/b/ce]
  + Class [a/a/a/b/cf]
  + Class [a/a/a/b/cg]
  + Class [a/a/a/b/ch]
  + Class [a/a/a/b/ci]
  + Class [java/lang/Class]
  + Class [java/lang/Error]
  + Class [java/lang/Exception]
  + Class [java/lang/Number]
  + Class [java/lang/Runtime]
  + Class [java/lang/RuntimeException]
  + Class [java/lang/SecurityException]
  + Class [java/lang/Throwable]
  + Class [java/security/AccessController]
  + Class [java/security/PrivilegedActionException]
  + Class [sun/misc/Unsafe]
  + Fieldref [a/a/a/b/ce.a La/a/a/b/ci;]
  + Fieldref [a/a/a/b/ce.b I]
  + Fieldref [a/a/a/b/ce.c [La/a/a/b/cg;]
  + Fieldref [a/a/a/b/ce.d J]
  + Fieldref [a/a/a/b/ce.e I]
  + Fieldref [a/a/a/b/ce.f Lsun/misc/Unsafe;]
  + Fieldref [a/a/a/b/ce.g J]
  + Fieldref [a/a/a/b/ce.h J]
  + Fieldref [a/a/a/b/cg.a J]
  + Fieldref [a/a/a/b/ch.b I]
  + Methodref [a/a/a/b/ce.a ()Lsun/misc/Unsafe;]
  + Methodref [a/a/a/b/ce.a (JJ)J]
  + Methodref [a/a/a/b/ce.b (JJ)Z]
  + Methodref [a/a/a/b/ce.c ()Z]
  + Methodref [a/a/a/b/cf.<init> ()V]
  + Methodref [a/a/a/b/cg.<init> (J)V]
  + Methodref [a/a/a/b/cg.a (JJ)Z]
  + Methodref [a/a/a/b/ci.<init> ()V]
  + Methodref [java/lang/Class.getDeclaredField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
  + Methodref [java/lang/Error.<init> (Ljava/lang/Throwable;)V]
  + Methodref [java/lang/Number.<init> ()V]
  + Methodref [java/lang/Runtime.availableProcessors ()I]
  + Methodref [java/lang/Runtime.getRuntime ()Ljava/lang/Runtime;]
  + Methodref [java/lang/RuntimeException.<init> (Ljava/lang/String;Ljava/lang/Throwable;)V]
  + Methodref [java/security/AccessController.doPrivileged (Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;]
  + Methodref [java/security/PrivilegedActionException.getCause ()Ljava/lang/Throwable;]
  + Methodref [sun/misc/Unsafe.compareAndSwapInt (Ljava/lang/Object;JII)Z]
  + Methodref [sun/misc/Unsafe.compareAndSwapLong (Ljava/lang/Object;JJJ)Z]
  + Methodref [sun/misc/Unsafe.getUnsafe ()Lsun/misc/Unsafe;]
  + Methodref [sun/misc/Unsafe.objectFieldOffset (Ljava/lang/reflect/Field;)J]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (J)V]
  + NameAndType [<init> (Ljava/lang/String;Ljava/lang/Throwable;)V]
  + NameAndType [<init> (Ljava/lang/Throwable;)V]
  + NameAndType [a ()Lsun/misc/Unsafe;]
  + NameAndType [a (JJ)J]
  + NameAndType [a (JJ)Z]
  + NameAndType [a J]
  + NameAndType [a La/a/a/b/ci;]
  + NameAndType [availableProcessors ()I]
  + NameAndType [b (JJ)Z]
  + NameAndType [b I]
  + NameAndType [c ()Z]
  + NameAndType [c [La/a/a/b/cg;]
  + NameAndType [compareAndSwapInt (Ljava/lang/Object;JII)Z]
  + NameAndType [compareAndSwapLong (Ljava/lang/Object;JJJ)Z]
  + NameAndType [d J]
  + NameAndType [doPrivileged (Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;]
  + NameAndType [e I]
  + NameAndType [f Lsun/misc/Unsafe;]
  + NameAndType [g J]
  + NameAndType [getCause ()Ljava/lang/Throwable;]
  + NameAndType [getDeclaredField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
  + NameAndType [getRuntime ()Ljava/lang/Runtime;]
  + NameAndType [getUnsafe ()Lsun/misc/Unsafe;]
  + NameAndType [h J]
  + NameAndType [objectFieldOffset (Ljava/lang/reflect/Field;)J]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Runtime;]
  + Utf8 [()Ljava/lang/Throwable;]
  + Utf8 [()Lsun/misc/Unsafe;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(J)V]
  + Utf8 [(JJ)J]
  + Utf8 [(JJ)Z]
  + Utf8 [(JLa/a/a/b/ch;Z)V]
  + Utf8 [(Ljava/lang/Object;JII)Z]
  + Utf8 [(Ljava/lang/Object;JJJ)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/reflect/Field;]
  + Utf8 [(Ljava/lang/String;Ljava/lang/Throwable;)V]
  + Utf8 [(Ljava/lang/Throwable;)V]
  + Utf8 [(Ljava/lang/reflect/Field;)J]
  + Utf8 [(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Could not initialize intrinsics]
  + Utf8 [I]
  + Utf8 [J]
  + Utf8 [La/a/a/b/ci;]
  + Utf8 [Lsun/misc/Unsafe;]
  + Utf8 [StackMapTable]
  + Utf8 [[La/a/a/b/cg;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ce]
  + Utf8 [a/a/a/b/cf]
  + Utf8 [a/a/a/b/cg]
  + Utf8 [a/a/a/b/ch]
  + Utf8 [a/a/a/b/ci]
  + Utf8 [availableProcessors]
  + Utf8 [b]
  + Utf8 [base]
  + Utf8 [busy]
  + Utf8 [c]
  + Utf8 [compareAndSwapInt]
  + Utf8 [compareAndSwapLong]
  + Utf8 [d]
  + Utf8 [doPrivileged]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [getCause]
  + Utf8 [getDeclaredField]
  + Utf8 [getRuntime]
  + Utf8 [getUnsafe]
  + Utf8 [h]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Error]
  + Utf8 [java/lang/Exception]
  + Utf8 [java/lang/Number]
  + Utf8 [java/lang/Runtime]
  + Utf8 [java/lang/RuntimeException]
  + Utf8 [java/lang/SecurityException]
  + Utf8 [java/lang/Throwable]
  + Utf8 [java/security/AccessController]
  + Utf8 [java/security/PrivilegedActionException]
  + Utf8 [objectFieldOffset]
  + Utf8 [sun/misc/Unsafe]

Fields (count = 8):
  + Field:        a La/a/a/b/ci;
    Access flags: 0x18
      = static final a.a.a.b.ci a
  + Field:        b I
    Access flags: 0x18
      = static final int b
  + Field:        c [La/a/a/b/cg;
    Access flags: 0xc0
      = volatile transient a.a.a.b.cg[] c
  + Field:        d J
    Access flags: 0xc0
      = volatile transient long d
  + Field:        e I
    Access flags: 0xc0
      = volatile transient int e
  + Field:        f Lsun/misc/Unsafe;
    Access flags: 0x1a
      = private static final sun.misc.Unsafe f
  + Field:        g J
    Access flags: 0x1a
      = private static final long g
  + Field:        h J
    Access flags: 0x1a
      = private static final long h

Methods (count = 8):
  - Method:       <init>()V
    Access flags: 0x0
      = ce()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #41
        + Methodref [java/lang/Number.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(JJ)Z
    Access flags: 0x10
      = final boolean b(long,long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 5, stack = 8):
      [0] getstatic #26
        + Fieldref [a/a/a/b/ce.f Lsun/misc/Unsafe;]
      [3] aload_0 v0
      [4] getstatic #27
        + Fieldref [a/a/a/b/ce.g J]
      [7] lload_1 v1
      [8] lload_3 v3
      [9] invokevirtual #48
        + Methodref [sun/misc/Unsafe.compareAndSwapLong (Ljava/lang/Object;JJJ)Z]
      [12] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()Z
    Access flags: 0x10
      = final boolean c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 6):
      [0] getstatic #26
        + Fieldref [a/a/a/b/ce.f Lsun/misc/Unsafe;]
      [3] aload_0 v0
      [4] getstatic #28
        + Fieldref [a/a/a/b/ce.h J]
      [7] iconst_0
      [8] iconst_1
      [9] invokevirtual #47
        + Methodref [sun/misc/Unsafe.compareAndSwapInt (Ljava/lang/Object;JII)Z]
      [12] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(JJ)J
    Access flags: 0x400
      = abstract long a(long,long)
  + Method:       a(JLa/a/a/b/ch;Z)V
    Access flags: 0x10
      = final void a(long,a.a.a.b.ch,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 474, locals = 20, stack = 8):
      [0] aload_3 v3
      [1] getfield #30
        + Fieldref [a/a/a/b/ch.b I]
      [4] istore v5
      [6] iconst_0
      [7] istore v6
      [9] aload_0 v0
      [10] getfield #23
        + Fieldref [a/a/a/b/ce.c [La/a/a/b/cg;]
      [13] dup
      [14] astore v7
      [16] ifnull +330 (target=346)
      [19] aload v7
      [21] arraylength
      [22] dup
      [23] istore v9
      [25] ifle +321 (target=346)
      [28] aload v7
      [30] iload v9
      [32] iconst_1
      [33] isub
      [34] iload v5
      [36] iand
      [37] aaload
      [38] dup
      [39] astore v8
      [41] ifnonnull +114 (target=155)
      [44] aload_0 v0
      [45] getfield #25
        + Fieldref [a/a/a/b/ce.e I]
      [48] ifne +101 (target=149)
      [51] new #7
        + Class [a/a/a/b/cg]
      [54] dup
      [55] lload_1 v1
      [56] invokespecial #36
        + Methodref [a/a/a/b/cg.<init> (J)V]
      [59] astore v12
      [61] aload_0 v0
      [62] getfield #25
        + Fieldref [a/a/a/b/ce.e I]
      [65] ifne +84 (target=149)
      [68] aload_0 v0
      [69] invokevirtual #34
        + Methodref [a/a/a/b/ce.c ()Z]
      [72] ifeq +77 (target=149)
      [75] iconst_0
      [76] istore v13
      [78] aload_0 v0
      [79] getfield #23
        + Fieldref [a/a/a/b/ce.c [La/a/a/b/cg;]
      [82] dup
      [83] astore v14
      [85] ifnull +38 (target=123)
      [88] aload v14
      [90] arraylength
      [91] dup
      [92] istore v15
      [94] ifle +29 (target=123)
      [97] aload v14
      [99] iload v15
      [101] iconst_1
      [102] isub
      [103] iload v5
      [105] iand
      [106] dup
      [107] istore v16
      [109] aaload
      [110] ifnonnull +13 (target=123)
      [113] aload v14
      [115] iload v16
      [117] aload v12
      [119] aastore
      [120] iconst_1
      [121] istore v13
      [123] aload_0 v0
      [124] iconst_0
      [125] putfield #25
        + Fieldref [a/a/a/b/ce.e I]
      [128] goto +13 (target=141)
      [131] astore v17
      [133] aload_0 v0
      [134] iconst_0
      [135] putfield #25
        + Fieldref [a/a/a/b/ce.e I]
      [138] aload v17
      [140] athrow
      [141] iload v13
      [143] ifeq -134 (target=9)
      [146] goto +321 (target=467)
      [149] iconst_0
      [150] istore v6
      [152] goto +162 (target=314)
      [155] iload v4
      [157] ifne +9 (target=166)
      [160] iconst_1
      [161] istore v4
      [163] goto +151 (target=314)
      [166] aload v8
      [168] aload v8
      [170] getfield #29
        + Fieldref [a/a/a/b/cg.a J]
      [173] dup2
      [174] lstore v10
      [176] aload_0 v0
      [177] lload v10
      [179] lload_1 v1
      [180] invokevirtual #32
        + Methodref [a/a/a/b/ce.a (JJ)J]
      [183] invokevirtual #37
        + Methodref [a/a/a/b/cg.a (JJ)Z]
      [186] ifeq +6 (target=192)
      [189] goto +278 (target=467)
      [192] iload v9
      [194] getstatic #22
        + Fieldref [a/a/a/b/ce.b I]
      [197] ificmpge +12 (target=209)
      [200] aload_0 v0
      [201] getfield #23
        + Fieldref [a/a/a/b/ce.c [La/a/a/b/cg;]
      [204] aload v7
      [206] ifacmpeq +9 (target=215)
      [209] iconst_0
      [210] istore v6
      [212] goto +102 (target=314)
      [215] iload v6
      [217] ifne +9 (target=226)
      [220] iconst_1
      [221] istore v6
      [223] goto +91 (target=314)
      [226] aload_0 v0
      [227] getfield #25
        + Fieldref [a/a/a/b/ce.e I]
      [230] ifne +84 (target=314)
      [233] aload_0 v0
      [234] invokevirtual #34
        + Methodref [a/a/a/b/ce.c ()Z]
      [237] ifeq +77 (target=314)
      [240] aload_0 v0
      [241] getfield #23
        + Fieldref [a/a/a/b/ce.c [La/a/a/b/cg;]
      [244] aload v7
      [246] ifacmpne +44 (target=290)
      [249] iload v9
      [251] iconst_1
      [252] ishl
      [253] anewarray #7
        + Class [a/a/a/b/cg]
      [256] astore v12
      [258] iconst_0
      [259] istore v13
      [261] iload v13
      [263] iload v9
      [265] ificmpge +19 (target=284)
      [268] aload v12
      [270] iload v13
      [272] aload v7
      [274] iload v13
      [276] aaload
      [277] aastore
      [278] iinc v13, 1
      [281] goto -20 (target=261)
      [284] aload_0 v0
      [285] aload v12
      [287] putfield #23
        + Fieldref [a/a/a/b/ce.c [La/a/a/b/cg;]
      [290] aload_0 v0
      [291] iconst_0
      [292] putfield #25
        + Fieldref [a/a/a/b/ce.e I]
      [295] goto +13 (target=308)
      [298] astore v18
      [300] aload_0 v0
      [301] iconst_0
      [302] putfield #25
        + Fieldref [a/a/a/b/ce.e I]
      [305] aload v18
      [307] athrow
      [308] iconst_0
      [309] istore v6
      [311] goto -302 (target=9)
      [314] iload v5
      [316] iload v5
      [318] bipush 13
      [320] ishl
      [321] ixor
      [322] istore v5
      [324] iload v5
      [326] iload v5
      [328] bipush 17
      [330] iushr
      [331] ixor
      [332] istore v5
      [334] iload v5
      [336] iload v5
      [338] iconst_5
      [339] ishl
      [340] ixor
      [341] istore v5
      [343] goto +121 (target=464)
      [346] aload_0 v0
      [347] getfield #25
        + Fieldref [a/a/a/b/ce.e I]
      [350] ifne +90 (target=440)
      [353] aload_0 v0
      [354] getfield #23
        + Fieldref [a/a/a/b/ce.c [La/a/a/b/cg;]
      [357] aload v7
      [359] ifacmpne +81 (target=440)
      [362] aload_0 v0
      [363] invokevirtual #34
        + Methodref [a/a/a/b/ce.c ()Z]
      [366] ifeq +74 (target=440)
      [369] iconst_0
      [370] istore v12
      [372] aload_0 v0
      [373] getfield #23
        + Fieldref [a/a/a/b/ce.c [La/a/a/b/cg;]
      [376] aload v7
      [378] ifacmpne +33 (target=411)
      [381] iconst_2
      [382] anewarray #7
        + Class [a/a/a/b/cg]
      [385] astore v13
      [387] aload v13
      [389] iload v5
      [391] iconst_1
      [392] iand
      [393] new #7
        + Class [a/a/a/b/cg]
      [396] dup
      [397] lload_1 v1
      [398] invokespecial #36
        + Methodref [a/a/a/b/cg.<init> (J)V]
      [401] aastore
      [402] aload_0 v0
      [403] aload v13
      [405] putfield #23
        + Fieldref [a/a/a/b/ce.c [La/a/a/b/cg;]
      [408] iconst_1
      [409] istore v12
      [411] aload_0 v0
      [412] iconst_0
      [413] putfield #25
        + Fieldref [a/a/a/b/ce.e I]
      [416] goto +13 (target=429)
      [419] astore v19
      [421] aload_0 v0
      [422] iconst_0
      [423] putfield #25
        + Fieldref [a/a/a/b/ce.e I]
      [426] aload v19
      [428] athrow
      [429] iload v12
      [431] ifeq +6 (target=437)
      [434] goto +33 (target=467)
      [437] goto +27 (target=464)
      [440] aload_0 v0
      [441] aload_0 v0
      [442] getfield #24
        + Fieldref [a/a/a/b/ce.d J]
      [445] dup2
      [446] lstore v10
      [448] aload_0 v0
      [449] lload v10
      [451] lload_1 v1
      [452] invokevirtual #32
        + Methodref [a/a/a/b/ce.a (JJ)J]
      [455] invokevirtual #33
        + Methodref [a/a/a/b/ce.b (JJ)Z]
      [458] ifeq +6 (target=464)
      [461] goto +6 (target=467)
      [464] goto -455 (target=9)
      [467] aload_3 v3
      [468] iload v5
      [470] putfield #30
        + Fieldref [a/a/a/b/ch.b I]
      [473] return
      Code attribute exceptions (count = 6):
      - ExceptionInfo (78 -> 123: 131):
      - ExceptionInfo (131 -> 133: 131):
      - ExceptionInfo (240 -> 290: 298):
      - ExceptionInfo (298 -> 300: 298):
      - ExceptionInfo (372 -> 411: 419):
      - ExceptionInfo (419 -> 421: 419):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 25):
        - [9] Var: ...[i][i], Stack: (empty)
        - [123] Var: [a:a/a/a/b/ce][l][a:a/a/a/b/ch][i][i][i][a:[La/a/a/b/cg;][a:a/a/a/b/cg][i][T][T][a:a/a/a/b/cg][i], Stack: 
        - [131] Var: ..., Stack: [a:java/lang/Throwable]
        - [141] Var: ..., Stack: (empty)
        - [149] Var: [a:a/a/a/b/ce][l][a:a/a/a/b/ch][i][i][i][a:[La/a/a/b/cg;][a:a/a/a/b/cg][i], Stack: 
        - [155] Var: ..., Stack: (empty)
        - [166] Var: ..., Stack: (empty)
        - [192] Var: ...[l], Stack: (empty)
        - [209] Var: ..., Stack: (empty)
        - [215] Var: ..., Stack: (empty)
        - [226] Var: ..., Stack: (empty)
        - [261] Var: ...[a:[La/a/a/b/cg;][i], Stack: (empty)
        - [284] Var: -1, Stack: (empty)
        - [290] Var: -1, Stack: (empty)
        - [298] Var: ..., Stack: [a:java/lang/Throwable]
        - [308] Var: ..., Stack: (empty)
        - [314] Var: -1, Stack: (empty)
        - [346] Var: -2, Stack: (empty)
        - [411] Var: [a:a/a/a/b/ce][l][a:a/a/a/b/ch][i][i][i][a:[La/a/a/b/cg;][T][T][T][T][i], Stack: 
        - [419] Var: ..., Stack: [a:java/lang/Throwable]
        - [429] Var: ..., Stack: (empty)
        - [437] Var: [a:a/a/a/b/ce][l][a:a/a/a/b/ch][i][i][i][a:[La/a/a/b/cg;], Stack: 
        - [440] Var: ..., Stack: (empty)
        - [464] Var: -1, Stack: (empty)
        - [467] Var: ..., Stack: (empty)
  + Method:       a()Lsun/misc/Unsafe;
    Access flags: 0xa
      = private static sun.misc.Unsafe a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 34, locals = 1, stack = 4):
      [0] invokestatic #49
        + Methodref [sun/misc/Unsafe.getUnsafe ()Lsun/misc/Unsafe;]
      [3] areturn
      [4] astore_0 v0
      [5] new #6
        + Class [a/a/a/b/cf]
      [8] dup
      [9] invokespecial #35
        + Methodref [a/a/a/b/cf.<init> ()V]
      [12] invokestatic #45
        + Methodref [java/security/AccessController.doPrivileged (Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;]
      [15] checkcast #20
        + Class [sun/misc/Unsafe]
      [18] areturn
      [19] astore_0 v0
      [20] new #15
        + Class [java/lang/RuntimeException]
      [23] dup
      [24] ldc #1
        + String [Could not initialize intrinsics]
      [26] aload_0 v0
      [27] invokevirtual #46
        + Methodref [java/security/PrivilegedActionException.getCause ()Ljava/lang/Throwable;]
      [30] invokespecial #44
        + Methodref [java/lang/RuntimeException.<init> (Ljava/lang/String;Ljava/lang/Throwable;)V]
      [33] athrow
      Code attribute exceptions (count = 2):
      - ExceptionInfo (0 -> 3: 4):
      + Class [java/lang/SecurityException]
      - ExceptionInfo (5 -> 18: 19):
      + Class [java/security/PrivilegedActionException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [4] Var: ..., Stack: [a:java/lang/SecurityException]
        - [19] Var: ..., Stack: [a:java/security/PrivilegedActionException]
  + Method:       d()Lsun/misc/Unsafe;
    Access flags: 0x1008
      = static synthetic sun.misc.Unsafe d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] invokestatic #31
        + Methodref [a/a/a/b/ce.a ()Lsun/misc/Unsafe;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 72, locals = 1, stack = 3):
      [0] new #9
        + Class [a/a/a/b/ci]
      [3] dup
      [4] invokespecial #38
        + Methodref [a/a/a/b/ci.<init> ()V]
      [7] putstatic #21
        + Fieldref [a/a/a/b/ce.a La/a/a/b/ci;]
      [10] invokestatic #43
        + Methodref [java/lang/Runtime.getRuntime ()Ljava/lang/Runtime;]
      [13] invokevirtual #42
        + Methodref [java/lang/Runtime.availableProcessors ()I]
      [16] putstatic #22
        + Fieldref [a/a/a/b/ce.b I]
      [19] invokestatic #31
        + Methodref [a/a/a/b/ce.a ()Lsun/misc/Unsafe;]
      [22] putstatic #26
        + Fieldref [a/a/a/b/ce.f Lsun/misc/Unsafe;]
      [25] ldc #5
        + Class [a/a/a/b/ce]
      [27] astore_0 v0
      [28] getstatic #26
        + Fieldref [a/a/a/b/ce.f Lsun/misc/Unsafe;]
      [31] aload_0 v0
      [32] ldc #2
        + String [base]
      [34] invokevirtual #39
        + Methodref [java/lang/Class.getDeclaredField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
      [37] invokevirtual #50
        + Methodref [sun/misc/Unsafe.objectFieldOffset (Ljava/lang/reflect/Field;)J]
      [40] putstatic #27
        + Fieldref [a/a/a/b/ce.g J]
      [43] getstatic #26
        + Fieldref [a/a/a/b/ce.f Lsun/misc/Unsafe;]
      [46] aload_0 v0
      [47] ldc #3
        + String [busy]
      [49] invokevirtual #39
        + Methodref [java/lang/Class.getDeclaredField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
      [52] invokevirtual #50
        + Methodref [sun/misc/Unsafe.objectFieldOffset (Ljava/lang/reflect/Field;)J]
      [55] putstatic #28
        + Fieldref [a/a/a/b/ce.h J]
      [58] goto +13 (target=71)
      [61] astore_0 v0
      [62] new #11
        + Class [java/lang/Error]
      [65] dup
      [66] aload_0 v0
      [67] invokespecial #40
        + Methodref [java/lang/Error.<init> (Ljava/lang/Throwable;)V]
      [70] athrow
      [71] return
      Code attribute exceptions (count = 1):
      - ExceptionInfo (19 -> 58: 61):
      + Class [java/lang/Exception]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [61] Var: ..., Stack: [a:java/lang/Exception]
        - [71] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/cf
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.cf extends java.lang.Object

Interfaces (count = 1):
  + Class [java/security/PrivilegedExceptionAction]

Constant Pool (count = 53):
  + String [the Unsafe]
  + Class [[Ljava/lang/reflect/Field;]
  + Class [a/a/a/b/cf]
  + Class [java/lang/Class]
  + Class [java/lang/NoSuchFieldError]
  + Class [java/lang/Object]
  + Class [java/lang/reflect/Field]
  + Class [java/security/PrivilegedExceptionAction]
  + Class [sun/misc/Unsafe]
  + Methodref [a/a/a/b/cf.a ()Lsun/misc/Unsafe;]
  + Methodref [java/lang/Class.cast (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [java/lang/Class.getDeclaredFields ()[Ljava/lang/reflect/Field;]
  + Methodref [java/lang/Class.isInstance (Ljava/lang/Object;)Z]
  + Methodref [java/lang/NoSuchFieldError.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/reflect/Field.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [java/lang/reflect/Field.setAccessible (Z)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [a ()Lsun/misc/Unsafe;]
  + NameAndType [cast (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [getDeclaredFields ()[Ljava/lang/reflect/Field;]
  + NameAndType [isInstance (Ljava/lang/Object;)Z]
  + NameAndType [setAccessible (Z)V]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Lsun/misc/Unsafe;]
  + Utf8 [()V]
  + Utf8 [()[Ljava/lang/reflect/Field;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Z)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/reflect/Field;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/cf]
  + Utf8 [cast]
  + Utf8 [get]
  + Utf8 [getDeclaredFields]
  + Utf8 [isInstance]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/NoSuchFieldError]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/reflect/Field]
  + Utf8 [java/security/PrivilegedExceptionAction]
  + Utf8 [run]
  + Utf8 [setAccessible]
  + Utf8 [sun/misc/Unsafe]
  + Utf8 [the Unsafe]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x0
      = cf()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #15
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Lsun/misc/Unsafe;
    Access flags: 0x1
      = public sun.misc.Unsafe a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 75, locals = 7, stack = 3):
      [0] ldc #9
        + Class [sun/misc/Unsafe]
      [2] astore_1 v1
      [3] aload_1 v1
      [4] invokevirtual #12
        + Methodref [java/lang/Class.getDeclaredFields ()[Ljava/lang/reflect/Field;]
      [7] astore_2 v2
      [8] aload_2 v2
      [9] arraylength
      [10] istore_3 v3
      [11] iconst_0
      [12] istore v4
      [14] iload v4
      [16] iload_3 v3
      [17] ificmpge +48 (target=65)
      [20] aload_2 v2
      [21] iload v4
      [23] aaload
      [24] astore v5
      [26] aload v5
      [28] iconst_1
      [29] invokevirtual #17
        + Methodref [java/lang/reflect/Field.setAccessible (Z)V]
      [32] aload v5
      [34] aconst_null
      [35] invokevirtual #16
        + Methodref [java/lang/reflect/Field.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [38] astore v6
      [40] aload_1 v1
      [41] aload v6
      [43] invokevirtual #13
        + Methodref [java/lang/Class.isInstance (Ljava/lang/Object;)Z]
      [46] ifeq +13 (target=59)
      [49] aload_1 v1
      [50] aload v6
      [52] invokevirtual #11
        + Methodref [java/lang/Class.cast (Ljava/lang/Object;)Ljava/lang/Object;]
      [55] checkcast #9
        + Class [sun/misc/Unsafe]
      [58] areturn
      [59] iinc v4, 1
      [62] goto -48 (target=14)
      [65] new #5
        + Class [java/lang/NoSuchFieldError]
      [68] dup
      [69] ldc #1
        + String [the Unsafe]
      [71] invokespecial #14
        + Methodref [java/lang/NoSuchFieldError.<init> (Ljava/lang/String;)V]
      [74] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [14] Var: [a:a/a/a/b/cf][a:java/lang/Class][a:[Ljava/lang/reflect/Field;][i][i], Stack: 
        - [59] Var: ..., Stack: (empty)
        - [65] Var: -3, Stack: (empty)
  + Method:       run()Ljava/lang/Object;
    Access flags: 0x1001
      = public synthetic java.lang.Object run()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #10
        + Methodref [a/a/a/b/cf.a ()Lsun/misc/Unsafe;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/cg
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.cg extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 56):
  + String [value]
  + Class [a/a/a/b/ce]
  + Class [a/a/a/b/cg]
  + Class [java/lang/Class]
  + Class [java/lang/Error]
  + Class [java/lang/Exception]
  + Class [java/lang/Object]
  + Class [sun/misc/Unsafe]
  + Fieldref [a/a/a/b/cg.a J]
  + Fieldref [a/a/a/b/cg.b Lsun/misc/Unsafe;]
  + Fieldref [a/a/a/b/cg.c J]
  + Methodref [a/a/a/b/ce.d ()Lsun/misc/Unsafe;]
  + Methodref [java/lang/Class.getDeclaredField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
  + Methodref [java/lang/Error.<init> (Ljava/lang/Throwable;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [sun/misc/Unsafe.compareAndSwapLong (Ljava/lang/Object;JJJ)Z]
  + Methodref [sun/misc/Unsafe.objectFieldOffset (Ljava/lang/reflect/Field;)J]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Throwable;)V]
  + NameAndType [a J]
  + NameAndType [b Lsun/misc/Unsafe;]
  + NameAndType [c J]
  + NameAndType [compareAndSwapLong (Ljava/lang/Object;JJJ)Z]
  + NameAndType [d ()Lsun/misc/Unsafe;]
  + NameAndType [getDeclaredField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
  + NameAndType [objectFieldOffset (Ljava/lang/reflect/Field;)J]
  + Utf8 [()Lsun/misc/Unsafe;]
  + Utf8 [()V]
  + Utf8 [(J)V]
  + Utf8 [(JJ)Z]
  + Utf8 [(Ljava/lang/Object;JJJ)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/reflect/Field;]
  + Utf8 [(Ljava/lang/Throwable;)V]
  + Utf8 [(Ljava/lang/reflect/Field;)J]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [J]
  + Utf8 [Lsun/misc/Unsafe;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ce]
  + Utf8 [a/a/a/b/cg]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [compareAndSwapLong]
  + Utf8 [d]
  + Utf8 [getDeclaredField]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Error]
  + Utf8 [java/lang/Exception]
  + Utf8 [java/lang/Object]
  + Utf8 [objectFieldOffset]
  + Utf8 [sun/misc/Unsafe]
  + Utf8 [value]

Fields (count = 3):
  + Field:        a J
    Access flags: 0x40
      = volatile long a
  + Field:        b Lsun/misc/Unsafe;
    Access flags: 0x1a
      = private static final sun.misc.Unsafe b
  + Field:        c J
    Access flags: 0x1a
      = private static final long c

Methods (count = 3):
  - Method:       <init>(J)V
    Access flags: 0x0
      = cg(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #15
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] lload_1 v1
      [6] putfield #9
        + Fieldref [a/a/a/b/cg.a J]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(JJ)Z
    Access flags: 0x10
      = final boolean a(long,long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 5, stack = 8):
      [0] getstatic #10
        + Fieldref [a/a/a/b/cg.b Lsun/misc/Unsafe;]
      [3] aload_0 v0
      [4] getstatic #11
        + Fieldref [a/a/a/b/cg.c J]
      [7] lload_1 v1
      [8] lload_3 v3
      [9] invokevirtual #16
        + Methodref [sun/misc/Unsafe.compareAndSwapLong (Ljava/lang/Object;JJJ)Z]
      [12] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 38, locals = 1, stack = 3):
      [0] invokestatic #12
        + Methodref [a/a/a/b/ce.d ()Lsun/misc/Unsafe;]
      [3] putstatic #10
        + Fieldref [a/a/a/b/cg.b Lsun/misc/Unsafe;]
      [6] ldc #3
        + Class [a/a/a/b/cg]
      [8] astore_0 v0
      [9] getstatic #10
        + Fieldref [a/a/a/b/cg.b Lsun/misc/Unsafe;]
      [12] aload_0 v0
      [13] ldc #1
        + String [value]
      [15] invokevirtual #13
        + Methodref [java/lang/Class.getDeclaredField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
      [18] invokevirtual #17
        + Methodref [sun/misc/Unsafe.objectFieldOffset (Ljava/lang/reflect/Field;)J]
      [21] putstatic #11
        + Fieldref [a/a/a/b/cg.c J]
      [24] goto +13 (target=37)
      [27] astore_0 v0
      [28] new #5
        + Class [java/lang/Error]
      [31] dup
      [32] aload_0 v0
      [33] invokespecial #14
        + Methodref [java/lang/Error.<init> (Ljava/lang/Throwable;)V]
      [36] athrow
      [37] return
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 24: 27):
      + Class [java/lang/Exception]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [27] Var: ..., Stack: [a:java/lang/Exception]
        - [37] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ch
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.ch extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 27):
  + Class [a/a/a/b/ch]
  + Class [java/lang/Object]
  + Class [java/util/Random]
  + Fieldref [a/a/a/b/ch.a Ljava/util/Random;]
  + Fieldref [a/a/a/b/ch.b I]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/util/Random.<init> ()V]
  + Methodref [java/util/Random.nextInt ()I]
  + NameAndType [<init> ()V]
  + NameAndType [a Ljava/util/Random;]
  + NameAndType [b I]
  + NameAndType [nextInt ()I]
  + Utf8 [()I]
  + Utf8 [()V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [Ljava/util/Random;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ch]
  + Utf8 [b]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Random]
  + Utf8 [nextInt]

Fields (count = 2):
  + Field:        a Ljava/util/Random;
    Access flags: 0x18
      = static final java.util.Random a
  + Field:        b I
    Access flags: 0x0
      = int b

Methods (count = 2):
  - Method:       <init>()V
    Access flags: 0x0
      = ch()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 25, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #6
        + Methodref [java/lang/Object.<init> ()V]
      [4] getstatic #4
        + Fieldref [a/a/a/b/ch.a Ljava/util/Random;]
      [7] invokevirtual #8
        + Methodref [java/util/Random.nextInt ()I]
      [10] istore_1 v1
      [11] aload_0 v0
      [12] iload_1 v1
      [13] ifne +7 (target=20)
      [16] iconst_1
      [17] goto +4 (target=21)
      [20] iload_1 v1
      [21] putfield #5
        + Fieldref [a/a/a/b/ch.b I]
      [24] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [20] Var: [a:a/a/a/b/ch][i], Stack: [a:a/a/a/b/ch]
        - [21] Var: [a:a/a/a/b/ch][i], Stack: [a:a/a/a/b/ch][i]
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 0, stack = 2):
      [0] new #3
        + Class [java/util/Random]
      [3] dup
      [4] invokespecial #7
        + Methodref [java/util/Random.<init> ()V]
      [7] putstatic #4
        + Fieldref [a/a/a/b/ch.a Ljava/util/Random;]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/ci
  Superclass:    java/lang/ThreadLocal
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.b.ci extends java.lang.ThreadLocal

Interfaces (count = 0):

Constant Pool (count = 19):
  + Class [a/a/a/b/ch]
  + Class [a/a/a/b/ci]
  + Class [java/lang/ThreadLocal]
  + Methodref [a/a/a/b/ch.<init> ()V]
  + Methodref [a/a/a/b/ci.a ()La/a/a/b/ch;]
  + Methodref [java/lang/ThreadLocal.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a ()La/a/a/b/ch;]
  + Utf8 [()La/a/a/b/ch;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/b/ch]
  + Utf8 [a/a/a/b/ci]
  + Utf8 [initialValue]
  + Utf8 [java/lang/ThreadLocal]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x0
      = ci()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #6
        + Methodref [java/lang/ThreadLocal.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/b/ch;
    Access flags: 0x1
      = public a.a.a.b.ch a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #1
        + Class [a/a/a/b/ch]
      [3] dup
      [4] invokespecial #4
        + Methodref [a/a/a/b/ch.<init> ()V]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       initialValue()Ljava/lang/Object;
    Access flags: 0x1001
      = public synthetic java.lang.Object initialValue()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #5
        + Methodref [a/a/a/b/ci.a ()La/a/a/b/ch;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/b/cj
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface a.a.a.b.cj extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 7):
  + Class [a/a/a/b/cj]
  + Class [java/lang/Object]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)I]
  + Utf8 [a]
  + Utf8 [a/a/a/b/cj]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 1):
  + Method:       a(Ljava/lang/Object;Ljava/lang/Object;)I
    Access flags: 0x401
      = public abstract int a(java.lang.Object,java.lang.Object)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/a
  Superclass:    a/a/a/c/eb
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.c.a extends a.a.a.c.eb

Interfaces (count = 0):

Constant Pool (count = 43):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/a]
  + Class [a/a/a/c/eb]
  + Class [java/util/NoSuchElementException]
  + Fieldref [a/a/a/c/a.a I]
  + Fieldref [a/a/a/c/a.b I]
  + Methodref [a/a/a/a/o.b (II)I]
  + Methodref [a/a/a/c/a.a (I)Ljava/lang/Object;]
  + Methodref [a/a/a/c/a.hasNext ()Z]
  + Methodref [a/a/a/c/a.hasPrevious ()Z]
  + Methodref [a/a/a/c/eb.<init> ()V]
  + Methodref [java/util/NoSuchElementException.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a (I)Ljava/lang/Object;]
  + NameAndType [a I]
  + NameAndType [b (II)I]
  + NameAndType [b I]
  + NameAndType [hasNext ()Z]
  + NameAndType [hasPrevious ()Z]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(II)I]
  + Utf8 [(II)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/a]
  + Utf8 [a/a/a/c/eb]
  + Utf8 [b]
  + Utf8 [hasNext]
  + Utf8 [hasPrevious]
  + Utf8 [java/util/NoSuchElementException]
  + Utf8 [next]
  + Utf8 [nextIndex]
  + Utf8 [previous]
  + Utf8 [previousIndex]

Fields (count = 2):
  + Field:        a I
    Access flags: 0x12
      = private final int a
  + Field:        b I
    Access flags: 0x2
      = private int b

Methods (count = 8):
  + Method:       a(I)Ljava/lang/Object;
    Access flags: 0x404
      = protected abstract java.lang.Object a(int)
  - Method:       <init>(II)V
    Access flags: 0x4
      = protected a(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #11
        + Methodref [a/a/a/c/eb.<init> ()V]
      [4] iload_2 v2
      [5] iload_1 v1
      [6] invokestatic #7
        + Methodref [a/a/a/a/o.b (II)I]
      [9] pop
      [10] aload_0 v0
      [11] iload_1 v1
      [12] putfield #5
        + Fieldref [a/a/a/c/a.a I]
      [15] aload_0 v0
      [16] iload_2 v2
      [17] putfield #6
        + Fieldref [a/a/a/c/a.b I]
      [20] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hasNext()Z
    Access flags: 0x11
      = public final boolean hasNext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/a.b I]
      [4] aload_0 v0
      [5] getfield #5
        + Fieldref [a/a/a/c/a.a I]
      [8] ificmpge +7 (target=15)
      [11] iconst_1
      [12] goto +4 (target=16)
      [15] iconst_0
      [16] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [15] Var: ..., Stack: (empty)
        - [16] Var: ..., Stack: [i]
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 31, locals = 1, stack = 5):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/c/a.hasNext ()Z]
      [4] ifne +11 (target=15)
      [7] new #4
        + Class [java/util/NoSuchElementException]
      [10] dup
      [11] invokespecial #12
        + Methodref [java/util/NoSuchElementException.<init> ()V]
      [14] athrow
      [15] aload_0 v0
      [16] aload_0 v0
      [17] dup
      [18] getfield #6
        + Fieldref [a/a/a/c/a.b I]
      [21] dup_x1
      [22] iconst_1
      [23] iadd
      [24] putfield #6
        + Fieldref [a/a/a/c/a.b I]
      [27] invokevirtual #8
        + Methodref [a/a/a/c/a.a (I)Ljava/lang/Object;]
      [30] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [15] Var: ..., Stack: (empty)
  + Method:       nextIndex()I
    Access flags: 0x11
      = public final int nextIndex()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/a.b I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hasPrevious()Z
    Access flags: 0x11
      = public final boolean hasPrevious()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/a.b I]
      [4] ifle +7 (target=11)
      [7] iconst_1
      [8] goto +4 (target=12)
      [11] iconst_0
      [12] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [12] Var: ..., Stack: [i]
  + Method:       previous()Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object previous()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 31, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] invokevirtual #10
        + Methodref [a/a/a/c/a.hasPrevious ()Z]
      [4] ifne +11 (target=15)
      [7] new #4
        + Class [java/util/NoSuchElementException]
      [10] dup
      [11] invokespecial #12
        + Methodref [java/util/NoSuchElementException.<init> ()V]
      [14] athrow
      [15] aload_0 v0
      [16] aload_0 v0
      [17] dup
      [18] getfield #6
        + Fieldref [a/a/a/c/a.b I]
      [21] iconst_1
      [22] isub
      [23] dup_x1
      [24] putfield #6
        + Fieldref [a/a/a/c/a.b I]
      [27] invokevirtual #8
        + Methodref [a/a/a/c/a.a (I)Ljava/lang/Object;]
      [30] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [15] Var: ..., Stack: (empty)
  + Method:       previousIndex()I
    Access flags: 0x11
      = public final int previousIndex()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/a.b I]
      [4] iconst_1
      [5] isub
      [6] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/b
  Superclass:    a/a/a/c/ea
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.b extends a.a.a.c.ea

Interfaces (count = 0):

Constant Pool (count = 57):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/b]
  + Class [a/a/a/c/c]
  + Class [a/a/a/c/d]
  + Class [a/a/a/c/ea]
  + Class [java/util/NoSuchElementException]
  + Fieldref [a/a/a/c/b.a La/a/a/c/d;]
  + Fieldref [a/a/a/c/b.b Ljava/lang/Object;]
  + Fieldref [a/a/a/c/c.a [I]
  + Fieldref [a/a/a/c/d.a La/a/a/c/d;]
  + Fieldref [a/a/a/c/d.b La/a/a/c/d;]
  + Fieldref [a/a/a/c/d.c La/a/a/c/d;]
  + Fieldref [a/a/a/c/d.d La/a/a/c/d;]
  + Methodref [a/a/a/a/o.b (Z)V]
  + Methodref [a/a/a/c/b.a ()Ljava/lang/Object;]
  + Methodref [a/a/a/c/b.c ()Z]
  + Methodref [a/a/a/c/b.hasNext ()Z]
  + Methodref [a/a/a/c/d.ordinal ()I]
  + Methodref [a/a/a/c/ea.<init> ()V]
  + Methodref [java/util/NoSuchElementException.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a ()Ljava/lang/Object;]
  + NameAndType [a La/a/a/c/d;]
  + NameAndType [a [I]
  + NameAndType [b (Z)V]
  + NameAndType [b La/a/a/c/d;]
  + NameAndType [b Ljava/lang/Object;]
  + NameAndType [c ()Z]
  + NameAndType [c La/a/a/c/d;]
  + NameAndType [d La/a/a/c/d;]
  + NameAndType [hasNext ()Z]
  + NameAndType [ordinal ()I]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Z)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/d;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [StackMapTable]
  + Utf8 [[I]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/b]
  + Utf8 [a/a/a/c/c]
  + Utf8 [a/a/a/c/d]
  + Utf8 [a/a/a/c/ea]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [hasNext]
  + Utf8 [java/util/NoSuchElementException]
  + Utf8 [next]
  + Utf8 [ordinal]

Fields (count = 2):
  + Field:        a La/a/a/c/d;
    Access flags: 0x2
      = private a.a.a.c.d a
  + Field:        b Ljava/lang/Object;
    Access flags: 0x2
      = private java.lang.Object b

Methods (count = 6):
  - Method:       <init>()V
    Access flags: 0x4
      = protected b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #19
        + Methodref [a/a/a/c/ea.<init> ()V]
      [4] aload_0 v0
      [5] getstatic #11
        + Fieldref [a/a/a/c/d.b La/a/a/c/d;]
      [8] putfield #7
        + Fieldref [a/a/a/c/b.a La/a/a/c/d;]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/lang/Object;
    Access flags: 0x404
      = protected abstract java.lang.Object a()
  + Method:       b()Ljava/lang/Object;
    Access flags: 0x14
      = protected final java.lang.Object b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getstatic #12
        + Fieldref [a/a/a/c/d.c La/a/a/c/d;]
      [4] putfield #7
        + Fieldref [a/a/a/c/b.a La/a/a/c/d;]
      [7] aconst_null
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hasNext()Z
    Access flags: 0x11
      = public final boolean hasNext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 65, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/c/b.a La/a/a/c/d;]
      [4] getstatic #13
        + Fieldref [a/a/a/c/d.d La/a/a/c/d;]
      [7] ifacmpeq +7 (target=14)
      [10] iconst_1
      [11] goto +4 (target=15)
      [14] iconst_0
      [15] invokestatic #14
        + Methodref [a/a/a/a/o.b (Z)V]
      [18] getstatic #9
        + Fieldref [a/a/a/c/c.a [I]
      [21] aload_0 v0
      [22] getfield #7
        + Fieldref [a/a/a/c/b.a La/a/a/c/d;]
      [25] invokevirtual #18
        + Methodref [a/a/a/c/d.ordinal ()I]
      [28] iaload
      [29] lookupswitch (2 offsets, default=31) (target=60)
        1: offset = 27, target = 56
        2: offset = 29, target = 58
        default: offset = 31, target = 60
      [56] iconst_0
      [57] ireturn
      [58] iconst_1
      [59] ireturn
      [60] aload_0 v0
      [61] invokespecial #16
        + Methodref [a/a/a/c/b.c ()Z]
      [64] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 5):
        - [14] Var: ..., Stack: (empty)
        - [15] Var: ..., Stack: [i]
        - [56] Var: ..., Stack: (empty)
        - [58] Var: ..., Stack: (empty)
        - [60] Var: ..., Stack: (empty)
  + Method:       c()Z
    Access flags: 0x2
      = private boolean c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 36, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getstatic #13
        + Fieldref [a/a/a/c/d.d La/a/a/c/d;]
      [4] putfield #7
        + Fieldref [a/a/a/c/b.a La/a/a/c/d;]
      [7] aload_0 v0
      [8] aload_0 v0
      [9] invokevirtual #15
        + Methodref [a/a/a/c/b.a ()Ljava/lang/Object;]
      [12] putfield #8
        + Fieldref [a/a/a/c/b.b Ljava/lang/Object;]
      [15] aload_0 v0
      [16] getfield #7
        + Fieldref [a/a/a/c/b.a La/a/a/c/d;]
      [19] getstatic #12
        + Fieldref [a/a/a/c/d.c La/a/a/c/d;]
      [22] ifacmpeq +12 (target=34)
      [25] aload_0 v0
      [26] getstatic #10
        + Fieldref [a/a/a/c/d.a La/a/a/c/d;]
      [29] putfield #7
        + Fieldref [a/a/a/c/b.a La/a/a/c/d;]
      [32] iconst_1
      [33] ireturn
      [34] iconst_0
      [35] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [34] Var: ..., Stack: (empty)
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 34, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #17
        + Methodref [a/a/a/c/b.hasNext ()Z]
      [4] ifne +11 (target=15)
      [7] new #6
        + Class [java/util/NoSuchElementException]
      [10] dup
      [11] invokespecial #20
        + Methodref [java/util/NoSuchElementException.<init> ()V]
      [14] athrow
      [15] aload_0 v0
      [16] getstatic #11
        + Fieldref [a/a/a/c/d.b La/a/a/c/d;]
      [19] putfield #7
        + Fieldref [a/a/a/c/b.a La/a/a/c/d;]
      [22] aload_0 v0
      [23] getfield #8
        + Fieldref [a/a/a/c/b.b Ljava/lang/Object;]
      [26] astore_1 v1
      [27] aload_0 v0
      [28] aconst_null
      [29] putfield #8
        + Fieldref [a/a/a/c/b.b Ljava/lang/Object;]
      [32] aload_1 v1
      [33] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [15] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/c
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x1020
    = synthetic class a.a.a.c.c extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 31):
  + Class [a/a/a/c/c]
  + Class [a/a/a/c/d]
  + Class [java/lang/NoSuchFieldError]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/c/c.a [I]
  + Fieldref [a/a/a/c/d.a La/a/a/c/d;]
  + Fieldref [a/a/a/c/d.c La/a/a/c/d;]
  + Methodref [a/a/a/c/d.ordinal ()I]
  + Methodref [a/a/a/c/d.values ()[La/a/a/c/d;]
  + NameAndType [a La/a/a/c/d;]
  + NameAndType [a [I]
  + NameAndType [c La/a/a/c/d;]
  + NameAndType [ordinal ()I]
  + NameAndType [values ()[La/a/a/c/d;]
  + Utf8 [()I]
  + Utf8 [()V]
  + Utf8 [()[La/a/a/c/d;]
  + Utf8 [<clinit>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/d;]
  + Utf8 [StackMapTable]
  + Utf8 [[I]
  + Utf8 [a]
  + Utf8 [a/a/a/c/c]
  + Utf8 [a/a/a/c/d]
  + Utf8 [c]
  + Utf8 [java/lang/NoSuchFieldError]
  + Utf8 [java/lang/Object]
  + Utf8 [ordinal]
  + Utf8 [values]

Fields (count = 1):
  + Field:        a [I
    Access flags: 0x1018
      = static final synthetic int[] a

Methods (count = 1):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 40, locals = 1, stack = 3):
      [0] invokestatic #9
        + Methodref [a/a/a/c/d.values ()[La/a/a/c/d;]
      [3] arraylength
      [4] newarray 10
      [6] putstatic #5
        + Fieldref [a/a/a/c/c.a [I]
      [9] getstatic #5
        + Fieldref [a/a/a/c/c.a [I]
      [12] getstatic #7
        + Fieldref [a/a/a/c/d.c La/a/a/c/d;]
      [15] invokevirtual #8
        + Methodref [a/a/a/c/d.ordinal ()I]
      [18] iconst_1
      [19] iastore
      [20] goto +4 (target=24)
      [23] astore_0 v0
      [24] getstatic #5
        + Fieldref [a/a/a/c/c.a [I]
      [27] getstatic #6
        + Fieldref [a/a/a/c/d.a La/a/a/c/d;]
      [30] invokevirtual #8
        + Methodref [a/a/a/c/d.ordinal ()I]
      [33] iconst_2
      [34] iastore
      [35] goto +4 (target=39)
      [38] astore_0 v0
      [39] return
      Code attribute exceptions (count = 2):
      - ExceptionInfo (9 -> 20: 23):
      + Class [java/lang/NoSuchFieldError]
      - ExceptionInfo (24 -> 35: 38):
      + Class [java/lang/NoSuchFieldError]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [23] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [24] Var: ..., Stack: (empty)
        - [38] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [39] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/d
  Superclass:    java/lang/Enum
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.c.d extends java.lang.Enum

Interfaces (count = 0):

Constant Pool (count = 50):
  + String [DONE]
  + String [FAILED]
  + String [NOT_READY]
  + String [READY]
  + Class [[La/a/a/c/d;]
  + Class [a/a/a/c/d]
  + Class [java/lang/Enum]
  + Fieldref [a/a/a/c/d.a La/a/a/c/d;]
  + Fieldref [a/a/a/c/d.b La/a/a/c/d;]
  + Fieldref [a/a/a/c/d.c La/a/a/c/d;]
  + Fieldref [a/a/a/c/d.d La/a/a/c/d;]
  + Fieldref [a/a/a/c/d.e [La/a/a/c/d;]
  + Methodref [[La/a/a/c/d;.clone ()Ljava/lang/Object;]
  + Methodref [a/a/a/c/d.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + NameAndType [<init> (Ljava/lang/String;I)V]
  + NameAndType [a La/a/a/c/d;]
  + NameAndType [b La/a/a/c/d;]
  + NameAndType [c La/a/a/c/d;]
  + NameAndType [clone ()Ljava/lang/Object;]
  + NameAndType [d La/a/a/c/d;]
  + NameAndType [e [La/a/a/c/d;]
  + NameAndType [valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()[La/a/a/c/d;]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [(Ljava/lang/String;)La/a/a/c/d;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [DONE]
  + Utf8 [FAILED]
  + Utf8 [La/a/a/c/d;]
  + Utf8 [NOT_READY]
  + Utf8 [READY]
  + Utf8 [[La/a/a/c/d;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/d]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clone]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [java/lang/Enum]
  + Utf8 [valueOf]
  + Utf8 [values]

Fields (count = 5):
  + Field:        a La/a/a/c/d;
    Access flags: 0x4019
      = public static final a.a.a.c.d a
  + Field:        b La/a/a/c/d;
    Access flags: 0x4019
      = public static final a.a.a.c.d b
  + Field:        c La/a/a/c/d;
    Access flags: 0x4019
      = public static final a.a.a.c.d c
  + Field:        d La/a/a/c/d;
    Access flags: 0x4019
      = public static final a.a.a.c.d d
  + Field:        e [La/a/a/c/d;
    Access flags: 0x101a
      = private static final synthetic a.a.a.c.d[] e

Methods (count = 4):
  + Method:       values()[La/a/a/c/d;
    Access flags: 0x9
      = public static a.a.a.c.d[] values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 0, stack = 1):
      [0] getstatic #12
        + Fieldref [a/a/a/c/d.e [La/a/a/c/d;]
      [3] invokevirtual #13
        + Methodref [[La/a/a/c/d;.clone ()Ljava/lang/Object;]
      [6] checkcast #5
        + Class [[La/a/a/c/d;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       valueOf(Ljava/lang/String;)La/a/a/c/d;
    Access flags: 0x9
      = public static a.a.a.c.d valueOf(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 2):
      [0] ldc #6
        + Class [a/a/a/c/d]
      [2] aload_0 v0
      [3] invokestatic #16
        + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
      [6] checkcast #6
        + Class [a/a/a/c/d]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x2
      = private d(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #15
        + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 84, locals = 0, stack = 4):
      [0] new #6
        + Class [a/a/a/c/d]
      [3] dup
      [4] ldc #4
        + String [READY]
      [6] iconst_0
      [7] invokespecial #14
        + Methodref [a/a/a/c/d.<init> (Ljava/lang/String;I)V]
      [10] putstatic #8
        + Fieldref [a/a/a/c/d.a La/a/a/c/d;]
      [13] new #6
        + Class [a/a/a/c/d]
      [16] dup
      [17] ldc #3
        + String [NOT_READY]
      [19] iconst_1
      [20] invokespecial #14
        + Methodref [a/a/a/c/d.<init> (Ljava/lang/String;I)V]
      [23] putstatic #9
        + Fieldref [a/a/a/c/d.b La/a/a/c/d;]
      [26] new #6
        + Class [a/a/a/c/d]
      [29] dup
      [30] ldc #1
        + String [DONE]
      [32] iconst_2
      [33] invokespecial #14
        + Methodref [a/a/a/c/d.<init> (Ljava/lang/String;I)V]
      [36] putstatic #10
        + Fieldref [a/a/a/c/d.c La/a/a/c/d;]
      [39] new #6
        + Class [a/a/a/c/d]
      [42] dup
      [43] ldc #2
        + String [FAILED]
      [45] iconst_3
      [46] invokespecial #14
        + Methodref [a/a/a/c/d.<init> (Ljava/lang/String;I)V]
      [49] putstatic #11
        + Fieldref [a/a/a/c/d.d La/a/a/c/d;]
      [52] iconst_4
      [53] anewarray #6
        + Class [a/a/a/c/d]
      [56] dup
      [57] iconst_0
      [58] getstatic #8
        + Fieldref [a/a/a/c/d.a La/a/a/c/d;]
      [61] aastore
      [62] dup
      [63] iconst_1
      [64] getstatic #9
        + Fieldref [a/a/a/c/d.b La/a/a/c/d;]
      [67] aastore
      [68] dup
      [69] iconst_2
      [70] getstatic #10
        + Fieldref [a/a/a/c/d.c La/a/a/c/d;]
      [73] aastore
      [74] dup
      [75] iconst_3
      [76] getstatic #11
        + Fieldref [a/a/a/c/d.d La/a/a/c/d;]
      [79] aastore
      [80] putstatic #12
        + Fieldref [a/a/a/c/d.e [La/a/a/c/d;]
      [83] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/e
  Superclass:    a/a/a/c/u
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.c.e extends a.a.a.c.u

Interfaces (count = 1):
  + Class [java/io/Serializable]

Constant Pool (count = 140):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/ct]
  + Class [a/a/a/c/e]
  + Class [a/a/a/c/f]
  + Class [a/a/a/c/i]
  + Class [a/a/a/c/k]
  + Class [a/a/a/c/l]
  + Class [a/a/a/c/m]
  + Class [a/a/a/c/n]
  + Class [a/a/a/c/p]
  + Class [a/a/a/c/r]
  + Class [a/a/a/c/s]
  + Class [a/a/a/c/u]
  + Class [java/io/Serializable]
  + Class [java/util/Collection]
  + Class [java/util/Iterator]
  + Class [java/util/List]
  + Class [java/util/Map]
  + Class [java/util/RandomAccess]
  + Class [java/util/Set]
  + Class [java/util/SortedMap]
  + Class [java/util/SortedSet]
  + Fieldref [a/a/a/c/e.a Ljava/util/Map;]
  + Fieldref [a/a/a/c/e.b I]
  + Methodref [a/a/a/a/o.a (Z)V]
  + Methodref [a/a/a/c/ct.c (Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/e.a (Ljava/lang/Object;)I]
  + Methodref [a/a/a/c/e.a (Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)Ljava/util/List;]
  + Methodref [a/a/a/c/e.a (Ljava/util/Collection;)Ljava/util/Iterator;]
  + Methodref [a/a/a/c/f.<init> (La/a/a/c/e;Ljava/util/Map;)V]
  + Methodref [a/a/a/c/i.<init> (La/a/a/c/e;Ljava/util/Map;)V]
  + Methodref [a/a/a/c/k.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)V]
  + Methodref [a/a/a/c/l.<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
  + Methodref [a/a/a/c/m.<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
  + Methodref [a/a/a/c/n.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
  + Methodref [a/a/a/c/p.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)V]
  + Methodref [a/a/a/c/r.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/Set;)V]
  + Methodref [a/a/a/c/s.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/SortedSet;La/a/a/c/n;)V]
  + Methodref [a/a/a/c/u.<init> ()V]
  + InterfaceMethodref [java/util/Collection.clear ()V]
  + InterfaceMethodref [java/util/Collection.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [java/util/Collection.size ()I]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/List.listIterator ()Ljava/util/ListIterator;]
  + InterfaceMethodref [java/util/Map.clear ()V]
  + InterfaceMethodref [java/util/Map.isEmpty ()Z]
  + InterfaceMethodref [java/util/Map.values ()Ljava/util/Collection;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
  + NameAndType [<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)V]
  + NameAndType [<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/Set;)V]
  + NameAndType [<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/SortedSet;La/a/a/c/n;)V]
  + NameAndType [<init> (La/a/a/c/e;Ljava/util/Map;)V]
  + NameAndType [<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
  + NameAndType [a (Ljava/lang/Object;)I]
  + NameAndType [a (Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)Ljava/util/List;]
  + NameAndType [a (Ljava/util/Collection;)Ljava/util/Iterator;]
  + NameAndType [a (Z)V]
  + NameAndType [a Ljava/util/Map;]
  + NameAndType [b I]
  + NameAndType [c (Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [clear ()V]
  + NameAndType [hasNext ()Z]
  + NameAndType [isEmpty ()Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [listIterator ()Ljava/util/ListIterator;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [size ()I]
  + NameAndType [values ()Ljava/util/Collection;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/ListIterator;]
  + Utf8 [()Ljava/util/Map;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/c/e;)I]
  + Utf8 [(La/a/a/c/e;)Ljava/util/Map;]
  + Utf8 [(La/a/a/c/e;I)I]
  + Utf8 [(La/a/a/c/e;Ljava/lang/Object;)I]
  + Utf8 [(La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
  + Utf8 [(La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)Ljava/util/List;]
  + Utf8 [(La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)V]
  + Utf8 [(La/a/a/c/e;Ljava/lang/Object;Ljava/util/Set;)V]
  + Utf8 [(La/a/a/c/e;Ljava/lang/Object;Ljava/util/SortedSet;La/a/a/c/n;)V]
  + Utf8 [(La/a/a/c/e;Ljava/util/Collection;)Ljava/util/Iterator;]
  + Utf8 [(La/a/a/c/e;Ljava/util/Map;)V]
  + Utf8 [(La/a/a/c/e;Ljava/util/SortedMap;)V]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;]
  + Utf8 [(Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)Ljava/util/List;]
  + Utf8 [(Ljava/util/Collection;)Ljava/util/Iterator;]
  + Utf8 [(Ljava/util/Map;)V]
  + Utf8 [(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Z)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [Ljava/util/Map;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/ct]
  + Utf8 [a/a/a/c/e]
  + Utf8 [a/a/a/c/f]
  + Utf8 [a/a/a/c/i]
  + Utf8 [a/a/a/c/k]
  + Utf8 [a/a/a/c/l]
  + Utf8 [a/a/a/c/m]
  + Utf8 [a/a/a/c/n]
  + Utf8 [a/a/a/c/p]
  + Utf8 [a/a/a/c/r]
  + Utf8 [a/a/a/c/s]
  + Utf8 [a/a/a/c/u]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clear]
  + Utf8 [d]
  + Utf8 [hasNext]
  + Utf8 [isEmpty]
  + Utf8 [iterator]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/List]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/RandomAccess]
  + Utf8 [java/util/Set]
  + Utf8 [java/util/SortedMap]
  + Utf8 [java/util/SortedSet]
  + Utf8 [listIterator]
  + Utf8 [next]
  + Utf8 [size]
  + Utf8 [values]

Fields (count = 2):
  + Field:        a Ljava/util/Map;
    Access flags: 0x82
      = private transient java.util.Map a
  + Field:        b I
    Access flags: 0x82
      = private transient int b

Methods (count = 17):
  - Method:       <init>(Ljava/util/Map;)V
    Access flags: 0x4
      = protected e(java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #39
        + Methodref [a/a/a/c/u.<init> ()V]
      [4] aload_1 v1
      [5] invokeinterface #47
        + InterfaceMethodref [java/util/Map.isEmpty ()Z]
      [10] invokestatic #25
        + Methodref [a/a/a/a/o.a (Z)V]
      [13] aload_0 v0
      [14] aload_1 v1
      [15] putfield #23
        + Fieldref [a/a/a/c/e.a Ljava/util/Map;]
      [18] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/Collection;
    Access flags: 0x400
      = abstract java.util.Collection a()
  + Method:       b()V
    Access flags: 0x1
      = public void b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 58, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] getfield #23
        + Fieldref [a/a/a/c/e.a Ljava/util/Map;]
      [4] invokeinterface #48
        + InterfaceMethodref [java/util/Map.values ()Ljava/util/Collection;]
      [9] invokeinterface #41
        + InterfaceMethodref [java/util/Collection.iterator ()Ljava/util/Iterator;]
      [14] astore_1 v1
      [15] aload_1 v1
      [16] invokeinterface #43
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [21] ifeq +22 (target=43)
      [24] aload_1 v1
      [25] invokeinterface #44
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [30] checkcast #15
        + Class [java/util/Collection]
      [33] astore_2 v2
      [34] aload_2 v2
      [35] invokeinterface #40
        + InterfaceMethodref [java/util/Collection.clear ()V]
      [40] goto -25 (target=15)
      [43] aload_0 v0
      [44] getfield #23
        + Fieldref [a/a/a/c/e.a Ljava/util/Map;]
      [47] invokeinterface #46
        + InterfaceMethodref [java/util/Map.clear ()V]
      [52] aload_0 v0
      [53] iconst_0
      [54] putfield #24
        + Fieldref [a/a/a/c/e.b I]
      [57] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [15] Var: ...[a:java/util/Iterator], Stack: (empty)
        - [43] Var: -1, Stack: (empty)
  + Method:       a(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;
    Access flags: 0x0
      = java.util.Collection a(java.lang.Object,java.util.Collection)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 73, locals = 3, stack = 6):
      [0] aload_2 v2
      [1] instanceof #22
        + Class [java/util/SortedSet]
      [4] ifeq +18 (target=22)
      [7] new #12
        + Class [a/a/a/c/s]
      [10] dup
      [11] aload_0 v0
      [12] aload_1 v1
      [13] aload_2 v2
      [14] checkcast #22
        + Class [java/util/SortedSet]
      [17] aconst_null
      [18] invokespecial #38
        + Methodref [a/a/a/c/s.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/SortedSet;La/a/a/c/n;)V]
      [21] areturn
      [22] aload_2 v2
      [23] instanceof #20
        + Class [java/util/Set]
      [26] ifeq +17 (target=43)
      [29] new #11
        + Class [a/a/a/c/r]
      [32] dup
      [33] aload_0 v0
      [34] aload_1 v1
      [35] aload_2 v2
      [36] checkcast #20
        + Class [java/util/Set]
      [39] invokespecial #37
        + Methodref [a/a/a/c/r.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/Set;)V]
      [42] areturn
      [43] aload_2 v2
      [44] instanceof #17
        + Class [java/util/List]
      [47] ifeq +14 (target=61)
      [50] aload_0 v0
      [51] aload_1 v1
      [52] aload_2 v2
      [53] checkcast #17
        + Class [java/util/List]
      [56] aconst_null
      [57] invokespecial #28
        + Methodref [a/a/a/c/e.a (Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)Ljava/util/List;]
      [60] areturn
      [61] new #9
        + Class [a/a/a/c/n]
      [64] dup
      [65] aload_0 v0
      [66] aload_1 v1
      [67] aload_2 v2
      [68] aconst_null
      [69] invokespecial #35
        + Methodref [a/a/a/c/n.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
      [72] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [22] Var: ..., Stack: (empty)
        - [43] Var: ..., Stack: (empty)
        - [61] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)Ljava/util/List;
    Access flags: 0x2
      = private java.util.List a(java.lang.Object,java.util.List,a.a.a.c.n)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 33, locals = 4, stack = 6):
      [0] aload_2 v2
      [1] instanceof #19
        + Class [java/util/RandomAccess]
      [4] ifeq +17 (target=21)
      [7] new #6
        + Class [a/a/a/c/k]
      [10] dup
      [11] aload_0 v0
      [12] aload_1 v1
      [13] aload_2 v2
      [14] aload_3 v3
      [15] invokespecial #32
        + Methodref [a/a/a/c/k.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)V]
      [18] goto +14 (target=32)
      [21] new #10
        + Class [a/a/a/c/p]
      [24] dup
      [25] aload_0 v0
      [26] aload_1 v1
      [27] aload_2 v2
      [28] aload_3 v3
      [29] invokespecial #36
        + Methodref [a/a/a/c/p.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)V]
      [32] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [21] Var: ..., Stack: (empty)
        - [32] Var: ..., Stack: [a:a/a/a/c/p]
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/util/Collection;)Ljava/util/Iterator;
    Access flags: 0x2
      = private java.util.Iterator a(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 26, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] instanceof #17
        + Class [java/util/List]
      [4] ifeq +15 (target=19)
      [7] aload_1 v1
      [8] checkcast #17
        + Class [java/util/List]
      [11] invokeinterface #45
        + InterfaceMethodref [java/util/List.listIterator ()Ljava/util/ListIterator;]
      [16] goto +9 (target=25)
      [19] aload_1 v1
      [20] invokeinterface #41
        + InterfaceMethodref [java/util/Collection.iterator ()Ljava/util/Iterator;]
      [25] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [19] Var: ..., Stack: (empty)
        - [25] Var: ..., Stack: [a:java/util/Iterator]
  + Method:       c()Ljava/util/Set;
    Access flags: 0x0
      = java.util.Set c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 41, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] getfield #23
        + Fieldref [a/a/a/c/e.a Ljava/util/Map;]
      [4] instanceof #21
        + Class [java/util/SortedMap]
      [7] ifeq +21 (target=28)
      [10] new #8
        + Class [a/a/a/c/m]
      [13] dup
      [14] aload_0 v0
      [15] aload_0 v0
      [16] getfield #23
        + Fieldref [a/a/a/c/e.a Ljava/util/Map;]
      [19] checkcast #21
        + Class [java/util/SortedMap]
      [22] invokespecial #34
        + Methodref [a/a/a/c/m.<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
      [25] goto +15 (target=40)
      [28] new #5
        + Class [a/a/a/c/i]
      [31] dup
      [32] aload_0 v0
      [33] aload_0 v0
      [34] getfield #23
        + Fieldref [a/a/a/c/e.a Ljava/util/Map;]
      [37] invokespecial #31
        + Methodref [a/a/a/c/i.<init> (La/a/a/c/e;Ljava/util/Map;)V]
      [40] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [28] Var: ..., Stack: (empty)
        - [40] Var: ..., Stack: [a:a/a/a/c/i]
  + Method:       a(Ljava/lang/Object;)I
    Access flags: 0x2
      = private int a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 43, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] getfield #23
        + Fieldref [a/a/a/c/e.a Ljava/util/Map;]
      [4] aload_1 v1
      [5] invokestatic #26
        + Methodref [a/a/a/c/ct.c (Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;]
      [8] checkcast #15
        + Class [java/util/Collection]
      [11] astore_2 v2
      [12] iconst_0
      [13] istore_3 v3
      [14] aload_2 v2
      [15] ifnull +26 (target=41)
      [18] aload_2 v2
      [19] invokeinterface #42
        + InterfaceMethodref [java/util/Collection.size ()I]
      [24] istore_3 v3
      [25] aload_2 v2
      [26] invokeinterface #40
        + InterfaceMethodref [java/util/Collection.clear ()V]
      [31] aload_0 v0
      [32] dup
      [33] getfield #24
        + Fieldref [a/a/a/c/e.b I]
      [36] iload_3 v3
      [37] isub
      [38] putfield #24
        + Fieldref [a/a/a/c/e.b I]
      [41] iload_3 v3
      [42] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [41] Var: ...[a:java/util/Collection][i], Stack: (empty)
  + Method:       d()Ljava/util/Map;
    Access flags: 0x0
      = java.util.Map d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 41, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] getfield #23
        + Fieldref [a/a/a/c/e.a Ljava/util/Map;]
      [4] instanceof #21
        + Class [java/util/SortedMap]
      [7] ifeq +21 (target=28)
      [10] new #7
        + Class [a/a/a/c/l]
      [13] dup
      [14] aload_0 v0
      [15] aload_0 v0
      [16] getfield #23
        + Fieldref [a/a/a/c/e.a Ljava/util/Map;]
      [19] checkcast #21
        + Class [java/util/SortedMap]
      [22] invokespecial #33
        + Methodref [a/a/a/c/l.<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
      [25] goto +15 (target=40)
      [28] new #4
        + Class [a/a/a/c/f]
      [31] dup
      [32] aload_0 v0
      [33] aload_0 v0
      [34] getfield #23
        + Fieldref [a/a/a/c/e.a Ljava/util/Map;]
      [37] invokespecial #30
        + Methodref [a/a/a/c/f.<init> (La/a/a/c/e;Ljava/util/Map;)V]
      [40] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [28] Var: ..., Stack: (empty)
        - [40] Var: ..., Stack: [a:a/a/a/c/f]
  + Method:       a(La/a/a/c/e;)Ljava/util/Map;
    Access flags: 0x1008
      = static synthetic java.util.Map a(a.a.a.c.e)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #23
        + Fieldref [a/a/a/c/e.a Ljava/util/Map;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/c/e;Ljava/util/Collection;)Ljava/util/Iterator;
    Access flags: 0x1008
      = static synthetic java.util.Iterator a(a.a.a.c.e,java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #29
        + Methodref [a/a/a/c/e.a (Ljava/util/Collection;)Ljava/util/Iterator;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/c/e;)I
    Access flags: 0x1008
      = static synthetic int b(a.a.a.c.e)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] dup
      [2] getfield #24
        + Fieldref [a/a/a/c/e.b I]
      [5] dup_x1
      [6] iconst_1
      [7] isub
      [8] putfield #24
        + Fieldref [a/a/a/c/e.b I]
      [11] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(La/a/a/c/e;)I
    Access flags: 0x1008
      = static synthetic int c(a.a.a.c.e)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] dup
      [2] getfield #24
        + Fieldref [a/a/a/c/e.b I]
      [5] dup_x1
      [6] iconst_1
      [7] iadd
      [8] putfield #24
        + Fieldref [a/a/a/c/e.b I]
      [11] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/c/e;I)I
    Access flags: 0x1008
      = static synthetic int a(a.a.a.c.e,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] dup
      [2] getfield #24
        + Fieldref [a/a/a/c/e.b I]
      [5] iload_1 v1
      [6] iadd
      [7] dup_x1
      [8] putfield #24
        + Fieldref [a/a/a/c/e.b I]
      [11] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/c/e;I)I
    Access flags: 0x1008
      = static synthetic int b(a.a.a.c.e,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] dup
      [2] getfield #24
        + Fieldref [a/a/a/c/e.b I]
      [5] iload_1 v1
      [6] isub
      [7] dup_x1
      [8] putfield #24
        + Fieldref [a/a/a/c/e.b I]
      [11] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)Ljava/util/List;
    Access flags: 0x1008
      = static synthetic java.util.List a(a.a.a.c.e,java.lang.Object,java.util.List,a.a.a.c.n)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 4, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] aload_3 v3
      [4] invokespecial #28
        + Methodref [a/a/a/c/e.a (Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)Ljava/util/List;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/c/e;Ljava/lang/Object;)I
    Access flags: 0x1008
      = static synthetic int a(a.a.a.c.e,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #27
        + Methodref [a/a/a/c/e.a (Ljava/lang/Object;)I]
      [5] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/f
  Superclass:    a/a/a/c/cz
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.f extends a.a.a.c.cz

Interfaces (count = 0):

Constant Pool (count = 118):
  + Class [a/a/a/c/ck]
  + Class [a/a/a/c/ct]
  + Class [a/a/a/c/cz]
  + Class [a/a/a/c/e]
  + Class [a/a/a/c/f]
  + Class [a/a/a/c/g]
  + Class [a/a/a/c/h]
  + Class [java/lang/Object]
  + Class [java/util/Collection]
  + Class [java/util/Map]
  + Class [java/util/Map$Entry]
  + Fieldref [a/a/a/c/f.a Ljava/util/Map;]
  + Fieldref [a/a/a/c/f.b La/a/a/c/e;]
  + Methodref [a/a/a/c/ck.d (Ljava/util/Iterator;)V]
  + Methodref [a/a/a/c/ct.a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + Methodref [a/a/a/c/ct.a (Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/ct.b (Ljava/util/Map;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/cz.<init> ()V]
  + Methodref [a/a/a/c/e.a ()Ljava/util/Collection;]
  + Methodref [a/a/a/c/e.a (La/a/a/c/e;)Ljava/util/Map;]
  + Methodref [a/a/a/c/e.a (Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;]
  + Methodref [a/a/a/c/e.b ()V]
  + Methodref [a/a/a/c/e.b (La/a/a/c/e;I)I]
  + Methodref [a/a/a/c/e.e ()Ljava/util/Set;]
  + Methodref [a/a/a/c/f.a (Ljava/lang/Object;)Ljava/util/Collection;]
  + Methodref [a/a/a/c/f.b (Ljava/lang/Object;)Ljava/util/Collection;]
  + Methodref [a/a/a/c/g.<init> (La/a/a/c/f;)V]
  + Methodref [a/a/a/c/h.<init> (La/a/a/c/f;)V]
  + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
  + InterfaceMethodref [java/util/Collection.addAll (Ljava/util/Collection;)Z]
  + InterfaceMethodref [java/util/Collection.clear ()V]
  + InterfaceMethodref [java/util/Collection.size ()I]
  + InterfaceMethodref [java/util/Map.equals (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Map.hashCode ()I]
  + InterfaceMethodref [java/util/Map.remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.size ()I]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/f;)V]
  + NameAndType [a ()Ljava/util/Collection;]
  + NameAndType [a (La/a/a/c/e;)Ljava/util/Map;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/util/Collection;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + NameAndType [a (Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;]
  + NameAndType [a (Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a Ljava/util/Map;]
  + NameAndType [addAll (Ljava/util/Collection;)Z]
  + NameAndType [b ()V]
  + NameAndType [b (La/a/a/c/e;I)I]
  + NameAndType [b (Ljava/lang/Object;)Ljava/util/Collection;]
  + NameAndType [b (Ljava/util/Map;Ljava/lang/Object;)Z]
  + NameAndType [b La/a/a/c/e;]
  + NameAndType [clear ()V]
  + NameAndType [d (Ljava/util/Iterator;)V]
  + NameAndType [e ()Ljava/util/Set;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [hashCode ()I]
  + NameAndType [remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [size ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/c/e;)Ljava/util/Map;]
  + Utf8 [(La/a/a/c/e;I)I]
  + Utf8 [(La/a/a/c/e;Ljava/util/Map;)V]
  + Utf8 [(La/a/a/c/f;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/util/Collection;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + Utf8 [(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;]
  + Utf8 [(Ljava/util/Collection;)Z]
  + Utf8 [(Ljava/util/Iterator;)V]
  + Utf8 [(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;]
  + Utf8 [(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/util/Map;Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/e;]
  + Utf8 [Ljava/util/Map;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [a/a/a/c/ct]
  + Utf8 [a/a/a/c/cz]
  + Utf8 [a/a/a/c/e]
  + Utf8 [a/a/a/c/f]
  + Utf8 [a/a/a/c/g]
  + Utf8 [a/a/a/c/h]
  + Utf8 [addAll]
  + Utf8 [b]
  + Utf8 [clear]
  + Utf8 [containsKey]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [get]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [hashCode]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [keySet]
  + Utf8 [remove]
  + Utf8 [size]
  + Utf8 [toString]

Fields (count = 2):
  + Field:        a Ljava/util/Map;
    Access flags: 0x90
      = final transient java.util.Map a
  + Field:        b La/a/a/c/e;
    Access flags: 0x1010
      = final synthetic a.a.a.c.e b

Methods (count = 14):
  - Method:       <init>(La/a/a/c/e;Ljava/util/Map;)V
    Access flags: 0x0
      = f(a.a.a.c.e,java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #13
        + Fieldref [a/a/a/c/f.b La/a/a/c/e;]
      [5] aload_0 v0
      [6] invokespecial #18
        + Methodref [a/a/a/c/cz.<init> ()V]
      [9] aload_0 v0
      [10] aload_2 v2
      [11] putfield #12
        + Fieldref [a/a/a/c/f.a Ljava/util/Map;]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/Set;
    Access flags: 0x4
      = protected java.util.Set a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #6
        + Class [a/a/a/c/g]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #27
        + Methodref [a/a/a/c/g.<init> (La/a/a/c/f;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       containsKey(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean containsKey(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/f.a Ljava/util/Map;]
      [4] aload_1 v1
      [5] invokestatic #17
        + Methodref [a/a/a/c/ct.b (Ljava/util/Map;Ljava/lang/Object;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Ljava/util/Collection;
    Access flags: 0x1
      = public java.util.Collection a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 30, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/f.a Ljava/util/Map;]
      [4] aload_1 v1
      [5] invokestatic #16
        + Methodref [a/a/a/c/ct.a (Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;]
      [8] checkcast #9
        + Class [java/util/Collection]
      [11] astore_2 v2
      [12] aload_2 v2
      [13] ifnonnull +5 (target=18)
      [16] aconst_null
      [17] areturn
      [18] aload_1 v1
      [19] astore_3 v3
      [20] aload_0 v0
      [21] getfield #13
        + Fieldref [a/a/a/c/f.b La/a/a/c/e;]
      [24] aload_3 v3
      [25] aload_2 v2
      [26] invokevirtual #21
        + Methodref [a/a/a/c/e.a (Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;]
      [29] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [18] Var: ...[a:java/util/Collection], Stack: (empty)
  + Method:       keySet()Ljava/util/Set;
    Access flags: 0x1
      = public java.util.Set keySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #13
        + Fieldref [a/a/a/c/f.b La/a/a/c/e;]
      [4] invokevirtual #24
        + Methodref [a/a/a/c/e.e ()Ljava/util/Set;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/f.a Ljava/util/Map;]
      [4] invokeinterface #36
        + InterfaceMethodref [java/util/Map.size ()I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;)Ljava/util/Collection;
    Access flags: 0x1
      = public java.util.Collection b(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 58, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/f.a Ljava/util/Map;]
      [4] aload_1 v1
      [5] invokeinterface #35
        + InterfaceMethodref [java/util/Map.remove (Ljava/lang/Object;)Ljava/lang/Object;]
      [10] checkcast #9
        + Class [java/util/Collection]
      [13] astore_2 v2
      [14] aload_2 v2
      [15] ifnonnull +5 (target=20)
      [18] aconst_null
      [19] areturn
      [20] aload_0 v0
      [21] getfield #13
        + Fieldref [a/a/a/c/f.b La/a/a/c/e;]
      [24] invokevirtual #19
        + Methodref [a/a/a/c/e.a ()Ljava/util/Collection;]
      [27] astore_3 v3
      [28] aload_3 v3
      [29] aload_2 v2
      [30] invokeinterface #30
        + InterfaceMethodref [java/util/Collection.addAll (Ljava/util/Collection;)Z]
      [35] pop
      [36] aload_0 v0
      [37] getfield #13
        + Fieldref [a/a/a/c/f.b La/a/a/c/e;]
      [40] aload_2 v2
      [41] invokeinterface #32
        + InterfaceMethodref [java/util/Collection.size ()I]
      [46] invokestatic #23
        + Methodref [a/a/a/c/e.b (La/a/a/c/e;I)I]
      [49] pop
      [50] aload_2 v2
      [51] invokeinterface #31
        + InterfaceMethodref [java/util/Collection.clear ()V]
      [56] aload_3 v3
      [57] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [20] Var: ...[a:java/util/Collection], Stack: (empty)
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 24, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] ifacmpeq +16 (target=18)
      [5] aload_0 v0
      [6] getfield #12
        + Fieldref [a/a/a/c/f.a Ljava/util/Map;]
      [9] aload_1 v1
      [10] invokeinterface #33
        + InterfaceMethodref [java/util/Map.equals (Ljava/lang/Object;)Z]
      [15] ifeq +7 (target=22)
      [18] iconst_1
      [19] goto +4 (target=23)
      [22] iconst_0
      [23] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [18] Var: ..., Stack: (empty)
        - [22] Var: ..., Stack: (empty)
        - [23] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/f.a Ljava/util/Map;]
      [4] invokeinterface #34
        + InterfaceMethodref [java/util/Map.hashCode ()I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/f.a Ljava/util/Map;]
      [4] invokevirtual #29
        + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       clear()V
    Access flags: 0x1
      = public void clear()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 36, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/f.a Ljava/util/Map;]
      [4] aload_0 v0
      [5] getfield #13
        + Fieldref [a/a/a/c/f.b La/a/a/c/e;]
      [8] invokestatic #20
        + Methodref [a/a/a/c/e.a (La/a/a/c/e;)Ljava/util/Map;]
      [11] ifacmpne +13 (target=24)
      [14] aload_0 v0
      [15] getfield #13
        + Fieldref [a/a/a/c/f.b La/a/a/c/e;]
      [18] invokevirtual #22
        + Methodref [a/a/a/c/e.b ()V]
      [21] goto +14 (target=35)
      [24] new #7
        + Class [a/a/a/c/h]
      [27] dup
      [28] aload_0 v0
      [29] invokespecial #28
        + Methodref [a/a/a/c/h.<init> (La/a/a/c/f;)V]
      [32] invokestatic #14
        + Methodref [a/a/a/c/ck.d (Ljava/util/Iterator;)V]
      [35] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [24] Var: ..., Stack: (empty)
        - [35] Var: ..., Stack: (empty)
  + Method:       a(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
    Access flags: 0x0
      = java.util.Map$Entry a(java.util.Map$Entry)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 29, locals = 3, stack = 4):
      [0] aload_1 v1
      [1] invokeinterface #37
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [6] astore_2 v2
      [7] aload_2 v2
      [8] aload_0 v0
      [9] getfield #13
        + Fieldref [a/a/a/c/f.b La/a/a/c/e;]
      [12] aload_2 v2
      [13] aload_1 v1
      [14] invokeinterface #38
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [19] checkcast #9
        + Class [java/util/Collection]
      [22] invokevirtual #21
        + Methodref [a/a/a/c/e.a (Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;]
      [25] invokestatic #15
        + Methodref [a/a/a/c/ct.a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;]
      [28] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1001
      = public synthetic java.lang.Object remove(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #26
        + Methodref [a/a/a/c/f.b (Ljava/lang/Object;)Ljava/util/Collection;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1001
      = public synthetic java.lang.Object get(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #25
        + Methodref [a/a/a/c/f.a (Ljava/lang/Object;)Ljava/util/Collection;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/g
  Superclass:    a/a/a/c/cy
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.g extends a.a.a.c.cy

Interfaces (count = 0):

Constant Pool (count = 59):
  + Class [a/a/a/c/aa]
  + Class [a/a/a/c/cy]
  + Class [a/a/a/c/e]
  + Class [a/a/a/c/f]
  + Class [a/a/a/c/g]
  + Class [a/a/a/c/h]
  + Class [java/util/Map]
  + Class [java/util/Map$Entry]
  + Fieldref [a/a/a/c/f.a Ljava/util/Map;]
  + Fieldref [a/a/a/c/f.b La/a/a/c/e;]
  + Fieldref [a/a/a/c/g.a La/a/a/c/f;]
  + Methodref [a/a/a/c/aa.a (Ljava/util/Collection;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/cy.<init> ()V]
  + Methodref [a/a/a/c/e.a (La/a/a/c/e;Ljava/lang/Object;)I]
  + Methodref [a/a/a/c/g.contains (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/h.<init> (La/a/a/c/f;)V]
  + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/f;)V]
  + NameAndType [a (La/a/a/c/e;Ljava/lang/Object;)I]
  + NameAndType [a (Ljava/util/Collection;Ljava/lang/Object;)Z]
  + NameAndType [a La/a/a/c/f;]
  + NameAndType [a Ljava/util/Map;]
  + NameAndType [b La/a/a/c/e;]
  + NameAndType [contains (Ljava/lang/Object;)Z]
  + NameAndType [entrySet ()Ljava/util/Set;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Map;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/c/e;Ljava/lang/Object;)I]
  + Utf8 [(La/a/a/c/f;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Collection;Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/e;]
  + Utf8 [La/a/a/c/f;]
  + Utf8 [Ljava/util/Map;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/aa]
  + Utf8 [a/a/a/c/cy]
  + Utf8 [a/a/a/c/e]
  + Utf8 [a/a/a/c/f]
  + Utf8 [a/a/a/c/g]
  + Utf8 [a/a/a/c/h]
  + Utf8 [b]
  + Utf8 [contains]
  + Utf8 [entrySet]
  + Utf8 [getKey]
  + Utf8 [iterator]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [remove]

Fields (count = 1):
  + Field:        a La/a/a/c/f;
    Access flags: 0x1010
      = final synthetic a.a.a.c.f a

Methods (count = 5):
  - Method:       <init>(La/a/a/c/f;)V
    Access flags: 0x0
      = g(a.a.a.c.f)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #11
        + Fieldref [a/a/a/c/g.a La/a/a/c/f;]
      [5] aload_0 v0
      [6] invokespecial #13
        + Methodref [a/a/a/c/cy.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/Map;
    Access flags: 0x0
      = java.util.Map a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/c/g.a La/a/a/c/f;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 1, stack = 3):
      [0] new #6
        + Class [a/a/a/c/h]
      [3] dup
      [4] aload_0 v0
      [5] getfield #11
        + Fieldref [a/a/a/c/g.a La/a/a/c/f;]
      [8] invokespecial #16
        + Methodref [a/a/a/c/h.<init> (La/a/a/c/f;)V]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/c/g.a La/a/a/c/f;]
      [4] getfield #9
        + Fieldref [a/a/a/c/f.a Ljava/util/Map;]
      [7] invokeinterface #17
        + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
      [12] aload_1 v1
      [13] invokestatic #12
        + Methodref [a/a/a/c/aa.a (Ljava/util/Collection;Ljava/lang/Object;)Z]
      [16] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean remove(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 34, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #15
        + Methodref [a/a/a/c/g.contains (Ljava/lang/Object;)Z]
      [5] ifne +5 (target=10)
      [8] iconst_0
      [9] ireturn
      [10] aload_1 v1
      [11] checkcast #8
        + Class [java/util/Map$Entry]
      [14] astore_2 v2
      [15] aload_0 v0
      [16] getfield #11
        + Fieldref [a/a/a/c/g.a La/a/a/c/f;]
      [19] getfield #10
        + Fieldref [a/a/a/c/f.b La/a/a/c/e;]
      [22] aload_2 v2
      [23] invokeinterface #18
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [28] invokestatic #14
        + Methodref [a/a/a/c/e.a (La/a/a/c/e;Ljava/lang/Object;)I]
      [31] pop
      [32] iconst_1
      [33] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [10] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/h
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.h extends java.lang.Object

Interfaces (count = 1):
  + Class [java/util/Iterator]

Constant Pool (count = 81):
  + Class [a/a/a/c/e]
  + Class [a/a/a/c/f]
  + Class [a/a/a/c/h]
  + Class [java/lang/Object]
  + Class [java/util/Collection]
  + Class [java/util/Iterator]
  + Class [java/util/Map]
  + Class [java/util/Map$Entry]
  + Class [java/util/Set]
  + Fieldref [a/a/a/c/f.a Ljava/util/Map;]
  + Fieldref [a/a/a/c/f.b La/a/a/c/e;]
  + Fieldref [a/a/a/c/h.a Ljava/util/Iterator;]
  + Fieldref [a/a/a/c/h.b Ljava/util/Collection;]
  + Fieldref [a/a/a/c/h.c La/a/a/c/f;]
  + Methodref [a/a/a/c/e.b (La/a/a/c/e;I)I]
  + Methodref [a/a/a/c/f.a (Ljava/util/Map$Entry;)Ljava/util/Map$Entry;]
  + Methodref [a/a/a/c/h.a ()Ljava/util/Map$Entry;]
  + Methodref [java/lang/Object.<init> ()V]
  + InterfaceMethodref [java/util/Collection.clear ()V]
  + InterfaceMethodref [java/util/Collection.size ()I]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Iterator.remove ()V]
  + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
  + NameAndType [<init> ()V]
  + NameAndType [a ()Ljava/util/Map$Entry;]
  + NameAndType [a (Ljava/util/Map$Entry;)Ljava/util/Map$Entry;]
  + NameAndType [a Ljava/util/Iterator;]
  + NameAndType [a Ljava/util/Map;]
  + NameAndType [b (La/a/a/c/e;I)I]
  + NameAndType [b La/a/a/c/e;]
  + NameAndType [b Ljava/util/Collection;]
  + NameAndType [c La/a/a/c/f;]
  + NameAndType [clear ()V]
  + NameAndType [entrySet ()Ljava/util/Set;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [hasNext ()Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [remove ()V]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Map$Entry;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/c/e;I)I]
  + Utf8 [(La/a/a/c/f;)V]
  + Utf8 [(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/e;]
  + Utf8 [La/a/a/c/f;]
  + Utf8 [Ljava/util/Collection;]
  + Utf8 [Ljava/util/Iterator;]
  + Utf8 [Ljava/util/Map;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/e]
  + Utf8 [a/a/a/c/f]
  + Utf8 [a/a/a/c/h]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clear]
  + Utf8 [entrySet]
  + Utf8 [getValue]
  + Utf8 [hasNext]
  + Utf8 [iterator]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [java/util/Set]
  + Utf8 [next]
  + Utf8 [remove]
  + Utf8 [size]

Fields (count = 3):
  + Field:        a Ljava/util/Iterator;
    Access flags: 0x10
      = final java.util.Iterator a
  + Field:        b Ljava/util/Collection;
    Access flags: 0x0
      = java.util.Collection b
  + Field:        c La/a/a/c/f;
    Access flags: 0x1010
      = final synthetic a.a.a.c.f c

Methods (count = 5):
  - Method:       <init>(La/a/a/c/f;)V
    Access flags: 0x0
      = h(a.a.a.c.f)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 31, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #14
        + Fieldref [a/a/a/c/h.c La/a/a/c/f;]
      [5] aload_0 v0
      [6] invokespecial #18
        + Methodref [java/lang/Object.<init> ()V]
      [9] aload_0 v0
      [10] aload_0 v0
      [11] getfield #14
        + Fieldref [a/a/a/c/h.c La/a/a/c/f;]
      [14] getfield #10
        + Fieldref [a/a/a/c/f.a Ljava/util/Map;]
      [17] invokeinterface #24
        + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
      [22] invokeinterface #26
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [27] putfield #12
        + Fieldref [a/a/a/c/h.a Ljava/util/Iterator;]
      [30] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hasNext()Z
    Access flags: 0x1
      = public boolean hasNext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/h.a Ljava/util/Iterator;]
      [4] invokeinterface #21
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/Map$Entry;
    Access flags: 0x1
      = public java.util.Map$Entry a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 35, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/h.a Ljava/util/Iterator;]
      [4] invokeinterface #22
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [9] checkcast #8
        + Class [java/util/Map$Entry]
      [12] astore_1 v1
      [13] aload_0 v0
      [14] aload_1 v1
      [15] invokeinterface #25
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [20] checkcast #5
        + Class [java/util/Collection]
      [23] putfield #13
        + Fieldref [a/a/a/c/h.b Ljava/util/Collection;]
      [26] aload_0 v0
      [27] getfield #14
        + Fieldref [a/a/a/c/h.c La/a/a/c/f;]
      [30] aload_1 v1
      [31] invokevirtual #16
        + Methodref [a/a/a/c/f.a (Ljava/util/Map$Entry;)Ljava/util/Map$Entry;]
      [34] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove()V
    Access flags: 0x1
      = public void remove()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 39, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/h.a Ljava/util/Iterator;]
      [4] invokeinterface #23
        + InterfaceMethodref [java/util/Iterator.remove ()V]
      [9] aload_0 v0
      [10] getfield #14
        + Fieldref [a/a/a/c/h.c La/a/a/c/f;]
      [13] getfield #11
        + Fieldref [a/a/a/c/f.b La/a/a/c/e;]
      [16] aload_0 v0
      [17] getfield #13
        + Fieldref [a/a/a/c/h.b Ljava/util/Collection;]
      [20] invokeinterface #20
        + InterfaceMethodref [java/util/Collection.size ()I]
      [25] invokestatic #15
        + Methodref [a/a/a/c/e.b (La/a/a/c/e;I)I]
      [28] pop
      [29] aload_0 v0
      [30] getfield #13
        + Fieldref [a/a/a/c/h.b Ljava/util/Collection;]
      [33] invokeinterface #19
        + InterfaceMethodref [java/util/Collection.clear ()V]
      [38] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x1001
      = public synthetic java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #17
        + Methodref [a/a/a/c/h.a ()Ljava/util/Map$Entry;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/i
  Superclass:    a/a/a/c/da
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.i extends a.a.a.c.da

Interfaces (count = 0):

Constant Pool (count = 79):
  + Class [a/a/a/c/ck]
  + Class [a/a/a/c/da]
  + Class [a/a/a/c/e]
  + Class [a/a/a/c/i]
  + Class [a/a/a/c/j]
  + Class [java/util/Collection]
  + Class [java/util/Map]
  + Class [java/util/Set]
  + Fieldref [a/a/a/c/i.a La/a/a/c/e;]
  + Methodref [a/a/a/c/ck.d (Ljava/util/Iterator;)V]
  + Methodref [a/a/a/c/da.<init> (Ljava/util/Map;)V]
  + Methodref [a/a/a/c/e.b (La/a/a/c/e;I)I]
  + Methodref [a/a/a/c/i.b ()Ljava/util/Map;]
  + Methodref [a/a/a/c/i.iterator ()Ljava/util/Iterator;]
  + Methodref [a/a/a/c/j.<init> (La/a/a/c/i;Ljava/util/Iterator;)V]
  + InterfaceMethodref [java/util/Collection.clear ()V]
  + InterfaceMethodref [java/util/Collection.size ()I]
  + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Map.keySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Map.remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Set.containsAll (Ljava/util/Collection;)Z]
  + InterfaceMethodref [java/util/Set.equals (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Set.hashCode ()I]
  + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
  + NameAndType [<init> (La/a/a/c/i;Ljava/util/Iterator;)V]
  + NameAndType [<init> (Ljava/util/Map;)V]
  + NameAndType [a La/a/a/c/e;]
  + NameAndType [b ()Ljava/util/Map;]
  + NameAndType [b (La/a/a/c/e;I)I]
  + NameAndType [clear ()V]
  + NameAndType [containsAll (Ljava/util/Collection;)Z]
  + NameAndType [d (Ljava/util/Iterator;)V]
  + NameAndType [entrySet ()Ljava/util/Set;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [hashCode ()I]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [keySet ()Ljava/util/Set;]
  + NameAndType [remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Map;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/c/e;I)I]
  + Utf8 [(La/a/a/c/e;Ljava/util/Map;)V]
  + Utf8 [(La/a/a/c/i;Ljava/util/Iterator;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Collection;)Z]
  + Utf8 [(Ljava/util/Iterator;)V]
  + Utf8 [(Ljava/util/Map;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/e;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [a/a/a/c/da]
  + Utf8 [a/a/a/c/e]
  + Utf8 [a/a/a/c/i]
  + Utf8 [a/a/a/c/j]
  + Utf8 [b]
  + Utf8 [clear]
  + Utf8 [containsAll]
  + Utf8 [d]
  + Utf8 [entrySet]
  + Utf8 [equals]
  + Utf8 [hashCode]
  + Utf8 [iterator]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Set]
  + Utf8 [keySet]
  + Utf8 [remove]
  + Utf8 [size]

Fields (count = 1):
  + Field:        a La/a/a/c/e;
    Access flags: 0x1010
      = final synthetic a.a.a.c.e a

Methods (count = 7):
  - Method:       <init>(La/a/a/c/e;Ljava/util/Map;)V
    Access flags: 0x0
      = i(a.a.a.c.e,java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #9
        + Fieldref [a/a/a/c/i.a La/a/a/c/e;]
      [5] aload_0 v0
      [6] aload_2 v2
      [7] invokespecial #11
        + Methodref [a/a/a/c/da.<init> (Ljava/util/Map;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 25, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] invokevirtual #13
        + Methodref [a/a/a/c/i.b ()Ljava/util/Map;]
      [4] invokeinterface #18
        + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
      [9] invokeinterface #24
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [14] astore_1 v1
      [15] new #5
        + Class [a/a/a/c/j]
      [18] dup
      [19] aload_0 v0
      [20] aload_1 v1
      [21] invokespecial #15
        + Methodref [a/a/a/c/j.<init> (La/a/a/c/i;Ljava/util/Iterator;)V]
      [24] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean remove(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 52, locals = 4, stack = 2):
      [0] iconst_0
      [1] istore_2 v2
      [2] aload_0 v0
      [3] invokevirtual #13
        + Methodref [a/a/a/c/i.b ()Ljava/util/Map;]
      [6] aload_1 v1
      [7] invokeinterface #20
        + InterfaceMethodref [java/util/Map.remove (Ljava/lang/Object;)Ljava/lang/Object;]
      [12] checkcast #6
        + Class [java/util/Collection]
      [15] astore_3 v3
      [16] aload_3 v3
      [17] ifnull +25 (target=42)
      [20] aload_3 v3
      [21] invokeinterface #17
        + InterfaceMethodref [java/util/Collection.size ()I]
      [26] istore_2 v2
      [27] aload_3 v3
      [28] invokeinterface #16
        + InterfaceMethodref [java/util/Collection.clear ()V]
      [33] aload_0 v0
      [34] getfield #9
        + Fieldref [a/a/a/c/i.a La/a/a/c/e;]
      [37] iload_2 v2
      [38] invokestatic #12
        + Methodref [a/a/a/c/e.b (La/a/a/c/e;I)I]
      [41] pop
      [42] iload_2 v2
      [43] ifle +7 (target=50)
      [46] iconst_1
      [47] goto +4 (target=51)
      [50] iconst_0
      [51] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [42] Var: ...[i][a:java/util/Collection], Stack: (empty)
        - [50] Var: ..., Stack: (empty)
        - [51] Var: ..., Stack: [i]
  + Method:       clear()V
    Access flags: 0x1
      = public void clear()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #14
        + Methodref [a/a/a/c/i.iterator ()Ljava/util/Iterator;]
      [4] invokestatic #10
        + Methodref [a/a/a/c/ck.d (Ljava/util/Iterator;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       containsAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean containsAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #13
        + Methodref [a/a/a/c/i.b ()Ljava/util/Map;]
      [4] invokeinterface #19
        + InterfaceMethodref [java/util/Map.keySet ()Ljava/util/Set;]
      [9] aload_1 v1
      [10] invokeinterface #21
        + InterfaceMethodref [java/util/Set.containsAll (Ljava/util/Collection;)Z]
      [15] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 29, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] ifacmpeq +21 (target=23)
      [5] aload_0 v0
      [6] invokevirtual #13
        + Methodref [a/a/a/c/i.b ()Ljava/util/Map;]
      [9] invokeinterface #19
        + InterfaceMethodref [java/util/Map.keySet ()Ljava/util/Set;]
      [14] aload_1 v1
      [15] invokeinterface #22
        + InterfaceMethodref [java/util/Set.equals (Ljava/lang/Object;)Z]
      [20] ifeq +7 (target=27)
      [23] iconst_1
      [24] goto +4 (target=28)
      [27] iconst_0
      [28] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [23] Var: ..., Stack: (empty)
        - [27] Var: ..., Stack: (empty)
        - [28] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #13
        + Methodref [a/a/a/c/i.b ()Ljava/util/Map;]
      [4] invokeinterface #19
        + InterfaceMethodref [java/util/Map.keySet ()Ljava/util/Set;]
      [9] invokeinterface #23
        + InterfaceMethodref [java/util/Set.hashCode ()I]
      [14] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/j
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.j extends java.lang.Object

Interfaces (count = 1):
  + Class [java/util/Iterator]

Constant Pool (count = 69):
  + Class [a/a/a/c/e]
  + Class [a/a/a/c/i]
  + Class [a/a/a/c/j]
  + Class [a/a/a/c/z]
  + Class [java/lang/Object]
  + Class [java/util/Collection]
  + Class [java/util/Iterator]
  + Class [java/util/Map$Entry]
  + Fieldref [a/a/a/c/i.a La/a/a/c/e;]
  + Fieldref [a/a/a/c/j.a Ljava/util/Map$Entry;]
  + Fieldref [a/a/a/c/j.b Ljava/util/Iterator;]
  + Fieldref [a/a/a/c/j.c La/a/a/c/i;]
  + Methodref [a/a/a/c/e.b (La/a/a/c/e;I)I]
  + Methodref [a/a/a/c/z.a (Z)V]
  + Methodref [java/lang/Object.<init> ()V]
  + InterfaceMethodref [java/util/Collection.clear ()V]
  + InterfaceMethodref [java/util/Collection.size ()I]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Iterator.remove ()V]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Z)V]
  + NameAndType [a La/a/a/c/e;]
  + NameAndType [a Ljava/util/Map$Entry;]
  + NameAndType [b (La/a/a/c/e;I)I]
  + NameAndType [b Ljava/util/Iterator;]
  + NameAndType [c La/a/a/c/i;]
  + NameAndType [clear ()V]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [hasNext ()Z]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [remove ()V]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/c/e;I)I]
  + Utf8 [(La/a/a/c/i;Ljava/util/Iterator;)V]
  + Utf8 [(Z)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/e;]
  + Utf8 [La/a/a/c/i;]
  + Utf8 [Ljava/util/Iterator;]
  + Utf8 [Ljava/util/Map$Entry;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/e]
  + Utf8 [a/a/a/c/i]
  + Utf8 [a/a/a/c/j]
  + Utf8 [a/a/a/c/z]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clear]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [hasNext]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [next]
  + Utf8 [remove]
  + Utf8 [size]

Fields (count = 3):
  + Field:        a Ljava/util/Map$Entry;
    Access flags: 0x0
      = java.util.Map$Entry a
  + Field:        b Ljava/util/Iterator;
    Access flags: 0x1010
      = final synthetic java.util.Iterator b
  + Field:        c La/a/a/c/i;
    Access flags: 0x1010
      = final synthetic a.a.a.c.i c

Methods (count = 4):
  - Method:       <init>(La/a/a/c/i;Ljava/util/Iterator;)V
    Access flags: 0x0
      = j(a.a.a.c.i,java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #12
        + Fieldref [a/a/a/c/j.c La/a/a/c/i;]
      [5] aload_0 v0
      [6] aload_2 v2
      [7] putfield #11
        + Fieldref [a/a/a/c/j.b Ljava/util/Iterator;]
      [10] aload_0 v0
      [11] invokespecial #15
        + Methodref [java/lang/Object.<init> ()V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hasNext()Z
    Access flags: 0x1
      = public boolean hasNext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/c/j.b Ljava/util/Iterator;]
      [4] invokeinterface #18
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 26, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] aload_0 v0
      [2] getfield #11
        + Fieldref [a/a/a/c/j.b Ljava/util/Iterator;]
      [5] invokeinterface #19
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [10] checkcast #8
        + Class [java/util/Map$Entry]
      [13] putfield #10
        + Fieldref [a/a/a/c/j.a Ljava/util/Map$Entry;]
      [16] aload_0 v0
      [17] getfield #10
        + Fieldref [a/a/a/c/j.a Ljava/util/Map$Entry;]
      [20] invokeinterface #21
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [25] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove()V
    Access flags: 0x1
      = public void remove()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 61, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/c/j.a Ljava/util/Map$Entry;]
      [4] ifnull +7 (target=11)
      [7] iconst_1
      [8] goto +4 (target=12)
      [11] iconst_0
      [12] invokestatic #14
        + Methodref [a/a/a/c/z.a (Z)V]
      [15] aload_0 v0
      [16] getfield #10
        + Fieldref [a/a/a/c/j.a Ljava/util/Map$Entry;]
      [19] invokeinterface #22
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [24] checkcast #6
        + Class [java/util/Collection]
      [27] astore_1 v1
      [28] aload_0 v0
      [29] getfield #11
        + Fieldref [a/a/a/c/j.b Ljava/util/Iterator;]
      [32] invokeinterface #20
        + InterfaceMethodref [java/util/Iterator.remove ()V]
      [37] aload_0 v0
      [38] getfield #12
        + Fieldref [a/a/a/c/j.c La/a/a/c/i;]
      [41] getfield #9
        + Fieldref [a/a/a/c/i.a La/a/a/c/e;]
      [44] aload_1 v1
      [45] invokeinterface #17
        + InterfaceMethodref [java/util/Collection.size ()I]
      [50] invokestatic #13
        + Methodref [a/a/a/c/e.b (La/a/a/c/e;I)I]
      [53] pop
      [54] aload_1 v1
      [55] invokeinterface #16
        + InterfaceMethodref [java/util/Collection.clear ()V]
      [60] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [12] Var: ..., Stack: [i]

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/k
  Superclass:    a/a/a/c/p
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.k extends a.a.a.c.p

Interfaces (count = 1):
  + Class [java/util/RandomAccess]

Constant Pool (count = 18):
  + Class [a/a/a/c/k]
  + Class [a/a/a/c/p]
  + Class [java/util/RandomAccess]
  + Fieldref [a/a/a/c/k.a La/a/a/c/e;]
  + Methodref [a/a/a/c/p.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)V]
  + NameAndType [<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)V]
  + NameAndType [a La/a/a/c/e;]
  + Utf8 [(La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/e;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/c/k]
  + Utf8 [a/a/a/c/p]
  + Utf8 [java/util/RandomAccess]

Fields (count = 1):
  + Field:        a La/a/a/c/e;
    Access flags: 0x1010
      = final synthetic a.a.a.c.e a

Methods (count = 1):
  - Method:       <init>(La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)V
    Access flags: 0x0
      = k(a.a.a.c.e,java.lang.Object,java.util.List,a.a.a.c.n)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 15, locals = 5, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #4
        + Fieldref [a/a/a/c/k.a La/a/a/c/e;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] aload_2 v2
      [8] aload_3 v3
      [9] aload v4
      [11] invokespecial #5
        + Methodref [a/a/a/c/p.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/l
  Superclass:    a/a/a/c/f
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.l extends a.a.a.c.f

Interfaces (count = 1):
  + Class [java/util/SortedMap]

Constant Pool (count = 67):
  + Class [a/a/a/c/f]
  + Class [a/a/a/c/l]
  + Class [a/a/a/c/m]
  + Class [java/util/SortedMap]
  + Class [java/util/SortedSet]
  + Fieldref [a/a/a/c/l.a Ljava/util/Map;]
  + Fieldref [a/a/a/c/l.c Ljava/util/SortedSet;]
  + Fieldref [a/a/a/c/l.d La/a/a/c/e;]
  + Methodref [a/a/a/c/f.<init> (La/a/a/c/e;Ljava/util/Map;)V]
  + Methodref [a/a/a/c/l.<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
  + Methodref [a/a/a/c/l.b ()Ljava/util/SortedMap;]
  + Methodref [a/a/a/c/l.c ()Ljava/util/SortedSet;]
  + Methodref [a/a/a/c/l.d ()Ljava/util/SortedSet;]
  + Methodref [a/a/a/c/m.<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
  + InterfaceMethodref [java/util/SortedMap.comparator ()Ljava/util/Comparator;]
  + InterfaceMethodref [java/util/SortedMap.firstKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/SortedMap.headMap (Ljava/lang/Object;)Ljava/util/SortedMap;]
  + InterfaceMethodref [java/util/SortedMap.lastKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/SortedMap.subMap (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;]
  + InterfaceMethodref [java/util/SortedMap.tailMap (Ljava/lang/Object;)Ljava/util/SortedMap;]
  + NameAndType [<init> (La/a/a/c/e;Ljava/util/Map;)V]
  + NameAndType [<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
  + NameAndType [a Ljava/util/Map;]
  + NameAndType [b ()Ljava/util/SortedMap;]
  + NameAndType [c ()Ljava/util/SortedSet;]
  + NameAndType [c Ljava/util/SortedSet;]
  + NameAndType [comparator ()Ljava/util/Comparator;]
  + NameAndType [d ()Ljava/util/SortedSet;]
  + NameAndType [d La/a/a/c/e;]
  + NameAndType [firstKey ()Ljava/lang/Object;]
  + NameAndType [headMap (Ljava/lang/Object;)Ljava/util/SortedMap;]
  + NameAndType [lastKey ()Ljava/lang/Object;]
  + NameAndType [subMap (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;]
  + NameAndType [tailMap (Ljava/lang/Object;)Ljava/util/SortedMap;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Comparator;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()Ljava/util/SortedMap;]
  + Utf8 [()Ljava/util/SortedSet;]
  + Utf8 [(La/a/a/c/e;Ljava/util/Map;)V]
  + Utf8 [(La/a/a/c/e;Ljava/util/SortedMap;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/util/SortedMap;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/e;]
  + Utf8 [Ljava/util/Map;]
  + Utf8 [Ljava/util/SortedSet;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/f]
  + Utf8 [a/a/a/c/l]
  + Utf8 [a/a/a/c/m]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [comparator]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [firstKey]
  + Utf8 [headMap]
  + Utf8 [java/util/SortedMap]
  + Utf8 [java/util/SortedSet]
  + Utf8 [keySet]
  + Utf8 [lastKey]
  + Utf8 [subMap]
  + Utf8 [tailMap]

Fields (count = 2):
  + Field:        c Ljava/util/SortedSet;
    Access flags: 0x0
      = java.util.SortedSet c
  + Field:        d La/a/a/c/e;
    Access flags: 0x1010
      = final synthetic a.a.a.c.e d

Methods (count = 12):
  - Method:       <init>(La/a/a/c/e;Ljava/util/SortedMap;)V
    Access flags: 0x0
      = l(a.a.a.c.e,java.util.SortedMap)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #8
        + Fieldref [a/a/a/c/l.d La/a/a/c/e;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] aload_2 v2
      [8] invokespecial #9
        + Methodref [a/a/a/c/f.<init> (La/a/a/c/e;Ljava/util/Map;)V]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()Ljava/util/SortedMap;
    Access flags: 0x0
      = java.util.SortedMap b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/l.a Ljava/util/Map;]
      [4] checkcast #4
        + Class [java/util/SortedMap]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       comparator()Ljava/util/Comparator;
    Access flags: 0x1
      = public java.util.Comparator comparator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #11
        + Methodref [a/a/a/c/l.b ()Ljava/util/SortedMap;]
      [4] invokeinterface #15
        + InterfaceMethodref [java/util/SortedMap.comparator ()Ljava/util/Comparator;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       firstKey()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object firstKey()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #11
        + Methodref [a/a/a/c/l.b ()Ljava/util/SortedMap;]
      [4] invokeinterface #16
        + InterfaceMethodref [java/util/SortedMap.firstKey ()Ljava/lang/Object;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       lastKey()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object lastKey()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #11
        + Methodref [a/a/a/c/l.b ()Ljava/util/SortedMap;]
      [4] invokeinterface #18
        + InterfaceMethodref [java/util/SortedMap.lastKey ()Ljava/lang/Object;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       headMap(Ljava/lang/Object;)Ljava/util/SortedMap;
    Access flags: 0x1
      = public java.util.SortedMap headMap(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 2, stack = 5):
      [0] new #2
        + Class [a/a/a/c/l]
      [3] dup
      [4] aload_0 v0
      [5] getfield #8
        + Fieldref [a/a/a/c/l.d La/a/a/c/e;]
      [8] aload_0 v0
      [9] invokevirtual #11
        + Methodref [a/a/a/c/l.b ()Ljava/util/SortedMap;]
      [12] aload_1 v1
      [13] invokeinterface #17
        + InterfaceMethodref [java/util/SortedMap.headMap (Ljava/lang/Object;)Ljava/util/SortedMap;]
      [18] invokespecial #10
        + Methodref [a/a/a/c/l.<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
      [21] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
    Access flags: 0x1
      = public java.util.SortedMap subMap(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 3, stack = 6):
      [0] new #2
        + Class [a/a/a/c/l]
      [3] dup
      [4] aload_0 v0
      [5] getfield #8
        + Fieldref [a/a/a/c/l.d La/a/a/c/e;]
      [8] aload_0 v0
      [9] invokevirtual #11
        + Methodref [a/a/a/c/l.b ()Ljava/util/SortedMap;]
      [12] aload_1 v1
      [13] aload_2 v2
      [14] invokeinterface #19
        + InterfaceMethodref [java/util/SortedMap.subMap (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;]
      [19] invokespecial #10
        + Methodref [a/a/a/c/l.<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;
    Access flags: 0x1
      = public java.util.SortedMap tailMap(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 2, stack = 5):
      [0] new #2
        + Class [a/a/a/c/l]
      [3] dup
      [4] aload_0 v0
      [5] getfield #8
        + Fieldref [a/a/a/c/l.d La/a/a/c/e;]
      [8] aload_0 v0
      [9] invokevirtual #11
        + Methodref [a/a/a/c/l.b ()Ljava/util/SortedMap;]
      [12] aload_1 v1
      [13] invokeinterface #20
        + InterfaceMethodref [java/util/SortedMap.tailMap (Ljava/lang/Object;)Ljava/util/SortedMap;]
      [18] invokespecial #10
        + Methodref [a/a/a/c/l.<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
      [21] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()Ljava/util/SortedSet;
    Access flags: 0x1
      = public java.util.SortedSet c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/c/l.c Ljava/util/SortedSet;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnonnull +15 (target=21)
      [9] aload_0 v0
      [10] aload_0 v0
      [11] invokevirtual #13
        + Methodref [a/a/a/c/l.d ()Ljava/util/SortedSet;]
      [14] dup_x1
      [15] putfield #7
        + Fieldref [a/a/a/c/l.c Ljava/util/SortedSet;]
      [18] goto +4 (target=22)
      [21] aload_1 v1
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [21] Var: ...[a:java/util/SortedSet], Stack: (empty)
        - [22] Var: ..., Stack: [a:java/util/SortedSet]
  + Method:       d()Ljava/util/SortedSet;
    Access flags: 0x0
      = java.util.SortedSet d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 4):
      [0] new #3
        + Class [a/a/a/c/m]
      [3] dup
      [4] aload_0 v0
      [5] getfield #8
        + Fieldref [a/a/a/c/l.d La/a/a/c/e;]
      [8] aload_0 v0
      [9] invokevirtual #11
        + Methodref [a/a/a/c/l.b ()Ljava/util/SortedMap;]
      [12] invokespecial #14
        + Methodref [a/a/a/c/m.<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
      [15] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       keySet()Ljava/util/Set;
    Access flags: 0x1001
      = public synthetic java.util.Set keySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #12
        + Methodref [a/a/a/c/l.c ()Ljava/util/SortedSet;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Ljava/util/Set;
    Access flags: 0x1000
      = synthetic java.util.Set e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #13
        + Methodref [a/a/a/c/l.d ()Ljava/util/SortedSet;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/m
  Superclass:    a/a/a/c/i
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.m extends a.a.a.c.i

Interfaces (count = 1):
  + Class [java/util/SortedSet]

Constant Pool (count = 57):
  + Class [a/a/a/c/i]
  + Class [a/a/a/c/m]
  + Class [java/util/SortedMap]
  + Class [java/util/SortedSet]
  + Fieldref [a/a/a/c/m.b La/a/a/c/e;]
  + Methodref [a/a/a/c/i.<init> (La/a/a/c/e;Ljava/util/Map;)V]
  + Methodref [a/a/a/c/i.b ()Ljava/util/Map;]
  + Methodref [a/a/a/c/m.<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
  + Methodref [a/a/a/c/m.a ()Ljava/util/SortedMap;]
  + InterfaceMethodref [java/util/SortedMap.comparator ()Ljava/util/Comparator;]
  + InterfaceMethodref [java/util/SortedMap.firstKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/SortedMap.headMap (Ljava/lang/Object;)Ljava/util/SortedMap;]
  + InterfaceMethodref [java/util/SortedMap.lastKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/SortedMap.subMap (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;]
  + InterfaceMethodref [java/util/SortedMap.tailMap (Ljava/lang/Object;)Ljava/util/SortedMap;]
  + NameAndType [<init> (La/a/a/c/e;Ljava/util/Map;)V]
  + NameAndType [<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
  + NameAndType [a ()Ljava/util/SortedMap;]
  + NameAndType [b ()Ljava/util/Map;]
  + NameAndType [b La/a/a/c/e;]
  + NameAndType [comparator ()Ljava/util/Comparator;]
  + NameAndType [firstKey ()Ljava/lang/Object;]
  + NameAndType [headMap (Ljava/lang/Object;)Ljava/util/SortedMap;]
  + NameAndType [lastKey ()Ljava/lang/Object;]
  + NameAndType [subMap (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;]
  + NameAndType [tailMap (Ljava/lang/Object;)Ljava/util/SortedMap;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Comparator;]
  + Utf8 [()Ljava/util/Map;]
  + Utf8 [()Ljava/util/SortedMap;]
  + Utf8 [(La/a/a/c/e;Ljava/util/Map;)V]
  + Utf8 [(La/a/a/c/e;Ljava/util/SortedMap;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/util/SortedMap;]
  + Utf8 [(Ljava/lang/Object;)Ljava/util/SortedSet;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/e;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/i]
  + Utf8 [a/a/a/c/m]
  + Utf8 [b]
  + Utf8 [comparator]
  + Utf8 [first]
  + Utf8 [firstKey]
  + Utf8 [headMap]
  + Utf8 [headSet]
  + Utf8 [java/util/SortedMap]
  + Utf8 [java/util/SortedSet]
  + Utf8 [last]
  + Utf8 [lastKey]
  + Utf8 [subMap]
  + Utf8 [subSet]
  + Utf8 [tailMap]
  + Utf8 [tailSet]

Fields (count = 1):
  + Field:        b La/a/a/c/e;
    Access flags: 0x1010
      = final synthetic a.a.a.c.e b

Methods (count = 8):
  - Method:       <init>(La/a/a/c/e;Ljava/util/SortedMap;)V
    Access flags: 0x0
      = m(a.a.a.c.e,java.util.SortedMap)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #5
        + Fieldref [a/a/a/c/m.b La/a/a/c/e;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] aload_2 v2
      [8] invokespecial #6
        + Methodref [a/a/a/c/i.<init> (La/a/a/c/e;Ljava/util/Map;)V]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/SortedMap;
    Access flags: 0x0
      = java.util.SortedMap a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #7
        + Methodref [a/a/a/c/i.b ()Ljava/util/Map;]
      [4] checkcast #3
        + Class [java/util/SortedMap]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       comparator()Ljava/util/Comparator;
    Access flags: 0x1
      = public java.util.Comparator comparator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/c/m.a ()Ljava/util/SortedMap;]
      [4] invokeinterface #10
        + InterfaceMethodref [java/util/SortedMap.comparator ()Ljava/util/Comparator;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       first()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object first()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/c/m.a ()Ljava/util/SortedMap;]
      [4] invokeinterface #11
        + InterfaceMethodref [java/util/SortedMap.firstKey ()Ljava/lang/Object;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
    Access flags: 0x1
      = public java.util.SortedSet headSet(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 2, stack = 5):
      [0] new #2
        + Class [a/a/a/c/m]
      [3] dup
      [4] aload_0 v0
      [5] getfield #5
        + Fieldref [a/a/a/c/m.b La/a/a/c/e;]
      [8] aload_0 v0
      [9] invokevirtual #9
        + Methodref [a/a/a/c/m.a ()Ljava/util/SortedMap;]
      [12] aload_1 v1
      [13] invokeinterface #12
        + InterfaceMethodref [java/util/SortedMap.headMap (Ljava/lang/Object;)Ljava/util/SortedMap;]
      [18] invokespecial #8
        + Methodref [a/a/a/c/m.<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
      [21] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       last()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object last()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/c/m.a ()Ljava/util/SortedMap;]
      [4] invokeinterface #13
        + InterfaceMethodref [java/util/SortedMap.lastKey ()Ljava/lang/Object;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
    Access flags: 0x1
      = public java.util.SortedSet subSet(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 3, stack = 6):
      [0] new #2
        + Class [a/a/a/c/m]
      [3] dup
      [4] aload_0 v0
      [5] getfield #5
        + Fieldref [a/a/a/c/m.b La/a/a/c/e;]
      [8] aload_0 v0
      [9] invokevirtual #9
        + Methodref [a/a/a/c/m.a ()Ljava/util/SortedMap;]
      [12] aload_1 v1
      [13] aload_2 v2
      [14] invokeinterface #14
        + InterfaceMethodref [java/util/SortedMap.subMap (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;]
      [19] invokespecial #8
        + Methodref [a/a/a/c/m.<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
    Access flags: 0x1
      = public java.util.SortedSet tailSet(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 2, stack = 5):
      [0] new #2
        + Class [a/a/a/c/m]
      [3] dup
      [4] aload_0 v0
      [5] getfield #5
        + Fieldref [a/a/a/c/m.b La/a/a/c/e;]
      [8] aload_0 v0
      [9] invokevirtual #9
        + Methodref [a/a/a/c/m.a ()Ljava/util/SortedMap;]
      [12] aload_1 v1
      [13] invokeinterface #15
        + InterfaceMethodref [java/util/SortedMap.tailMap (Ljava/lang/Object;)Ljava/util/SortedMap;]
      [18] invokespecial #8
        + Methodref [a/a/a/c/m.<init> (La/a/a/c/e;Ljava/util/SortedMap;)V]
      [21] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/n
  Superclass:    java/util/AbstractCollection
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.n extends java.util.AbstractCollection

Interfaces (count = 0):

Constant Pool (count = 135):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/e]
  + Class [a/a/a/c/n]
  + Class [a/a/a/c/o]
  + Class [java/lang/Object]
  + Class [java/util/AbstractCollection]
  + Class [java/util/Collection]
  + Class [java/util/ConcurrentModificationException]
  + Class [java/util/Map]
  + Fieldref [a/a/a/c/n.b Ljava/lang/Object;]
  + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
  + Fieldref [a/a/a/c/n.d La/a/a/c/n;]
  + Fieldref [a/a/a/c/n.e Ljava/util/Collection;]
  + Fieldref [a/a/a/c/n.f La/a/a/c/e;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/e.a (La/a/a/c/e;)Ljava/util/Map;]
  + Methodref [a/a/a/c/e.a (La/a/a/c/e;I)I]
  + Methodref [a/a/a/c/e.b (La/a/a/c/e;)I]
  + Methodref [a/a/a/c/e.b (La/a/a/c/e;I)I]
  + Methodref [a/a/a/c/e.c (La/a/a/c/e;)I]
  + Methodref [a/a/a/c/n.a ()V]
  + Methodref [a/a/a/c/n.b ()V]
  + Methodref [a/a/a/c/n.d ()V]
  + Methodref [a/a/a/c/n.e ()Ljava/util/Collection;]
  + Methodref [a/a/a/c/n.size ()I]
  + Methodref [a/a/a/c/o.<init> (La/a/a/c/n;)V]
  + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
  + Methodref [java/util/AbstractCollection.<init> ()V]
  + Methodref [java/util/ConcurrentModificationException.<init> ()V]
  + InterfaceMethodref [java/util/Collection.add (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Collection.addAll (Ljava/util/Collection;)Z]
  + InterfaceMethodref [java/util/Collection.clear ()V]
  + InterfaceMethodref [java/util/Collection.contains (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Collection.containsAll (Ljava/util/Collection;)Z]
  + InterfaceMethodref [java/util/Collection.equals (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Collection.hashCode ()I]
  + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
  + InterfaceMethodref [java/util/Collection.remove (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Collection.removeAll (Ljava/util/Collection;)Z]
  + InterfaceMethodref [java/util/Collection.retainAll (Ljava/util/Collection;)Z]
  + InterfaceMethodref [java/util/Collection.size ()I]
  + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/n;)V]
  + NameAndType [a ()V]
  + NameAndType [a (La/a/a/c/e;)Ljava/util/Map;]
  + NameAndType [a (La/a/a/c/e;I)I]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [add (Ljava/lang/Object;)Z]
  + NameAndType [addAll (Ljava/util/Collection;)Z]
  + NameAndType [b ()V]
  + NameAndType [b (La/a/a/c/e;)I]
  + NameAndType [b (La/a/a/c/e;I)I]
  + NameAndType [b Ljava/lang/Object;]
  + NameAndType [c (La/a/a/c/e;)I]
  + NameAndType [c Ljava/util/Collection;]
  + NameAndType [clear ()V]
  + NameAndType [contains (Ljava/lang/Object;)Z]
  + NameAndType [containsAll (Ljava/util/Collection;)Z]
  + NameAndType [d ()V]
  + NameAndType [d La/a/a/c/n;]
  + NameAndType [e ()Ljava/util/Collection;]
  + NameAndType [e Ljava/util/Collection;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [f La/a/a/c/e;]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [hashCode ()I]
  + NameAndType [isEmpty ()Z]
  + NameAndType [put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [remove (Ljava/lang/Object;)Z]
  + NameAndType [removeAll (Ljava/util/Collection;)Z]
  + NameAndType [retainAll (Ljava/util/Collection;)Z]
  + NameAndType [size ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/n;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/c/e;)I]
  + Utf8 [(La/a/a/c/e;)Ljava/util/Map;]
  + Utf8 [(La/a/a/c/e;I)I]
  + Utf8 [(La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
  + Utf8 [(La/a/a/c/n;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/util/Collection;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/e;]
  + Utf8 [La/a/a/c/n;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljava/util/Collection;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/e]
  + Utf8 [a/a/a/c/n]
  + Utf8 [a/a/a/c/o]
  + Utf8 [add]
  + Utf8 [addAll]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clear]
  + Utf8 [contains]
  + Utf8 [containsAll]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [f]
  + Utf8 [get]
  + Utf8 [hashCode]
  + Utf8 [isEmpty]
  + Utf8 [iterator]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/AbstractCollection]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/ConcurrentModificationException]
  + Utf8 [java/util/Map]
  + Utf8 [put]
  + Utf8 [remove]
  + Utf8 [removeAll]
  + Utf8 [retainAll]
  + Utf8 [size]
  + Utf8 [toString]

Fields (count = 5):
  + Field:        b Ljava/lang/Object;
    Access flags: 0x10
      = final java.lang.Object b
  + Field:        c Ljava/util/Collection;
    Access flags: 0x0
      = java.util.Collection c
  + Field:        d La/a/a/c/n;
    Access flags: 0x10
      = final a.a.a.c.n d
  + Field:        e Ljava/util/Collection;
    Access flags: 0x10
      = final java.util.Collection e
  + Field:        f La/a/a/c/e;
    Access flags: 0x1010
      = final synthetic a.a.a.c.e f

Methods (count = 20):
  - Method:       <init>(La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V
    Access flags: 0x0
      = n(a.a.a.c.e,java.lang.Object,java.util.Collection,a.a.a.c.n)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 44, locals = 5, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #14
        + Fieldref [a/a/a/c/n.f La/a/a/c/e;]
      [5] aload_0 v0
      [6] invokespecial #28
        + Methodref [java/util/AbstractCollection.<init> ()V]
      [9] aload_0 v0
      [10] aload_2 v2
      [11] putfield #10
        + Fieldref [a/a/a/c/n.b Ljava/lang/Object;]
      [14] aload_0 v0
      [15] aload_3 v3
      [16] putfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [19] aload_0 v0
      [20] aload v4
      [22] putfield #12
        + Fieldref [a/a/a/c/n.d La/a/a/c/n;]
      [25] aload_0 v0
      [26] aload v4
      [28] ifnonnull +7 (target=35)
      [31] aconst_null
      [32] goto +8 (target=40)
      [35] aload v4
      [37] invokevirtual #24
        + Methodref [a/a/a/c/n.e ()Ljava/util/Collection;]
      [40] putfield #13
        + Fieldref [a/a/a/c/n.e Ljava/util/Collection;]
      [43] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [35] Var: [a:a/a/a/c/n][a:a/a/a/c/e][a:java/lang/Object][a:java/util/Collection][a:a/a/a/c/n], Stack: [a:a/a/a/c/n]
        - [40] Var: [a:a/a/a/c/n][a:a/a/a/c/e][a:java/lang/Object][a:java/util/Collection][a:a/a/a/c/n], Stack: [a:a/a/a/c/n][a:java/util/Collection]
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a()V
    Access flags: 0x0
      = void a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 78, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/n.d La/a/a/c/n;]
      [4] ifnull +32 (target=36)
      [7] aload_0 v0
      [8] getfield #12
        + Fieldref [a/a/a/c/n.d La/a/a/c/n;]
      [11] invokevirtual #21
        + Methodref [a/a/a/c/n.a ()V]
      [14] aload_0 v0
      [15] getfield #12
        + Fieldref [a/a/a/c/n.d La/a/a/c/n;]
      [18] invokevirtual #24
        + Methodref [a/a/a/c/n.e ()Ljava/util/Collection;]
      [21] aload_0 v0
      [22] getfield #13
        + Fieldref [a/a/a/c/n.e Ljava/util/Collection;]
      [25] ifacmpeq +52 (target=77)
      [28] new #8
        + Class [java/util/ConcurrentModificationException]
      [31] dup
      [32] invokespecial #29
        + Methodref [java/util/ConcurrentModificationException.<init> ()V]
      [35] athrow
      [36] aload_0 v0
      [37] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [40] invokeinterface #37
        + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
      [45] ifeq +32 (target=77)
      [48] aload_0 v0
      [49] getfield #14
        + Fieldref [a/a/a/c/n.f La/a/a/c/e;]
      [52] invokestatic #16
        + Methodref [a/a/a/c/e.a (La/a/a/c/e;)Ljava/util/Map;]
      [55] aload_0 v0
      [56] getfield #10
        + Fieldref [a/a/a/c/n.b Ljava/lang/Object;]
      [59] invokeinterface #42
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [64] checkcast #7
        + Class [java/util/Collection]
      [67] astore_1 v1
      [68] aload_1 v1
      [69] ifnull +8 (target=77)
      [72] aload_0 v0
      [73] aload_1 v1
      [74] putfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [77] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [36] Var: ..., Stack: (empty)
        - [77] Var: ..., Stack: (empty)
  + Method:       b()V
    Access flags: 0x0
      = void b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 47, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/n.d La/a/a/c/n;]
      [4] ifnull +13 (target=17)
      [7] aload_0 v0
      [8] getfield #12
        + Fieldref [a/a/a/c/n.d La/a/a/c/n;]
      [11] invokevirtual #22
        + Methodref [a/a/a/c/n.b ()V]
      [14] goto +32 (target=46)
      [17] aload_0 v0
      [18] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [21] invokeinterface #37
        + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
      [26] ifeq +20 (target=46)
      [29] aload_0 v0
      [30] getfield #14
        + Fieldref [a/a/a/c/n.f La/a/a/c/e;]
      [33] invokestatic #16
        + Methodref [a/a/a/c/e.a (La/a/a/c/e;)Ljava/util/Map;]
      [36] aload_0 v0
      [37] getfield #10
        + Fieldref [a/a/a/c/n.b Ljava/lang/Object;]
      [40] invokeinterface #44
        + InterfaceMethodref [java/util/Map.remove (Ljava/lang/Object;)Ljava/lang/Object;]
      [45] pop
      [46] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [17] Var: ..., Stack: (empty)
        - [46] Var: ..., Stack: (empty)
  + Method:       c()Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/c/n.b Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()V
    Access flags: 0x0
      = void d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 39, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/n.d La/a/a/c/n;]
      [4] ifnull +13 (target=17)
      [7] aload_0 v0
      [8] getfield #12
        + Fieldref [a/a/a/c/n.d La/a/a/c/n;]
      [11] invokevirtual #23
        + Methodref [a/a/a/c/n.d ()V]
      [14] goto +24 (target=38)
      [17] aload_0 v0
      [18] getfield #14
        + Fieldref [a/a/a/c/n.f La/a/a/c/e;]
      [21] invokestatic #16
        + Methodref [a/a/a/c/e.a (La/a/a/c/e;)Ljava/util/Map;]
      [24] aload_0 v0
      [25] getfield #10
        + Fieldref [a/a/a/c/n.b Ljava/lang/Object;]
      [28] aload_0 v0
      [29] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [32] invokeinterface #43
        + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [37] pop
      [38] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [17] Var: ..., Stack: (empty)
        - [38] Var: ..., Stack: (empty)
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #21
        + Methodref [a/a/a/c/n.a ()V]
      [4] aload_0 v0
      [5] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [8] invokeinterface #41
        + InterfaceMethodref [java/util/Collection.size ()I]
      [13] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 22, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] aload_0 v0
      [2] ifacmpne +5 (target=7)
      [5] iconst_1
      [6] ireturn
      [7] aload_0 v0
      [8] invokevirtual #21
        + Methodref [a/a/a/c/n.a ()V]
      [11] aload_0 v0
      [12] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [15] aload_1 v1
      [16] invokeinterface #35
        + InterfaceMethodref [java/util/Collection.equals (Ljava/lang/Object;)Z]
      [21] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [7] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #21
        + Methodref [a/a/a/c/n.a ()V]
      [4] aload_0 v0
      [5] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [8] invokeinterface #36
        + InterfaceMethodref [java/util/Collection.hashCode ()I]
      [13] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #21
        + Methodref [a/a/a/c/n.a ()V]
      [4] aload_0 v0
      [5] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [8] invokevirtual #27
        + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Ljava/util/Collection;
    Access flags: 0x0
      = java.util.Collection e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #21
        + Methodref [a/a/a/c/n.a ()V]
      [4] new #4
        + Class [a/a/a/c/o]
      [7] dup
      [8] aload_0 v0
      [9] invokespecial #26
        + Methodref [a/a/a/c/o.<init> (La/a/a/c/n;)V]
      [12] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       add(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean add(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 47, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #21
        + Methodref [a/a/a/c/n.a ()V]
      [4] aload_0 v0
      [5] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [8] invokeinterface #37
        + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
      [13] istore_2 v2
      [14] aload_0 v0
      [15] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [18] aload_1 v1
      [19] invokeinterface #30
        + InterfaceMethodref [java/util/Collection.add (Ljava/lang/Object;)Z]
      [24] istore_3 v3
      [25] iload_3 v3
      [26] ifeq +19 (target=45)
      [29] aload_0 v0
      [30] getfield #14
        + Fieldref [a/a/a/c/n.f La/a/a/c/e;]
      [33] invokestatic #20
        + Methodref [a/a/a/c/e.c (La/a/a/c/e;)I]
      [36] pop
      [37] iload_2 v2
      [38] ifeq +7 (target=45)
      [41] aload_0 v0
      [42] invokevirtual #23
        + Methodref [a/a/a/c/n.d ()V]
      [45] iload_3 v3
      [46] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [45] Var: ...[i][i], Stack: (empty)
  + Method:       f()La/a/a/c/n;
    Access flags: 0x0
      = a.a.a.c.n f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/n.d La/a/a/c/n;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       addAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean addAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 64, locals = 5, stack = 3):
      [0] aload_1 v1
      [1] invokeinterface #37
        + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
      [6] ifeq +5 (target=11)
      [9] iconst_0
      [10] ireturn
      [11] aload_0 v0
      [12] invokevirtual #25
        + Methodref [a/a/a/c/n.size ()I]
      [15] istore_2 v2
      [16] aload_0 v0
      [17] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [20] aload_1 v1
      [21] invokeinterface #31
        + InterfaceMethodref [java/util/Collection.addAll (Ljava/util/Collection;)Z]
      [26] istore_3 v3
      [27] iload_3 v3
      [28] ifeq +34 (target=62)
      [31] aload_0 v0
      [32] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [35] invokeinterface #41
        + InterfaceMethodref [java/util/Collection.size ()I]
      [40] istore v4
      [42] aload_0 v0
      [43] getfield #14
        + Fieldref [a/a/a/c/n.f La/a/a/c/e;]
      [46] iload v4
      [48] iload_2 v2
      [49] isub
      [50] invokestatic #17
        + Methodref [a/a/a/c/e.a (La/a/a/c/e;I)I]
      [53] pop
      [54] iload_2 v2
      [55] ifne +7 (target=62)
      [58] aload_0 v0
      [59] invokevirtual #23
        + Methodref [a/a/a/c/n.d ()V]
      [62] iload_3 v3
      [63] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [62] Var: ...[i][i], Stack: (empty)
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #21
        + Methodref [a/a/a/c/n.a ()V]
      [4] aload_0 v0
      [5] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [8] aload_1 v1
      [9] invokeinterface #33
        + InterfaceMethodref [java/util/Collection.contains (Ljava/lang/Object;)Z]
      [14] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       containsAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean containsAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #21
        + Methodref [a/a/a/c/n.a ()V]
      [4] aload_0 v0
      [5] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [8] aload_1 v1
      [9] invokeinterface #34
        + InterfaceMethodref [java/util/Collection.containsAll (Ljava/util/Collection;)Z]
      [14] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       clear()V
    Access flags: 0x1
      = public void clear()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 33, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #25
        + Methodref [a/a/a/c/n.size ()I]
      [4] istore_1 v1
      [5] iload_1 v1
      [6] ifne +4 (target=10)
      [9] return
      [10] aload_0 v0
      [11] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [14] invokeinterface #32
        + InterfaceMethodref [java/util/Collection.clear ()V]
      [19] aload_0 v0
      [20] getfield #14
        + Fieldref [a/a/a/c/n.f La/a/a/c/e;]
      [23] iload_1 v1
      [24] invokestatic #19
        + Methodref [a/a/a/c/e.b (La/a/a/c/e;I)I]
      [27] pop
      [28] aload_0 v0
      [29] invokevirtual #22
        + Methodref [a/a/a/c/n.b ()V]
      [32] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [10] Var: ...[i], Stack: (empty)
  + Method:       remove(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean remove(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 33, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #21
        + Methodref [a/a/a/c/n.a ()V]
      [4] aload_0 v0
      [5] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [8] aload_1 v1
      [9] invokeinterface #38
        + InterfaceMethodref [java/util/Collection.remove (Ljava/lang/Object;)Z]
      [14] istore_2 v2
      [15] iload_2 v2
      [16] ifeq +15 (target=31)
      [19] aload_0 v0
      [20] getfield #14
        + Fieldref [a/a/a/c/n.f La/a/a/c/e;]
      [23] invokestatic #18
        + Methodref [a/a/a/c/e.b (La/a/a/c/e;)I]
      [26] pop
      [27] aload_0 v0
      [28] invokevirtual #22
        + Methodref [a/a/a/c/n.b ()V]
      [31] iload_2 v2
      [32] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [31] Var: ...[i], Stack: (empty)
  + Method:       removeAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean removeAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 60, locals = 5, stack = 3):
      [0] aload_1 v1
      [1] invokeinterface #37
        + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
      [6] ifeq +5 (target=11)
      [9] iconst_0
      [10] ireturn
      [11] aload_0 v0
      [12] invokevirtual #25
        + Methodref [a/a/a/c/n.size ()I]
      [15] istore_2 v2
      [16] aload_0 v0
      [17] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [20] aload_1 v1
      [21] invokeinterface #39
        + InterfaceMethodref [java/util/Collection.removeAll (Ljava/util/Collection;)Z]
      [26] istore_3 v3
      [27] iload_3 v3
      [28] ifeq +30 (target=58)
      [31] aload_0 v0
      [32] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [35] invokeinterface #41
        + InterfaceMethodref [java/util/Collection.size ()I]
      [40] istore v4
      [42] aload_0 v0
      [43] getfield #14
        + Fieldref [a/a/a/c/n.f La/a/a/c/e;]
      [46] iload v4
      [48] iload_2 v2
      [49] isub
      [50] invokestatic #17
        + Methodref [a/a/a/c/e.a (La/a/a/c/e;I)I]
      [53] pop
      [54] aload_0 v0
      [55] invokevirtual #22
        + Methodref [a/a/a/c/n.b ()V]
      [58] iload_3 v3
      [59] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [58] Var: ...[i][i], Stack: (empty)
  + Method:       retainAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean retainAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 54, locals = 5, stack = 3):
      [0] aload_1 v1
      [1] invokestatic #15
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_0 v0
      [6] invokevirtual #25
        + Methodref [a/a/a/c/n.size ()I]
      [9] istore_2 v2
      [10] aload_0 v0
      [11] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [14] aload_1 v1
      [15] invokeinterface #40
        + InterfaceMethodref [java/util/Collection.retainAll (Ljava/util/Collection;)Z]
      [20] istore_3 v3
      [21] iload_3 v3
      [22] ifeq +30 (target=52)
      [25] aload_0 v0
      [26] getfield #11
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [29] invokeinterface #41
        + InterfaceMethodref [java/util/Collection.size ()I]
      [34] istore v4
      [36] aload_0 v0
      [37] getfield #14
        + Fieldref [a/a/a/c/n.f La/a/a/c/e;]
      [40] iload v4
      [42] iload_2 v2
      [43] isub
      [44] invokestatic #17
        + Methodref [a/a/a/c/e.a (La/a/a/c/e;I)I]
      [47] pop
      [48] aload_0 v0
      [49] invokevirtual #22
        + Methodref [a/a/a/c/n.b ()V]
      [52] iload_3 v3
      [53] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [52] Var: ...[i][i], Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/o
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.o extends java.lang.Object

Interfaces (count = 1):
  + Class [java/util/Iterator]

Constant Pool (count = 63):
  + Class [a/a/a/c/e]
  + Class [a/a/a/c/n]
  + Class [a/a/a/c/o]
  + Class [java/lang/Object]
  + Class [java/util/ConcurrentModificationException]
  + Class [java/util/Iterator]
  + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
  + Fieldref [a/a/a/c/n.f La/a/a/c/e;]
  + Fieldref [a/a/a/c/o.a Ljava/util/Iterator;]
  + Fieldref [a/a/a/c/o.b Ljava/util/Collection;]
  + Fieldref [a/a/a/c/o.c La/a/a/c/n;]
  + Methodref [a/a/a/c/e.a (La/a/a/c/e;Ljava/util/Collection;)Ljava/util/Iterator;]
  + Methodref [a/a/a/c/e.b (La/a/a/c/e;)I]
  + Methodref [a/a/a/c/n.a ()V]
  + Methodref [a/a/a/c/n.b ()V]
  + Methodref [a/a/a/c/o.a ()V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/util/ConcurrentModificationException.<init> ()V]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Iterator.remove ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a ()V]
  + NameAndType [a (La/a/a/c/e;Ljava/util/Collection;)Ljava/util/Iterator;]
  + NameAndType [a Ljava/util/Iterator;]
  + NameAndType [b ()V]
  + NameAndType [b (La/a/a/c/e;)I]
  + NameAndType [b Ljava/util/Collection;]
  + NameAndType [c La/a/a/c/n;]
  + NameAndType [c Ljava/util/Collection;]
  + NameAndType [f La/a/a/c/e;]
  + NameAndType [hasNext ()Z]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [remove ()V]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/c/e;)I]
  + Utf8 [(La/a/a/c/e;Ljava/util/Collection;)Ljava/util/Iterator;]
  + Utf8 [(La/a/a/c/n;)V]
  + Utf8 [(La/a/a/c/n;Ljava/util/Iterator;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/e;]
  + Utf8 [La/a/a/c/n;]
  + Utf8 [Ljava/util/Collection;]
  + Utf8 [Ljava/util/Iterator;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/e]
  + Utf8 [a/a/a/c/n]
  + Utf8 [a/a/a/c/o]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [f]
  + Utf8 [hasNext]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/ConcurrentModificationException]
  + Utf8 [java/util/Iterator]
  + Utf8 [next]
  + Utf8 [remove]

Fields (count = 3):
  + Field:        a Ljava/util/Iterator;
    Access flags: 0x10
      = final java.util.Iterator a
  + Field:        b Ljava/util/Collection;
    Access flags: 0x10
      = final java.util.Collection b
  + Field:        c La/a/a/c/n;
    Access flags: 0x1010
      = final synthetic a.a.a.c.n c

Methods (count = 7):
  - Method:       <init>(La/a/a/c/n;)V
    Access flags: 0x0
      = o(a.a.a.c.n)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 36, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #11
        + Fieldref [a/a/a/c/o.c La/a/a/c/n;]
      [5] aload_0 v0
      [6] invokespecial #17
        + Methodref [java/lang/Object.<init> ()V]
      [9] aload_0 v0
      [10] aload_0 v0
      [11] getfield #11
        + Fieldref [a/a/a/c/o.c La/a/a/c/n;]
      [14] getfield #7
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [17] putfield #10
        + Fieldref [a/a/a/c/o.b Ljava/util/Collection;]
      [20] aload_0 v0
      [21] aload_1 v1
      [22] getfield #8
        + Fieldref [a/a/a/c/n.f La/a/a/c/e;]
      [25] aload_1 v1
      [26] getfield #7
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [29] invokestatic #12
        + Methodref [a/a/a/c/e.a (La/a/a/c/e;Ljava/util/Collection;)Ljava/util/Iterator;]
      [32] putfield #9
        + Fieldref [a/a/a/c/o.a Ljava/util/Iterator;]
      [35] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/c/n;Ljava/util/Iterator;)V
    Access flags: 0x0
      = o(a.a.a.c.n,java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 26, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #11
        + Fieldref [a/a/a/c/o.c La/a/a/c/n;]
      [5] aload_0 v0
      [6] invokespecial #17
        + Methodref [java/lang/Object.<init> ()V]
      [9] aload_0 v0
      [10] aload_0 v0
      [11] getfield #11
        + Fieldref [a/a/a/c/o.c La/a/a/c/n;]
      [14] getfield #7
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [17] putfield #10
        + Fieldref [a/a/a/c/o.b Ljava/util/Collection;]
      [20] aload_0 v0
      [21] aload_2 v2
      [22] putfield #9
        + Fieldref [a/a/a/c/o.a Ljava/util/Iterator;]
      [25] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()V
    Access flags: 0x0
      = void a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 30, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/c/o.c La/a/a/c/n;]
      [4] invokevirtual #14
        + Methodref [a/a/a/c/n.a ()V]
      [7] aload_0 v0
      [8] getfield #11
        + Fieldref [a/a/a/c/o.c La/a/a/c/n;]
      [11] getfield #7
        + Fieldref [a/a/a/c/n.c Ljava/util/Collection;]
      [14] aload_0 v0
      [15] getfield #10
        + Fieldref [a/a/a/c/o.b Ljava/util/Collection;]
      [18] ifacmpeq +11 (target=29)
      [21] new #5
        + Class [java/util/ConcurrentModificationException]
      [24] dup
      [25] invokespecial #18
        + Methodref [java/util/ConcurrentModificationException.<init> ()V]
      [28] athrow
      [29] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [29] Var: ..., Stack: (empty)
  + Method:       hasNext()Z
    Access flags: 0x1
      = public boolean hasNext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #16
        + Methodref [a/a/a/c/o.a ()V]
      [4] aload_0 v0
      [5] getfield #9
        + Fieldref [a/a/a/c/o.a Ljava/util/Iterator;]
      [8] invokeinterface #19
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [13] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #16
        + Methodref [a/a/a/c/o.a ()V]
      [4] aload_0 v0
      [5] getfield #9
        + Fieldref [a/a/a/c/o.a Ljava/util/Iterator;]
      [8] invokeinterface #20
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove()V
    Access flags: 0x1
      = public void remove()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/o.a Ljava/util/Iterator;]
      [4] invokeinterface #21
        + InterfaceMethodref [java/util/Iterator.remove ()V]
      [9] aload_0 v0
      [10] getfield #11
        + Fieldref [a/a/a/c/o.c La/a/a/c/n;]
      [13] getfield #8
        + Fieldref [a/a/a/c/n.f La/a/a/c/e;]
      [16] invokestatic #13
        + Methodref [a/a/a/c/e.b (La/a/a/c/e;)I]
      [19] pop
      [20] aload_0 v0
      [21] getfield #11
        + Fieldref [a/a/a/c/o.c La/a/a/c/n;]
      [24] invokevirtual #15
        + Methodref [a/a/a/c/n.b ()V]
      [27] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()Ljava/util/Iterator;
    Access flags: 0x0
      = java.util.Iterator b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #16
        + Methodref [a/a/a/c/o.a ()V]
      [4] aload_0 v0
      [5] getfield #9
        + Fieldref [a/a/a/c/o.a Ljava/util/Iterator;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/p
  Superclass:    a/a/a/c/n
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.p extends a.a.a.c.n

Interfaces (count = 1):
  + Class [java/util/List]

Constant Pool (count = 112):
  + Class [a/a/a/c/e]
  + Class [a/a/a/c/n]
  + Class [a/a/a/c/p]
  + Class [a/a/a/c/q]
  + Class [java/lang/Object]
  + Class [java/util/Collection]
  + Class [java/util/List]
  + Fieldref [a/a/a/c/p.g La/a/a/c/e;]
  + Methodref [a/a/a/c/e.a (La/a/a/c/e;I)I]
  + Methodref [a/a/a/c/e.a (La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)Ljava/util/List;]
  + Methodref [a/a/a/c/e.b (La/a/a/c/e;)I]
  + Methodref [a/a/a/c/e.c (La/a/a/c/e;)I]
  + Methodref [a/a/a/c/n.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
  + Methodref [a/a/a/c/p.a ()V]
  + Methodref [a/a/a/c/p.b ()V]
  + Methodref [a/a/a/c/p.c ()Ljava/lang/Object;]
  + Methodref [a/a/a/c/p.d ()V]
  + Methodref [a/a/a/c/p.e ()Ljava/util/Collection;]
  + Methodref [a/a/a/c/p.f ()La/a/a/c/n;]
  + Methodref [a/a/a/c/p.g ()Ljava/util/List;]
  + Methodref [a/a/a/c/p.size ()I]
  + Methodref [a/a/a/c/q.<init> (La/a/a/c/p;)V]
  + Methodref [a/a/a/c/q.<init> (La/a/a/c/p;I)V]
  + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
  + InterfaceMethodref [java/util/Collection.size ()I]
  + InterfaceMethodref [java/util/List.add (ILjava/lang/Object;)V]
  + InterfaceMethodref [java/util/List.addAll (ILjava/util/Collection;)Z]
  + InterfaceMethodref [java/util/List.get (I)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/List.indexOf (Ljava/lang/Object;)I]
  + InterfaceMethodref [java/util/List.lastIndexOf (Ljava/lang/Object;)I]
  + InterfaceMethodref [java/util/List.remove (I)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/List.set (ILjava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/List.subList (II)Ljava/util/List;]
  + NameAndType [<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
  + NameAndType [<init> (La/a/a/c/p;)V]
  + NameAndType [<init> (La/a/a/c/p;I)V]
  + NameAndType [a ()V]
  + NameAndType [a (La/a/a/c/e;I)I]
  + NameAndType [a (La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)Ljava/util/List;]
  + NameAndType [add (ILjava/lang/Object;)V]
  + NameAndType [addAll (ILjava/util/Collection;)Z]
  + NameAndType [b ()V]
  + NameAndType [b (La/a/a/c/e;)I]
  + NameAndType [c ()Ljava/lang/Object;]
  + NameAndType [c (La/a/a/c/e;)I]
  + NameAndType [d ()V]
  + NameAndType [e ()Ljava/util/Collection;]
  + NameAndType [f ()La/a/a/c/n;]
  + NameAndType [g ()Ljava/util/List;]
  + NameAndType [g La/a/a/c/e;]
  + NameAndType [get (I)Ljava/lang/Object;]
  + NameAndType [indexOf (Ljava/lang/Object;)I]
  + NameAndType [isEmpty ()Z]
  + NameAndType [lastIndexOf (Ljava/lang/Object;)I]
  + NameAndType [remove (I)Ljava/lang/Object;]
  + NameAndType [set (ILjava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [size ()I]
  + NameAndType [subList (II)Ljava/util/List;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/n;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/List;]
  + Utf8 [()Ljava/util/ListIterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(I)Ljava/util/ListIterator;]
  + Utf8 [(II)Ljava/util/List;]
  + Utf8 [(ILjava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(ILjava/lang/Object;)V]
  + Utf8 [(ILjava/util/Collection;)Z]
  + Utf8 [(La/a/a/c/e;)I]
  + Utf8 [(La/a/a/c/e;I)I]
  + Utf8 [(La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
  + Utf8 [(La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)Ljava/util/List;]
  + Utf8 [(La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)V]
  + Utf8 [(La/a/a/c/p;)V]
  + Utf8 [(La/a/a/c/p;I)V]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/e;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/e]
  + Utf8 [a/a/a/c/n]
  + Utf8 [a/a/a/c/p]
  + Utf8 [a/a/a/c/q]
  + Utf8 [add]
  + Utf8 [addAll]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [get]
  + Utf8 [indexOf]
  + Utf8 [isEmpty]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/List]
  + Utf8 [lastIndexOf]
  + Utf8 [listIterator]
  + Utf8 [remove]
  + Utf8 [set]
  + Utf8 [size]
  + Utf8 [subList]

Fields (count = 1):
  + Field:        g La/a/a/c/e;
    Access flags: 0x1010
      = final synthetic a.a.a.c.e g

Methods (count = 12):
  - Method:       <init>(La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)V
    Access flags: 0x0
      = p(a.a.a.c.e,java.lang.Object,java.util.List,a.a.a.c.n)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 15, locals = 5, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #8
        + Fieldref [a/a/a/c/p.g La/a/a/c/e;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] aload_2 v2
      [8] aload_3 v3
      [9] aload v4
      [11] invokespecial #13
        + Methodref [a/a/a/c/n.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       g()Ljava/util/List;
    Access flags: 0x0
      = java.util.List g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #18
        + Methodref [a/a/a/c/p.e ()Ljava/util/Collection;]
      [4] checkcast #7
        + Class [java/util/List]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       addAll(ILjava/util/Collection;)Z
    Access flags: 0x1
      = public boolean addAll(int,java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 68, locals = 6, stack = 3):
      [0] aload_2 v2
      [1] invokeinterface #24
        + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
      [6] ifeq +5 (target=11)
      [9] iconst_0
      [10] ireturn
      [11] aload_0 v0
      [12] invokevirtual #21
        + Methodref [a/a/a/c/p.size ()I]
      [15] istore_3 v3
      [16] aload_0 v0
      [17] invokevirtual #20
        + Methodref [a/a/a/c/p.g ()Ljava/util/List;]
      [20] iload_1 v1
      [21] aload_2 v2
      [22] invokeinterface #27
        + InterfaceMethodref [java/util/List.addAll (ILjava/util/Collection;)Z]
      [27] istore v4
      [29] iload v4
      [31] ifeq +34 (target=65)
      [34] aload_0 v0
      [35] invokevirtual #18
        + Methodref [a/a/a/c/p.e ()Ljava/util/Collection;]
      [38] invokeinterface #25
        + InterfaceMethodref [java/util/Collection.size ()I]
      [43] istore v5
      [45] aload_0 v0
      [46] getfield #8
        + Fieldref [a/a/a/c/p.g La/a/a/c/e;]
      [49] iload v5
      [51] iload_3 v3
      [52] isub
      [53] invokestatic #9
        + Methodref [a/a/a/c/e.a (La/a/a/c/e;I)I]
      [56] pop
      [57] iload_3 v3
      [58] ifne +7 (target=65)
      [61] aload_0 v0
      [62] invokevirtual #17
        + Methodref [a/a/a/c/p.d ()V]
      [65] iload v4
      [67] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [65] Var: ...[i][i], Stack: (empty)
  + Method:       get(I)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #14
        + Methodref [a/a/a/c/p.a ()V]
      [4] aload_0 v0
      [5] invokevirtual #20
        + Methodref [a/a/a/c/p.g ()Ljava/util/List;]
      [8] iload_1 v1
      [9] invokeinterface #28
        + InterfaceMethodref [java/util/List.get (I)Ljava/lang/Object;]
      [14] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       set(ILjava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object set(int,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #14
        + Methodref [a/a/a/c/p.a ()V]
      [4] aload_0 v0
      [5] invokevirtual #20
        + Methodref [a/a/a/c/p.g ()Ljava/util/List;]
      [8] iload_1 v1
      [9] aload_2 v2
      [10] invokeinterface #32
        + InterfaceMethodref [java/util/List.set (ILjava/lang/Object;)Ljava/lang/Object;]
      [15] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       add(ILjava/lang/Object;)V
    Access flags: 0x1
      = public void add(int,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 42, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #14
        + Methodref [a/a/a/c/p.a ()V]
      [4] aload_0 v0
      [5] invokevirtual #18
        + Methodref [a/a/a/c/p.e ()Ljava/util/Collection;]
      [8] invokeinterface #24
        + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
      [13] istore_3 v3
      [14] aload_0 v0
      [15] invokevirtual #20
        + Methodref [a/a/a/c/p.g ()Ljava/util/List;]
      [18] iload_1 v1
      [19] aload_2 v2
      [20] invokeinterface #26
        + InterfaceMethodref [java/util/List.add (ILjava/lang/Object;)V]
      [25] aload_0 v0
      [26] getfield #8
        + Fieldref [a/a/a/c/p.g La/a/a/c/e;]
      [29] invokestatic #12
        + Methodref [a/a/a/c/e.c (La/a/a/c/e;)I]
      [32] pop
      [33] iload_3 v3
      [34] ifeq +7 (target=41)
      [37] aload_0 v0
      [38] invokevirtual #17
        + Methodref [a/a/a/c/p.d ()V]
      [41] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [41] Var: ...[i], Stack: (empty)
  + Method:       remove(I)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object remove(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 29, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #14
        + Methodref [a/a/a/c/p.a ()V]
      [4] aload_0 v0
      [5] invokevirtual #20
        + Methodref [a/a/a/c/p.g ()Ljava/util/List;]
      [8] iload_1 v1
      [9] invokeinterface #31
        + InterfaceMethodref [java/util/List.remove (I)Ljava/lang/Object;]
      [14] astore_2 v2
      [15] aload_0 v0
      [16] getfield #8
        + Fieldref [a/a/a/c/p.g La/a/a/c/e;]
      [19] invokestatic #11
        + Methodref [a/a/a/c/e.b (La/a/a/c/e;)I]
      [22] pop
      [23] aload_0 v0
      [24] invokevirtual #15
        + Methodref [a/a/a/c/p.b ()V]
      [27] aload_2 v2
      [28] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       indexOf(Ljava/lang/Object;)I
    Access flags: 0x1
      = public int indexOf(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #14
        + Methodref [a/a/a/c/p.a ()V]
      [4] aload_0 v0
      [5] invokevirtual #20
        + Methodref [a/a/a/c/p.g ()Ljava/util/List;]
      [8] aload_1 v1
      [9] invokeinterface #29
        + InterfaceMethodref [java/util/List.indexOf (Ljava/lang/Object;)I]
      [14] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       lastIndexOf(Ljava/lang/Object;)I
    Access flags: 0x1
      = public int lastIndexOf(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #14
        + Methodref [a/a/a/c/p.a ()V]
      [4] aload_0 v0
      [5] invokevirtual #20
        + Methodref [a/a/a/c/p.g ()Ljava/util/List;]
      [8] aload_1 v1
      [9] invokeinterface #30
        + InterfaceMethodref [java/util/List.lastIndexOf (Ljava/lang/Object;)I]
      [14] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       listIterator()Ljava/util/ListIterator;
    Access flags: 0x1
      = public java.util.ListIterator listIterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #14
        + Methodref [a/a/a/c/p.a ()V]
      [4] new #4
        + Class [a/a/a/c/q]
      [7] dup
      [8] aload_0 v0
      [9] invokespecial #22
        + Methodref [a/a/a/c/q.<init> (La/a/a/c/p;)V]
      [12] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       listIterator(I)Ljava/util/ListIterator;
    Access flags: 0x1
      = public java.util.ListIterator listIterator(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] invokevirtual #14
        + Methodref [a/a/a/c/p.a ()V]
      [4] new #4
        + Class [a/a/a/c/q]
      [7] dup
      [8] aload_0 v0
      [9] iload_1 v1
      [10] invokespecial #23
        + Methodref [a/a/a/c/q.<init> (La/a/a/c/p;I)V]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       subList(II)Ljava/util/List;
    Access flags: 0x1
      = public java.util.List subList(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 42, locals = 3, stack = 5):
      [0] aload_0 v0
      [1] invokevirtual #14
        + Methodref [a/a/a/c/p.a ()V]
      [4] aload_0 v0
      [5] getfield #8
        + Fieldref [a/a/a/c/p.g La/a/a/c/e;]
      [8] aload_0 v0
      [9] invokevirtual #16
        + Methodref [a/a/a/c/p.c ()Ljava/lang/Object;]
      [12] aload_0 v0
      [13] invokevirtual #20
        + Methodref [a/a/a/c/p.g ()Ljava/util/List;]
      [16] iload_1 v1
      [17] iload_2 v2
      [18] invokeinterface #33
        + InterfaceMethodref [java/util/List.subList (II)Ljava/util/List;]
      [23] aload_0 v0
      [24] invokevirtual #19
        + Methodref [a/a/a/c/p.f ()La/a/a/c/n;]
      [27] ifnonnull +7 (target=34)
      [30] aload_0 v0
      [31] goto +7 (target=38)
      [34] aload_0 v0
      [35] invokevirtual #19
        + Methodref [a/a/a/c/p.f ()La/a/a/c/n;]
      [38] invokestatic #10
        + Methodref [a/a/a/c/e.a (La/a/a/c/e;Ljava/lang/Object;Ljava/util/List;La/a/a/c/n;)Ljava/util/List;]
      [41] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [34] Var: [a:a/a/a/c/p][i][i], Stack: [a:a/a/a/c/e][a:java/lang/Object][a:java/util/List]
        - [38] Var: [a:a/a/a/c/p][i][i], Stack: [a:a/a/a/c/e][a:java/lang/Object][a:java/util/List][a:a/a/a/c/n]

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/q
  Superclass:    a/a/a/c/o
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.q extends a.a.a.c.o

Interfaces (count = 1):
  + Class [java/util/ListIterator]

Constant Pool (count = 78):
  + Class [a/a/a/c/e]
  + Class [a/a/a/c/o]
  + Class [a/a/a/c/p]
  + Class [a/a/a/c/q]
  + Class [java/util/List]
  + Class [java/util/ListIterator]
  + Fieldref [a/a/a/c/p.g La/a/a/c/e;]
  + Fieldref [a/a/a/c/q.d La/a/a/c/p;]
  + Methodref [a/a/a/c/e.c (La/a/a/c/e;)I]
  + Methodref [a/a/a/c/o.<init> (La/a/a/c/n;)V]
  + Methodref [a/a/a/c/o.<init> (La/a/a/c/n;Ljava/util/Iterator;)V]
  + Methodref [a/a/a/c/p.d ()V]
  + Methodref [a/a/a/c/p.g ()Ljava/util/List;]
  + Methodref [a/a/a/c/p.isEmpty ()Z]
  + Methodref [a/a/a/c/q.b ()Ljava/util/Iterator;]
  + Methodref [a/a/a/c/q.c ()Ljava/util/ListIterator;]
  + InterfaceMethodref [java/util/List.listIterator (I)Ljava/util/ListIterator;]
  + InterfaceMethodref [java/util/ListIterator.add (Ljava/lang/Object;)V]
  + InterfaceMethodref [java/util/ListIterator.hasPrevious ()Z]
  + InterfaceMethodref [java/util/ListIterator.nextIndex ()I]
  + InterfaceMethodref [java/util/ListIterator.previous ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/ListIterator.previousIndex ()I]
  + InterfaceMethodref [java/util/ListIterator.set (Ljava/lang/Object;)V]
  + NameAndType [<init> (La/a/a/c/n;)V]
  + NameAndType [<init> (La/a/a/c/n;Ljava/util/Iterator;)V]
  + NameAndType [add (Ljava/lang/Object;)V]
  + NameAndType [b ()Ljava/util/Iterator;]
  + NameAndType [c ()Ljava/util/ListIterator;]
  + NameAndType [c (La/a/a/c/e;)I]
  + NameAndType [d ()V]
  + NameAndType [d La/a/a/c/p;]
  + NameAndType [g ()Ljava/util/List;]
  + NameAndType [g La/a/a/c/e;]
  + NameAndType [hasPrevious ()Z]
  + NameAndType [isEmpty ()Z]
  + NameAndType [listIterator (I)Ljava/util/ListIterator;]
  + NameAndType [nextIndex ()I]
  + NameAndType [previous ()Ljava/lang/Object;]
  + NameAndType [previousIndex ()I]
  + NameAndType [set (Ljava/lang/Object;)V]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/List;]
  + Utf8 [()Ljava/util/ListIterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)Ljava/util/ListIterator;]
  + Utf8 [(La/a/a/c/e;)I]
  + Utf8 [(La/a/a/c/n;)V]
  + Utf8 [(La/a/a/c/n;Ljava/util/Iterator;)V]
  + Utf8 [(La/a/a/c/p;)V]
  + Utf8 [(La/a/a/c/p;I)V]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/e;]
  + Utf8 [La/a/a/c/p;]
  + Utf8 [StackMapTable]
  + Utf8 [a/a/a/c/e]
  + Utf8 [a/a/a/c/o]
  + Utf8 [a/a/a/c/p]
  + Utf8 [a/a/a/c/q]
  + Utf8 [add]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [g]
  + Utf8 [hasPrevious]
  + Utf8 [isEmpty]
  + Utf8 [java/util/List]
  + Utf8 [java/util/ListIterator]
  + Utf8 [listIterator]
  + Utf8 [nextIndex]
  + Utf8 [previous]
  + Utf8 [previousIndex]
  + Utf8 [set]

Fields (count = 1):
  + Field:        d La/a/a/c/p;
    Access flags: 0x1010
      = final synthetic a.a.a.c.p d

Methods (count = 9):
  - Method:       <init>(La/a/a/c/p;)V
    Access flags: 0x0
      = q(a.a.a.c.p)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #8
        + Fieldref [a/a/a/c/q.d La/a/a/c/p;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] invokespecial #10
        + Methodref [a/a/a/c/o.<init> (La/a/a/c/n;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/c/p;I)V
    Access flags: 0x1
      = public q(a.a.a.c.p,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #8
        + Fieldref [a/a/a/c/q.d La/a/a/c/p;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] aload_1 v1
      [8] invokevirtual #13
        + Methodref [a/a/a/c/p.g ()Ljava/util/List;]
      [11] iload_2 v2
      [12] invokeinterface #17
        + InterfaceMethodref [java/util/List.listIterator (I)Ljava/util/ListIterator;]
      [17] invokespecial #11
        + Methodref [a/a/a/c/o.<init> (La/a/a/c/n;Ljava/util/Iterator;)V]
      [20] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()Ljava/util/ListIterator;
    Access flags: 0x2
      = private java.util.ListIterator c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #15
        + Methodref [a/a/a/c/q.b ()Ljava/util/Iterator;]
      [4] checkcast #6
        + Class [java/util/ListIterator]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hasPrevious()Z
    Access flags: 0x1
      = public boolean hasPrevious()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #16
        + Methodref [a/a/a/c/q.c ()Ljava/util/ListIterator;]
      [4] invokeinterface #19
        + InterfaceMethodref [java/util/ListIterator.hasPrevious ()Z]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       previous()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object previous()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #16
        + Methodref [a/a/a/c/q.c ()Ljava/util/ListIterator;]
      [4] invokeinterface #21
        + InterfaceMethodref [java/util/ListIterator.previous ()Ljava/lang/Object;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       nextIndex()I
    Access flags: 0x1
      = public int nextIndex()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #16
        + Methodref [a/a/a/c/q.c ()Ljava/util/ListIterator;]
      [4] invokeinterface #20
        + InterfaceMethodref [java/util/ListIterator.nextIndex ()I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       previousIndex()I
    Access flags: 0x1
      = public int previousIndex()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #16
        + Methodref [a/a/a/c/q.c ()Ljava/util/ListIterator;]
      [4] invokeinterface #22
        + InterfaceMethodref [java/util/ListIterator.previousIndex ()I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       set(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void set(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #16
        + Methodref [a/a/a/c/q.c ()Ljava/util/ListIterator;]
      [4] aload_1 v1
      [5] invokeinterface #23
        + InterfaceMethodref [java/util/ListIterator.set (Ljava/lang/Object;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       add(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void add(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 41, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/q.d La/a/a/c/p;]
      [4] invokevirtual #14
        + Methodref [a/a/a/c/p.isEmpty ()Z]
      [7] istore_2 v2
      [8] aload_0 v0
      [9] invokespecial #16
        + Methodref [a/a/a/c/q.c ()Ljava/util/ListIterator;]
      [12] aload_1 v1
      [13] invokeinterface #18
        + InterfaceMethodref [java/util/ListIterator.add (Ljava/lang/Object;)V]
      [18] aload_0 v0
      [19] getfield #8
        + Fieldref [a/a/a/c/q.d La/a/a/c/p;]
      [22] getfield #7
        + Fieldref [a/a/a/c/p.g La/a/a/c/e;]
      [25] invokestatic #9
        + Methodref [a/a/a/c/e.c (La/a/a/c/e;)I]
      [28] pop
      [29] iload_2 v2
      [30] ifeq +10 (target=40)
      [33] aload_0 v0
      [34] getfield #8
        + Fieldref [a/a/a/c/q.d La/a/a/c/p;]
      [37] invokevirtual #12
        + Methodref [a/a/a/c/p.d ()V]
      [40] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [40] Var: ...[i], Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/r
  Superclass:    a/a/a/c/n
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.r extends a.a.a.c.n

Interfaces (count = 1):
  + Class [java/util/Set]

Constant Pool (count = 51):
  + Class [a/a/a/c/dt]
  + Class [a/a/a/c/e]
  + Class [a/a/a/c/n]
  + Class [a/a/a/c/r]
  + Class [java/util/Collection]
  + Class [java/util/Set]
  + Fieldref [a/a/a/c/r.a La/a/a/c/e;]
  + Fieldref [a/a/a/c/r.c Ljava/util/Collection;]
  + Methodref [a/a/a/c/dt.a (Ljava/util/Set;Ljava/util/Collection;)Z]
  + Methodref [a/a/a/c/e.a (La/a/a/c/e;I)I]
  + Methodref [a/a/a/c/n.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
  + Methodref [a/a/a/c/r.b ()V]
  + Methodref [a/a/a/c/r.size ()I]
  + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
  + InterfaceMethodref [java/util/Collection.size ()I]
  + NameAndType [<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
  + NameAndType [a (La/a/a/c/e;I)I]
  + NameAndType [a (Ljava/util/Set;Ljava/util/Collection;)Z]
  + NameAndType [a La/a/a/c/e;]
  + NameAndType [b ()V]
  + NameAndType [c Ljava/util/Collection;]
  + NameAndType [isEmpty ()Z]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/c/e;I)I]
  + Utf8 [(La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
  + Utf8 [(La/a/a/c/e;Ljava/lang/Object;Ljava/util/Set;)V]
  + Utf8 [(Ljava/util/Collection;)Z]
  + Utf8 [(Ljava/util/Set;Ljava/util/Collection;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/e;]
  + Utf8 [Ljava/util/Collection;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/dt]
  + Utf8 [a/a/a/c/e]
  + Utf8 [a/a/a/c/n]
  + Utf8 [a/a/a/c/r]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [isEmpty]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/Set]
  + Utf8 [removeAll]
  + Utf8 [size]

Fields (count = 1):
  + Field:        a La/a/a/c/e;
    Access flags: 0x1010
      = final synthetic a.a.a.c.e a

Methods (count = 2):
  - Method:       <init>(La/a/a/c/e;Ljava/lang/Object;Ljava/util/Set;)V
    Access flags: 0x0
      = r(a.a.a.c.e,java.lang.Object,java.util.Set)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 14, locals = 4, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #7
        + Fieldref [a/a/a/c/r.a La/a/a/c/e;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] aload_2 v2
      [8] aload_3 v3
      [9] aconst_null
      [10] invokespecial #11
        + Methodref [a/a/a/c/n.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
      [13] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       removeAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean removeAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 61, locals = 5, stack = 3):
      [0] aload_1 v1
      [1] invokeinterface #14
        + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
      [6] ifeq +5 (target=11)
      [9] iconst_0
      [10] ireturn
      [11] aload_0 v0
      [12] invokevirtual #13
        + Methodref [a/a/a/c/r.size ()I]
      [15] istore_2 v2
      [16] aload_0 v0
      [17] getfield #8
        + Fieldref [a/a/a/c/r.c Ljava/util/Collection;]
      [20] checkcast #6
        + Class [java/util/Set]
      [23] aload_1 v1
      [24] invokestatic #9
        + Methodref [a/a/a/c/dt.a (Ljava/util/Set;Ljava/util/Collection;)Z]
      [27] istore_3 v3
      [28] iload_3 v3
      [29] ifeq +30 (target=59)
      [32] aload_0 v0
      [33] getfield #8
        + Fieldref [a/a/a/c/r.c Ljava/util/Collection;]
      [36] invokeinterface #15
        + InterfaceMethodref [java/util/Collection.size ()I]
      [41] istore v4
      [43] aload_0 v0
      [44] getfield #7
        + Fieldref [a/a/a/c/r.a La/a/a/c/e;]
      [47] iload v4
      [49] iload_2 v2
      [50] isub
      [51] invokestatic #10
        + Methodref [a/a/a/c/e.a (La/a/a/c/e;I)I]
      [54] pop
      [55] aload_0 v0
      [56] invokevirtual #12
        + Methodref [a/a/a/c/r.b ()V]
      [59] iload_3 v3
      [60] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [59] Var: ...[i][i], Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/s
  Superclass:    a/a/a/c/n
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.s extends a.a.a.c.n

Interfaces (count = 1):
  + Class [java/util/SortedSet]

Constant Pool (count = 66):
  + Class [a/a/a/c/e]
  + Class [a/a/a/c/n]
  + Class [a/a/a/c/s]
  + Class [java/lang/Object]
  + Class [java/util/SortedSet]
  + Fieldref [a/a/a/c/s.a La/a/a/c/e;]
  + Methodref [a/a/a/c/n.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
  + Methodref [a/a/a/c/s.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/SortedSet;La/a/a/c/n;)V]
  + Methodref [a/a/a/c/s.a ()V]
  + Methodref [a/a/a/c/s.c ()Ljava/lang/Object;]
  + Methodref [a/a/a/c/s.e ()Ljava/util/Collection;]
  + Methodref [a/a/a/c/s.f ()La/a/a/c/n;]
  + Methodref [a/a/a/c/s.g ()Ljava/util/SortedSet;]
  + InterfaceMethodref [java/util/SortedSet.comparator ()Ljava/util/Comparator;]
  + InterfaceMethodref [java/util/SortedSet.first ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/SortedSet.headSet (Ljava/lang/Object;)Ljava/util/SortedSet;]
  + InterfaceMethodref [java/util/SortedSet.last ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/SortedSet.subSet (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;]
  + InterfaceMethodref [java/util/SortedSet.tailSet (Ljava/lang/Object;)Ljava/util/SortedSet;]
  + NameAndType [<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
  + NameAndType [<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/SortedSet;La/a/a/c/n;)V]
  + NameAndType [a ()V]
  + NameAndType [a La/a/a/c/e;]
  + NameAndType [c ()Ljava/lang/Object;]
  + NameAndType [comparator ()Ljava/util/Comparator;]
  + NameAndType [e ()Ljava/util/Collection;]
  + NameAndType [f ()La/a/a/c/n;]
  + NameAndType [first ()Ljava/lang/Object;]
  + NameAndType [g ()Ljava/util/SortedSet;]
  + NameAndType [headSet (Ljava/lang/Object;)Ljava/util/SortedSet;]
  + NameAndType [last ()Ljava/lang/Object;]
  + NameAndType [subSet (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;]
  + NameAndType [tailSet (Ljava/lang/Object;)Ljava/util/SortedSet;]
  + Utf8 [()La/a/a/c/n;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Comparator;]
  + Utf8 [()Ljava/util/SortedSet;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
  + Utf8 [(La/a/a/c/e;Ljava/lang/Object;Ljava/util/SortedSet;La/a/a/c/n;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/util/SortedSet;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/e;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/e]
  + Utf8 [a/a/a/c/n]
  + Utf8 [a/a/a/c/s]
  + Utf8 [c]
  + Utf8 [comparator]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [first]
  + Utf8 [g]
  + Utf8 [headSet]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/SortedSet]
  + Utf8 [last]
  + Utf8 [subSet]
  + Utf8 [tailSet]

Fields (count = 1):
  + Field:        a La/a/a/c/e;
    Access flags: 0x1010
      = final synthetic a.a.a.c.e a

Methods (count = 8):
  - Method:       <init>(La/a/a/c/e;Ljava/lang/Object;Ljava/util/SortedSet;La/a/a/c/n;)V
    Access flags: 0x0
      = s(a.a.a.c.e,java.lang.Object,java.util.SortedSet,a.a.a.c.n)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 15, locals = 5, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/c/s.a La/a/a/c/e;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] aload_2 v2
      [8] aload_3 v3
      [9] aload v4
      [11] invokespecial #7
        + Methodref [a/a/a/c/n.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/Collection;La/a/a/c/n;)V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 4):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       g()Ljava/util/SortedSet;
    Access flags: 0x0
      = java.util.SortedSet g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #11
        + Methodref [a/a/a/c/s.e ()Ljava/util/Collection;]
      [4] checkcast #5
        + Class [java/util/SortedSet]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       comparator()Ljava/util/Comparator;
    Access flags: 0x1
      = public java.util.Comparator comparator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #13
        + Methodref [a/a/a/c/s.g ()Ljava/util/SortedSet;]
      [4] invokeinterface #14
        + InterfaceMethodref [java/util/SortedSet.comparator ()Ljava/util/Comparator;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       first()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object first()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/c/s.a ()V]
      [4] aload_0 v0
      [5] invokevirtual #13
        + Methodref [a/a/a/c/s.g ()Ljava/util/SortedSet;]
      [8] invokeinterface #15
        + InterfaceMethodref [java/util/SortedSet.first ()Ljava/lang/Object;]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       last()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object last()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/c/s.a ()V]
      [4] aload_0 v0
      [5] invokevirtual #13
        + Methodref [a/a/a/c/s.g ()Ljava/util/SortedSet;]
      [8] invokeinterface #17
        + InterfaceMethodref [java/util/SortedSet.last ()Ljava/lang/Object;]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
    Access flags: 0x1
      = public java.util.SortedSet headSet(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 45, locals = 2, stack = 6):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/c/s.a ()V]
      [4] new #3
        + Class [a/a/a/c/s]
      [7] dup
      [8] aload_0 v0
      [9] getfield #6
        + Fieldref [a/a/a/c/s.a La/a/a/c/e;]
      [12] aload_0 v0
      [13] invokevirtual #10
        + Methodref [a/a/a/c/s.c ()Ljava/lang/Object;]
      [16] aload_0 v0
      [17] invokevirtual #13
        + Methodref [a/a/a/c/s.g ()Ljava/util/SortedSet;]
      [20] aload_1 v1
      [21] invokeinterface #16
        + InterfaceMethodref [java/util/SortedSet.headSet (Ljava/lang/Object;)Ljava/util/SortedSet;]
      [26] aload_0 v0
      [27] invokevirtual #12
        + Methodref [a/a/a/c/s.f ()La/a/a/c/n;]
      [30] ifnonnull +7 (target=37)
      [33] aload_0 v0
      [34] goto +7 (target=41)
      [37] aload_0 v0
      [38] invokevirtual #12
        + Methodref [a/a/a/c/s.f ()La/a/a/c/n;]
      [41] invokespecial #8
        + Methodref [a/a/a/c/s.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/SortedSet;La/a/a/c/n;)V]
      [44] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [37] Var: [a:a/a/a/c/s][a:java/lang/Object], Stack: [u:4][u:4][a:a/a/a/c/e][a:java/lang/Object][a:java/util/SortedSet]
        - [41] Var: [a:a/a/a/c/s][a:java/lang/Object], Stack: [u:4][u:4][a:a/a/a/c/e][a:java/lang/Object][a:java/util/SortedSet][a:a/a/a/c/n]
  + Method:       subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
    Access flags: 0x1
      = public java.util.SortedSet subSet(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 46, locals = 3, stack = 7):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/c/s.a ()V]
      [4] new #3
        + Class [a/a/a/c/s]
      [7] dup
      [8] aload_0 v0
      [9] getfield #6
        + Fieldref [a/a/a/c/s.a La/a/a/c/e;]
      [12] aload_0 v0
      [13] invokevirtual #10
        + Methodref [a/a/a/c/s.c ()Ljava/lang/Object;]
      [16] aload_0 v0
      [17] invokevirtual #13
        + Methodref [a/a/a/c/s.g ()Ljava/util/SortedSet;]
      [20] aload_1 v1
      [21] aload_2 v2
      [22] invokeinterface #18
        + InterfaceMethodref [java/util/SortedSet.subSet (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;]
      [27] aload_0 v0
      [28] invokevirtual #12
        + Methodref [a/a/a/c/s.f ()La/a/a/c/n;]
      [31] ifnonnull +7 (target=38)
      [34] aload_0 v0
      [35] goto +7 (target=42)
      [38] aload_0 v0
      [39] invokevirtual #12
        + Methodref [a/a/a/c/s.f ()La/a/a/c/n;]
      [42] invokespecial #8
        + Methodref [a/a/a/c/s.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/SortedSet;La/a/a/c/n;)V]
      [45] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [38] Var: [a:a/a/a/c/s][a:java/lang/Object][a:java/lang/Object], Stack: [u:4][u:4][a:a/a/a/c/e][a:java/lang/Object][a:java/util/SortedSet]
        - [42] Var: [a:a/a/a/c/s][a:java/lang/Object][a:java/lang/Object], Stack: [u:4][u:4][a:a/a/a/c/e][a:java/lang/Object][a:java/util/SortedSet][a:a/a/a/c/n]
  + Method:       tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
    Access flags: 0x1
      = public java.util.SortedSet tailSet(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 45, locals = 2, stack = 6):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/c/s.a ()V]
      [4] new #3
        + Class [a/a/a/c/s]
      [7] dup
      [8] aload_0 v0
      [9] getfield #6
        + Fieldref [a/a/a/c/s.a La/a/a/c/e;]
      [12] aload_0 v0
      [13] invokevirtual #10
        + Methodref [a/a/a/c/s.c ()Ljava/lang/Object;]
      [16] aload_0 v0
      [17] invokevirtual #13
        + Methodref [a/a/a/c/s.g ()Ljava/util/SortedSet;]
      [20] aload_1 v1
      [21] invokeinterface #19
        + InterfaceMethodref [java/util/SortedSet.tailSet (Ljava/lang/Object;)Ljava/util/SortedSet;]
      [26] aload_0 v0
      [27] invokevirtual #12
        + Methodref [a/a/a/c/s.f ()La/a/a/c/n;]
      [30] ifnonnull +7 (target=37)
      [33] aload_0 v0
      [34] goto +7 (target=41)
      [37] aload_0 v0
      [38] invokevirtual #12
        + Methodref [a/a/a/c/s.f ()La/a/a/c/n;]
      [41] invokespecial #8
        + Methodref [a/a/a/c/s.<init> (La/a/a/c/e;Ljava/lang/Object;Ljava/util/SortedSet;La/a/a/c/n;)V]
      [44] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [37] Var: [a:a/a/a/c/s][a:java/lang/Object], Stack: [u:4][u:4][a:a/a/a/c/e][a:java/lang/Object][a:java/util/SortedSet]
        - [41] Var: [a:a/a/a/c/s][a:java/lang/Object], Stack: [u:4][u:4][a:a/a/a/c/e][a:java/lang/Object][a:java/util/SortedSet][a:a/a/a/c/n]

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/t
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.c.t extends java.lang.Object

Interfaces (count = 1):
  + Class [java/util/Map$Entry]

Constant Pool (count = 57):
  + String [=]
  + Class [a/a/a/a/i]
  + Class [a/a/a/c/t]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/UnsupportedOperationException]
  + Class [java/util/Map$Entry]
  + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/t.getKey ()Ljava/lang/Object;]
  + Methodref [a/a/a/c/t.getValue ()Ljava/lang/Object;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [hashCode ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [<init>]
  + Utf8 [=]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/c/t]
  + Utf8 [append]
  + Utf8 [equals]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [hashCode]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/UnsupportedOperationException]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [setValue]
  + Utf8 [toString]

Fields (count = 0):

Methods (count = 7):
  - Method:       <init>()V
    Access flags: 0x0
      = t()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #11
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getKey()Ljava/lang/Object;
    Access flags: 0x401
      = public abstract java.lang.Object getKey()
  + Method:       getValue()Ljava/lang/Object;
    Access flags: 0x401
      = public abstract java.lang.Object getValue()
  + Method:       setValue(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object setValue(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #6
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #17
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 52, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] instanceof #7
        + Class [java/util/Map$Entry]
      [4] ifeq +46 (target=50)
      [7] aload_1 v1
      [8] checkcast #7
        + Class [java/util/Map$Entry]
      [11] astore_2 v2
      [12] aload_0 v0
      [13] invokevirtual #9
        + Methodref [a/a/a/c/t.getKey ()Ljava/lang/Object;]
      [16] aload_2 v2
      [17] invokeinterface #18
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [22] invokestatic #8
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [25] ifeq +23 (target=48)
      [28] aload_0 v0
      [29] invokevirtual #10
        + Methodref [a/a/a/c/t.getValue ()Ljava/lang/Object;]
      [32] aload_2 v2
      [33] invokeinterface #19
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [38] invokestatic #8
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [41] ifeq +7 (target=48)
      [44] iconst_1
      [45] goto +4 (target=49)
      [48] iconst_0
      [49] ireturn
      [50] iconst_0
      [51] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [48] Var: ...[a:java/util/Map$Entry], Stack: (empty)
        - [49] Var: ..., Stack: [i]
        - [50] Var: -1, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 36, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/c/t.getKey ()Ljava/lang/Object;]
      [4] astore_1 v1
      [5] aload_0 v0
      [6] invokevirtual #10
        + Methodref [a/a/a/c/t.getValue ()Ljava/lang/Object;]
      [9] astore_2 v2
      [10] aload_1 v1
      [11] ifnonnull +7 (target=18)
      [14] iconst_0
      [15] goto +7 (target=22)
      [18] aload_1 v1
      [19] invokevirtual #12
        + Methodref [java/lang/Object.hashCode ()I]
      [22] aload_2 v2
      [23] ifnonnull +7 (target=30)
      [26] iconst_0
      [27] goto +7 (target=34)
      [30] aload_2 v2
      [31] invokevirtual #12
        + Methodref [java/lang/Object.hashCode ()I]
      [34] ixor
      [35] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [18] Var: ...[a:java/lang/Object][a:java/lang/Object], Stack: (empty)
        - [22] Var: ..., Stack: [i]
        - [30] Var: ..., Stack: [i]
        - [34] Var: [a:a/a/a/c/t][a:java/lang/Object][a:java/lang/Object], Stack: [i][i]
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 30, locals = 1, stack = 2):
      [0] new #5
        + Class [java/lang/StringBuilder]
      [3] dup
      [4] invokespecial #13
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [7] aload_0 v0
      [8] invokevirtual #9
        + Methodref [a/a/a/c/t.getKey ()Ljava/lang/Object;]
      [11] invokevirtual #14
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [14] ldc #1
        + String [=]
      [16] invokevirtual #15
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [19] aload_0 v0
      [20] invokevirtual #10
        + Methodref [a/a/a/c/t.getValue ()Ljava/lang/Object;]
      [23] invokevirtual #14
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [26] invokevirtual #16
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [29] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/u
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.c.u extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/c/dc]

Constant Pool (count = 59):
  + Class [a/a/a/c/da]
  + Class [a/a/a/c/dc]
  + Class [a/a/a/c/dd]
  + Class [a/a/a/c/u]
  + Class [java/lang/Object]
  + Class [java/util/Map]
  + Class [java/util/Set]
  + Fieldref [a/a/a/c/u.a Ljava/util/Set;]
  + Fieldref [a/a/a/c/u.b Ljava/util/Map;]
  + Methodref [a/a/a/c/da.<init> (Ljava/util/Map;)V]
  + Methodref [a/a/a/c/dd.a (La/a/a/c/dc;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/u.c ()Ljava/util/Set;]
  + Methodref [a/a/a/c/u.d ()Ljava/util/Map;]
  + Methodref [a/a/a/c/u.f ()Ljava/util/Map;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
  + InterfaceMethodref [java/util/Map.hashCode ()I]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/util/Map;)V]
  + NameAndType [a (La/a/a/c/dc;Ljava/lang/Object;)Z]
  + NameAndType [a Ljava/util/Set;]
  + NameAndType [b Ljava/util/Map;]
  + NameAndType [c ()Ljava/util/Set;]
  + NameAndType [d ()Ljava/util/Map;]
  + NameAndType [f ()Ljava/util/Map;]
  + NameAndType [hashCode ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Map;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/c/dc;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Map;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/util/Map;]
  + Utf8 [Ljava/util/Set;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/da]
  + Utf8 [a/a/a/c/dc]
  + Utf8 [a/a/a/c/dd]
  + Utf8 [a/a/a/c/u]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [f]
  + Utf8 [hashCode]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Set]
  + Utf8 [toString]

Fields (count = 2):
  + Field:        a Ljava/util/Set;
    Access flags: 0x82
      = private transient java.util.Set a
  + Field:        b Ljava/util/Map;
    Access flags: 0x82
      = private transient java.util.Map b

Methods (count = 8):
  - Method:       <init>()V
    Access flags: 0x0
      = u()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #15
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Ljava/util/Set;
    Access flags: 0x1
      = public java.util.Set e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/u.a Ljava/util/Set;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnonnull +15 (target=21)
      [9] aload_0 v0
      [10] aload_0 v0
      [11] invokevirtual #12
        + Methodref [a/a/a/c/u.c ()Ljava/util/Set;]
      [14] dup_x1
      [15] putfield #8
        + Fieldref [a/a/a/c/u.a Ljava/util/Set;]
      [18] goto +4 (target=22)
      [21] aload_1 v1
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [21] Var: ...[a:java/util/Set], Stack: (empty)
        - [22] Var: ..., Stack: [a:java/util/Set]
  + Method:       c()Ljava/util/Set;
    Access flags: 0x0
      = java.util.Set c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 1, stack = 3):
      [0] new #1
        + Class [a/a/a/c/da]
      [3] dup
      [4] aload_0 v0
      [5] invokevirtual #14
        + Methodref [a/a/a/c/u.f ()Ljava/util/Map;]
      [8] invokespecial #10
        + Methodref [a/a/a/c/da.<init> (Ljava/util/Map;)V]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()Ljava/util/Map;
    Access flags: 0x1
      = public java.util.Map f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/u.b Ljava/util/Map;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnonnull +15 (target=21)
      [9] aload_0 v0
      [10] aload_0 v0
      [11] invokevirtual #13
        + Methodref [a/a/a/c/u.d ()Ljava/util/Map;]
      [14] dup_x1
      [15] putfield #9
        + Fieldref [a/a/a/c/u.b Ljava/util/Map;]
      [18] goto +4 (target=22)
      [21] aload_1 v1
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [21] Var: ...[a:java/util/Map], Stack: (empty)
        - [22] Var: ..., Stack: [a:java/util/Map]
  + Method:       d()Ljava/util/Map;
    Access flags: 0x400
      = abstract java.util.Map d()
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #11
        + Methodref [a/a/a/c/dd.a (La/a/a/c/dc;Ljava/lang/Object;)Z]
      [5] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #14
        + Methodref [a/a/a/c/u.f ()Ljava/util/Map;]
      [4] invokeinterface #17
        + InterfaceMethodref [java/util/Map.hashCode ()I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #14
        + Methodref [a/a/a/c/u.f ()Ljava/util/Map;]
      [4] invokevirtual #16
        + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/v
  Superclass:    a/a/a/c/ea
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.v extends a.a.a.c.ea

Interfaces (count = 0):

Constant Pool (count = 32):
  + Class [a/a/a/c/ea]
  + Class [a/a/a/c/v]
  + Class [java/lang/Throwable]
  + Class [java/util/NoSuchElementException]
  + Fieldref [a/a/a/c/v.a Ljava/lang/Object;]
  + Methodref [a/a/a/c/ea.<init> ()V]
  + Methodref [a/a/a/c/v.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/v.hasNext ()Z]
  + Methodref [java/util/NoSuchElementException.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a Ljava/lang/Object;]
  + NameAndType [hasNext ()Z]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ea]
  + Utf8 [a/a/a/c/v]
  + Utf8 [hasNext]
  + Utf8 [java/lang/Throwable]
  + Utf8 [java/util/NoSuchElementException]
  + Utf8 [next]

Fields (count = 1):
  + Field:        a Ljava/lang/Object;
    Access flags: 0x2
      = private java.lang.Object a

Methods (count = 4):
  - Method:       <init>(Ljava/lang/Object;)V
    Access flags: 0x4
      = protected v(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #6
        + Methodref [a/a/a/c/ea.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #5
        + Fieldref [a/a/a/c/v.a Ljava/lang/Object;]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x404
      = protected abstract java.lang.Object a(java.lang.Object)
  + Method:       hasNext()Z
    Access flags: 0x11
      = public final boolean hasNext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/c/v.a Ljava/lang/Object;]
      [4] ifnull +7 (target=11)
      [7] iconst_1
      [8] goto +4 (target=12)
      [11] iconst_0
      [12] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [12] Var: ..., Stack: [i]
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 49, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #8
        + Methodref [a/a/a/c/v.hasNext ()Z]
      [4] ifne +11 (target=15)
      [7] new #4
        + Class [java/util/NoSuchElementException]
      [10] dup
      [11] invokespecial #9
        + Methodref [java/util/NoSuchElementException.<init> ()V]
      [14] athrow
      [15] aload_0 v0
      [16] getfield #5
        + Fieldref [a/a/a/c/v.a Ljava/lang/Object;]
      [19] astore_1 v1
      [20] aload_0 v0
      [21] aload_0 v0
      [22] aload_0 v0
      [23] getfield #5
        + Fieldref [a/a/a/c/v.a Ljava/lang/Object;]
      [26] invokevirtual #7
        + Methodref [a/a/a/c/v.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [29] putfield #5
        + Fieldref [a/a/a/c/v.a Ljava/lang/Object;]
      [32] aload_1 v1
      [33] areturn
      [34] astore_2 v2
      [35] aload_0 v0
      [36] aload_0 v0
      [37] aload_0 v0
      [38] getfield #5
        + Fieldref [a/a/a/c/v.a Ljava/lang/Object;]
      [41] invokevirtual #7
        + Methodref [a/a/a/c/v.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [44] putfield #5
        + Fieldref [a/a/a/c/v.a Ljava/lang/Object;]
      [47] aload_2 v2
      [48] athrow
      Code attribute exceptions (count = 2):
      - ExceptionInfo (15 -> 20: 34):
      - ExceptionInfo (34 -> 35: 34):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [15] Var: ..., Stack: (empty)
        - [34] Var: ..., Stack: [a:java/lang/Throwable]

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/w
  Superclass:    a/a/a/c/e
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.c.w extends a.a.a.c.e

Interfaces (count = 1):
  + Class [a/a/a/c/ds]

Constant Pool (count = 28):
  + Class [a/a/a/c/ds]
  + Class [a/a/a/c/e]
  + Class [a/a/a/c/w]
  + Methodref [a/a/a/c/e.<init> (Ljava/util/Map;)V]
  + Methodref [a/a/a/c/e.equals (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/e.f ()Ljava/util/Map;]
  + Methodref [a/a/a/c/w.g ()Ljava/util/Set;]
  + NameAndType [<init> (Ljava/util/Map;)V]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [f ()Ljava/util/Map;]
  + NameAndType [g ()Ljava/util/Set;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Map;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Map;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ds]
  + Utf8 [a/a/a/c/e]
  + Utf8 [a/a/a/c/w]
  + Utf8 [equals]
  + Utf8 [f]
  + Utf8 [g]

Fields (count = 0):

Methods (count = 5):
  - Method:       <init>(Ljava/util/Map;)V
    Access flags: 0x4
      = protected w(java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #4
        + Methodref [a/a/a/c/e.<init> (Ljava/util/Map;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       g()Ljava/util/Set;
    Access flags: 0x400
      = abstract java.util.Set g()
  + Method:       f()Ljava/util/Map;
    Access flags: 0x1
      = public java.util.Map f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #6
        + Methodref [a/a/a/c/e.f ()Ljava/util/Map;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #5
        + Methodref [a/a/a/c/e.equals (Ljava/lang/Object;)Z]
      [5] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a()Ljava/util/Collection;
    Access flags: 0x1000
      = synthetic java.util.Collection a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #7
        + Methodref [a/a/a/c/w.g ()Ljava/util/Set;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/x
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface a.a.a.c.x extends java.lang.Object

Interfaces (count = 1):
  + Class [java/util/Map]

Constant Pool (count = 11):
  + Class [a/a/a/c/x]
  + Class [java/lang/Object]
  + Class [java/util/Map]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a/a/a/c/x]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Map]
  + Utf8 [put]

Fields (count = 0):

Methods (count = 1):
  + Method:       put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x401
      = public abstract java.lang.Object put(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/y
  Superclass:    a/a/a/c/dh
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.y extends a.a.a.c.dh

Interfaces (count = 1):
  + Class [java/io/Serializable]

Constant Pool (count = 68):
  + String [)]
  + String [.onResultOf(]
  + Class [a/a/a/a/e]
  + Class [a/a/a/a/i]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/dh]
  + Class [a/a/a/c/y]
  + Class [java/io/Serializable]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Fieldref [a/a/a/c/y.a La/a/a/a/e;]
  + Fieldref [a/a/a/c/y.b La/a/a/c/dh;]
  + Methodref [a/a/a/a/i.a ([Ljava/lang/Object;)I]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/dh.<init> ()V]
  + Methodref [a/a/a/c/dh.compare (Ljava/lang/Object;Ljava/lang/Object;)I]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + InterfaceMethodref [a/a/a/a/e.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [a/a/a/a/e.equals (Ljava/lang/Object;)Z]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a ([Ljava/lang/Object;)I]
  + NameAndType [a La/a/a/a/e;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b La/a/a/c/dh;]
  + NameAndType [compare (Ljava/lang/Object;Ljava/lang/Object;)I]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/a/e;La/a/a/c/dh;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [([Ljava/lang/Object;)I]
  + Utf8 [)]
  + Utf8 [.onResultOf(]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/e;]
  + Utf8 [La/a/a/c/dh;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/e]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/dh]
  + Utf8 [a/a/a/c/y]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [compare]
  + Utf8 [equals]
  + Utf8 [hashCode]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [toString]

Fields (count = 2):
  + Field:        a La/a/a/a/e;
    Access flags: 0x10
      = final a.a.a.a.e a
  + Field:        b La/a/a/c/dh;
    Access flags: 0x10
      = final a.a.a.c.dh b

Methods (count = 5):
  - Method:       <init>(La/a/a/a/e;La/a/a/c/dh;)V
    Access flags: 0x0
      = y(a.a.a.a.e,a.a.a.c.dh)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 27, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #15
        + Methodref [a/a/a/c/dh.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokestatic #14
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] checkcast #3
        + Class [a/a/a/a/e]
      [12] putfield #11
        + Fieldref [a/a/a/c/y.a La/a/a/a/e;]
      [15] aload_0 v0
      [16] aload_2 v2
      [17] invokestatic #14
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [20] checkcast #6
        + Class [a/a/a/c/dh]
      [23] putfield #12
        + Fieldref [a/a/a/c/y.b La/a/a/c/dh;]
      [26] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       compare(Ljava/lang/Object;Ljava/lang/Object;)I
    Access flags: 0x1
      = public int compare(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/y.b La/a/a/c/dh;]
      [4] aload_0 v0
      [5] getfield #11
        + Fieldref [a/a/a/c/y.a La/a/a/a/e;]
      [8] aload_1 v1
      [9] invokeinterface #22
        + InterfaceMethodref [a/a/a/a/e.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [14] aload_0 v0
      [15] getfield #11
        + Fieldref [a/a/a/c/y.a La/a/a/a/e;]
      [18] aload_2 v2
      [19] invokeinterface #22
        + InterfaceMethodref [a/a/a/a/e.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [24] invokevirtual #16
        + Methodref [a/a/a/c/dh.compare (Ljava/lang/Object;Ljava/lang/Object;)I]
      [27] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 57, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] aload_0 v0
      [2] ifacmpne +5 (target=7)
      [5] iconst_1
      [6] ireturn
      [7] aload_1 v1
      [8] instanceof #7
        + Class [a/a/a/c/y]
      [11] ifeq +44 (target=55)
      [14] aload_1 v1
      [15] checkcast #7
        + Class [a/a/a/c/y]
      [18] astore_2 v2
      [19] aload_0 v0
      [20] getfield #11
        + Fieldref [a/a/a/c/y.a La/a/a/a/e;]
      [23] aload_2 v2
      [24] getfield #11
        + Fieldref [a/a/a/c/y.a La/a/a/a/e;]
      [27] invokeinterface #23
        + InterfaceMethodref [a/a/a/a/e.equals (Ljava/lang/Object;)Z]
      [32] ifeq +21 (target=53)
      [35] aload_0 v0
      [36] getfield #12
        + Fieldref [a/a/a/c/y.b La/a/a/c/dh;]
      [39] aload_2 v2
      [40] getfield #12
        + Fieldref [a/a/a/c/y.b La/a/a/c/dh;]
      [43] invokevirtual #17
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [46] ifeq +7 (target=53)
      [49] iconst_1
      [50] goto +4 (target=54)
      [53] iconst_0
      [54] ireturn
      [55] iconst_0
      [56] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [7] Var: ..., Stack: (empty)
        - [53] Var: ...[a:a/a/a/c/y], Stack: (empty)
        - [54] Var: ..., Stack: [i]
        - [55] Var: -1, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 1, stack = 4):
      [0] iconst_2
      [1] anewarray #9
        + Class [java/lang/Object]
      [4] dup
      [5] iconst_0
      [6] aload_0 v0
      [7] getfield #11
        + Fieldref [a/a/a/c/y.a La/a/a/a/e;]
      [10] aastore
      [11] dup
      [12] iconst_1
      [13] aload_0 v0
      [14] getfield #12
        + Fieldref [a/a/a/c/y.b La/a/a/c/dh;]
      [17] aastore
      [18] invokestatic #13
        + Methodref [a/a/a/a/i.a ([Ljava/lang/Object;)I]
      [21] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 35, locals = 1, stack = 2):
      [0] new #10
        + Class [java/lang/StringBuilder]
      [3] dup
      [4] invokespecial #18
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [7] aload_0 v0
      [8] getfield #12
        + Fieldref [a/a/a/c/y.b La/a/a/c/dh;]
      [11] invokevirtual #19
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [14] ldc #2
        + String [.onResultOf(]
      [16] invokevirtual #20
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [19] aload_0 v0
      [20] getfield #11
        + Fieldref [a/a/a/c/y.a La/a/a/a/e;]
      [23] invokevirtual #19
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [26] ldc #1
        + String [)]
      [28] invokevirtual #20
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [31] invokevirtual #21
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [34] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/z
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.z extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 55):
  + String [ cannot be negative but was: ]
  + String [=null]
  + String [no calls to next() since the last call to remove()]
  + String [null key in entry: null=]
  + String [null value in entry: ]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/z]
  + Class [java/lang/IllegalArgumentException]
  + Class [java/lang/NullPointerException]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Methodref [a/a/a/a/o.b (ZLjava/lang/Object;)V]
  + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/NullPointerException.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [append (I)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b (ZLjava/lang/Object;)V]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [ cannot be negative but was: ]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(I)Ljava/lang/StringBuilder;]
  + Utf8 [(ILjava/lang/String;)I]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Z)V]
  + Utf8 [(ZLjava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [=null]
  + Utf8 [Code]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/z]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [java/lang/IllegalArgumentException]
  + Utf8 [java/lang/NullPointerException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [no calls to next() since the last call to remove()]
  + Utf8 [null key in entry: null=]
  + Utf8 [null value in entry: ]
  + Utf8 [toString]

Fields (count = 0):

Methods (count = 3):
  + Method:       a(Ljava/lang/Object;Ljava/lang/Object;)V
    Access flags: 0x8
      = static void a(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 68, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] ifnonnull +30 (target=31)
      [4] new #9
        + Class [java/lang/NullPointerException]
      [7] dup
      [8] new #11
        + Class [java/lang/StringBuilder]
      [11] dup
      [12] invokespecial #15
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [15] ldc #4
        + String [null key in entry: null=]
      [17] invokevirtual #18
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [20] aload_1 v1
      [21] invokevirtual #17
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [24] invokevirtual #19
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [27] invokespecial #14
        + Methodref [java/lang/NullPointerException.<init> (Ljava/lang/String;)V]
      [30] athrow
      [31] aload_1 v1
      [32] ifnonnull +35 (target=67)
      [35] new #9
        + Class [java/lang/NullPointerException]
      [38] dup
      [39] new #11
        + Class [java/lang/StringBuilder]
      [42] dup
      [43] invokespecial #15
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [46] ldc #5
        + String [null value in entry: ]
      [48] invokevirtual #18
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [51] aload_0 v0
      [52] invokevirtual #17
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [55] ldc #2
        + String [=null]
      [57] invokevirtual #18
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [60] invokevirtual #19
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [63] invokespecial #14
        + Methodref [java/lang/NullPointerException.<init> (Ljava/lang/String;)V]
      [66] athrow
      [67] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [31] Var: ..., Stack: (empty)
        - [67] Var: ..., Stack: (empty)
  + Method:       a(ILjava/lang/String;)I
    Access flags: 0x8
      = static int a(int,java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 37, locals = 2, stack = 4):
      [0] iload_0 v0
      [1] ifge +34 (target=35)
      [4] new #8
        + Class [java/lang/IllegalArgumentException]
      [7] dup
      [8] new #11
        + Class [java/lang/StringBuilder]
      [11] dup
      [12] invokespecial #15
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [15] aload_1 v1
      [16] invokevirtual #18
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [19] ldc #1
        + String [ cannot be negative but was: ]
      [21] invokevirtual #18
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [24] iload_0 v0
      [25] invokevirtual #16
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [28] invokevirtual #19
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [31] invokespecial #13
        + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
      [34] athrow
      [35] iload_0 v0
      [36] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [35] Var: ..., Stack: (empty)
  + Method:       a(Z)V
    Access flags: 0x8
      = static void a(boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 1, stack = 2):
      [0] iload_0 v0
      [1] ldc #3
        + String [no calls to next() since the last call to remove()]
      [3] invokestatic #12
        + Methodref [a/a/a/a/o.b (ZLjava/lang/Object;)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/aa
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.c.aa extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 68):
  + String [, ]
  + String [null]
  + String [size]
  + Class [a/a/a/a/f]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/aa]
  + Class [a/a/a/c/z]
  + Class [java/lang/ClassCastException]
  + Class [java/lang/Math]
  + Class [java/lang/NullPointerException]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/util/Collection]
  + Long [8]
  + Long [1073741824]
  + Fieldref [a/a/a/c/aa.a La/a/a/a/f;]
  + Methodref [a/a/a/a/f.a (Ljava/lang/String;)La/a/a/a/f;]
  + Methodref [a/a/a/a/f.b (Ljava/lang/String;)La/a/a/a/f;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/z.a (ILjava/lang/String;)I]
  + Methodref [java/lang/Math.min (JJ)J]
  + Methodref [java/lang/StringBuilder.<init> (I)V]
  + InterfaceMethodref [java/util/Collection.contains (Ljava/lang/Object;)Z]
  + NameAndType [<init> (I)V]
  + NameAndType [a (ILjava/lang/String;)I]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/String;)La/a/a/a/f;]
  + NameAndType [a La/a/a/a/f;]
  + NameAndType [b (Ljava/lang/String;)La/a/a/a/f;]
  + NameAndType [contains (Ljava/lang/Object;)Z]
  + NameAndType [min (JJ)J]
  + Utf8 [()V]
  + Utf8 [(I)Ljava/lang/StringBuilder;]
  + Utf8 [(I)V]
  + Utf8 [(ILjava/lang/String;)I]
  + Utf8 [(JJ)J]
  + Utf8 [(Ljava/lang/Iterable;)Ljava/util/Collection;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)La/a/a/a/f;]
  + Utf8 [(Ljava/util/Collection;Ljava/lang/Object;)Z]
  + Utf8 [, ]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/f;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/f]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/aa]
  + Utf8 [a/a/a/c/z]
  + Utf8 [b]
  + Utf8 [contains]
  + Utf8 [java/lang/ClassCastException]
  + Utf8 [java/lang/Math]
  + Utf8 [java/lang/NullPointerException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/Collection]
  + Utf8 [min]
  + Utf8 [null]
  + Utf8 [size]

Fields (count = 1):
  + Field:        a La/a/a/a/f;
    Access flags: 0x18
      = static final a.a.a.a.f a

Methods (count = 4):
  + Method:       a(Ljava/util/Collection;Ljava/lang/Object;)Z
    Access flags: 0x8
      = static boolean a(java.util.Collection,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 19, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokestatic #21
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_0 v0
      [6] aload_1 v1
      [7] invokeinterface #25
        + InterfaceMethodref [java/util/Collection.contains (Ljava/lang/Object;)Z]
      [12] ireturn
      [13] astore_2 v2
      [14] iconst_0
      [15] ireturn
      [16] astore_2 v2
      [17] iconst_0
      [18] ireturn
      Code attribute exceptions (count = 2):
      - ExceptionInfo (5 -> 12: 13):
      + Class [java/lang/ClassCastException]
      - ExceptionInfo (5 -> 12: 16):
      + Class [java/lang/NullPointerException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ..., Stack: [a:java/lang/ClassCastException]
        - [16] Var: ..., Stack: [a:java/lang/NullPointerException]
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(I)Ljava/lang/StringBuilder;
    Access flags: 0x8
      = static java.lang.StringBuilder a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 1, stack = 6):
      [0] iload_0 v0
      [1] ldc #3
        + String [size]
      [3] invokestatic #22
        + Methodref [a/a/a/c/z.a (ILjava/lang/String;)I]
      [6] pop
      [7] new #12
        + Class [java/lang/StringBuilder]
      [10] dup
      [11] iload_0 v0
      [12] i2l
      [13] ldc2_w #14
        + Long [8]
      [16] lmul
      [17] ldc2_w #16
        + Long [1073741824]
      [20] invokestatic #23
        + Methodref [java/lang/Math.min (JJ)J]
      [23] l2i
      [24] invokespecial #24
        + Methodref [java/lang/StringBuilder.<init> (I)V]
      [27] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Iterable;)Ljava/util/Collection;
    Access flags: 0x8
      = static java.util.Collection a(java.lang.Iterable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] checkcast #13
        + Class [java/util/Collection]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 0, stack = 2):
      [0] ldc #1
        + String [, ]
      [2] invokestatic #19
        + Methodref [a/a/a/a/f.a (Ljava/lang/String;)La/a/a/a/f;]
      [5] ldc #2
        + String [null]
      [7] invokevirtual #20
        + Methodref [a/a/a/a/f.b (Ljava/lang/String;)La/a/a/a/f;]
      [10] putstatic #18
        + Fieldref [a/a/a/c/aa.a La/a/a/a/f;]
      [13] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ab
  Superclass:    a/a/a/c/dh
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.ab extends a.a.a.c.dh

Interfaces (count = 1):
  + Class [java/io/Serializable]

Constant Pool (count = 45):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/ab]
  + Class [a/a/a/c/dh]
  + Class [java/io/Serializable]
  + Class [java/lang/Object]
  + Class [java/util/Comparator]
  + Fieldref [a/a/a/c/ab.a Ljava/util/Comparator;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/dh.<init> ()V]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
  + InterfaceMethodref [java/util/Comparator.compare (Ljava/lang/Object;Ljava/lang/Object;)I]
  + InterfaceMethodref [java/util/Comparator.equals (Ljava/lang/Object;)Z]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a Ljava/util/Comparator;]
  + NameAndType [compare (Ljava/lang/Object;Ljava/lang/Object;)I]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [hashCode ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)I]
  + Utf8 [(Ljava/util/Comparator;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/util/Comparator;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/ab]
  + Utf8 [a/a/a/c/dh]
  + Utf8 [compare]
  + Utf8 [equals]
  + Utf8 [hashCode]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Comparator]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a Ljava/util/Comparator;
    Access flags: 0x10
      = final java.util.Comparator a

Methods (count = 5):
  - Method:       <init>(Ljava/util/Comparator;)V
    Access flags: 0x0
      = ab(java.util.Comparator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #9
        + Methodref [a/a/a/c/dh.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokestatic #8
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] checkcast #6
        + Class [java/util/Comparator]
      [12] putfield #7
        + Fieldref [a/a/a/c/ab.a Ljava/util/Comparator;]
      [15] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       compare(Ljava/lang/Object;Ljava/lang/Object;)I
    Access flags: 0x1
      = public int compare(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/c/ab.a Ljava/util/Comparator;]
      [4] aload_1 v1
      [5] aload_2 v2
      [6] invokeinterface #12
        + InterfaceMethodref [java/util/Comparator.compare (Ljava/lang/Object;Ljava/lang/Object;)I]
      [11] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 35, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] aload_0 v0
      [2] ifacmpne +5 (target=7)
      [5] iconst_1
      [6] ireturn
      [7] aload_1 v1
      [8] instanceof #2
        + Class [a/a/a/c/ab]
      [11] ifeq +22 (target=33)
      [14] aload_1 v1
      [15] checkcast #2
        + Class [a/a/a/c/ab]
      [18] astore_2 v2
      [19] aload_0 v0
      [20] getfield #7
        + Fieldref [a/a/a/c/ab.a Ljava/util/Comparator;]
      [23] aload_2 v2
      [24] getfield #7
        + Fieldref [a/a/a/c/ab.a Ljava/util/Comparator;]
      [27] invokeinterface #13
        + InterfaceMethodref [java/util/Comparator.equals (Ljava/lang/Object;)Z]
      [32] ireturn
      [33] iconst_0
      [34] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [7] Var: ..., Stack: (empty)
        - [33] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/c/ab.a Ljava/util/Comparator;]
      [4] invokevirtual #10
        + Methodref [java/lang/Object.hashCode ()I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/c/ab.a Ljava/util/Comparator;]
      [4] invokevirtual #11
        + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ac
  Superclass:    a/a/a/c/cf
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.ac extends a.a.a.c.cf

Interfaces (count = 0):

Constant Pool (count = 83):
  + String [should never be called]
  + Class [a/a/a/c/ac]
  + Class [a/a/a/c/cf]
  + Class [a/a/a/c/dh]
  + Class [java/lang/AssertionError]
  + Fieldref [a/a/a/c/ac.c La/a/a/c/cf;]
  + Methodref [a/a/a/c/ac.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/ac.a_ ()La/a/a/c/cf;]
  + Methodref [a/a/a/c/ac.c ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/cf.<init> (Ljava/util/Comparator;)V]
  + Methodref [a/a/a/c/cf.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/cf.a_ ()La/a/a/c/cf;]
  + Methodref [a/a/a/c/cf.b (Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;]
  + Methodref [a/a/a/c/cf.c ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/cf.c (Ljava/lang/Object;Z)La/a/a/c/cf;]
  + Methodref [a/a/a/c/cf.ceiling (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/cf.comparator ()Ljava/util/Comparator;]
  + Methodref [a/a/a/c/cf.d (Ljava/lang/Object;Z)La/a/a/c/cf;]
  + Methodref [a/a/a/c/cf.e ()Z]
  + Methodref [a/a/a/c/cf.floor (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/cf.higher (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/cf.lower (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/cf.size ()I]
  + Methodref [a/a/a/c/dh.a ()La/a/a/c/dh;]
  + Methodref [a/a/a/c/dh.a (Ljava/util/Comparator;)La/a/a/c/dh;]
  + Methodref [java/lang/AssertionError.<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/util/Comparator;)V]
  + NameAndType [a ()La/a/a/c/dh;]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a (Ljava/util/Comparator;)La/a/a/c/dh;]
  + NameAndType [a_ ()La/a/a/c/cf;]
  + NameAndType [b (Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;]
  + NameAndType [c ()La/a/a/c/ea;]
  + NameAndType [c (Ljava/lang/Object;Z)La/a/a/c/cf;]
  + NameAndType [c La/a/a/c/cf;]
  + NameAndType [ceiling (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [comparator ()Ljava/util/Comparator;]
  + NameAndType [d (Ljava/lang/Object;Z)La/a/a/c/cf;]
  + NameAndType [e ()Z]
  + NameAndType [floor (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [higher (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [lower (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/cf;]
  + Utf8 [()La/a/a/c/dh;]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()Ljava/util/Comparator;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/NavigableSet;]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/c/cf;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;Z)La/a/a/c/cf;]
  + Utf8 [(Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;]
  + Utf8 [(Ljava/util/Comparator;)La/a/a/c/dh;]
  + Utf8 [(Ljava/util/Comparator;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/cf;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ac]
  + Utf8 [a/a/a/c/cf]
  + Utf8 [a/a/a/c/dh]
  + Utf8 [a_]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [ceiling]
  + Utf8 [comparator]
  + Utf8 [d]
  + Utf8 [descendingIterator]
  + Utf8 [descendingSet]
  + Utf8 [e]
  + Utf8 [floor]
  + Utf8 [higher]
  + Utf8 [iterator]
  + Utf8 [java/lang/AssertionError]
  + Utf8 [lower]
  + Utf8 [should never be called]
  + Utf8 [size]

Fields (count = 1):
  + Field:        c La/a/a/c/cf;
    Access flags: 0x12
      = private final a.a.a.c.cf c

Methods (count = 17):
  - Method:       <init>(La/a/a/c/cf;)V
    Access flags: 0x0
      = ac(a.a.a.c.cf)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #17
        + Methodref [a/a/a/c/cf.comparator ()Ljava/util/Comparator;]
      [5] invokestatic #25
        + Methodref [a/a/a/c/dh.a (Ljava/util/Comparator;)La/a/a/c/dh;]
      [8] invokevirtual #24
        + Methodref [a/a/a/c/dh.a ()La/a/a/c/dh;]
      [11] invokespecial #10
        + Methodref [a/a/a/c/cf.<init> (Ljava/util/Comparator;)V]
      [14] aload_0 v0
      [15] aload_1 v1
      [16] putfield #6
        + Fieldref [a/a/a/c/ac.c La/a/a/c/cf;]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/ac.c La/a/a/c/cf;]
      [4] invokevirtual #23
        + Methodref [a/a/a/c/cf.size ()I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x1
      = public a.a.a.c.ea a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/ac.c La/a/a/c/cf;]
      [4] invokevirtual #14
        + Methodref [a/a/a/c/cf.c ()La/a/a/c/ea;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;Z)La/a/a/c/cf;
    Access flags: 0x0
      = a.a.a.c.cf a(java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/ac.c La/a/a/c/cf;]
      [4] aload_1 v1
      [5] iload_2 v2
      [6] invokevirtual #18
        + Methodref [a/a/a/c/cf.d (Ljava/lang/Object;Z)La/a/a/c/cf;]
      [9] invokevirtual #12
        + Methodref [a/a/a/c/cf.a_ ()La/a/a/c/cf;]
      [12] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;
    Access flags: 0x0
      = a.a.a.c.cf a(java.lang.Object,boolean,java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 5, stack = 5):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/ac.c La/a/a/c/cf;]
      [4] aload_3 v3
      [5] iload v4
      [7] aload_1 v1
      [8] iload_2 v2
      [9] invokevirtual #13
        + Methodref [a/a/a/c/cf.b (Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;]
      [12] invokevirtual #12
        + Methodref [a/a/a/c/cf.a_ ()La/a/a/c/cf;]
      [15] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;Z)La/a/a/c/cf;
    Access flags: 0x0
      = a.a.a.c.cf b(java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/ac.c La/a/a/c/cf;]
      [4] aload_1 v1
      [5] iload_2 v2
      [6] invokevirtual #15
        + Methodref [a/a/a/c/cf.c (Ljava/lang/Object;Z)La/a/a/c/cf;]
      [9] invokevirtual #12
        + Methodref [a/a/a/c/cf.a_ ()La/a/a/c/cf;]
      [12] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a_()La/a/a/c/cf;
    Access flags: 0x1
      = public a.a.a.c.cf a_()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/ac.c La/a/a/c/cf;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()La/a/a/c/ea;
    Access flags: 0x1
      = public a.a.a.c.ea c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/ac.c La/a/a/c/cf;]
      [4] invokevirtual #11
        + Methodref [a/a/a/c/cf.a ()La/a/a/c/ea;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()La/a/a/c/cf;
    Access flags: 0x0
      = a.a.a.c.cf d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 3):
      [0] new #5
        + Class [java/lang/AssertionError]
      [3] dup
      [4] ldc #1
        + String [should never be called]
      [6] invokespecial #26
        + Methodref [java/lang/AssertionError.<init> (Ljava/lang/Object;)V]
      [9] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       lower(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object lower(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/ac.c La/a/a/c/cf;]
      [4] aload_1 v1
      [5] invokevirtual #21
        + Methodref [a/a/a/c/cf.higher (Ljava/lang/Object;)Ljava/lang/Object;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       floor(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object floor(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/ac.c La/a/a/c/cf;]
      [4] aload_1 v1
      [5] invokevirtual #16
        + Methodref [a/a/a/c/cf.ceiling (Ljava/lang/Object;)Ljava/lang/Object;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       ceiling(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object ceiling(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/ac.c La/a/a/c/cf;]
      [4] aload_1 v1
      [5] invokevirtual #20
        + Methodref [a/a/a/c/cf.floor (Ljava/lang/Object;)Ljava/lang/Object;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       higher(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object higher(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/ac.c La/a/a/c/cf;]
      [4] aload_1 v1
      [5] invokevirtual #22
        + Methodref [a/a/a/c/cf.lower (Ljava/lang/Object;)Ljava/lang/Object;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/ac.c La/a/a/c/cf;]
      [4] invokevirtual #19
        + Methodref [a/a/a/c/cf.e ()Z]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       descendingIterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator descendingIterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/c/ac.c ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       descendingSet()Ljava/util/NavigableSet;
    Access flags: 0x1001
      = public synthetic java.util.NavigableSet descendingSet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #8
        + Methodref [a/a/a/c/ac.a_ ()La/a/a/c/cf;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #7
        + Methodref [a/a/a/c/ac.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ad
  Superclass:    a/a/a/c/be
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.ad extends a.a.a.c.be

Interfaces (count = 0):

Constant Pool (count = 50):
  + String [should never be called]
  + Class [a/a/a/c/ad]
  + Class [a/a/a/c/be]
  + Class [a/a/a/c/cb]
  + Class [java/lang/AssertionError]
  + Fieldref [a/a/a/c/ad.a La/a/a/c/ad;]
  + Methodref [a/a/a/c/ad.<init> ()V]
  + Methodref [a/a/a/c/ad.b ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/ad.d ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/be.<init> ()V]
  + Methodref [a/a/a/c/cb.g ()La/a/a/c/cb;]
  + Methodref [java/lang/AssertionError.<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [a La/a/a/c/ad;]
  + NameAndType [b ()La/a/a/c/cb;]
  + NameAndType [d ()La/a/a/c/cb;]
  + NameAndType [g ()La/a/a/c/cb;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/be;]
  + Utf8 [()La/a/a/c/cb;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/ad;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ad]
  + Utf8 [a/a/a/c/be]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [c_]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [entrySet]
  + Utf8 [g]
  + Utf8 [get]
  + Utf8 [isEmpty]
  + Utf8 [java/lang/AssertionError]
  + Utf8 [keySet]
  + Utf8 [should never be called]
  + Utf8 [size]

Fields (count = 1):
  + Field:        a La/a/a/c/ad;
    Access flags: 0x18
      = static final a.a.a.c.ad a

Methods (count = 12):
  - Method:       <init>()V
    Access flags: 0x2
      = private ad()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #10
        + Methodref [a/a/a/c/be.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c_()La/a/a/c/be;
    Access flags: 0x1
      = public a.a.a.c.be c_()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 2, locals = 2, stack = 1):
      [0] aconst_null
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b()La/a/a/c/cb;
    Access flags: 0x1
      = public a.a.a.c.cb b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 1):
      [0] invokestatic #11
        + Methodref [a/a/a/c/cb.g ()La/a/a/c/cb;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()La/a/a/c/cb;
    Access flags: 0x0
      = a.a.a.c.cb c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 3):
      [0] new #5
        + Class [java/lang/AssertionError]
      [3] dup
      [4] ldc #1
        + String [should never be called]
      [6] invokespecial #12
        + Methodref [java/lang/AssertionError.<init> (Ljava/lang/Object;)V]
      [9] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()La/a/a/c/cb;
    Access flags: 0x1
      = public a.a.a.c.cb d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 1):
      [0] invokestatic #11
        + Methodref [a/a/a/c/cb.g ()La/a/a/c/cb;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       entrySet()Ljava/util/Set;
    Access flags: 0x1001
      = public synthetic java.util.Set entrySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #8
        + Methodref [a/a/a/c/ad.b ()La/a/a/c/cb;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       keySet()Ljava/util/Set;
    Access flags: 0x1001
      = public synthetic java.util.Set keySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/c/ad.d ()La/a/a/c/cb;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 0, stack = 2):
      [0] new #2
        + Class [a/a/a/c/ad]
      [3] dup
      [4] invokespecial #7
        + Methodref [a/a/a/c/ad.<init> ()V]
      [7] putstatic #6
        + Fieldref [a/a/a/c/ad.a La/a/a/c/ad;]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ae
  Superclass:    a/a/a/c/cb
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.ae extends a.a.a.c.cb

Interfaces (count = 0):

Constant Pool (count = 58):
  + String [[]]
  + Class [a/a/a/c/ae]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/cb]
  + Class [a/a/a/c/ck]
  + Class [java/util/Collection]
  + Class [java/util/Set]
  + Fieldref [a/a/a/c/ae.a La/a/a/c/ae;]
  + Methodref [a/a/a/c/ae.<init> ()V]
  + Methodref [a/a/a/c/ae.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/bo.d ()La/a/a/c/bo;]
  + Methodref [a/a/a/c/cb.<init> ()V]
  + Methodref [a/a/a/c/ck.a ()La/a/a/c/ea;]
  + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
  + InterfaceMethodref [java/util/Set.isEmpty ()Z]
  + NameAndType [<init> ()V]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a La/a/a/c/ae;]
  + NameAndType [d ()La/a/a/c/bo;]
  + NameAndType [isEmpty ()Z]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bo;]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Collection;)Z]
  + Utf8 [([Ljava/lang/Object;I)I]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/ae;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [[]]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ae]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [b]
  + Utf8 [b_]
  + Utf8 [contains]
  + Utf8 [containsAll]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [hashCode]
  + Utf8 [isEmpty]
  + Utf8 [iterator]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/Set]
  + Utf8 [size]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a La/a/a/c/ae;
    Access flags: 0x18
      = static final a.a.a.c.ae a

Methods (count = 15):
  - Method:       <init>()V
    Access flags: 0x2
      = private ae()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #12
        + Methodref [a/a/a/c/cb.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 2, locals = 2, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       containsAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean containsAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokeinterface #14
        + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
      [6] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x1
      = public a.a.a.c.ea a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 1):
      [0] invokestatic #13
        + Methodref [a/a/a/c/ck.a ()La/a/a/c/ea;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a([Ljava/lang/Object;I)I
    Access flags: 0x0
      = int a(java.lang.Object[],int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 3, stack = 1):
      [0] iload_2 v2
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/c/bo;
    Access flags: 0x1
      = public a.a.a.c.bo b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 1):
      [0] invokestatic #11
        + Methodref [a/a/a/c/bo.d ()La/a/a/c/bo;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 21, locals = 3, stack = 1):
      [0] aload_1 v1
      [1] instanceof #7
        + Class [java/util/Set]
      [4] ifeq +15 (target=19)
      [7] aload_1 v1
      [8] checkcast #7
        + Class [java/util/Set]
      [11] astore_2 v2
      [12] aload_2 v2
      [13] invokeinterface #15
        + InterfaceMethodref [java/util/Set.isEmpty ()Z]
      [18] ireturn
      [19] iconst_0
      [20] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [19] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x11
      = public final int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b_()Z
    Access flags: 0x0
      = boolean b_()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 3, locals = 1, stack = 1):
      [0] ldc #1
        + String [[]]
      [2] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #10
        + Methodref [a/a/a/c/ae.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 0, stack = 2):
      [0] new #2
        + Class [a/a/a/c/ae]
      [3] dup
      [4] invokespecial #9
        + Methodref [a/a/a/c/ae.<init> ()V]
      [7] putstatic #8
        + Fieldref [a/a/a/c/ae.a La/a/a/c/ae;]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/af
  Superclass:    a/a/a/c/cd
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.af extends a.a.a.c.cd

Interfaces (count = 0):

Constant Pool (count = 100):
  + String [should never be called]
  + String [{}]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/af]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/cb]
  + Class [a/a/a/c/cd]
  + Class [a/a/a/c/cf]
  + Class [a/a/a/c/dh]
  + Class [java/lang/AssertionError]
  + Fieldref [a/a/a/c/af.a La/a/a/c/cf;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/af.<init> (Ljava/util/Comparator;La/a/a/c/cd;)V]
  + Methodref [a/a/a/c/af.a (Ljava/lang/Object;Z)La/a/a/c/cd;]
  + Methodref [a/a/a/c/af.b ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/af.b (Ljava/lang/Object;Z)La/a/a/c/cd;]
  + Methodref [a/a/a/c/af.comparator ()Ljava/util/Comparator;]
  + Methodref [a/a/a/c/af.d_ ()La/a/a/c/cf;]
  + Methodref [a/a/a/c/af.f ()La/a/a/c/bf;]
  + Methodref [a/a/a/c/bo.d ()La/a/a/c/bo;]
  + Methodref [a/a/a/c/cb.g ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/cd.<init> ()V]
  + Methodref [a/a/a/c/cd.<init> (La/a/a/c/cd;)V]
  + Methodref [a/a/a/c/cf.a (Ljava/util/Comparator;)La/a/a/c/cf;]
  + Methodref [a/a/a/c/dh.a ()La/a/a/c/dh;]
  + Methodref [a/a/a/c/dh.a (Ljava/util/Comparator;)La/a/a/c/dh;]
  + Methodref [java/lang/AssertionError.<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/cd;)V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/util/Comparator;La/a/a/c/cd;)V]
  + NameAndType [a ()La/a/a/c/dh;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;Z)La/a/a/c/cd;]
  + NameAndType [a (Ljava/util/Comparator;)La/a/a/c/cf;]
  + NameAndType [a (Ljava/util/Comparator;)La/a/a/c/dh;]
  + NameAndType [a La/a/a/c/cf;]
  + NameAndType [b ()La/a/a/c/cb;]
  + NameAndType [b (Ljava/lang/Object;Z)La/a/a/c/cd;]
  + NameAndType [comparator ()Ljava/util/Comparator;]
  + NameAndType [d ()La/a/a/c/bo;]
  + NameAndType [d_ ()La/a/a/c/cf;]
  + NameAndType [f ()La/a/a/c/bf;]
  + NameAndType [g ()La/a/a/c/cb;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bf;]
  + Utf8 [()La/a/a/c/bo;]
  + Utf8 [()La/a/a/c/cb;]
  + Utf8 [()La/a/a/c/cd;]
  + Utf8 [()La/a/a/c/cf;]
  + Utf8 [()La/a/a/c/dh;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Comparator;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/c/cd;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;Z)La/a/a/c/cd;]
  + Utf8 [(Ljava/lang/Object;Z)Ljava/util/NavigableMap;]
  + Utf8 [(Ljava/util/Comparator;)La/a/a/c/cf;]
  + Utf8 [(Ljava/util/Comparator;)La/a/a/c/dh;]
  + Utf8 [(Ljava/util/Comparator;)V]
  + Utf8 [(Ljava/util/Comparator;La/a/a/c/cd;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/cf;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/af]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [a/a/a/c/cd]
  + Utf8 [a/a/a/c/cf]
  + Utf8 [a/a/a/c/dh]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [comparator]
  + Utf8 [d]
  + Utf8 [d_]
  + Utf8 [e]
  + Utf8 [entrySet]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [get]
  + Utf8 [headMap]
  + Utf8 [isEmpty]
  + Utf8 [java/lang/AssertionError]
  + Utf8 [keySet]
  + Utf8 [should never be called]
  + Utf8 [size]
  + Utf8 [tailMap]
  + Utf8 [toString]
  + Utf8 [values]
  + Utf8 [{}]

Fields (count = 1):
  + Field:        a La/a/a/c/cf;
    Access flags: 0x92
      = private final transient a.a.a.c.cf a

Methods (count = 20):
  - Method:       <init>(Ljava/util/Comparator;)V
    Access flags: 0x0
      = af(java.util.Comparator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #22
        + Methodref [a/a/a/c/cd.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokestatic #24
        + Methodref [a/a/a/c/cf.a (Ljava/util/Comparator;)La/a/a/c/cf;]
      [9] putfield #11
        + Fieldref [a/a/a/c/af.a La/a/a/c/cf;]
      [12] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/util/Comparator;La/a/a/c/cd;)V
    Access flags: 0x0
      = af(java.util.Comparator,a.a.a.c.cd)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_2 v2
      [2] invokespecial #23
        + Methodref [a/a/a/c/cd.<init> (La/a/a/c/cd;)V]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] invokestatic #24
        + Methodref [a/a/a/c/cf.a (Ljava/util/Comparator;)La/a/a/c/cf;]
      [10] putfield #11
        + Fieldref [a/a/a/c/af.a La/a/a/c/cf;]
      [13] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 2, locals = 2, stack = 1):
      [0] aconst_null
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       d_()La/a/a/c/cf;
    Access flags: 0x1
      = public a.a.a.c.cf d_()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/c/af.a La/a/a/c/cf;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()La/a/a/c/bf;
    Access flags: 0x1
      = public a.a.a.c.bf f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 1):
      [0] invokestatic #20
        + Methodref [a/a/a/c/bo.d ()La/a/a/c/bo;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 3, locals = 1, stack = 1):
      [0] ldc #2
        + String [{}]
      [2] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/c/cb;
    Access flags: 0x1
      = public a.a.a.c.cb b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 1):
      [0] invokestatic #21
        + Methodref [a/a/a/c/cb.g ()La/a/a/c/cb;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()La/a/a/c/cb;
    Access flags: 0x0
      = a.a.a.c.cb c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 3):
      [0] new #10
        + Class [java/lang/AssertionError]
      [3] dup
      [4] ldc #1
        + String [should never be called]
      [6] invokespecial #27
        + Methodref [java/lang/AssertionError.<init> (Ljava/lang/Object;)V]
      [9] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;Z)La/a/a/c/cd;
    Access flags: 0x1
      = public a.a.a.c.cd a(java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 1):
      [0] aload_1 v1
      [1] invokestatic #12
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_0 v0
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;Z)La/a/a/c/cd;
    Access flags: 0x1
      = public a.a.a.c.cd b(java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 1):
      [0] aload_1 v1
      [1] invokestatic #12
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_0 v0
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       g()La/a/a/c/cd;
    Access flags: 0x0
      = a.a.a.c.cd g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 1, stack = 4):
      [0] new #4
        + Class [a/a/a/c/af]
      [3] dup
      [4] aload_0 v0
      [5] invokevirtual #17
        + Methodref [a/a/a/c/af.comparator ()Ljava/util/Comparator;]
      [8] invokestatic #26
        + Methodref [a/a/a/c/dh.a (Ljava/util/Comparator;)La/a/a/c/dh;]
      [11] invokevirtual #25
        + Methodref [a/a/a/c/dh.a ()La/a/a/c/dh;]
      [14] aload_0 v0
      [15] invokespecial #13
        + Methodref [a/a/a/c/af.<init> (Ljava/util/Comparator;La/a/a/c/cd;)V]
      [18] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       tailMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
    Access flags: 0x1001
      = public synthetic java.util.NavigableMap tailMap(java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokevirtual #16
        + Methodref [a/a/a/c/af.b (Ljava/lang/Object;Z)La/a/a/c/cd;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       headMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
    Access flags: 0x1001
      = public synthetic java.util.NavigableMap headMap(java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokevirtual #14
        + Methodref [a/a/a/c/af.a (Ljava/lang/Object;Z)La/a/a/c/cd;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       entrySet()Ljava/util/Set;
    Access flags: 0x1001
      = public synthetic java.util.Set entrySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #15
        + Methodref [a/a/a/c/af.b ()La/a/a/c/cb;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       values()Ljava/util/Collection;
    Access flags: 0x1001
      = public synthetic java.util.Collection values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #19
        + Methodref [a/a/a/c/af.f ()La/a/a/c/bf;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       keySet()Ljava/util/Set;
    Access flags: 0x1001
      = public synthetic java.util.Set keySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #18
        + Methodref [a/a/a/c/af.d_ ()La/a/a/c/cf;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()La/a/a/c/cb;
    Access flags: 0x1001
      = public synthetic a.a.a.c.cb d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #18
        + Methodref [a/a/a/c/af.d_ ()La/a/a/c/cf;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ag
  Superclass:    a/a/a/c/cf
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.ag extends a.a.a.c.cf

Interfaces (count = 0):

Constant Pool (count = 79):
  + String [[]]
  + Class [a/a/a/c/ag]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/cf]
  + Class [a/a/a/c/ck]
  + Class [a/a/a/c/dh]
  + Class [java/util/Collection]
  + Class [java/util/NoSuchElementException]
  + Class [java/util/Set]
  + Fieldref [a/a/a/c/ag.a Ljava/util/Comparator;]
  + Methodref [a/a/a/c/ag.<init> (Ljava/util/Comparator;)V]
  + Methodref [a/a/a/c/ag.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/ag.c ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/bo.d ()La/a/a/c/bo;]
  + Methodref [a/a/a/c/cf.<init> (Ljava/util/Comparator;)V]
  + Methodref [a/a/a/c/ck.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/dh.a ()La/a/a/c/dh;]
  + Methodref [a/a/a/c/dh.a (Ljava/util/Comparator;)La/a/a/c/dh;]
  + Methodref [java/util/NoSuchElementException.<init> ()V]
  + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
  + InterfaceMethodref [java/util/Set.isEmpty ()Z]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/util/Comparator;)V]
  + NameAndType [a ()La/a/a/c/dh;]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a (Ljava/util/Comparator;)La/a/a/c/dh;]
  + NameAndType [a Ljava/util/Comparator;]
  + NameAndType [c ()La/a/a/c/ea;]
  + NameAndType [d ()La/a/a/c/bo;]
  + NameAndType [isEmpty ()Z]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bo;]
  + Utf8 [()La/a/a/c/cf;]
  + Utf8 [()La/a/a/c/dh;]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Z)La/a/a/c/cf;]
  + Utf8 [(Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;]
  + Utf8 [(Ljava/util/Collection;)Z]
  + Utf8 [(Ljava/util/Comparator;)La/a/a/c/dh;]
  + Utf8 [(Ljava/util/Comparator;)V]
  + Utf8 [([Ljava/lang/Object;I)I]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/util/Comparator;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [[]]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ag]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/cf]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [a/a/a/c/dh]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [contains]
  + Utf8 [containsAll]
  + Utf8 [d]
  + Utf8 [descendingIterator]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [first]
  + Utf8 [hashCode]
  + Utf8 [isEmpty]
  + Utf8 [iterator]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/NoSuchElementException]
  + Utf8 [java/util/Set]
  + Utf8 [last]
  + Utf8 [size]
  + Utf8 [toString]

Fields (count = 0):

Methods (count = 21):
  - Method:       <init>(Ljava/util/Comparator;)V
    Access flags: 0x0
      = ag(java.util.Comparator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #15
        + Methodref [a/a/a/c/cf.<init> (Ljava/util/Comparator;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 2, locals = 2, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       containsAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean containsAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokeinterface #20
        + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
      [6] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x1
      = public a.a.a.c.ea a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 1):
      [0] invokestatic #16
        + Methodref [a/a/a/c/ck.a ()La/a/a/c/ea;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()La/a/a/c/ea;
    Access flags: 0x1
      = public a.a.a.c.ea c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 1):
      [0] invokestatic #16
        + Methodref [a/a/a/c/ck.a ()La/a/a/c/ea;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/c/bo;
    Access flags: 0x1
      = public a.a.a.c.bo b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 1):
      [0] invokestatic #14
        + Methodref [a/a/a/c/bo.d ()La/a/a/c/bo;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a([Ljava/lang/Object;I)I
    Access flags: 0x0
      = int a(java.lang.Object[],int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 3, stack = 1):
      [0] iload_2 v2
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 21, locals = 3, stack = 1):
      [0] aload_1 v1
      [1] instanceof #9
        + Class [java/util/Set]
      [4] ifeq +15 (target=19)
      [7] aload_1 v1
      [8] checkcast #9
        + Class [java/util/Set]
      [11] astore_2 v2
      [12] aload_2 v2
      [13] invokeinterface #21
        + InterfaceMethodref [java/util/Set.isEmpty ()Z]
      [18] ireturn
      [19] iconst_0
      [20] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [19] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 3, locals = 1, stack = 1):
      [0] ldc #1
        + String [[]]
      [2] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       first()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object first()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #8
        + Class [java/util/NoSuchElementException]
      [3] dup
      [4] invokespecial #19
        + Methodref [java/util/NoSuchElementException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       last()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object last()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #8
        + Class [java/util/NoSuchElementException]
      [3] dup
      [4] invokespecial #19
        + Methodref [java/util/NoSuchElementException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;Z)La/a/a/c/cf;
    Access flags: 0x0
      = a.a.a.c.cf a(java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 3, stack = 1):
      [0] aload_0 v0
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;
    Access flags: 0x0
      = a.a.a.c.cf a(java.lang.Object,boolean,java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 5, stack = 1):
      [0] aload_0 v0
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;Z)La/a/a/c/cf;
    Access flags: 0x0
      = a.a.a.c.cf b(java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 3, stack = 1):
      [0] aload_0 v0
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()La/a/a/c/cf;
    Access flags: 0x0
      = a.a.a.c.cf d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 1, stack = 3):
      [0] new #2
        + Class [a/a/a/c/ag]
      [3] dup
      [4] aload_0 v0
      [5] getfield #10
        + Fieldref [a/a/a/c/ag.a Ljava/util/Comparator;]
      [8] invokestatic #18
        + Methodref [a/a/a/c/dh.a (Ljava/util/Comparator;)La/a/a/c/dh;]
      [11] invokevirtual #17
        + Methodref [a/a/a/c/dh.a ()La/a/a/c/dh;]
      [14] invokespecial #11
        + Methodref [a/a/a/c/ag.<init> (Ljava/util/Comparator;)V]
      [17] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       descendingIterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator descendingIterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #13
        + Methodref [a/a/a/c/ag.c ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #12
        + Methodref [a/a/a/c/ag.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ah
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.ah extends java.lang.Object

Interfaces (count = 1):
  + Class [java/lang/Iterable]

Constant Pool (count = 50):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/ah]
  + Class [a/a/a/c/ai]
  + Class [a/a/a/c/cb]
  + Class [a/a/a/c/ch]
  + Class [java/lang/Iterable]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/c/ah.a Ljava/lang/Iterable;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/ah.a (Ljava/lang/Iterable;)La/a/a/c/ah;]
  + Methodref [a/a/a/c/ai.<init> (Ljava/lang/Iterable;Ljava/lang/Iterable;)V]
  + Methodref [a/a/a/c/cb.a (Ljava/lang/Iterable;)La/a/a/c/cb;]
  + Methodref [a/a/a/c/ch.a (Ljava/lang/Iterable;)Ljava/lang/String;]
  + Methodref [a/a/a/c/ch.a (Ljava/lang/Iterable;La/a/a/a/p;)Ljava/lang/Iterable;]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Iterable;Ljava/lang/Iterable;)V]
  + NameAndType [a (Ljava/lang/Iterable;)La/a/a/c/ah;]
  + NameAndType [a (Ljava/lang/Iterable;)La/a/a/c/cb;]
  + NameAndType [a (Ljava/lang/Iterable;)Ljava/lang/String;]
  + NameAndType [a (Ljava/lang/Iterable;La/a/a/a/p;)Ljava/lang/Iterable;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a Ljava/lang/Iterable;]
  + Utf8 [()La/a/a/c/cb;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/a/p;)La/a/a/c/ah;]
  + Utf8 [(Ljava/lang/Iterable;)La/a/a/c/ah;]
  + Utf8 [(Ljava/lang/Iterable;)La/a/a/c/cb;]
  + Utf8 [(Ljava/lang/Iterable;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/Iterable;)V]
  + Utf8 [(Ljava/lang/Iterable;La/a/a/a/p;)Ljava/lang/Iterable;]
  + Utf8 [(Ljava/lang/Iterable;Ljava/lang/Iterable;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/Iterable;]
  + Utf8 [Ljavax/annotation/CheckReturnValue;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/ah]
  + Utf8 [a/a/a/c/ai]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [a/a/a/c/ch]
  + Utf8 [java/lang/Iterable]
  + Utf8 [java/lang/Object]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a Ljava/lang/Iterable;
    Access flags: 0x12
      = private final java.lang.Iterable a

Methods (count = 6):
  - Method:       <init>()V
    Access flags: 0x4
      = protected ah()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #15
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_0 v0
      [6] putfield #8
        + Fieldref [a/a/a/c/ah.a Ljava/lang/Iterable;]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/Iterable;)V
    Access flags: 0x0
      = ah(java.lang.Iterable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #15
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokestatic #9
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] checkcast #6
        + Class [java/lang/Iterable]
      [12] putfield #8
        + Fieldref [a/a/a/c/ah.a Ljava/lang/Iterable;]
      [15] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Iterable;)La/a/a/c/ah;
    Access flags: 0x9
      = public static a.a.a.c.ah a(java.lang.Iterable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] instanceof #2
        + Class [a/a/a/c/ah]
      [4] ifeq +10 (target=14)
      [7] aload_0 v0
      [8] checkcast #2
        + Class [a/a/a/c/ah]
      [11] goto +12 (target=23)
      [14] new #3
        + Class [a/a/a/c/ai]
      [17] dup
      [18] aload_0 v0
      [19] aload_0 v0
      [20] invokespecial #11
        + Methodref [a/a/a/c/ai.<init> (Ljava/lang/Iterable;Ljava/lang/Iterable;)V]
      [23] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [14] Var: ..., Stack: (empty)
        - [23] Var: ..., Stack: [a:a/a/a/c/ah]
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/ah.a Ljava/lang/Iterable;]
      [4] invokestatic #13
        + Methodref [a/a/a/c/ch.a (Ljava/lang/Iterable;)Ljava/lang/String;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/a/p;)La/a/a/c/ah;
    Access flags: 0x11
      = public final a.a.a.c.ah a(a.a.a.a.p)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 12, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/ah.a Ljava/lang/Iterable;]
      [4] aload_1 v1
      [5] invokestatic #14
        + Methodref [a/a/a/c/ch.a (Ljava/lang/Iterable;La/a/a/a/p;)Ljava/lang/Iterable;]
      [8] invokestatic #10
        + Methodref [a/a/a/c/ah.a (Ljava/lang/Iterable;)La/a/a/c/ah;]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/CheckReturnValue;]:
  + Method:       a()La/a/a/c/cb;
    Access flags: 0x11
      = public final a.a.a.c.cb a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/ah.a Ljava/lang/Iterable;]
      [4] invokestatic #12
        + Methodref [a/a/a/c/cb.a (Ljava/lang/Iterable;)La/a/a/c/cb;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ai
  Superclass:    a/a/a/c/ah
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.ai extends a.a.a.c.ah

Interfaces (count = 0):

Constant Pool (count = 21):
  + Class [a/a/a/c/ah]
  + Class [a/a/a/c/ai]
  + Class [java/lang/Iterable]
  + Fieldref [a/a/a/c/ai.a Ljava/lang/Iterable;]
  + Methodref [a/a/a/c/ah.<init> (Ljava/lang/Iterable;)V]
  + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
  + NameAndType [<init> (Ljava/lang/Iterable;)V]
  + NameAndType [a Ljava/lang/Iterable;]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [(Ljava/lang/Iterable;)V]
  + Utf8 [(Ljava/lang/Iterable;Ljava/lang/Iterable;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/Iterable;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ah]
  + Utf8 [a/a/a/c/ai]
  + Utf8 [iterator]
  + Utf8 [java/lang/Iterable]

Fields (count = 1):
  + Field:        a Ljava/lang/Iterable;
    Access flags: 0x1010
      = final synthetic java.lang.Iterable a

Methods (count = 2):
  - Method:       <init>(Ljava/lang/Iterable;Ljava/lang/Iterable;)V
    Access flags: 0x0
      = ai(java.lang.Iterable,java.lang.Iterable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_2 v2
      [2] putfield #4
        + Fieldref [a/a/a/c/ai.a Ljava/lang/Iterable;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] invokespecial #5
        + Methodref [a/a/a/c/ah.<init> (Ljava/lang/Iterable;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/c/ai.a Ljava/lang/Iterable;]
      [4] invokeinterface #6
        + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/aj
  Superclass:    a/a/a/c/ak
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.aj extends a.a.a.c.ak

Interfaces (count = 1):
  + Class [java/util/Collection]

Constant Pool (count = 63):
  + Class [a/a/a/c/aj]
  + Class [a/a/a/c/ak]
  + Class [java/util/Collection]
  + Methodref [a/a/a/c/aj.a ()Ljava/util/Collection;]
  + Methodref [a/a/a/c/ak.<init> ()V]
  + InterfaceMethodref [java/util/Collection.add (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Collection.addAll (Ljava/util/Collection;)Z]
  + InterfaceMethodref [java/util/Collection.clear ()V]
  + InterfaceMethodref [java/util/Collection.contains (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Collection.containsAll (Ljava/util/Collection;)Z]
  + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
  + InterfaceMethodref [java/util/Collection.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [java/util/Collection.remove (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Collection.removeAll (Ljava/util/Collection;)Z]
  + InterfaceMethodref [java/util/Collection.retainAll (Ljava/util/Collection;)Z]
  + InterfaceMethodref [java/util/Collection.size ()I]
  + InterfaceMethodref [java/util/Collection.toArray ()[Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Collection.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [a ()Ljava/util/Collection;]
  + NameAndType [add (Ljava/lang/Object;)Z]
  + NameAndType [addAll (Ljava/util/Collection;)Z]
  + NameAndType [clear ()V]
  + NameAndType [contains (Ljava/lang/Object;)Z]
  + NameAndType [containsAll (Ljava/util/Collection;)Z]
  + NameAndType [isEmpty ()Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [remove (Ljava/lang/Object;)Z]
  + NameAndType [removeAll (Ljava/util/Collection;)Z]
  + NameAndType [retainAll (Ljava/util/Collection;)Z]
  + NameAndType [size ()I]
  + NameAndType [toArray ()[Ljava/lang/Object;]
  + NameAndType [toArray ([Ljava/lang/Object;)[Ljava/lang/Object;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [()[Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Collection;)Z]
  + Utf8 [([Ljava/lang/Object;)[Ljava/lang/Object;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/c/aj]
  + Utf8 [a/a/a/c/ak]
  + Utf8 [add]
  + Utf8 [addAll]
  + Utf8 [b]
  + Utf8 [clear]
  + Utf8 [contains]
  + Utf8 [containsAll]
  + Utf8 [isEmpty]
  + Utf8 [iterator]
  + Utf8 [java/util/Collection]
  + Utf8 [remove]
  + Utf8 [removeAll]
  + Utf8 [retainAll]
  + Utf8 [size]
  + Utf8 [toArray]

Fields (count = 0):

Methods (count = 16):
  - Method:       <init>()V
    Access flags: 0x4
      = protected aj()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #5
        + Methodref [a/a/a/c/ak.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/Collection;
    Access flags: 0x404
      = protected abstract java.util.Collection a()
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/aj.a ()Ljava/util/Collection;]
      [4] invokeinterface #12
        + InterfaceMethodref [java/util/Collection.iterator ()Ljava/util/Iterator;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/aj.a ()Ljava/util/Collection;]
      [4] invokeinterface #16
        + InterfaceMethodref [java/util/Collection.size ()I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       removeAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean removeAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/aj.a ()Ljava/util/Collection;]
      [4] aload_1 v1
      [5] invokeinterface #14
        + InterfaceMethodref [java/util/Collection.removeAll (Ljava/util/Collection;)Z]
      [10] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/aj.a ()Ljava/util/Collection;]
      [4] invokeinterface #11
        + InterfaceMethodref [java/util/Collection.isEmpty ()Z]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/aj.a ()Ljava/util/Collection;]
      [4] aload_1 v1
      [5] invokeinterface #9
        + InterfaceMethodref [java/util/Collection.contains (Ljava/lang/Object;)Z]
      [10] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       add(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean add(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/aj.a ()Ljava/util/Collection;]
      [4] aload_1 v1
      [5] invokeinterface #6
        + InterfaceMethodref [java/util/Collection.add (Ljava/lang/Object;)Z]
      [10] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean remove(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/aj.a ()Ljava/util/Collection;]
      [4] aload_1 v1
      [5] invokeinterface #13
        + InterfaceMethodref [java/util/Collection.remove (Ljava/lang/Object;)Z]
      [10] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       containsAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean containsAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/aj.a ()Ljava/util/Collection;]
      [4] aload_1 v1
      [5] invokeinterface #10
        + InterfaceMethodref [java/util/Collection.containsAll (Ljava/util/Collection;)Z]
      [10] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       addAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean addAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/aj.a ()Ljava/util/Collection;]
      [4] aload_1 v1
      [5] invokeinterface #7
        + InterfaceMethodref [java/util/Collection.addAll (Ljava/util/Collection;)Z]
      [10] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       retainAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean retainAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/aj.a ()Ljava/util/Collection;]
      [4] aload_1 v1
      [5] invokeinterface #15
        + InterfaceMethodref [java/util/Collection.retainAll (Ljava/util/Collection;)Z]
      [10] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       clear()V
    Access flags: 0x1
      = public void clear()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/aj.a ()Ljava/util/Collection;]
      [4] invokeinterface #8
        + InterfaceMethodref [java/util/Collection.clear ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toArray()[Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object[] toArray()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/aj.a ()Ljava/util/Collection;]
      [4] invokeinterface #17
        + InterfaceMethodref [java/util/Collection.toArray ()[Ljava/lang/Object;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toArray([Ljava/lang/Object;)[Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object[] toArray(java.lang.Object[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/aj.a ()Ljava/util/Collection;]
      [4] aload_1 v1
      [5] invokeinterface #18
        + InterfaceMethodref [java/util/Collection.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()Ljava/lang/Object;
    Access flags: 0x1004
      = protected synthetic java.lang.Object b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/aj.a ()Ljava/util/Collection;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ak
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.ak extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 18):
  + Class [a/a/a/c/ak]
  + Class [java/lang/Object]
  + Methodref [a/a/a/c/ak.b ()Ljava/lang/Object;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
  + NameAndType [<init> ()V]
  + NameAndType [b ()Ljava/lang/Object;]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a/a/a/c/ak]
  + Utf8 [b]
  + Utf8 [java/lang/Object]
  + Utf8 [toString]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x4
      = protected ak()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #4
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()Ljava/lang/Object;
    Access flags: 0x404
      = protected abstract java.lang.Object b()
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #3
        + Methodref [a/a/a/c/ak.b ()Ljava/lang/Object;]
      [4] invokevirtual #5
        + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/al
  Superclass:    a/a/a/c/aj
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.al extends a.a.a.c.aj

Interfaces (count = 1):
  + Class [java/util/Set]

Constant Pool (count = 31):
  + Class [a/a/a/c/aj]
  + Class [a/a/a/c/al]
  + Class [java/util/Set]
  + Methodref [a/a/a/c/aj.<init> ()V]
  + Methodref [a/a/a/c/al.c ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Set.equals (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Set.hashCode ()I]
  + NameAndType [<init> ()V]
  + NameAndType [c ()Ljava/util/Set;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [hashCode ()I]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/aj]
  + Utf8 [a/a/a/c/al]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [equals]
  + Utf8 [hashCode]
  + Utf8 [java/util/Set]

Fields (count = 0):

Methods (count = 6):
  - Method:       <init>()V
    Access flags: 0x4
      = protected al()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #4
        + Methodref [a/a/a/c/aj.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()Ljava/util/Set;
    Access flags: 0x404
      = protected abstract java.util.Set c()
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 24, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] aload_0 v0
      [2] ifacmpeq +16 (target=18)
      [5] aload_0 v0
      [6] invokevirtual #5
        + Methodref [a/a/a/c/al.c ()Ljava/util/Set;]
      [9] aload_1 v1
      [10] invokeinterface #6
        + InterfaceMethodref [java/util/Set.equals (Ljava/lang/Object;)Z]
      [15] ifeq +7 (target=22)
      [18] iconst_1
      [19] goto +4 (target=23)
      [22] iconst_0
      [23] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [18] Var: ..., Stack: (empty)
        - [22] Var: ..., Stack: (empty)
        - [23] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #5
        + Methodref [a/a/a/c/al.c ()Ljava/util/Set;]
      [4] invokeinterface #7
        + InterfaceMethodref [java/util/Set.hashCode ()I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/Collection;
    Access flags: 0x1004
      = protected synthetic java.util.Collection a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #5
        + Methodref [a/a/a/c/al.c ()Ljava/util/Set;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()Ljava/lang/Object;
    Access flags: 0x1004
      = protected synthetic java.lang.Object b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #5
        + Methodref [a/a/a/c/al.c ()Ljava/util/Set;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/am
  Superclass:    java/util/AbstractMap
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.c.am extends java.util.AbstractMap

Interfaces (count = 2):
  + Class [a/a/a/c/x]
  + Class [java/io/Serializable]

Constant Pool (count = 187):
  + String [expectedSize]
  + String [value already present: ]
  + Class [[La/a/a/c/ao;]
  + Class [a/a/a/a/i]
  + Class [a/a/a/c/am]
  + Class [a/a/a/c/ao]
  + Class [a/a/a/c/ap]
  + Class [a/a/a/c/as]
  + Class [a/a/a/c/az]
  + Class [a/a/a/c/bc]
  + Class [a/a/a/c/x]
  + Class [a/a/a/c/z]
  + Class [java/io/Serializable]
  + Class [java/lang/IllegalArgumentException]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/util/AbstractMap]
  + Class [java/util/Arrays]
  + Fieldref [a/a/a/c/am.a [La/a/a/c/ao;]
  + Fieldref [a/a/a/c/am.b [La/a/a/c/ao;]
  + Fieldref [a/a/a/c/am.c I]
  + Fieldref [a/a/a/c/am.d I]
  + Fieldref [a/a/a/c/am.e I]
  + Fieldref [a/a/a/c/am.f La/a/a/c/x;]
  + Fieldref [a/a/a/c/ao.a I]
  + Fieldref [a/a/a/c/ao.b I]
  + Fieldref [a/a/a/c/ao.c La/a/a/c/ao;]
  + Fieldref [a/a/a/c/ao.d La/a/a/c/ao;]
  + Fieldref [a/a/a/c/ao.e Ljava/lang/Object;]
  + Fieldref [a/a/a/c/ao.f Ljava/lang/Object;]
  + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/am.<init> (I)V]
  + Methodref [a/a/a/c/am.a (I)La/a/a/c/am;]
  + Methodref [a/a/a/c/am.a (La/a/a/c/ao;)V]
  + Methodref [a/a/a/c/am.a (Ljava/lang/Object;I)La/a/a/c/ao;]
  + Methodref [a/a/a/c/am.a (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;]
  + Methodref [a/a/a/c/am.b ()Ljava/util/Set;]
  + Methodref [a/a/a/c/am.b (I)V]
  + Methodref [a/a/a/c/am.b (La/a/a/c/ao;)V]
  + Methodref [a/a/a/c/am.b (Ljava/lang/Object;)I]
  + Methodref [a/a/a/c/am.b (Ljava/lang/Object;I)La/a/a/c/ao;]
  + Methodref [a/a/a/c/am.b (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;]
  + Methodref [a/a/a/c/am.c ()La/a/a/c/x;]
  + Methodref [a/a/a/c/am.c (I)[La/a/a/c/ao;]
  + Methodref [a/a/a/c/am.d ()V]
  + Methodref [a/a/a/c/ao.<init> (Ljava/lang/Object;ILjava/lang/Object;I)V]
  + Methodref [a/a/a/c/ap.<init> (La/a/a/c/am;La/a/a/c/an;)V]
  + Methodref [a/a/a/c/as.<init> (La/a/a/c/am;La/a/a/c/an;)V]
  + Methodref [a/a/a/c/az.<init> (La/a/a/c/am;)V]
  + Methodref [a/a/a/c/bc.a (I)I]
  + Methodref [a/a/a/c/bc.a (ID)I]
  + Methodref [a/a/a/c/bc.a (IID)Z]
  + Methodref [a/a/a/c/z.a (ILjava/lang/String;)I]
  + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/AbstractMap.<init> ()V]
  + Methodref [java/util/Arrays.fill ([Ljava/lang/Object;Ljava/lang/Object;)V]
  + InterfaceMethodref [a/a/a/c/x.keySet ()Ljava/util/Set;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (I)V]
  + NameAndType [<init> (La/a/a/c/am;)V]
  + NameAndType [<init> (La/a/a/c/am;La/a/a/c/an;)V]
  + NameAndType [<init> (Ljava/lang/Object;ILjava/lang/Object;I)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [a (I)I]
  + NameAndType [a (I)La/a/a/c/am;]
  + NameAndType [a (ID)I]
  + NameAndType [a (IID)Z]
  + NameAndType [a (ILjava/lang/String;)I]
  + NameAndType [a (La/a/a/c/ao;)V]
  + NameAndType [a (Ljava/lang/Object;I)La/a/a/c/ao;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;]
  + NameAndType [a I]
  + NameAndType [a [La/a/a/c/ao;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b ()Ljava/util/Set;]
  + NameAndType [b (I)V]
  + NameAndType [b (La/a/a/c/ao;)V]
  + NameAndType [b (Ljava/lang/Object;)I]
  + NameAndType [b (Ljava/lang/Object;I)La/a/a/c/ao;]
  + NameAndType [b (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;]
  + NameAndType [b I]
  + NameAndType [b [La/a/a/c/ao;]
  + NameAndType [c ()La/a/a/c/x;]
  + NameAndType [c (I)[La/a/a/c/ao;]
  + NameAndType [c I]
  + NameAndType [c La/a/a/c/ao;]
  + NameAndType [d ()V]
  + NameAndType [d I]
  + NameAndType [d La/a/a/c/ao;]
  + NameAndType [e I]
  + NameAndType [e Ljava/lang/Object;]
  + NameAndType [f La/a/a/c/x;]
  + NameAndType [f Ljava/lang/Object;]
  + NameAndType [fill ([Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [hashCode ()I]
  + NameAndType [keySet ()Ljava/util/Set;]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/am;]
  + Utf8 [()La/a/a/c/x;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [(I)I]
  + Utf8 [(I)La/a/a/c/am;]
  + Utf8 [(I)V]
  + Utf8 [(I)[La/a/a/c/ao;]
  + Utf8 [(ID)I]
  + Utf8 [(IID)Z]
  + Utf8 [(ILjava/lang/String;)I]
  + Utf8 [(La/a/a/c/am;)I]
  + Utf8 [(La/a/a/c/am;)V]
  + Utf8 [(La/a/a/c/am;)[La/a/a/c/ao;]
  + Utf8 [(La/a/a/c/am;La/a/a/c/an;)V]
  + Utf8 [(La/a/a/c/am;La/a/a/c/ao;)V]
  + Utf8 [(La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
  + Utf8 [(La/a/a/c/am;Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;]
  + Utf8 [(La/a/a/c/ao;)V]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;I)La/a/a/c/ao;]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;I)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [([Ljava/lang/Object;Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [La/a/a/c/ao;]
  + Utf8 [La/a/a/c/x;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [[La/a/a/c/ao;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/c/am]
  + Utf8 [a/a/a/c/ao]
  + Utf8 [a/a/a/c/ap]
  + Utf8 [a/a/a/c/as]
  + Utf8 [a/a/a/c/az]
  + Utf8 [a/a/a/c/bc]
  + Utf8 [a/a/a/c/x]
  + Utf8 [a/a/a/c/z]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clear]
  + Utf8 [containsKey]
  + Utf8 [containsValue]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [entrySet]
  + Utf8 [expectedSize]
  + Utf8 [f]
  + Utf8 [fill]
  + Utf8 [get]
  + Utf8 [hashCode]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/IllegalArgumentException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/AbstractMap]
  + Utf8 [java/util/Arrays]
  + Utf8 [keySet]
  + Utf8 [put]
  + Utf8 [remove]
  + Utf8 [size]
  + Utf8 [toString]
  + Utf8 [value already present: ]
  + Utf8 [values]

Fields (count = 6):
  + Field:        a [La/a/a/c/ao;
    Access flags: 0x82
      = private transient a.a.a.c.ao[] a
  + Field:        b [La/a/a/c/ao;
    Access flags: 0x82
      = private transient a.a.a.c.ao[] b
  + Field:        c I
    Access flags: 0x82
      = private transient int c
  + Field:        d I
    Access flags: 0x82
      = private transient int d
  + Field:        e I
    Access flags: 0x82
      = private transient int e
  + Field:        f La/a/a/c/x;
    Access flags: 0x82
      = private transient a.a.a.c.x f

Methods (count = 34):
  + Method:       a()La/a/a/c/am;
    Access flags: 0x9
      = public static a.a.a.c.am a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 0, stack = 1):
      [0] bipush 16
      [2] invokestatic #33
        + Methodref [a/a/a/c/am.a (I)La/a/a/c/am;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(I)La/a/a/c/am;
    Access flags: 0x9
      = public static a.a.a.c.am a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #5
        + Class [a/a/a/c/am]
      [3] dup
      [4] iload_0 v0
      [5] invokespecial #32
        + Methodref [a/a/a/c/am.<init> (I)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(I)V
    Access flags: 0x2
      = private am(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #60
        + Methodref [java/util/AbstractMap.<init> ()V]
      [4] aload_0 v0
      [5] iload_1 v1
      [6] invokespecial #38
        + Methodref [a/a/a/c/am.b (I)V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(I)V
    Access flags: 0x2
      = private void b(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 49, locals = 3, stack = 3):
      [0] iload_1 v1
      [1] ldc #1
        + String [expectedSize]
      [3] invokestatic #53
        + Methodref [a/a/a/c/z.a (ILjava/lang/String;)I]
      [6] pop
      [7] iload_1 v1
      [8] dconst_1
      [9] invokestatic #51
        + Methodref [a/a/a/c/bc.a (ID)I]
      [12] istore_2 v2
      [13] aload_0 v0
      [14] aload_0 v0
      [15] iload_2 v2
      [16] invokespecial #44
        + Methodref [a/a/a/c/am.c (I)[La/a/a/c/ao;]
      [19] putfield #19
        + Fieldref [a/a/a/c/am.a [La/a/a/c/ao;]
      [22] aload_0 v0
      [23] aload_0 v0
      [24] iload_2 v2
      [25] invokespecial #44
        + Methodref [a/a/a/c/am.c (I)[La/a/a/c/ao;]
      [28] putfield #20
        + Fieldref [a/a/a/c/am.b [La/a/a/c/ao;]
      [31] aload_0 v0
      [32] iload_2 v2
      [33] iconst_1
      [34] isub
      [35] putfield #22
        + Fieldref [a/a/a/c/am.d I]
      [38] aload_0 v0
      [39] iconst_0
      [40] putfield #23
        + Fieldref [a/a/a/c/am.e I]
      [43] aload_0 v0
      [44] iconst_0
      [45] putfield #21
        + Fieldref [a/a/a/c/am.c I]
      [48] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/c/ao;)V
    Access flags: 0x2
      = private void a(a.a.a.c.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 158, locals = 6, stack = 3):
      [0] aload_1 v1
      [1] getfield #25
        + Fieldref [a/a/a/c/ao.a I]
      [4] aload_0 v0
      [5] getfield #22
        + Fieldref [a/a/a/c/am.d I]
      [8] iand
      [9] istore_2 v2
      [10] aconst_null
      [11] astore_3 v3
      [12] aload_0 v0
      [13] getfield #19
        + Fieldref [a/a/a/c/am.a [La/a/a/c/ao;]
      [16] iload_2 v2
      [17] aaload
      [18] astore v4
      [20] aload v4
      [22] aload_1 v1
      [23] ifacmpne +31 (target=54)
      [26] aload_3 v3
      [27] ifnonnull +16 (target=43)
      [30] aload_0 v0
      [31] getfield #19
        + Fieldref [a/a/a/c/am.a [La/a/a/c/ao;]
      [34] iload_2 v2
      [35] aload_1 v1
      [36] getfield #27
        + Fieldref [a/a/a/c/ao.c La/a/a/c/ao;]
      [39] aastore
      [40] goto +27 (target=67)
      [43] aload_3 v3
      [44] aload_1 v1
      [45] getfield #27
        + Fieldref [a/a/a/c/ao.c La/a/a/c/ao;]
      [48] putfield #27
        + Fieldref [a/a/a/c/ao.c La/a/a/c/ao;]
      [51] goto +16 (target=67)
      [54] aload v4
      [56] astore_3 v3
      [57] aload v4
      [59] getfield #27
        + Fieldref [a/a/a/c/ao.c La/a/a/c/ao;]
      [62] astore v4
      [64] goto -44 (target=20)
      [67] aload_1 v1
      [68] getfield #26
        + Fieldref [a/a/a/c/ao.b I]
      [71] aload_0 v0
      [72] getfield #22
        + Fieldref [a/a/a/c/am.d I]
      [75] iand
      [76] istore v4
      [78] aconst_null
      [79] astore_3 v3
      [80] aload_0 v0
      [81] getfield #20
        + Fieldref [a/a/a/c/am.b [La/a/a/c/ao;]
      [84] iload v4
      [86] aaload
      [87] astore v5
      [89] aload v5
      [91] aload_1 v1
      [92] ifacmpne +32 (target=124)
      [95] aload_3 v3
      [96] ifnonnull +17 (target=113)
      [99] aload_0 v0
      [100] getfield #20
        + Fieldref [a/a/a/c/am.b [La/a/a/c/ao;]
      [103] iload v4
      [105] aload_1 v1
      [106] getfield #28
        + Fieldref [a/a/a/c/ao.d La/a/a/c/ao;]
      [109] aastore
      [110] goto +27 (target=137)
      [113] aload_3 v3
      [114] aload_1 v1
      [115] getfield #28
        + Fieldref [a/a/a/c/ao.d La/a/a/c/ao;]
      [118] putfield #28
        + Fieldref [a/a/a/c/ao.d La/a/a/c/ao;]
      [121] goto +16 (target=137)
      [124] aload v5
      [126] astore_3 v3
      [127] aload v5
      [129] getfield #28
        + Fieldref [a/a/a/c/ao.d La/a/a/c/ao;]
      [132] astore v5
      [134] goto -45 (target=89)
      [137] aload_0 v0
      [138] dup
      [139] getfield #21
        + Fieldref [a/a/a/c/am.c I]
      [142] iconst_1
      [143] isub
      [144] putfield #21
        + Fieldref [a/a/a/c/am.c I]
      [147] aload_0 v0
      [148] dup
      [149] getfield #23
        + Fieldref [a/a/a/c/am.e I]
      [152] iconst_1
      [153] iadd
      [154] putfield #23
        + Fieldref [a/a/a/c/am.e I]
      [157] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 8):
        - [20] Var: ...[i][a:a/a/a/c/ao][a:a/a/a/c/ao], Stack: (empty)
        - [43] Var: ..., Stack: (empty)
        - [54] Var: ..., Stack: (empty)
        - [67] Var: -1, Stack: (empty)
        - [89] Var: ...[i][a:a/a/a/c/ao], Stack: (empty)
        - [113] Var: ..., Stack: (empty)
        - [124] Var: ..., Stack: (empty)
        - [137] Var: -1, Stack: (empty)
  + Method:       b(La/a/a/c/ao;)V
    Access flags: 0x2
      = private void b(a.a.a.c.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 75, locals = 4, stack = 3):
      [0] aload_1 v1
      [1] getfield #25
        + Fieldref [a/a/a/c/ao.a I]
      [4] aload_0 v0
      [5] getfield #22
        + Fieldref [a/a/a/c/am.d I]
      [8] iand
      [9] istore_2 v2
      [10] aload_1 v1
      [11] aload_0 v0
      [12] getfield #19
        + Fieldref [a/a/a/c/am.a [La/a/a/c/ao;]
      [15] iload_2 v2
      [16] aaload
      [17] putfield #27
        + Fieldref [a/a/a/c/ao.c La/a/a/c/ao;]
      [20] aload_0 v0
      [21] getfield #19
        + Fieldref [a/a/a/c/am.a [La/a/a/c/ao;]
      [24] iload_2 v2
      [25] aload_1 v1
      [26] aastore
      [27] aload_1 v1
      [28] getfield #26
        + Fieldref [a/a/a/c/ao.b I]
      [31] aload_0 v0
      [32] getfield #22
        + Fieldref [a/a/a/c/am.d I]
      [35] iand
      [36] istore_3 v3
      [37] aload_1 v1
      [38] aload_0 v0
      [39] getfield #20
        + Fieldref [a/a/a/c/am.b [La/a/a/c/ao;]
      [42] iload_3 v3
      [43] aaload
      [44] putfield #28
        + Fieldref [a/a/a/c/ao.d La/a/a/c/ao;]
      [47] aload_0 v0
      [48] getfield #20
        + Fieldref [a/a/a/c/am.b [La/a/a/c/ao;]
      [51] iload_3 v3
      [52] aload_1 v1
      [53] aastore
      [54] aload_0 v0
      [55] dup
      [56] getfield #21
        + Fieldref [a/a/a/c/am.c I]
      [59] iconst_1
      [60] iadd
      [61] putfield #21
        + Fieldref [a/a/a/c/am.c I]
      [64] aload_0 v0
      [65] dup
      [66] getfield #23
        + Fieldref [a/a/a/c/am.e I]
      [69] iconst_1
      [70] iadd
      [71] putfield #23
        + Fieldref [a/a/a/c/am.e I]
      [74] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;)I
    Access flags: 0xa
      = private static int b(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 16, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] ifnonnull +7 (target=8)
      [4] iconst_0
      [5] goto +7 (target=12)
      [8] aload_0 v0
      [9] invokevirtual #55
        + Methodref [java/lang/Object.hashCode ()I]
      [12] invokestatic #50
        + Methodref [a/a/a/c/bc.a (I)I]
      [15] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [8] Var: ..., Stack: (empty)
        - [12] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Object;I)La/a/a/c/ao;
    Access flags: 0x2
      = private a.a.a.c.ao a(java.lang.Object,int)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 47, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] getfield #19
        + Fieldref [a/a/a/c/am.a [La/a/a/c/ao;]
      [4] iload_2 v2
      [5] aload_0 v0
      [6] getfield #22
        + Fieldref [a/a/a/c/am.d I]
      [9] iand
      [10] aaload
      [11] astore_3 v3
      [12] aload_3 v3
      [13] ifnull +32 (target=45)
      [16] iload_2 v2
      [17] aload_3 v3
      [18] getfield #25
        + Fieldref [a/a/a/c/ao.a I]
      [21] ificmpne +16 (target=37)
      [24] aload_1 v1
      [25] aload_3 v3
      [26] getfield #29
        + Fieldref [a/a/a/c/ao.e Ljava/lang/Object;]
      [29] invokestatic #31
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [32] ifeq +5 (target=37)
      [35] aload_3 v3
      [36] areturn
      [37] aload_3 v3
      [38] getfield #27
        + Fieldref [a/a/a/c/ao.c La/a/a/c/ao;]
      [41] astore_3 v3
      [42] goto -30 (target=12)
      [45] aconst_null
      [46] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [12] Var: ...[a:a/a/a/c/ao], Stack: (empty)
        - [37] Var: ..., Stack: (empty)
        - [45] Var: -1, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b(Ljava/lang/Object;I)La/a/a/c/ao;
    Access flags: 0x2
      = private a.a.a.c.ao b(java.lang.Object,int)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 47, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] getfield #20
        + Fieldref [a/a/a/c/am.b [La/a/a/c/ao;]
      [4] iload_2 v2
      [5] aload_0 v0
      [6] getfield #22
        + Fieldref [a/a/a/c/am.d I]
      [9] iand
      [10] aaload
      [11] astore_3 v3
      [12] aload_3 v3
      [13] ifnull +32 (target=45)
      [16] iload_2 v2
      [17] aload_3 v3
      [18] getfield #26
        + Fieldref [a/a/a/c/ao.b I]
      [21] ificmpne +16 (target=37)
      [24] aload_1 v1
      [25] aload_3 v3
      [26] getfield #30
        + Fieldref [a/a/a/c/ao.f Ljava/lang/Object;]
      [29] invokestatic #31
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [32] ifeq +5 (target=37)
      [35] aload_3 v3
      [36] areturn
      [37] aload_3 v3
      [38] getfield #28
        + Fieldref [a/a/a/c/ao.d La/a/a/c/ao;]
      [41] astore_3 v3
      [42] goto -30 (target=12)
      [45] aconst_null
      [46] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [12] Var: ...[a:a/a/a/c/ao], Stack: (empty)
        - [37] Var: ..., Stack: (empty)
        - [45] Var: -1, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       containsKey(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean containsKey(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 18, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_1 v1
      [3] invokestatic #40
        + Methodref [a/a/a/c/am.b (Ljava/lang/Object;)I]
      [6] invokespecial #35
        + Methodref [a/a/a/c/am.a (Ljava/lang/Object;I)La/a/a/c/ao;]
      [9] ifnull +7 (target=16)
      [12] iconst_1
      [13] goto +4 (target=17)
      [16] iconst_0
      [17] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [16] Var: ..., Stack: (empty)
        - [17] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       containsValue(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean containsValue(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 18, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_1 v1
      [3] invokestatic #40
        + Methodref [a/a/a/c/am.b (Ljava/lang/Object;)I]
      [6] invokespecial #41
        + Methodref [a/a/a/c/am.b (Ljava/lang/Object;I)La/a/a/c/ao;]
      [9] ifnull +7 (target=16)
      [12] iconst_1
      [13] goto +4 (target=17)
      [16] iconst_0
      [17] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [16] Var: ..., Stack: (empty)
        - [17] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       get(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(java.lang.Object)
    Class member attributes (count = 3):
    + Code attribute instructions (code length = 23, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_1 v1
      [3] invokestatic #40
        + Methodref [a/a/a/c/am.b (Ljava/lang/Object;)I]
      [6] invokespecial #35
        + Methodref [a/a/a/c/am.a (Ljava/lang/Object;I)La/a/a/c/ao;]
      [9] astore_2 v2
      [10] aload_2 v2
      [11] ifnonnull +7 (target=18)
      [14] aconst_null
      [15] goto +7 (target=22)
      [18] aload_2 v2
      [19] getfield #30
        + Fieldref [a/a/a/c/ao.f Ljava/lang/Object;]
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [18] Var: ...[a:a/a/a/c/ao], Stack: (empty)
        - [22] Var: ..., Stack: [a:java/lang/Object]
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object put(java.lang.Object,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] iconst_0
      [4] invokespecial #36
        + Methodref [a/a/a/c/am.a (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;
    Access flags: 0x2
      = private java.lang.Object a(java.lang.Object,java.lang.Object,boolean)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 155, locals = 9, stack = 6):
      [0] aload_1 v1
      [1] invokestatic #40
        + Methodref [a/a/a/c/am.b (Ljava/lang/Object;)I]
      [4] istore v4
      [6] aload_2 v2
      [7] invokestatic #40
        + Methodref [a/a/a/c/am.b (Ljava/lang/Object;)I]
      [10] istore v5
      [12] aload_0 v0
      [13] aload_1 v1
      [14] iload v4
      [16] invokespecial #35
        + Methodref [a/a/a/c/am.a (Ljava/lang/Object;I)La/a/a/c/ao;]
      [19] astore v6
      [21] aload v6
      [23] ifnull +27 (target=50)
      [26] iload v5
      [28] aload v6
      [30] getfield #26
        + Fieldref [a/a/a/c/ao.b I]
      [33] ificmpne +17 (target=50)
      [36] aload_2 v2
      [37] aload v6
      [39] getfield #30
        + Fieldref [a/a/a/c/ao.f Ljava/lang/Object;]
      [42] invokestatic #31
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [45] ifeq +5 (target=50)
      [48] aload_2 v2
      [49] areturn
      [50] aload_0 v0
      [51] aload_2 v2
      [52] iload v5
      [54] invokespecial #41
        + Methodref [a/a/a/c/am.b (Ljava/lang/Object;I)La/a/a/c/ao;]
      [57] astore v7
      [59] aload v7
      [61] ifnull +43 (target=104)
      [64] iload_3 v3
      [65] ifeq +12 (target=77)
      [68] aload_0 v0
      [69] aload v7
      [71] invokespecial #34
        + Methodref [a/a/a/c/am.a (La/a/a/c/ao;)V]
      [74] goto +30 (target=104)
      [77] new #14
        + Class [java/lang/IllegalArgumentException]
      [80] dup
      [81] new #16
        + Class [java/lang/StringBuilder]
      [84] dup
      [85] invokespecial #56
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [88] ldc #2
        + String [value already present: ]
      [90] invokevirtual #58
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [93] aload_2 v2
      [94] invokevirtual #57
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [97] invokevirtual #59
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [100] invokespecial #54
        + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
      [103] athrow
      [104] aload v6
      [106] ifnull +9 (target=115)
      [109] aload_0 v0
      [110] aload v6
      [112] invokespecial #34
        + Methodref [a/a/a/c/am.a (La/a/a/c/ao;)V]
      [115] new #6
        + Class [a/a/a/c/ao]
      [118] dup
      [119] aload_1 v1
      [120] iload v4
      [122] aload_2 v2
      [123] iload v5
      [125] invokespecial #46
        + Methodref [a/a/a/c/ao.<init> (Ljava/lang/Object;ILjava/lang/Object;I)V]
      [128] astore v8
      [130] aload_0 v0
      [131] aload v8
      [133] invokespecial #39
        + Methodref [a/a/a/c/am.b (La/a/a/c/ao;)V]
      [136] aload_0 v0
      [137] invokespecial #45
        + Methodref [a/a/a/c/am.d ()V]
      [140] aload v6
      [142] ifnonnull +7 (target=149)
      [145] aconst_null
      [146] goto +8 (target=154)
      [149] aload v6
      [151] getfield #30
        + Fieldref [a/a/a/c/ao.f Ljava/lang/Object;]
      [154] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [50] Var: ...[i][i][a:a/a/a/c/ao], Stack: (empty)
        - [77] Var: ...[a:a/a/a/c/ao], Stack: (empty)
        - [104] Var: ..., Stack: (empty)
        - [115] Var: ..., Stack: (empty)
        - [149] Var: ...[a:a/a/a/c/ao], Stack: (empty)
        - [154] Var: ..., Stack: [a:java/lang/Object]
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;
    Access flags: 0x2
      = private java.lang.Object b(java.lang.Object,java.lang.Object,boolean)
    Class member attributes (count = 3):
    + Code attribute instructions (code length = 155, locals = 9, stack = 6):
      [0] aload_1 v1
      [1] invokestatic #40
        + Methodref [a/a/a/c/am.b (Ljava/lang/Object;)I]
      [4] istore v4
      [6] aload_2 v2
      [7] invokestatic #40
        + Methodref [a/a/a/c/am.b (Ljava/lang/Object;)I]
      [10] istore v5
      [12] aload_0 v0
      [13] aload_1 v1
      [14] iload v4
      [16] invokespecial #41
        + Methodref [a/a/a/c/am.b (Ljava/lang/Object;I)La/a/a/c/ao;]
      [19] astore v6
      [21] aload v6
      [23] ifnull +27 (target=50)
      [26] iload v5
      [28] aload v6
      [30] getfield #25
        + Fieldref [a/a/a/c/ao.a I]
      [33] ificmpne +17 (target=50)
      [36] aload_2 v2
      [37] aload v6
      [39] getfield #29
        + Fieldref [a/a/a/c/ao.e Ljava/lang/Object;]
      [42] invokestatic #31
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [45] ifeq +5 (target=50)
      [48] aload_2 v2
      [49] areturn
      [50] aload_0 v0
      [51] aload_2 v2
      [52] iload v5
      [54] invokespecial #35
        + Methodref [a/a/a/c/am.a (Ljava/lang/Object;I)La/a/a/c/ao;]
      [57] astore v7
      [59] aload v7
      [61] ifnull +43 (target=104)
      [64] iload_3 v3
      [65] ifeq +12 (target=77)
      [68] aload_0 v0
      [69] aload v7
      [71] invokespecial #34
        + Methodref [a/a/a/c/am.a (La/a/a/c/ao;)V]
      [74] goto +30 (target=104)
      [77] new #14
        + Class [java/lang/IllegalArgumentException]
      [80] dup
      [81] new #16
        + Class [java/lang/StringBuilder]
      [84] dup
      [85] invokespecial #56
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [88] ldc #2
        + String [value already present: ]
      [90] invokevirtual #58
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [93] aload_2 v2
      [94] invokevirtual #57
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [97] invokevirtual #59
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [100] invokespecial #54
        + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
      [103] athrow
      [104] aload v6
      [106] ifnull +9 (target=115)
      [109] aload_0 v0
      [110] aload v6
      [112] invokespecial #34
        + Methodref [a/a/a/c/am.a (La/a/a/c/ao;)V]
      [115] new #6
        + Class [a/a/a/c/ao]
      [118] dup
      [119] aload_2 v2
      [120] iload v5
      [122] aload_1 v1
      [123] iload v4
      [125] invokespecial #46
        + Methodref [a/a/a/c/ao.<init> (Ljava/lang/Object;ILjava/lang/Object;I)V]
      [128] astore v8
      [130] aload_0 v0
      [131] aload v8
      [133] invokespecial #39
        + Methodref [a/a/a/c/am.b (La/a/a/c/ao;)V]
      [136] aload_0 v0
      [137] invokespecial #45
        + Methodref [a/a/a/c/am.d ()V]
      [140] aload v6
      [142] ifnonnull +7 (target=149)
      [145] aconst_null
      [146] goto +8 (target=154)
      [149] aload v6
      [151] getfield #29
        + Fieldref [a/a/a/c/ao.e Ljava/lang/Object;]
      [154] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [50] Var: ...[i][i][a:a/a/a/c/ao], Stack: (empty)
        - [77] Var: ...[a:a/a/a/c/ao], Stack: (empty)
        - [104] Var: ..., Stack: (empty)
        - [115] Var: ..., Stack: (empty)
        - [149] Var: ...[a:a/a/a/c/ao], Stack: (empty)
        - [154] Var: ..., Stack: [a:java/lang/Object]
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       d()V
    Access flags: 0x2
      = private void d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 108, locals = 6, stack = 4):
      [0] aload_0 v0
      [1] getfield #19
        + Fieldref [a/a/a/c/am.a [La/a/a/c/ao;]
      [4] astore_1 v1
      [5] aload_0 v0
      [6] getfield #21
        + Fieldref [a/a/a/c/am.c I]
      [9] aload_1 v1
      [10] arraylength
      [11] dconst_1
      [12] invokestatic #52
        + Methodref [a/a/a/c/bc.a (IID)Z]
      [15] ifeq +92 (target=107)
      [18] aload_1 v1
      [19] arraylength
      [20] iconst_2
      [21] imul
      [22] istore_2 v2
      [23] aload_0 v0
      [24] aload_0 v0
      [25] iload_2 v2
      [26] invokespecial #44
        + Methodref [a/a/a/c/am.c (I)[La/a/a/c/ao;]
      [29] putfield #19
        + Fieldref [a/a/a/c/am.a [La/a/a/c/ao;]
      [32] aload_0 v0
      [33] aload_0 v0
      [34] iload_2 v2
      [35] invokespecial #44
        + Methodref [a/a/a/c/am.c (I)[La/a/a/c/ao;]
      [38] putfield #20
        + Fieldref [a/a/a/c/am.b [La/a/a/c/ao;]
      [41] aload_0 v0
      [42] iload_2 v2
      [43] iconst_1
      [44] isub
      [45] putfield #22
        + Fieldref [a/a/a/c/am.d I]
      [48] aload_0 v0
      [49] iconst_0
      [50] putfield #21
        + Fieldref [a/a/a/c/am.c I]
      [53] iconst_0
      [54] istore_3 v3
      [55] iload_3 v3
      [56] aload_1 v1
      [57] arraylength
      [58] ificmpge +39 (target=97)
      [61] aload_1 v1
      [62] iload_3 v3
      [63] aaload
      [64] astore v4
      [66] aload v4
      [68] ifnull +23 (target=91)
      [71] aload v4
      [73] getfield #27
        + Fieldref [a/a/a/c/ao.c La/a/a/c/ao;]
      [76] astore v5
      [78] aload_0 v0
      [79] aload v4
      [81] invokespecial #39
        + Methodref [a/a/a/c/am.b (La/a/a/c/ao;)V]
      [84] aload v5
      [86] astore v4
      [88] goto -22 (target=66)
      [91] iinc v3, 1
      [94] goto -39 (target=55)
      [97] aload_0 v0
      [98] dup
      [99] getfield #23
        + Fieldref [a/a/a/c/am.e I]
      [102] iconst_1
      [103] iadd
      [104] putfield #23
        + Fieldref [a/a/a/c/am.e I]
      [107] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 5):
        - [55] Var: ...[a:[La/a/a/c/ao;][i][i], Stack: (empty)
        - [66] Var: ...[a:a/a/a/c/ao], Stack: (empty)
        - [91] Var: -1, Stack: (empty)
        - [97] Var: -1, Stack: (empty)
        - [107] Var: -1, Stack: (empty)
  + Method:       c(I)[La/a/a/c/ao;
    Access flags: 0x2
      = private a.a.a.c.ao[] c(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] iload_1 v1
      [1] anewarray #6
        + Class [a/a/a/c/ao]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object remove(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 26, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_1 v1
      [3] invokestatic #40
        + Methodref [a/a/a/c/am.b (Ljava/lang/Object;)I]
      [6] invokespecial #35
        + Methodref [a/a/a/c/am.a (Ljava/lang/Object;I)La/a/a/c/ao;]
      [9] astore_2 v2
      [10] aload_2 v2
      [11] ifnonnull +5 (target=16)
      [14] aconst_null
      [15] areturn
      [16] aload_0 v0
      [17] aload_2 v2
      [18] invokespecial #34
        + Methodref [a/a/a/c/am.a (La/a/a/c/ao;)V]
      [21] aload_2 v2
      [22] getfield #30
        + Fieldref [a/a/a/c/ao.f Ljava/lang/Object;]
      [25] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [16] Var: ...[a:a/a/a/c/ao], Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       clear()V
    Access flags: 0x1
      = public void clear()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 32, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] iconst_0
      [2] putfield #21
        + Fieldref [a/a/a/c/am.c I]
      [5] aload_0 v0
      [6] getfield #19
        + Fieldref [a/a/a/c/am.a [La/a/a/c/ao;]
      [9] aconst_null
      [10] invokestatic #61
        + Methodref [java/util/Arrays.fill ([Ljava/lang/Object;Ljava/lang/Object;)V]
      [13] aload_0 v0
      [14] getfield #20
        + Fieldref [a/a/a/c/am.b [La/a/a/c/ao;]
      [17] aconst_null
      [18] invokestatic #61
        + Methodref [java/util/Arrays.fill ([Ljava/lang/Object;Ljava/lang/Object;)V]
      [21] aload_0 v0
      [22] dup
      [23] getfield #23
        + Fieldref [a/a/a/c/am.e I]
      [26] iconst_1
      [27] iadd
      [28] putfield #23
        + Fieldref [a/a/a/c/am.e I]
      [31] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #21
        + Fieldref [a/a/a/c/am.c I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       keySet()Ljava/util/Set;
    Access flags: 0x1
      = public java.util.Set keySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #9
        + Class [a/a/a/c/az]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #49
        + Methodref [a/a/a/c/az.<init> (La/a/a/c/am;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()Ljava/util/Set;
    Access flags: 0x1
      = public java.util.Set b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #43
        + Methodref [a/a/a/c/am.c ()La/a/a/c/x;]
      [4] invokeinterface #62
        + InterfaceMethodref [a/a/a/c/x.keySet ()Ljava/util/Set;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       entrySet()Ljava/util/Set;
    Access flags: 0x1
      = public java.util.Set entrySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 4):
      [0] new #7
        + Class [a/a/a/c/ap]
      [3] dup
      [4] aload_0 v0
      [5] aconst_null
      [6] invokespecial #47
        + Methodref [a/a/a/c/ap.<init> (La/a/a/c/am;La/a/a/c/an;)V]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()La/a/a/c/x;
    Access flags: 0x1
      = public a.a.a.c.x c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 29, locals = 1, stack = 5):
      [0] aload_0 v0
      [1] getfield #24
        + Fieldref [a/a/a/c/am.f La/a/a/c/x;]
      [4] ifnonnull +20 (target=24)
      [7] aload_0 v0
      [8] new #8
        + Class [a/a/a/c/as]
      [11] dup
      [12] aload_0 v0
      [13] aconst_null
      [14] invokespecial #48
        + Methodref [a/a/a/c/as.<init> (La/a/a/c/am;La/a/a/c/an;)V]
      [17] dup_x1
      [18] putfield #24
        + Fieldref [a/a/a/c/am.f La/a/a/c/x;]
      [21] goto +7 (target=28)
      [24] aload_0 v0
      [25] getfield #24
        + Fieldref [a/a/a/c/am.f La/a/a/c/x;]
      [28] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [24] Var: ..., Stack: (empty)
        - [28] Var: ..., Stack: [a:a/a/a/c/x]
  + Method:       values()Ljava/util/Collection;
    Access flags: 0x1001
      = public synthetic java.util.Collection values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #37
        + Methodref [a/a/a/c/am.b ()Ljava/util/Set;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/c/am;)I
    Access flags: 0x1008
      = static synthetic int a(a.a.a.c.am)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #23
        + Fieldref [a/a/a/c/am.e I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/c/am;)[La/a/a/c/ao;
    Access flags: 0x1008
      = static synthetic a.a.a.c.ao[] b(a.a.a.c.am)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #19
        + Fieldref [a/a/a/c/am.a [La/a/a/c/ao;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/c/am;La/a/a/c/ao;)V
    Access flags: 0x1008
      = static synthetic void a(a.a.a.c.am,a.a.a.c.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #34
        + Methodref [a/a/a/c/am.a (La/a/a/c/ao;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)I
    Access flags: 0x1008
      = static synthetic int a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokestatic #40
        + Methodref [a/a/a/c/am.b (Ljava/lang/Object;)I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;
    Access flags: 0x1008
      = static synthetic a.a.a.c.ao a(a.a.a.c.am,java.lang.Object,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #35
        + Methodref [a/a/a/c/am.a (Ljava/lang/Object;I)La/a/a/c/ao;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;
    Access flags: 0x1008
      = static synthetic a.a.a.c.ao b(a.a.a.c.am,java.lang.Object,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #41
        + Methodref [a/a/a/c/am.b (Ljava/lang/Object;I)La/a/a/c/ao;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/c/am;La/a/a/c/ao;)V
    Access flags: 0x1008
      = static synthetic void b(a.a.a.c.am,a.a.a.c.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #39
        + Methodref [a/a/a/c/am.b (La/a/a/c/ao;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(La/a/a/c/am;)I
    Access flags: 0x1008
      = static synthetic int c(a.a.a.c.am)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #21
        + Fieldref [a/a/a/c/am.c I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/c/am;Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;
    Access flags: 0x1008
      = static synthetic java.lang.Object a(a.a.a.c.am,java.lang.Object,java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 4, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] iload_3 v3
      [4] invokespecial #42
        + Methodref [a/a/a/c/am.b (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/an
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x1020
    = synthetic class a.a.a.c.an extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 5):
  + Class [a/a/a/c/an]
  + Class [java/lang/Object]
  + Utf8 [a/a/a/c/an]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ao
  Superclass:    a/a/a/c/bi
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.ao extends a.a.a.c.bi

Interfaces (count = 0):

Constant Pool (count = 23):
  + Class [a/a/a/c/ao]
  + Class [a/a/a/c/bi]
  + Fieldref [a/a/a/c/ao.a I]
  + Fieldref [a/a/a/c/ao.b I]
  + Methodref [a/a/a/c/bi.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [a I]
  + NameAndType [b I]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;I)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [La/a/a/c/ao;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ao]
  + Utf8 [a/a/a/c/bi]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]

Fields (count = 4):
  + Field:        a I
    Access flags: 0x10
      = final int a
  + Field:        b I
    Access flags: 0x10
      = final int b
  + Field:        c La/a/a/c/ao;
    Access flags: 0x0
      = a.a.a.c.ao c
    Class member attributes (count = 1):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Field:        d La/a/a/c/ao;
    Access flags: 0x0
      = a.a.a.c.ao d
    Class member attributes (count = 1):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:

Methods (count = 1):
  - Method:       <init>(Ljava/lang/Object;ILjava/lang/Object;I)V
    Access flags: 0x0
      = ao(java.lang.Object,int,java.lang.Object,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 5, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_3 v3
      [3] invokespecial #5
        + Methodref [a/a/a/c/bi.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
      [6] aload_0 v0
      [7] iload_2 v2
      [8] putfield #3
        + Fieldref [a/a/a/c/ao.a I]
      [11] aload_0 v0
      [12] iload v4
      [14] putfield #4
        + Fieldref [a/a/a/c/ao.b I]
      [17] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ap
  Superclass:    a/a/a/c/cy
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.ap extends a.a.a.c.cy

Interfaces (count = 0):

Constant Pool (count = 26):
  + Class [a/a/a/c/ap]
  + Class [a/a/a/c/aq]
  + Class [a/a/a/c/cy]
  + Fieldref [a/a/a/c/ap.a La/a/a/c/am;]
  + Methodref [a/a/a/c/ap.<init> (La/a/a/c/am;)V]
  + Methodref [a/a/a/c/aq.<init> (La/a/a/c/ap;)V]
  + Methodref [a/a/a/c/cy.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/am;)V]
  + NameAndType [<init> (La/a/a/c/ap;)V]
  + NameAndType [a La/a/a/c/am;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Map;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/c/am;)V]
  + Utf8 [(La/a/a/c/am;La/a/a/c/an;)V]
  + Utf8 [(La/a/a/c/ap;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/am;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ap]
  + Utf8 [a/a/a/c/aq]
  + Utf8 [a/a/a/c/cy]
  + Utf8 [iterator]

Fields (count = 1):
  + Field:        a La/a/a/c/am;
    Access flags: 0x1010
      = final synthetic a.a.a.c.am a

Methods (count = 4):
  - Method:       <init>(La/a/a/c/am;)V
    Access flags: 0x2
      = private ap(a.a.a.c.am)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #4
        + Fieldref [a/a/a/c/ap.a La/a/a/c/am;]
      [5] aload_0 v0
      [6] invokespecial #7
        + Methodref [a/a/a/c/cy.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/Map;
    Access flags: 0x0
      = java.util.Map a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/c/ap.a La/a/a/c/am;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #2
        + Class [a/a/a/c/aq]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #6
        + Methodref [a/a/a/c/aq.<init> (La/a/a/c/ap;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/c/am;La/a/a/c/an;)V
    Access flags: 0x1000
      = synthetic ap(a.a.a.c.am,a.a.a.c.an)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #5
        + Methodref [a/a/a/c/ap.<init> (La/a/a/c/am;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/aq
  Superclass:    a/a/a/c/ay
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.aq extends a.a.a.c.ay

Interfaces (count = 0):

Constant Pool (count = 30):
  + Class [a/a/a/c/ap]
  + Class [a/a/a/c/aq]
  + Class [a/a/a/c/ar]
  + Class [a/a/a/c/ay]
  + Fieldref [a/a/a/c/ap.a La/a/a/c/am;]
  + Fieldref [a/a/a/c/aq.a La/a/a/c/ap;]
  + Methodref [a/a/a/c/aq.a (La/a/a/c/ao;)Ljava/util/Map$Entry;]
  + Methodref [a/a/a/c/ar.<init> (La/a/a/c/aq;La/a/a/c/ao;)V]
  + Methodref [a/a/a/c/ay.<init> (La/a/a/c/am;)V]
  + NameAndType [<init> (La/a/a/c/am;)V]
  + NameAndType [<init> (La/a/a/c/aq;La/a/a/c/ao;)V]
  + NameAndType [a (La/a/a/c/ao;)Ljava/util/Map$Entry;]
  + NameAndType [a La/a/a/c/am;]
  + NameAndType [a La/a/a/c/ap;]
  + Utf8 [(La/a/a/c/am;)V]
  + Utf8 [(La/a/a/c/ao;)Ljava/lang/Object;]
  + Utf8 [(La/a/a/c/ao;)Ljava/util/Map$Entry;]
  + Utf8 [(La/a/a/c/ap;)V]
  + Utf8 [(La/a/a/c/aq;La/a/a/c/ao;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/am;]
  + Utf8 [La/a/a/c/ap;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ap]
  + Utf8 [a/a/a/c/aq]
  + Utf8 [a/a/a/c/ar]
  + Utf8 [a/a/a/c/ay]
  + Utf8 [b]

Fields (count = 1):
  + Field:        a La/a/a/c/ap;
    Access flags: 0x1010
      = final synthetic a.a.a.c.ap a

Methods (count = 3):
  - Method:       <init>(La/a/a/c/ap;)V
    Access flags: 0x0
      = aq(a.a.a.c.ap)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/c/aq.a La/a/a/c/ap;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] getfield #5
        + Fieldref [a/a/a/c/ap.a La/a/a/c/am;]
      [10] invokespecial #9
        + Methodref [a/a/a/c/ay.<init> (La/a/a/c/am;)V]
      [13] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/c/ao;)Ljava/util/Map$Entry;
    Access flags: 0x0
      = java.util.Map$Entry a(a.a.a.c.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 4):
      [0] new #3
        + Class [a/a/a/c/ar]
      [3] dup
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokespecial #8
        + Methodref [a/a/a/c/ar.<init> (La/a/a/c/aq;La/a/a/c/ao;)V]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/c/ao;)Ljava/lang/Object;
    Access flags: 0x1000
      = synthetic java.lang.Object b(a.a.a.c.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #7
        + Methodref [a/a/a/c/aq.a (La/a/a/c/ao;)Ljava/util/Map$Entry;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ar
  Superclass:    a/a/a/c/t
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.ar extends a.a.a.c.t

Interfaces (count = 0):

Constant Pool (count = 87):
  + String [value already present: %s]
  + Class [a/a/a/a/i]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/am]
  + Class [a/a/a/c/ao]
  + Class [a/a/a/c/ap]
  + Class [a/a/a/c/aq]
  + Class [a/a/a/c/ar]
  + Class [a/a/a/c/t]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/c/ao.a I]
  + Fieldref [a/a/a/c/ao.b I]
  + Fieldref [a/a/a/c/ao.e Ljava/lang/Object;]
  + Fieldref [a/a/a/c/ao.f Ljava/lang/Object;]
  + Fieldref [a/a/a/c/ap.a La/a/a/c/am;]
  + Fieldref [a/a/a/c/aq.a La/a/a/c/ap;]
  + Fieldref [a/a/a/c/aq.d La/a/a/c/ao;]
  + Fieldref [a/a/a/c/aq.e I]
  + Fieldref [a/a/a/c/ar.a La/a/a/c/ao;]
  + Fieldref [a/a/a/c/ar.b La/a/a/c/aq;]
  + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Methodref [a/a/a/c/am.a (La/a/a/c/am;)I]
  + Methodref [a/a/a/c/am.a (La/a/a/c/am;La/a/a/c/ao;)V]
  + Methodref [a/a/a/c/am.a (Ljava/lang/Object;)I]
  + Methodref [a/a/a/c/am.b (La/a/a/c/am;La/a/a/c/ao;)V]
  + Methodref [a/a/a/c/am.b (La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
  + Methodref [a/a/a/c/ao.<init> (Ljava/lang/Object;ILjava/lang/Object;I)V]
  + Methodref [a/a/a/c/t.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Object;ILjava/lang/Object;I)V]
  + NameAndType [a (La/a/a/c/am;)I]
  + NameAndType [a (La/a/a/c/am;La/a/a/c/ao;)V]
  + NameAndType [a (Ljava/lang/Object;)I]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [a (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + NameAndType [a I]
  + NameAndType [a La/a/a/c/am;]
  + NameAndType [a La/a/a/c/ao;]
  + NameAndType [a La/a/a/c/ap;]
  + NameAndType [b (La/a/a/c/am;La/a/a/c/ao;)V]
  + NameAndType [b (La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
  + NameAndType [b I]
  + NameAndType [b La/a/a/c/aq;]
  + NameAndType [d La/a/a/c/ao;]
  + NameAndType [e I]
  + NameAndType [e Ljava/lang/Object;]
  + NameAndType [f Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/c/am;)I]
  + Utf8 [(La/a/a/c/am;La/a/a/c/ao;)V]
  + Utf8 [(La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
  + Utf8 [(La/a/a/c/aq;La/a/a/c/ao;)V]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;I)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [La/a/a/c/am;]
  + Utf8 [La/a/a/c/ao;]
  + Utf8 [La/a/a/c/ap;]
  + Utf8 [La/a/a/c/aq;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/am]
  + Utf8 [a/a/a/c/ao]
  + Utf8 [a/a/a/c/ap]
  + Utf8 [a/a/a/c/aq]
  + Utf8 [a/a/a/c/ar]
  + Utf8 [a/a/a/c/t]
  + Utf8 [b]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [java/lang/Object]
  + Utf8 [setValue]
  + Utf8 [value already present: %s]

Fields (count = 2):
  + Field:        a La/a/a/c/ao;
    Access flags: 0x0
      = a.a.a.c.ao a
  + Field:        b La/a/a/c/aq;
    Access flags: 0x1010
      = final synthetic a.a.a.c.aq b

Methods (count = 4):
  - Method:       <init>(La/a/a/c/aq;La/a/a/c/ao;)V
    Access flags: 0x0
      = ar(a.a.a.c.aq,a.a.a.c.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #20
        + Fieldref [a/a/a/c/ar.b La/a/a/c/aq;]
      [5] aload_0 v0
      [6] invokespecial #29
        + Methodref [a/a/a/c/t.<init> ()V]
      [9] aload_0 v0
      [10] aload_2 v2
      [11] putfield #19
        + Fieldref [a/a/a/c/ar.a La/a/a/c/ao;]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getKey()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object getKey()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #19
        + Fieldref [a/a/a/c/ar.a La/a/a/c/ao;]
      [4] getfield #13
        + Fieldref [a/a/a/c/ao.e Ljava/lang/Object;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getValue()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object getValue()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #19
        + Fieldref [a/a/a/c/ar.a La/a/a/c/ao;]
      [4] getfield #14
        + Fieldref [a/a/a/c/ao.f Ljava/lang/Object;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       setValue(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object setValue(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 178, locals = 5, stack = 6):
      [0] aload_0 v0
      [1] getfield #19
        + Fieldref [a/a/a/c/ar.a La/a/a/c/ao;]
      [4] getfield #14
        + Fieldref [a/a/a/c/ao.f Ljava/lang/Object;]
      [7] astore_2 v2
      [8] aload_1 v1
      [9] invokestatic #25
        + Methodref [a/a/a/c/am.a (Ljava/lang/Object;)I]
      [12] istore_3 v3
      [13] iload_3 v3
      [14] aload_0 v0
      [15] getfield #19
        + Fieldref [a/a/a/c/ar.a La/a/a/c/ao;]
      [18] getfield #12
        + Fieldref [a/a/a/c/ao.b I]
      [21] ificmpne +13 (target=34)
      [24] aload_1 v1
      [25] aload_2 v2
      [26] invokestatic #21
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [29] ifeq +5 (target=34)
      [32] aload_1 v1
      [33] areturn
      [34] aload_0 v0
      [35] getfield #20
        + Fieldref [a/a/a/c/ar.b La/a/a/c/aq;]
      [38] getfield #16
        + Fieldref [a/a/a/c/aq.a La/a/a/c/ap;]
      [41] getfield #15
        + Fieldref [a/a/a/c/ap.a La/a/a/c/am;]
      [44] aload_1 v1
      [45] iload_3 v3
      [46] invokestatic #27
        + Methodref [a/a/a/c/am.b (La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
      [49] ifnonnull +7 (target=56)
      [52] iconst_1
      [53] goto +4 (target=57)
      [56] iconst_0
      [57] ldc #1
        + String [value already present: %s]
      [59] iconst_1
      [60] anewarray #10
        + Class [java/lang/Object]
      [63] dup
      [64] iconst_0
      [65] aload_1 v1
      [66] aastore
      [67] invokestatic #22
        + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
      [70] aload_0 v0
      [71] getfield #20
        + Fieldref [a/a/a/c/ar.b La/a/a/c/aq;]
      [74] getfield #16
        + Fieldref [a/a/a/c/aq.a La/a/a/c/ap;]
      [77] getfield #15
        + Fieldref [a/a/a/c/ap.a La/a/a/c/am;]
      [80] aload_0 v0
      [81] getfield #19
        + Fieldref [a/a/a/c/ar.a La/a/a/c/ao;]
      [84] invokestatic #24
        + Methodref [a/a/a/c/am.a (La/a/a/c/am;La/a/a/c/ao;)V]
      [87] new #5
        + Class [a/a/a/c/ao]
      [90] dup
      [91] aload_0 v0
      [92] getfield #19
        + Fieldref [a/a/a/c/ar.a La/a/a/c/ao;]
      [95] getfield #13
        + Fieldref [a/a/a/c/ao.e Ljava/lang/Object;]
      [98] aload_0 v0
      [99] getfield #19
        + Fieldref [a/a/a/c/ar.a La/a/a/c/ao;]
      [102] getfield #11
        + Fieldref [a/a/a/c/ao.a I]
      [105] aload_1 v1
      [106] iload_3 v3
      [107] invokespecial #28
        + Methodref [a/a/a/c/ao.<init> (Ljava/lang/Object;ILjava/lang/Object;I)V]
      [110] astore v4
      [112] aload_0 v0
      [113] getfield #20
        + Fieldref [a/a/a/c/ar.b La/a/a/c/aq;]
      [116] getfield #16
        + Fieldref [a/a/a/c/aq.a La/a/a/c/ap;]
      [119] getfield #15
        + Fieldref [a/a/a/c/ap.a La/a/a/c/am;]
      [122] aload v4
      [124] invokestatic #26
        + Methodref [a/a/a/c/am.b (La/a/a/c/am;La/a/a/c/ao;)V]
      [127] aload_0 v0
      [128] getfield #20
        + Fieldref [a/a/a/c/ar.b La/a/a/c/aq;]
      [131] aload_0 v0
      [132] getfield #20
        + Fieldref [a/a/a/c/ar.b La/a/a/c/aq;]
      [135] getfield #16
        + Fieldref [a/a/a/c/aq.a La/a/a/c/ap;]
      [138] getfield #15
        + Fieldref [a/a/a/c/ap.a La/a/a/c/am;]
      [141] invokestatic #23
        + Methodref [a/a/a/c/am.a (La/a/a/c/am;)I]
      [144] putfield #18
        + Fieldref [a/a/a/c/aq.e I]
      [147] aload_0 v0
      [148] getfield #20
        + Fieldref [a/a/a/c/ar.b La/a/a/c/aq;]
      [151] getfield #17
        + Fieldref [a/a/a/c/aq.d La/a/a/c/ao;]
      [154] aload_0 v0
      [155] getfield #19
        + Fieldref [a/a/a/c/ar.a La/a/a/c/ao;]
      [158] ifacmpne +12 (target=170)
      [161] aload_0 v0
      [162] getfield #20
        + Fieldref [a/a/a/c/ar.b La/a/a/c/aq;]
      [165] aload v4
      [167] putfield #17
        + Fieldref [a/a/a/c/aq.d La/a/a/c/ao;]
      [170] aload_0 v0
      [171] aload v4
      [173] putfield #19
        + Fieldref [a/a/a/c/ar.a La/a/a/c/ao;]
      [176] aload_2 v2
      [177] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [34] Var: ...[a:java/lang/Object][i], Stack: (empty)
        - [56] Var: ..., Stack: (empty)
        - [57] Var: ..., Stack: [i]
        - [170] Var: ...[a:a/a/a/c/ao], Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/as
  Superclass:    java/util/AbstractMap
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.as extends java.util.AbstractMap

Interfaces (count = 2):
  + Class [a/a/a/c/x]
  + Class [java/io/Serializable]

Constant Pool (count = 87):
  + Class [a/a/a/c/am]
  + Class [a/a/a/c/ao]
  + Class [a/a/a/c/as]
  + Class [a/a/a/c/at]
  + Class [a/a/a/c/aw]
  + Class [a/a/a/c/x]
  + Class [java/io/Serializable]
  + Class [java/lang/Object]
  + Class [java/util/AbstractMap]
  + Fieldref [a/a/a/c/ao.e Ljava/lang/Object;]
  + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
  + Methodref [a/a/a/c/am.a (La/a/a/c/am;La/a/a/c/ao;)V]
  + Methodref [a/a/a/c/am.a (La/a/a/c/am;Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;]
  + Methodref [a/a/a/c/am.a (Ljava/lang/Object;)I]
  + Methodref [a/a/a/c/am.b (La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
  + Methodref [a/a/a/c/am.c (La/a/a/c/am;)I]
  + Methodref [a/a/a/c/as.<init> (La/a/a/c/am;)V]
  + Methodref [a/a/a/c/as.a ()La/a/a/c/x;]
  + Methodref [a/a/a/c/as.b ()Ljava/util/Set;]
  + Methodref [a/a/a/c/at.<init> (La/a/a/c/as;)V]
  + Methodref [a/a/a/c/aw.<init> (La/a/a/c/as;)V]
  + Methodref [java/util/AbstractMap.<init> ()V]
  + InterfaceMethodref [a/a/a/c/x.clear ()V]
  + InterfaceMethodref [a/a/a/c/x.containsValue (Ljava/lang/Object;)Z]
  + InterfaceMethodref [a/a/a/c/x.keySet ()Ljava/util/Set;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/am;)V]
  + NameAndType [<init> (La/a/a/c/as;)V]
  + NameAndType [a ()La/a/a/c/x;]
  + NameAndType [a (La/a/a/c/am;La/a/a/c/ao;)V]
  + NameAndType [a (La/a/a/c/am;Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;)I]
  + NameAndType [a La/a/a/c/am;]
  + NameAndType [b ()Ljava/util/Set;]
  + NameAndType [b (La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
  + NameAndType [c (La/a/a/c/am;)I]
  + NameAndType [clear ()V]
  + NameAndType [containsValue (Ljava/lang/Object;)Z]
  + NameAndType [e Ljava/lang/Object;]
  + NameAndType [keySet ()Ljava/util/Set;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/x;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/c/am;)I]
  + Utf8 [(La/a/a/c/am;)V]
  + Utf8 [(La/a/a/c/am;La/a/a/c/an;)V]
  + Utf8 [(La/a/a/c/am;La/a/a/c/ao;)V]
  + Utf8 [(La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
  + Utf8 [(La/a/a/c/am;Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;]
  + Utf8 [(La/a/a/c/as;)V]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/am;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/am]
  + Utf8 [a/a/a/c/ao]
  + Utf8 [a/a/a/c/as]
  + Utf8 [a/a/a/c/at]
  + Utf8 [a/a/a/c/aw]
  + Utf8 [a/a/a/c/x]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clear]
  + Utf8 [containsKey]
  + Utf8 [containsValue]
  + Utf8 [e]
  + Utf8 [entrySet]
  + Utf8 [get]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/AbstractMap]
  + Utf8 [keySet]
  + Utf8 [put]
  + Utf8 [remove]
  + Utf8 [size]
  + Utf8 [values]

Fields (count = 1):
  + Field:        a La/a/a/c/am;
    Access flags: 0x1010
      = final synthetic a.a.a.c.am a

Methods (count = 13):
  - Method:       <init>(La/a/a/c/am;)V
    Access flags: 0x2
      = private as(a.a.a.c.am)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #11
        + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
      [5] aload_0 v0
      [6] invokespecial #22
        + Methodref [java/util/AbstractMap.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/x;
    Access flags: 0x0
      = a.a.a.c.x a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
      [4] invokestatic #16
        + Methodref [a/a/a/c/am.c (La/a/a/c/am;)I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       clear()V
    Access flags: 0x1
      = public void clear()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #18
        + Methodref [a/a/a/c/as.a ()La/a/a/c/x;]
      [4] invokeinterface #23
        + InterfaceMethodref [a/a/a/c/x.clear ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       containsKey(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean containsKey(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #18
        + Methodref [a/a/a/c/as.a ()La/a/a/c/x;]
      [4] aload_1 v1
      [5] invokeinterface #24
        + InterfaceMethodref [a/a/a/c/x.containsValue (Ljava/lang/Object;)Z]
      [10] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       get(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 26, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
      [4] aload_1 v1
      [5] aload_1 v1
      [6] invokestatic #14
        + Methodref [a/a/a/c/am.a (Ljava/lang/Object;)I]
      [9] invokestatic #15
        + Methodref [a/a/a/c/am.b (La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
      [12] astore_2 v2
      [13] aload_2 v2
      [14] ifnonnull +7 (target=21)
      [17] aconst_null
      [18] goto +7 (target=25)
      [21] aload_2 v2
      [22] getfield #10
        + Fieldref [a/a/a/c/ao.e Ljava/lang/Object;]
      [25] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [21] Var: ...[a:a/a/a/c/ao], Stack: (empty)
        - [25] Var: ..., Stack: [a:java/lang/Object]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object put(java.lang.Object,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 11, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
      [4] aload_1 v1
      [5] aload_2 v2
      [6] iconst_0
      [7] invokestatic #13
        + Methodref [a/a/a/c/am.a (La/a/a/c/am;Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       remove(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object remove(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 32, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
      [4] aload_1 v1
      [5] aload_1 v1
      [6] invokestatic #14
        + Methodref [a/a/a/c/am.a (Ljava/lang/Object;)I]
      [9] invokestatic #15
        + Methodref [a/a/a/c/am.b (La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
      [12] astore_2 v2
      [13] aload_2 v2
      [14] ifnonnull +5 (target=19)
      [17] aconst_null
      [18] areturn
      [19] aload_0 v0
      [20] getfield #11
        + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
      [23] aload_2 v2
      [24] invokestatic #12
        + Methodref [a/a/a/c/am.a (La/a/a/c/am;La/a/a/c/ao;)V]
      [27] aload_2 v2
      [28] getfield #10
        + Fieldref [a/a/a/c/ao.e Ljava/lang/Object;]
      [31] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [19] Var: ...[a:a/a/a/c/ao], Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       keySet()Ljava/util/Set;
    Access flags: 0x1
      = public java.util.Set keySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #5
        + Class [a/a/a/c/aw]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #21
        + Methodref [a/a/a/c/aw.<init> (La/a/a/c/as;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()Ljava/util/Set;
    Access flags: 0x1
      = public java.util.Set b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #18
        + Methodref [a/a/a/c/as.a ()La/a/a/c/x;]
      [4] invokeinterface #25
        + InterfaceMethodref [a/a/a/c/x.keySet ()Ljava/util/Set;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       entrySet()Ljava/util/Set;
    Access flags: 0x1
      = public java.util.Set entrySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #4
        + Class [a/a/a/c/at]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #20
        + Methodref [a/a/a/c/at.<init> (La/a/a/c/as;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       values()Ljava/util/Collection;
    Access flags: 0x1001
      = public synthetic java.util.Collection values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #19
        + Methodref [a/a/a/c/as.b ()Ljava/util/Set;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/c/am;La/a/a/c/an;)V
    Access flags: 0x1000
      = synthetic as(a.a.a.c.am,a.a.a.c.an)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #17
        + Methodref [a/a/a/c/as.<init> (La/a/a/c/am;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/at
  Superclass:    a/a/a/c/cy
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.at extends a.a.a.c.cy

Interfaces (count = 0):

Constant Pool (count = 23):
  + Class [a/a/a/c/at]
  + Class [a/a/a/c/au]
  + Class [a/a/a/c/cy]
  + Fieldref [a/a/a/c/at.a La/a/a/c/as;]
  + Methodref [a/a/a/c/au.<init> (La/a/a/c/at;)V]
  + Methodref [a/a/a/c/cy.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/at;)V]
  + NameAndType [a La/a/a/c/as;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Map;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/c/as;)V]
  + Utf8 [(La/a/a/c/at;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/as;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/at]
  + Utf8 [a/a/a/c/au]
  + Utf8 [a/a/a/c/cy]
  + Utf8 [iterator]

Fields (count = 1):
  + Field:        a La/a/a/c/as;
    Access flags: 0x1010
      = final synthetic a.a.a.c.as a

Methods (count = 3):
  - Method:       <init>(La/a/a/c/as;)V
    Access flags: 0x0
      = at(a.a.a.c.as)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #4
        + Fieldref [a/a/a/c/at.a La/a/a/c/as;]
      [5] aload_0 v0
      [6] invokespecial #6
        + Methodref [a/a/a/c/cy.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/Map;
    Access flags: 0x0
      = java.util.Map a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/c/at.a La/a/a/c/as;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #2
        + Class [a/a/a/c/au]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #5
        + Methodref [a/a/a/c/au.<init> (La/a/a/c/at;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/au
  Superclass:    a/a/a/c/ay
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.au extends a.a.a.c.ay

Interfaces (count = 0):

Constant Pool (count = 35):
  + Class [a/a/a/c/as]
  + Class [a/a/a/c/at]
  + Class [a/a/a/c/au]
  + Class [a/a/a/c/av]
  + Class [a/a/a/c/ay]
  + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
  + Fieldref [a/a/a/c/at.a La/a/a/c/as;]
  + Fieldref [a/a/a/c/au.a La/a/a/c/at;]
  + Methodref [a/a/a/c/au.a (La/a/a/c/ao;)Ljava/util/Map$Entry;]
  + Methodref [a/a/a/c/av.<init> (La/a/a/c/au;La/a/a/c/ao;)V]
  + Methodref [a/a/a/c/ay.<init> (La/a/a/c/am;)V]
  + NameAndType [<init> (La/a/a/c/am;)V]
  + NameAndType [<init> (La/a/a/c/au;La/a/a/c/ao;)V]
  + NameAndType [a (La/a/a/c/ao;)Ljava/util/Map$Entry;]
  + NameAndType [a La/a/a/c/am;]
  + NameAndType [a La/a/a/c/as;]
  + NameAndType [a La/a/a/c/at;]
  + Utf8 [(La/a/a/c/am;)V]
  + Utf8 [(La/a/a/c/ao;)Ljava/lang/Object;]
  + Utf8 [(La/a/a/c/ao;)Ljava/util/Map$Entry;]
  + Utf8 [(La/a/a/c/at;)V]
  + Utf8 [(La/a/a/c/au;La/a/a/c/ao;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/am;]
  + Utf8 [La/a/a/c/as;]
  + Utf8 [La/a/a/c/at;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/as]
  + Utf8 [a/a/a/c/at]
  + Utf8 [a/a/a/c/au]
  + Utf8 [a/a/a/c/av]
  + Utf8 [a/a/a/c/ay]
  + Utf8 [b]

Fields (count = 1):
  + Field:        a La/a/a/c/at;
    Access flags: 0x1010
      = final synthetic a.a.a.c.at a

Methods (count = 3):
  - Method:       <init>(La/a/a/c/at;)V
    Access flags: 0x0
      = au(a.a.a.c.at)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #8
        + Fieldref [a/a/a/c/au.a La/a/a/c/at;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] getfield #7
        + Fieldref [a/a/a/c/at.a La/a/a/c/as;]
      [10] getfield #6
        + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
      [13] invokespecial #11
        + Methodref [a/a/a/c/ay.<init> (La/a/a/c/am;)V]
      [16] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/c/ao;)Ljava/util/Map$Entry;
    Access flags: 0x0
      = java.util.Map$Entry a(a.a.a.c.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 4):
      [0] new #4
        + Class [a/a/a/c/av]
      [3] dup
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokespecial #10
        + Methodref [a/a/a/c/av.<init> (La/a/a/c/au;La/a/a/c/ao;)V]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/c/ao;)Ljava/lang/Object;
    Access flags: 0x1000
      = synthetic java.lang.Object b(a.a.a.c.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #9
        + Methodref [a/a/a/c/au.a (La/a/a/c/ao;)Ljava/util/Map$Entry;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/av
  Superclass:    a/a/a/c/t
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.av extends a.a.a.c.t

Interfaces (count = 0):

Constant Pool (count = 89):
  + String [value already present: %s]
  + Class [a/a/a/a/i]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/am]
  + Class [a/a/a/c/ao]
  + Class [a/a/a/c/as]
  + Class [a/a/a/c/at]
  + Class [a/a/a/c/au]
  + Class [a/a/a/c/av]
  + Class [a/a/a/c/t]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/c/ao.a I]
  + Fieldref [a/a/a/c/ao.b I]
  + Fieldref [a/a/a/c/ao.e Ljava/lang/Object;]
  + Fieldref [a/a/a/c/ao.f Ljava/lang/Object;]
  + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
  + Fieldref [a/a/a/c/at.a La/a/a/c/as;]
  + Fieldref [a/a/a/c/au.a La/a/a/c/at;]
  + Fieldref [a/a/a/c/au.e I]
  + Fieldref [a/a/a/c/av.a La/a/a/c/ao;]
  + Fieldref [a/a/a/c/av.b La/a/a/c/au;]
  + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Methodref [a/a/a/c/am.a (La/a/a/c/am;)I]
  + Methodref [a/a/a/c/am.a (La/a/a/c/am;La/a/a/c/ao;)V]
  + Methodref [a/a/a/c/am.a (La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
  + Methodref [a/a/a/c/am.a (Ljava/lang/Object;)I]
  + Methodref [a/a/a/c/am.b (La/a/a/c/am;La/a/a/c/ao;)V]
  + Methodref [a/a/a/c/ao.<init> (Ljava/lang/Object;ILjava/lang/Object;I)V]
  + Methodref [a/a/a/c/t.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Object;ILjava/lang/Object;I)V]
  + NameAndType [a (La/a/a/c/am;)I]
  + NameAndType [a (La/a/a/c/am;La/a/a/c/ao;)V]
  + NameAndType [a (La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
  + NameAndType [a (Ljava/lang/Object;)I]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [a (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + NameAndType [a I]
  + NameAndType [a La/a/a/c/am;]
  + NameAndType [a La/a/a/c/ao;]
  + NameAndType [a La/a/a/c/as;]
  + NameAndType [a La/a/a/c/at;]
  + NameAndType [b (La/a/a/c/am;La/a/a/c/ao;)V]
  + NameAndType [b I]
  + NameAndType [b La/a/a/c/au;]
  + NameAndType [e I]
  + NameAndType [e Ljava/lang/Object;]
  + NameAndType [f Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/c/am;)I]
  + Utf8 [(La/a/a/c/am;La/a/a/c/ao;)V]
  + Utf8 [(La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
  + Utf8 [(La/a/a/c/au;La/a/a/c/ao;)V]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;I)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [La/a/a/c/am;]
  + Utf8 [La/a/a/c/ao;]
  + Utf8 [La/a/a/c/as;]
  + Utf8 [La/a/a/c/at;]
  + Utf8 [La/a/a/c/au;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/am]
  + Utf8 [a/a/a/c/ao]
  + Utf8 [a/a/a/c/as]
  + Utf8 [a/a/a/c/at]
  + Utf8 [a/a/a/c/au]
  + Utf8 [a/a/a/c/av]
  + Utf8 [a/a/a/c/t]
  + Utf8 [b]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [java/lang/Object]
  + Utf8 [setValue]
  + Utf8 [value already present: %s]

Fields (count = 2):
  + Field:        a La/a/a/c/ao;
    Access flags: 0x0
      = a.a.a.c.ao a
  + Field:        b La/a/a/c/au;
    Access flags: 0x1010
      = final synthetic a.a.a.c.au b

Methods (count = 4):
  - Method:       <init>(La/a/a/c/au;La/a/a/c/ao;)V
    Access flags: 0x0
      = av(a.a.a.c.au,a.a.a.c.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #21
        + Fieldref [a/a/a/c/av.b La/a/a/c/au;]
      [5] aload_0 v0
      [6] invokespecial #30
        + Methodref [a/a/a/c/t.<init> ()V]
      [9] aload_0 v0
      [10] aload_2 v2
      [11] putfield #20
        + Fieldref [a/a/a/c/av.a La/a/a/c/ao;]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getKey()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object getKey()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #20
        + Fieldref [a/a/a/c/av.a La/a/a/c/ao;]
      [4] getfield #15
        + Fieldref [a/a/a/c/ao.f Ljava/lang/Object;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getValue()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object getValue()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #20
        + Fieldref [a/a/a/c/av.a La/a/a/c/ao;]
      [4] getfield #14
        + Fieldref [a/a/a/c/ao.e Ljava/lang/Object;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       setValue(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object setValue(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 161, locals = 5, stack = 6):
      [0] aload_0 v0
      [1] getfield #20
        + Fieldref [a/a/a/c/av.a La/a/a/c/ao;]
      [4] getfield #14
        + Fieldref [a/a/a/c/ao.e Ljava/lang/Object;]
      [7] astore_2 v2
      [8] aload_1 v1
      [9] invokestatic #27
        + Methodref [a/a/a/c/am.a (Ljava/lang/Object;)I]
      [12] istore_3 v3
      [13] iload_3 v3
      [14] aload_0 v0
      [15] getfield #20
        + Fieldref [a/a/a/c/av.a La/a/a/c/ao;]
      [18] getfield #12
        + Fieldref [a/a/a/c/ao.a I]
      [21] ificmpne +13 (target=34)
      [24] aload_1 v1
      [25] aload_2 v2
      [26] invokestatic #22
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [29] ifeq +5 (target=34)
      [32] aload_1 v1
      [33] areturn
      [34] aload_0 v0
      [35] getfield #21
        + Fieldref [a/a/a/c/av.b La/a/a/c/au;]
      [38] getfield #18
        + Fieldref [a/a/a/c/au.a La/a/a/c/at;]
      [41] getfield #17
        + Fieldref [a/a/a/c/at.a La/a/a/c/as;]
      [44] getfield #16
        + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
      [47] aload_1 v1
      [48] iload_3 v3
      [49] invokestatic #26
        + Methodref [a/a/a/c/am.a (La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
      [52] ifnonnull +7 (target=59)
      [55] iconst_1
      [56] goto +4 (target=60)
      [59] iconst_0
      [60] ldc #1
        + String [value already present: %s]
      [62] iconst_1
      [63] anewarray #11
        + Class [java/lang/Object]
      [66] dup
      [67] iconst_0
      [68] aload_1 v1
      [69] aastore
      [70] invokestatic #23
        + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
      [73] aload_0 v0
      [74] getfield #21
        + Fieldref [a/a/a/c/av.b La/a/a/c/au;]
      [77] getfield #18
        + Fieldref [a/a/a/c/au.a La/a/a/c/at;]
      [80] getfield #17
        + Fieldref [a/a/a/c/at.a La/a/a/c/as;]
      [83] getfield #16
        + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
      [86] aload_0 v0
      [87] getfield #20
        + Fieldref [a/a/a/c/av.a La/a/a/c/ao;]
      [90] invokestatic #25
        + Methodref [a/a/a/c/am.a (La/a/a/c/am;La/a/a/c/ao;)V]
      [93] new #5
        + Class [a/a/a/c/ao]
      [96] dup
      [97] aload_1 v1
      [98] iload_3 v3
      [99] aload_0 v0
      [100] getfield #20
        + Fieldref [a/a/a/c/av.a La/a/a/c/ao;]
      [103] getfield #15
        + Fieldref [a/a/a/c/ao.f Ljava/lang/Object;]
      [106] aload_0 v0
      [107] getfield #20
        + Fieldref [a/a/a/c/av.a La/a/a/c/ao;]
      [110] getfield #13
        + Fieldref [a/a/a/c/ao.b I]
      [113] invokespecial #29
        + Methodref [a/a/a/c/ao.<init> (Ljava/lang/Object;ILjava/lang/Object;I)V]
      [116] astore v4
      [118] aload_0 v0
      [119] getfield #21
        + Fieldref [a/a/a/c/av.b La/a/a/c/au;]
      [122] getfield #18
        + Fieldref [a/a/a/c/au.a La/a/a/c/at;]
      [125] getfield #17
        + Fieldref [a/a/a/c/at.a La/a/a/c/as;]
      [128] getfield #16
        + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
      [131] aload v4
      [133] invokestatic #28
        + Methodref [a/a/a/c/am.b (La/a/a/c/am;La/a/a/c/ao;)V]
      [136] aload_0 v0
      [137] getfield #21
        + Fieldref [a/a/a/c/av.b La/a/a/c/au;]
      [140] aload_0 v0
      [141] getfield #21
        + Fieldref [a/a/a/c/av.b La/a/a/c/au;]
      [144] getfield #18
        + Fieldref [a/a/a/c/au.a La/a/a/c/at;]
      [147] getfield #17
        + Fieldref [a/a/a/c/at.a La/a/a/c/as;]
      [150] getfield #16
        + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
      [153] invokestatic #24
        + Methodref [a/a/a/c/am.a (La/a/a/c/am;)I]
      [156] putfield #19
        + Fieldref [a/a/a/c/au.e I]
      [159] aload_2 v2
      [160] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [34] Var: ...[a:java/lang/Object][i], Stack: (empty)
        - [59] Var: ..., Stack: (empty)
        - [60] Var: ..., Stack: [i]

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/aw
  Superclass:    a/a/a/c/da
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.aw extends a.a.a.c.da

Interfaces (count = 0):

Constant Pool (count = 46):
  + Class [a/a/a/c/am]
  + Class [a/a/a/c/ao]
  + Class [a/a/a/c/as]
  + Class [a/a/a/c/aw]
  + Class [a/a/a/c/ax]
  + Class [a/a/a/c/da]
  + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
  + Fieldref [a/a/a/c/aw.a La/a/a/c/as;]
  + Methodref [a/a/a/c/am.a (La/a/a/c/am;La/a/a/c/ao;)V]
  + Methodref [a/a/a/c/am.a (Ljava/lang/Object;)I]
  + Methodref [a/a/a/c/am.b (La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
  + Methodref [a/a/a/c/ax.<init> (La/a/a/c/aw;)V]
  + Methodref [a/a/a/c/da.<init> (Ljava/util/Map;)V]
  + NameAndType [<init> (La/a/a/c/aw;)V]
  + NameAndType [<init> (Ljava/util/Map;)V]
  + NameAndType [a (La/a/a/c/am;La/a/a/c/ao;)V]
  + NameAndType [a (Ljava/lang/Object;)I]
  + NameAndType [a La/a/a/c/am;]
  + NameAndType [a La/a/a/c/as;]
  + NameAndType [b (La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [(La/a/a/c/am;La/a/a/c/ao;)V]
  + Utf8 [(La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
  + Utf8 [(La/a/a/c/as;)V]
  + Utf8 [(La/a/a/c/aw;)V]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Map;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/am;]
  + Utf8 [La/a/a/c/as;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/am]
  + Utf8 [a/a/a/c/ao]
  + Utf8 [a/a/a/c/as]
  + Utf8 [a/a/a/c/aw]
  + Utf8 [a/a/a/c/ax]
  + Utf8 [a/a/a/c/da]
  + Utf8 [b]
  + Utf8 [iterator]
  + Utf8 [remove]

Fields (count = 1):
  + Field:        a La/a/a/c/as;
    Access flags: 0x1010
      = final synthetic a.a.a.c.as a

Methods (count = 3):
  - Method:       <init>(La/a/a/c/as;)V
    Access flags: 0x0
      = aw(a.a.a.c.as)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #8
        + Fieldref [a/a/a/c/aw.a La/a/a/c/as;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] invokespecial #13
        + Methodref [a/a/a/c/da.<init> (Ljava/util/Map;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean remove(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 35, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/aw.a La/a/a/c/as;]
      [4] getfield #7
        + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
      [7] aload_1 v1
      [8] aload_1 v1
      [9] invokestatic #10
        + Methodref [a/a/a/c/am.a (Ljava/lang/Object;)I]
      [12] invokestatic #11
        + Methodref [a/a/a/c/am.b (La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
      [15] astore_2 v2
      [16] aload_2 v2
      [17] ifnonnull +5 (target=22)
      [20] iconst_0
      [21] ireturn
      [22] aload_0 v0
      [23] getfield #8
        + Fieldref [a/a/a/c/aw.a La/a/a/c/as;]
      [26] getfield #7
        + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
      [29] aload_2 v2
      [30] invokestatic #9
        + Methodref [a/a/a/c/am.a (La/a/a/c/am;La/a/a/c/ao;)V]
      [33] iconst_1
      [34] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [22] Var: ...[a:a/a/a/c/ao], Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #5
        + Class [a/a/a/c/ax]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #12
        + Methodref [a/a/a/c/ax.<init> (La/a/a/c/aw;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ax
  Superclass:    a/a/a/c/ay
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.ax extends a.a.a.c.ay

Interfaces (count = 0):

Constant Pool (count = 33):
  + Class [a/a/a/c/ao]
  + Class [a/a/a/c/as]
  + Class [a/a/a/c/aw]
  + Class [a/a/a/c/ax]
  + Class [a/a/a/c/ay]
  + Fieldref [a/a/a/c/ao.f Ljava/lang/Object;]
  + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
  + Fieldref [a/a/a/c/aw.a La/a/a/c/as;]
  + Fieldref [a/a/a/c/ax.a La/a/a/c/aw;]
  + Methodref [a/a/a/c/ay.<init> (La/a/a/c/am;)V]
  + NameAndType [<init> (La/a/a/c/am;)V]
  + NameAndType [a La/a/a/c/am;]
  + NameAndType [a La/a/a/c/as;]
  + NameAndType [a La/a/a/c/aw;]
  + NameAndType [f Ljava/lang/Object;]
  + Utf8 [(La/a/a/c/am;)V]
  + Utf8 [(La/a/a/c/ao;)Ljava/lang/Object;]
  + Utf8 [(La/a/a/c/aw;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/am;]
  + Utf8 [La/a/a/c/as;]
  + Utf8 [La/a/a/c/aw;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ao]
  + Utf8 [a/a/a/c/as]
  + Utf8 [a/a/a/c/aw]
  + Utf8 [a/a/a/c/ax]
  + Utf8 [a/a/a/c/ay]
  + Utf8 [b]
  + Utf8 [f]

Fields (count = 1):
  + Field:        a La/a/a/c/aw;
    Access flags: 0x1010
      = final synthetic a.a.a.c.aw a

Methods (count = 2):
  - Method:       <init>(La/a/a/c/aw;)V
    Access flags: 0x0
      = ax(a.a.a.c.aw)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #9
        + Fieldref [a/a/a/c/ax.a La/a/a/c/aw;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] getfield #8
        + Fieldref [a/a/a/c/aw.a La/a/a/c/as;]
      [10] getfield #7
        + Fieldref [a/a/a/c/as.a La/a/a/c/am;]
      [13] invokespecial #10
        + Methodref [a/a/a/c/ay.<init> (La/a/a/c/am;)V]
      [16] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/c/ao;)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object b(a.a.a.c.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] getfield #6
        + Fieldref [a/a/a/c/ao.f Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ay
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.c.ay extends java.lang.Object

Interfaces (count = 1):
  + Class [java/util/Iterator]

Constant Pool (count = 70):
  + Class [a/a/a/c/am]
  + Class [a/a/a/c/ao]
  + Class [a/a/a/c/ay]
  + Class [a/a/a/c/z]
  + Class [java/lang/Object]
  + Class [java/util/ConcurrentModificationException]
  + Class [java/util/Iterator]
  + Class [java/util/NoSuchElementException]
  + Fieldref [a/a/a/c/ao.c La/a/a/c/ao;]
  + Fieldref [a/a/a/c/ay.b I]
  + Fieldref [a/a/a/c/ay.c La/a/a/c/ao;]
  + Fieldref [a/a/a/c/ay.d La/a/a/c/ao;]
  + Fieldref [a/a/a/c/ay.e I]
  + Fieldref [a/a/a/c/ay.f La/a/a/c/am;]
  + Methodref [a/a/a/c/am.a (La/a/a/c/am;)I]
  + Methodref [a/a/a/c/am.a (La/a/a/c/am;La/a/a/c/ao;)V]
  + Methodref [a/a/a/c/am.b (La/a/a/c/am;)[La/a/a/c/ao;]
  + Methodref [a/a/a/c/ay.a ()V]
  + Methodref [a/a/a/c/ay.b (La/a/a/c/ao;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/ay.hasNext ()Z]
  + Methodref [a/a/a/c/z.a (Z)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/util/ConcurrentModificationException.<init> ()V]
  + Methodref [java/util/NoSuchElementException.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a ()V]
  + NameAndType [a (La/a/a/c/am;)I]
  + NameAndType [a (La/a/a/c/am;La/a/a/c/ao;)V]
  + NameAndType [a (Z)V]
  + NameAndType [b (La/a/a/c/am;)[La/a/a/c/ao;]
  + NameAndType [b (La/a/a/c/ao;)Ljava/lang/Object;]
  + NameAndType [b I]
  + NameAndType [c La/a/a/c/ao;]
  + NameAndType [d La/a/a/c/ao;]
  + NameAndType [e I]
  + NameAndType [f La/a/a/c/am;]
  + NameAndType [hasNext ()Z]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/c/am;)I]
  + Utf8 [(La/a/a/c/am;)V]
  + Utf8 [(La/a/a/c/am;)[La/a/a/c/ao;]
  + Utf8 [(La/a/a/c/am;La/a/a/c/ao;)V]
  + Utf8 [(La/a/a/c/ao;)Ljava/lang/Object;]
  + Utf8 [(Z)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [La/a/a/c/am;]
  + Utf8 [La/a/a/c/ao;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/am]
  + Utf8 [a/a/a/c/ao]
  + Utf8 [a/a/a/c/ay]
  + Utf8 [a/a/a/c/z]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [hasNext]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/ConcurrentModificationException]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/NoSuchElementException]
  + Utf8 [next]
  + Utf8 [remove]

Fields (count = 5):
  + Field:        b I
    Access flags: 0x0
      = int b
  + Field:        c La/a/a/c/ao;
    Access flags: 0x0
      = a.a.a.c.ao c
  + Field:        d La/a/a/c/ao;
    Access flags: 0x0
      = a.a.a.c.ao d
  + Field:        e I
    Access flags: 0x0
      = int e
  + Field:        f La/a/a/c/am;
    Access flags: 0x1010
      = final synthetic a.a.a.c.am f

Methods (count = 6):
  - Method:       <init>(La/a/a/c/am;)V
    Access flags: 0x0
      = ay(a.a.a.c.am)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 36, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #14
        + Fieldref [a/a/a/c/ay.f La/a/a/c/am;]
      [5] aload_0 v0
      [6] invokespecial #22
        + Methodref [java/lang/Object.<init> ()V]
      [9] aload_0 v0
      [10] iconst_0
      [11] putfield #10
        + Fieldref [a/a/a/c/ay.b I]
      [14] aload_0 v0
      [15] aconst_null
      [16] putfield #11
        + Fieldref [a/a/a/c/ay.c La/a/a/c/ao;]
      [19] aload_0 v0
      [20] aconst_null
      [21] putfield #12
        + Fieldref [a/a/a/c/ay.d La/a/a/c/ao;]
      [24] aload_0 v0
      [25] aload_0 v0
      [26] getfield #14
        + Fieldref [a/a/a/c/ay.f La/a/a/c/am;]
      [29] invokestatic #15
        + Methodref [a/a/a/c/am.a (La/a/a/c/am;)I]
      [32] putfield #13
        + Fieldref [a/a/a/c/ay.e I]
      [35] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()V
    Access flags: 0x2
      = private void a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #14
        + Fieldref [a/a/a/c/ay.f La/a/a/c/am;]
      [4] invokestatic #15
        + Methodref [a/a/a/c/am.a (La/a/a/c/am;)I]
      [7] aload_0 v0
      [8] getfield #13
        + Fieldref [a/a/a/c/ay.e I]
      [11] ificmpeq +11 (target=22)
      [14] new #6
        + Class [java/util/ConcurrentModificationException]
      [17] dup
      [18] invokespecial #23
        + Methodref [java/util/ConcurrentModificationException.<init> ()V]
      [21] athrow
      [22] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [22] Var: ..., Stack: (empty)
  + Method:       hasNext()Z
    Access flags: 0x1
      = public boolean hasNext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 83, locals = 1, stack = 6):
      [0] aload_0 v0
      [1] invokespecial #18
        + Methodref [a/a/a/c/ay.a ()V]
      [4] aload_0 v0
      [5] getfield #11
        + Fieldref [a/a/a/c/ay.c La/a/a/c/ao;]
      [8] ifnull +5 (target=13)
      [11] iconst_1
      [12] ireturn
      [13] aload_0 v0
      [14] getfield #10
        + Fieldref [a/a/a/c/ay.b I]
      [17] aload_0 v0
      [18] getfield #14
        + Fieldref [a/a/a/c/ay.f La/a/a/c/am;]
      [21] invokestatic #17
        + Methodref [a/a/a/c/am.b (La/a/a/c/am;)[La/a/a/c/ao;]
      [24] arraylength
      [25] ificmpge +56 (target=81)
      [28] aload_0 v0
      [29] getfield #14
        + Fieldref [a/a/a/c/ay.f La/a/a/c/am;]
      [32] invokestatic #17
        + Methodref [a/a/a/c/am.b (La/a/a/c/am;)[La/a/a/c/ao;]
      [35] aload_0 v0
      [36] getfield #10
        + Fieldref [a/a/a/c/ay.b I]
      [39] aaload
      [40] ifnull +28 (target=68)
      [43] aload_0 v0
      [44] aload_0 v0
      [45] getfield #14
        + Fieldref [a/a/a/c/ay.f La/a/a/c/am;]
      [48] invokestatic #17
        + Methodref [a/a/a/c/am.b (La/a/a/c/am;)[La/a/a/c/ao;]
      [51] aload_0 v0
      [52] dup
      [53] getfield #10
        + Fieldref [a/a/a/c/ay.b I]
      [56] dup_x1
      [57] iconst_1
      [58] iadd
      [59] putfield #10
        + Fieldref [a/a/a/c/ay.b I]
      [62] aaload
      [63] putfield #11
        + Fieldref [a/a/a/c/ay.c La/a/a/c/ao;]
      [66] iconst_1
      [67] ireturn
      [68] aload_0 v0
      [69] dup
      [70] getfield #10
        + Fieldref [a/a/a/c/ay.b I]
      [73] iconst_1
      [74] iadd
      [75] putfield #10
        + Fieldref [a/a/a/c/ay.b I]
      [78] goto -65 (target=13)
      [81] iconst_0
      [82] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [13] Var: ..., Stack: (empty)
        - [68] Var: ..., Stack: (empty)
        - [81] Var: ..., Stack: (empty)
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 43, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #18
        + Methodref [a/a/a/c/ay.a ()V]
      [4] aload_0 v0
      [5] invokevirtual #20
        + Methodref [a/a/a/c/ay.hasNext ()Z]
      [8] ifne +11 (target=19)
      [11] new #8
        + Class [java/util/NoSuchElementException]
      [14] dup
      [15] invokespecial #24
        + Methodref [java/util/NoSuchElementException.<init> ()V]
      [18] athrow
      [19] aload_0 v0
      [20] getfield #11
        + Fieldref [a/a/a/c/ay.c La/a/a/c/ao;]
      [23] astore_1 v1
      [24] aload_0 v0
      [25] aload_1 v1
      [26] getfield #9
        + Fieldref [a/a/a/c/ao.c La/a/a/c/ao;]
      [29] putfield #11
        + Fieldref [a/a/a/c/ay.c La/a/a/c/ao;]
      [32] aload_0 v0
      [33] aload_1 v1
      [34] putfield #12
        + Fieldref [a/a/a/c/ay.d La/a/a/c/ao;]
      [37] aload_0 v0
      [38] aload_1 v1
      [39] invokevirtual #19
        + Methodref [a/a/a/c/ay.b (La/a/a/c/ao;)Ljava/lang/Object;]
      [42] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [19] Var: ..., Stack: (empty)
  + Method:       remove()V
    Access flags: 0x1
      = public void remove()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 47, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #18
        + Methodref [a/a/a/c/ay.a ()V]
      [4] aload_0 v0
      [5] getfield #12
        + Fieldref [a/a/a/c/ay.d La/a/a/c/ao;]
      [8] ifnull +7 (target=15)
      [11] iconst_1
      [12] goto +4 (target=16)
      [15] iconst_0
      [16] invokestatic #21
        + Methodref [a/a/a/c/z.a (Z)V]
      [19] aload_0 v0
      [20] getfield #14
        + Fieldref [a/a/a/c/ay.f La/a/a/c/am;]
      [23] aload_0 v0
      [24] getfield #12
        + Fieldref [a/a/a/c/ay.d La/a/a/c/ao;]
      [27] invokestatic #16
        + Methodref [a/a/a/c/am.a (La/a/a/c/am;La/a/a/c/ao;)V]
      [30] aload_0 v0
      [31] aload_0 v0
      [32] getfield #14
        + Fieldref [a/a/a/c/ay.f La/a/a/c/am;]
      [35] invokestatic #15
        + Methodref [a/a/a/c/am.a (La/a/a/c/am;)I]
      [38] putfield #13
        + Fieldref [a/a/a/c/ay.e I]
      [41] aload_0 v0
      [42] aconst_null
      [43] putfield #12
        + Fieldref [a/a/a/c/ay.d La/a/a/c/ao;]
      [46] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [15] Var: ..., Stack: (empty)
        - [16] Var: ..., Stack: [i]
  + Method:       b(La/a/a/c/ao;)Ljava/lang/Object;
    Access flags: 0x400
      = abstract java.lang.Object b(a.a.a.c.ao)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/az
  Superclass:    a/a/a/c/da
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.az extends a.a.a.c.da

Interfaces (count = 0):

Constant Pool (count = 40):
  + Class [a/a/a/c/am]
  + Class [a/a/a/c/ao]
  + Class [a/a/a/c/az]
  + Class [a/a/a/c/ba]
  + Class [a/a/a/c/da]
  + Fieldref [a/a/a/c/az.a La/a/a/c/am;]
  + Methodref [a/a/a/c/am.a (La/a/a/c/am;La/a/a/c/ao;)V]
  + Methodref [a/a/a/c/am.a (La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
  + Methodref [a/a/a/c/am.a (Ljava/lang/Object;)I]
  + Methodref [a/a/a/c/ba.<init> (La/a/a/c/az;)V]
  + Methodref [a/a/a/c/da.<init> (Ljava/util/Map;)V]
  + NameAndType [<init> (La/a/a/c/az;)V]
  + NameAndType [<init> (Ljava/util/Map;)V]
  + NameAndType [a (La/a/a/c/am;La/a/a/c/ao;)V]
  + NameAndType [a (La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
  + NameAndType [a (Ljava/lang/Object;)I]
  + NameAndType [a La/a/a/c/am;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [(La/a/a/c/am;)V]
  + Utf8 [(La/a/a/c/am;La/a/a/c/ao;)V]
  + Utf8 [(La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
  + Utf8 [(La/a/a/c/az;)V]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Map;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/am;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/am]
  + Utf8 [a/a/a/c/ao]
  + Utf8 [a/a/a/c/az]
  + Utf8 [a/a/a/c/ba]
  + Utf8 [a/a/a/c/da]
  + Utf8 [iterator]
  + Utf8 [remove]

Fields (count = 1):
  + Field:        a La/a/a/c/am;
    Access flags: 0x1010
      = final synthetic a.a.a.c.am a

Methods (count = 3):
  - Method:       <init>(La/a/a/c/am;)V
    Access flags: 0x0
      = az(a.a.a.c.am)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/c/az.a La/a/a/c/am;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] invokespecial #11
        + Methodref [a/a/a/c/da.<init> (Ljava/util/Map;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #4
        + Class [a/a/a/c/ba]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #10
        + Methodref [a/a/a/c/ba.<init> (La/a/a/c/az;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean remove(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 29, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/az.a La/a/a/c/am;]
      [4] aload_1 v1
      [5] aload_1 v1
      [6] invokestatic #9
        + Methodref [a/a/a/c/am.a (Ljava/lang/Object;)I]
      [9] invokestatic #8
        + Methodref [a/a/a/c/am.a (La/a/a/c/am;Ljava/lang/Object;I)La/a/a/c/ao;]
      [12] astore_2 v2
      [13] aload_2 v2
      [14] ifnonnull +5 (target=19)
      [17] iconst_0
      [18] ireturn
      [19] aload_0 v0
      [20] getfield #6
        + Fieldref [a/a/a/c/az.a La/a/a/c/am;]
      [23] aload_2 v2
      [24] invokestatic #7
        + Methodref [a/a/a/c/am.a (La/a/a/c/am;La/a/a/c/ao;)V]
      [27] iconst_1
      [28] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [19] Var: ...[a:a/a/a/c/ao], Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ba
  Superclass:    a/a/a/c/ay
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.ba extends a.a.a.c.ay

Interfaces (count = 0):

Constant Pool (count = 28):
  + Class [a/a/a/c/ao]
  + Class [a/a/a/c/ay]
  + Class [a/a/a/c/az]
  + Class [a/a/a/c/ba]
  + Fieldref [a/a/a/c/ao.e Ljava/lang/Object;]
  + Fieldref [a/a/a/c/az.a La/a/a/c/am;]
  + Fieldref [a/a/a/c/ba.a La/a/a/c/az;]
  + Methodref [a/a/a/c/ay.<init> (La/a/a/c/am;)V]
  + NameAndType [<init> (La/a/a/c/am;)V]
  + NameAndType [a La/a/a/c/am;]
  + NameAndType [a La/a/a/c/az;]
  + NameAndType [e Ljava/lang/Object;]
  + Utf8 [(La/a/a/c/am;)V]
  + Utf8 [(La/a/a/c/ao;)Ljava/lang/Object;]
  + Utf8 [(La/a/a/c/az;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/am;]
  + Utf8 [La/a/a/c/az;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ao]
  + Utf8 [a/a/a/c/ay]
  + Utf8 [a/a/a/c/az]
  + Utf8 [a/a/a/c/ba]
  + Utf8 [b]
  + Utf8 [e]

Fields (count = 1):
  + Field:        a La/a/a/c/az;
    Access flags: 0x1010
      = final synthetic a.a.a.c.az a

Methods (count = 2):
  - Method:       <init>(La/a/a/c/az;)V
    Access flags: 0x0
      = ba(a.a.a.c.az)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #7
        + Fieldref [a/a/a/c/ba.a La/a/a/c/az;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] getfield #6
        + Fieldref [a/a/a/c/az.a La/a/a/c/am;]
      [10] invokespecial #8
        + Methodref [a/a/a/c/ay.<init> (La/a/a/c/am;)V]
      [13] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/c/ao;)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object b(a.a.a.c.ao)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] getfield #5
        + Fieldref [a/a/a/c/ao.e Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bb
  Superclass:    a/a/a/c/w
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.c.bb extends a.a.a.c.w

Interfaces (count = 0):

Constant Pool (count = 54):
  + Class [a/a/a/c/bb]
  + Class [a/a/a/c/dt]
  + Class [a/a/a/c/w]
  + Class [java/util/HashMap]
  + Fieldref [a/a/a/c/bb.a I]
  + Methodref [a/a/a/c/bb.<init> ()V]
  + Methodref [a/a/a/c/bb.g ()Ljava/util/Set;]
  + Methodref [a/a/a/c/dt.a (I)Ljava/util/HashSet;]
  + Methodref [a/a/a/c/w.<init> (Ljava/util/Map;)V]
  + Methodref [a/a/a/c/w.b ()V]
  + Methodref [a/a/a/c/w.e ()Ljava/util/Set;]
  + Methodref [a/a/a/c/w.equals (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/w.f ()Ljava/util/Map;]
  + Methodref [a/a/a/c/w.hashCode ()I]
  + Methodref [a/a/a/c/w.toString ()Ljava/lang/String;]
  + Methodref [java/util/HashMap.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/util/Map;)V]
  + NameAndType [a (I)Ljava/util/HashSet;]
  + NameAndType [a I]
  + NameAndType [b ()V]
  + NameAndType [e ()Ljava/util/Set;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [f ()Ljava/util/Map;]
  + NameAndType [g ()Ljava/util/Set;]
  + NameAndType [hashCode ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bb;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Map;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [(I)Ljava/util/HashSet;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Map;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bb]
  + Utf8 [a/a/a/c/dt]
  + Utf8 [a/a/a/c/w]
  + Utf8 [b]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [h]
  + Utf8 [hashCode]
  + Utf8 [java/util/HashMap]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a I
    Access flags: 0x80
      = transient int a

Methods (count = 10):
  + Method:       h()La/a/a/c/bb;
    Access flags: 0x9
      = public static a.a.a.c.bb h()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 0, stack = 2):
      [0] new #1
        + Class [a/a/a/c/bb]
      [3] dup
      [4] invokespecial #6
        + Methodref [a/a/a/c/bb.<init> ()V]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>()V
    Access flags: 0x2
      = private bb()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] new #4
        + Class [java/util/HashMap]
      [4] dup
      [5] invokespecial #16
        + Methodref [java/util/HashMap.<init> ()V]
      [8] invokespecial #9
        + Methodref [a/a/a/c/w.<init> (Ljava/util/Map;)V]
      [11] aload_0 v0
      [12] iconst_2
      [13] putfield #5
        + Fieldref [a/a/a/c/bb.a I]
      [16] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       g()Ljava/util/Set;
    Access flags: 0x0
      = java.util.Set g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/c/bb.a I]
      [4] invokestatic #8
        + Methodref [a/a/a/c/dt.a (I)Ljava/util/HashSet;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1041
      = public bridge synthetic boolean equals(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #12
        + Methodref [a/a/a/c/w.equals (Ljava/lang/Object;)Z]
      [5] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()Ljava/util/Map;
    Access flags: 0x1041
      = public bridge synthetic java.util.Map f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #13
        + Methodref [a/a/a/c/w.f ()Ljava/util/Map;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()V
    Access flags: 0x1041
      = public bridge synthetic void b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #10
        + Methodref [a/a/a/c/w.b ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/Collection;
    Access flags: 0x1000
      = synthetic java.util.Collection a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #7
        + Methodref [a/a/a/c/bb.g ()Ljava/util/Set;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1041
      = public bridge synthetic java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #15
        + Methodref [a/a/a/c/w.toString ()Ljava/lang/String;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hashCode()I
    Access flags: 0x1041
      = public bridge synthetic int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #14
        + Methodref [a/a/a/c/w.hashCode ()I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Ljava/util/Set;
    Access flags: 0x1041
      = public bridge synthetic java.util.Set e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #11
        + Methodref [a/a/a/c/w.e ()Ljava/util/Set;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bc
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.bc extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 33):
  + Integer [-862048943]
  + Integer [461845907]
  + Integer [1073741824]
  + Class [a/a/a/c/bc]
  + Class [java/lang/Integer]
  + Class [java/lang/Math]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/c/bc.a I]
  + Methodref [java/lang/Integer.highestOneBit (I)I]
  + Methodref [java/lang/Integer.rotateLeft (II)I]
  + Methodref [java/lang/Math.max (II)I]
  + NameAndType [a I]
  + NameAndType [highestOneBit (I)I]
  + NameAndType [max (II)I]
  + NameAndType [rotateLeft (II)I]
  + Utf8 [()V]
  + Utf8 [(I)I]
  + Utf8 [(ID)I]
  + Utf8 [(II)I]
  + Utf8 [(IID)Z]
  + Utf8 [<clinit>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bc]
  + Utf8 [highestOneBit]
  + Utf8 [java/lang/Integer]
  + Utf8 [java/lang/Math]
  + Utf8 [java/lang/Object]
  + Utf8 [max]
  + Utf8 [rotateLeft]

Fields (count = 1):
  + Field:        a I
    Access flags: 0xa
      = private static int a

Methods (count = 4):
  + Method:       a(I)I
    Access flags: 0x8
      = static int a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 3):
      [0] ldc #2
        + Integer [461845907]
      [2] iload_0 v0
      [3] ldc #1
        + Integer [-862048943]
      [5] imul
      [6] bipush 15
      [8] invokestatic #10
        + Methodref [java/lang/Integer.rotateLeft (II)I]
      [11] imul
      [12] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(ID)I
    Access flags: 0x8
      = static int a(int,double)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 38, locals = 4, stack = 5):
      [0] iload_0 v0
      [1] iconst_2
      [2] invokestatic #11
        + Methodref [java/lang/Math.max (II)I]
      [5] istore_0 v0
      [6] iload_0 v0
      [7] invokestatic #9
        + Methodref [java/lang/Integer.highestOneBit (I)I]
      [10] istore_3 v3
      [11] iload_0 v0
      [12] dload_1 v1
      [13] iload_3 v3
      [14] i2d
      [15] dmul
      [16] d2i
      [17] ificmple +19 (target=36)
      [20] iload_3 v3
      [21] iconst_1
      [22] ishl
      [23] istore_3 v3
      [24] iload_3 v3
      [25] ifle +7 (target=32)
      [28] iload_3 v3
      [29] goto +6 (target=35)
      [32] getstatic #8
        + Fieldref [a/a/a/c/bc.a I]
      [35] ireturn
      [36] iload_3 v3
      [37] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [32] Var: ...[i], Stack: (empty)
        - [35] Var: ..., Stack: [i]
        - [36] Var: ..., Stack: (empty)
  + Method:       a(IID)Z
    Access flags: 0x8
      = static boolean a(int,int,double)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 4, stack = 6):
      [0] iload_0 v0
      [1] i2d
      [2] dload_2 v2
      [3] iload_1 v1
      [4] i2d
      [5] dmul
      [6] dcmpl
      [7] ifle +14 (target=21)
      [10] iload_1 v1
      [11] getstatic #8
        + Fieldref [a/a/a/c/bc.a I]
      [14] ificmpge +7 (target=21)
      [17] iconst_1
      [18] goto +4 (target=22)
      [21] iconst_0
      [22] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [21] Var: ..., Stack: (empty)
        - [22] Var: ..., Stack: [i]
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 0, stack = 1):
      [0] ldc #3
        + Integer [1073741824]
      [2] putstatic #8
        + Fieldref [a/a/a/c/bc.a I]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bd
  Superclass:    a/a/a/c/bo
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.c.bd extends a.a.a.c.bo

Interfaces (count = 0):

Constant Pool (count = 31):
  + Class [a/a/a/c/bd]
  + Class [a/a/a/c/bf]
  + Class [a/a/a/c/bo]
  + Methodref [a/a/a/c/bd.c ()La/a/a/c/bf;]
  + Methodref [a/a/a/c/bf.contains (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/bf.e ()Z]
  + Methodref [a/a/a/c/bf.isEmpty ()Z]
  + Methodref [a/a/a/c/bf.size ()I]
  + Methodref [a/a/a/c/bo.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [c ()La/a/a/c/bf;]
  + NameAndType [contains (Ljava/lang/Object;)Z]
  + NameAndType [e ()Z]
  + NameAndType [isEmpty ()Z]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bf;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a/a/a/c/bd]
  + Utf8 [a/a/a/c/bf]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [c]
  + Utf8 [contains]
  + Utf8 [e]
  + Utf8 [isEmpty]
  + Utf8 [size]

Fields (count = 0):

Methods (count = 6):
  - Method:       <init>()V
    Access flags: 0x0
      = bd()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #9
        + Methodref [a/a/a/c/bo.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()La/a/a/c/bf;
    Access flags: 0x400
      = abstract a.a.a.c.bf c()
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/bd.c ()La/a/a/c/bf;]
      [4] aload_1 v1
      [5] invokevirtual #5
        + Methodref [a/a/a/c/bf.contains (Ljava/lang/Object;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/bd.c ()La/a/a/c/bf;]
      [4] invokevirtual #8
        + Methodref [a/a/a/c/bf.size ()I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/bd.c ()La/a/a/c/bf;]
      [4] invokevirtual #7
        + Methodref [a/a/a/c/bf.isEmpty ()Z]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #4
        + Methodref [a/a/a/c/bd.c ()La/a/a/c/bf;]
      [4] invokevirtual #6
        + Methodref [a/a/a/c/bf.e ()Z]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/be
  Superclass:    a/a/a/c/bs
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.be extends a.a.a.c.bs

Interfaces (count = 1):
  + Class [a/a/a/c/x]

Constant Pool (count = 46):
  + Class [a/a/a/c/ad]
  + Class [a/a/a/c/be]
  + Class [a/a/a/c/bs]
  + Class [a/a/a/c/dv]
  + Class [a/a/a/c/x]
  + Class [java/util/Map$Entry]
  + Fieldref [a/a/a/c/ad.a La/a/a/c/ad;]
  + Fieldref [a/a/a/c/be.a [Ljava/util/Map$Entry;]
  + Methodref [a/a/a/c/be.c_ ()La/a/a/c/be;]
  + Methodref [a/a/a/c/be.d ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/be.h ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/bs.<init> ()V]
  + Methodref [a/a/a/c/dv.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [a La/a/a/c/ad;]
  + NameAndType [a [Ljava/util/Map$Entry;]
  + NameAndType [c_ ()La/a/a/c/be;]
  + NameAndType [d ()La/a/a/c/cb;]
  + NameAndType [h ()La/a/a/c/cb;]
  + Utf8 [()La/a/a/c/be;]
  + Utf8 [()La/a/a/c/bf;]
  + Utf8 [()La/a/a/c/cb;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/be;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/ad;]
  + Utf8 [[Ljava/util/Map$Entry;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ad]
  + Utf8 [a/a/a/c/be]
  + Utf8 [a/a/a/c/bs]
  + Utf8 [a/a/a/c/dv]
  + Utf8 [a/a/a/c/x]
  + Utf8 [c_]
  + Utf8 [d]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [h]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [values]

Fields (count = 1):
  + Field:        a [Ljava/util/Map$Entry;
    Access flags: 0x1a
      = private static final java.util.Map$Entry[] a

Methods (count = 8):
  + Method:       g()La/a/a/c/be;
    Access flags: 0x9
      = public static a.a.a.c.be g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] getstatic #7
        + Fieldref [a/a/a/c/ad.a La/a/a/c/ad;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/be;
    Access flags: 0x9
      = public static a.a.a.c.be a(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 4):
      [0] new #4
        + Class [a/a/a/c/dv]
      [3] dup
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokespecial #13
        + Methodref [a/a/a/c/dv.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>()V
    Access flags: 0x0
      = be()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #12
        + Methodref [a/a/a/c/bs.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c_()La/a/a/c/be;
    Access flags: 0x401
      = public abstract a.a.a.c.be c_()
  + Method:       h()La/a/a/c/cb;
    Access flags: 0x1
      = public a.a.a.c.cb h()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/c/be.c_ ()La/a/a/c/be;]
      [4] invokevirtual #10
        + Methodref [a/a/a/c/be.d ()La/a/a/c/cb;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()La/a/a/c/bf;
    Access flags: 0x1001
      = public synthetic a.a.a.c.bf f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #11
        + Methodref [a/a/a/c/be.h ()La/a/a/c/cb;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       values()Ljava/util/Collection;
    Access flags: 0x1001
      = public synthetic java.util.Collection values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #11
        + Methodref [a/a/a/c/be.h ()La/a/a/c/cb;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 0, stack = 1):
      [0] iconst_0
      [1] anewarray #6
        + Class [java/util/Map$Entry]
      [4] putstatic #8
        + Fieldref [a/a/a/c/be.a [Ljava/util/Map$Entry;]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bf
  Superclass:    java/util/AbstractCollection
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.bf extends java.util.AbstractCollection

Interfaces (count = 1):
  + Class [java/io/Serializable]

Constant Pool (count = 101):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/bf]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/dg]
  + Class [a/a/a/c/dj]
  + Class [a/a/a/c/ea]
  + Class [java/io/Serializable]
  + Class [java/lang/Object]
  + Class [java/lang/UnsupportedOperationException]
  + Class [java/util/AbstractCollection]
  + Class [java/util/Iterator]
  + Fieldref [a/a/a/c/bf.a La/a/a/c/bo;]
  + Fieldref [a/a/a/c/dg.a [Ljava/lang/Object;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/bf.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/bf.a ([Ljava/lang/Object;I)I]
  + Methodref [a/a/a/c/bf.f ()La/a/a/c/bo;]
  + Methodref [a/a/a/c/bf.iterator ()Ljava/util/Iterator;]
  + Methodref [a/a/a/c/bf.size ()I]
  + Methodref [a/a/a/c/bf.toArray ()[Ljava/lang/Object;]
  + Methodref [a/a/a/c/bo.a (Ljava/lang/Object;)La/a/a/c/bo;]
  + Methodref [a/a/a/c/bo.d ()La/a/a/c/bo;]
  + Methodref [a/a/a/c/dg.a ([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + Methodref [a/a/a/c/dj.<init> (La/a/a/c/bf;[Ljava/lang/Object;)V]
  + Methodref [a/a/a/c/ea.next ()Ljava/lang/Object;]
  + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
  + Methodref [java/util/AbstractCollection.<init> ()V]
  + Methodref [java/util/AbstractCollection.contains (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/bf;[Ljava/lang/Object;)V]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/c/bo;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a ([Ljava/lang/Object;I)I]
  + NameAndType [a ([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + NameAndType [a La/a/a/c/bo;]
  + NameAndType [a [Ljava/lang/Object;]
  + NameAndType [contains (Ljava/lang/Object;)Z]
  + NameAndType [d ()La/a/a/c/bo;]
  + NameAndType [f ()La/a/a/c/bo;]
  + NameAndType [hasNext ()Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [size ()I]
  + NameAndType [toArray ()[Ljava/lang/Object;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bo;]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [()[Ljava/lang/Object;]
  + Utf8 [(La/a/a/c/bf;[Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/bo;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Collection;)Z]
  + Utf8 [([Ljava/lang/Object;)[Ljava/lang/Object;]
  + Utf8 [([Ljava/lang/Object;I)I]
  + Utf8 [([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bo;]
  + Utf8 [Ljava/lang/Deprecated;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/Object;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/bf]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/dg]
  + Utf8 [a/a/a/c/dj]
  + Utf8 [a/a/a/c/ea]
  + Utf8 [add]
  + Utf8 [addAll]
  + Utf8 [b]
  + Utf8 [clear]
  + Utf8 [contains]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [hasNext]
  + Utf8 [iterator]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/UnsupportedOperationException]
  + Utf8 [java/util/AbstractCollection]
  + Utf8 [java/util/Iterator]
  + Utf8 [next]
  + Utf8 [remove]
  + Utf8 [removeAll]
  + Utf8 [retainAll]
  + Utf8 [size]
  + Utf8 [toArray]

Fields (count = 1):
  + Field:        a La/a/a/c/bo;
    Access flags: 0x82
      = private transient a.a.a.c.bo a

Methods (count = 16):
  - Method:       <init>()V
    Access flags: 0x0
      = bf()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #27
        + Methodref [java/util/AbstractCollection.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x401
      = public abstract a.a.a.c.ea a()
  + Method:       toArray()[Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object[] toArray()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 30, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #19
        + Methodref [a/a/a/c/bf.size ()I]
      [4] istore_1 v1
      [5] iload_1 v1
      [6] ifne +7 (target=13)
      [9] getstatic #13
        + Fieldref [a/a/a/c/dg.a [Ljava/lang/Object;]
      [12] areturn
      [13] aload_0 v0
      [14] invokevirtual #19
        + Methodref [a/a/a/c/bf.size ()I]
      [17] anewarray #8
        + Class [java/lang/Object]
      [20] astore_2 v2
      [21] aload_0 v0
      [22] aload_2 v2
      [23] iconst_0
      [24] invokevirtual #16
        + Methodref [a/a/a/c/bf.a ([Ljava/lang/Object;I)I]
      [27] pop
      [28] aload_2 v2
      [29] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [13] Var: ...[i], Stack: (empty)
  + Method:       toArray([Ljava/lang/Object;)[Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object[] toArray(java.lang.Object[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 44, locals = 3, stack = 3):
      [0] aload_1 v1
      [1] invokestatic #14
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_0 v0
      [6] invokevirtual #19
        + Methodref [a/a/a/c/bf.size ()I]
      [9] istore_2 v2
      [10] aload_1 v1
      [11] arraylength
      [12] iload_2 v2
      [13] ificmpge +12 (target=25)
      [16] aload_1 v1
      [17] iload_2 v2
      [18] invokestatic #23
        + Methodref [a/a/a/c/dg.a ([Ljava/lang/Object;I)[Ljava/lang/Object;]
      [21] astore_1 v1
      [22] goto +13 (target=35)
      [25] aload_1 v1
      [26] arraylength
      [27] iload_2 v2
      [28] ificmple +7 (target=35)
      [31] aload_1 v1
      [32] iload_2 v2
      [33] aconst_null
      [34] aastore
      [35] aload_0 v0
      [36] aload_1 v1
      [37] iconst_0
      [38] invokevirtual #16
        + Methodref [a/a/a/c/bf.a ([Ljava/lang/Object;I)I]
      [41] pop
      [42] aload_1 v1
      [43] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [25] Var: ...[i], Stack: (empty)
        - [35] Var: ..., Stack: (empty)
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 18, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] ifnull +15 (target=16)
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokespecial #28
        + Methodref [java/util/AbstractCollection.contains (Ljava/lang/Object;)Z]
      [9] ifeq +7 (target=16)
      [12] iconst_1
      [13] goto +4 (target=17)
      [16] iconst_0
      [17] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [16] Var: ..., Stack: (empty)
        - [17] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       add(Ljava/lang/Object;)Z
    Access flags: 0x11
      = public final boolean add(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #9
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #26
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       remove(Ljava/lang/Object;)Z
    Access flags: 0x11
      = public final boolean remove(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #9
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #26
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       addAll(Ljava/util/Collection;)Z
    Access flags: 0x11
      = public final boolean addAll(java.util.Collection)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #9
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #26
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       removeAll(Ljava/util/Collection;)Z
    Access flags: 0x11
      = public final boolean removeAll(java.util.Collection)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #9
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #26
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       retainAll(Ljava/util/Collection;)Z
    Access flags: 0x11
      = public final boolean retainAll(java.util.Collection)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #9
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #26
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       clear()V
    Access flags: 0x11
      = public final void clear()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #9
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #26
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       b()La/a/a/c/bo;
    Access flags: 0x1
      = public a.a.a.c.bo b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/bf.a La/a/a/c/bo;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnonnull +15 (target=21)
      [9] aload_0 v0
      [10] aload_0 v0
      [11] invokevirtual #17
        + Methodref [a/a/a/c/bf.f ()La/a/a/c/bo;]
      [14] dup_x1
      [15] putfield #12
        + Fieldref [a/a/a/c/bf.a La/a/a/c/bo;]
      [18] goto +4 (target=22)
      [21] aload_1 v1
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [21] Var: ...[a:a/a/a/c/bo], Stack: (empty)
        - [22] Var: ..., Stack: [a:a/a/a/c/bo]
  + Method:       f()La/a/a/c/bo;
    Access flags: 0x0
      = a.a.a.c.bo f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 60, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] invokevirtual #19
        + Methodref [a/a/a/c/bf.size ()I]
      [4] lookupswitch (2 offsets, default=43) (target=47)
        0: offset = 28, target = 32
        1: offset = 32, target = 36
        default: offset = 43, target = 47
      [32] invokestatic #22
        + Methodref [a/a/a/c/bo.d ()La/a/a/c/bo;]
      [35] areturn
      [36] aload_0 v0
      [37] invokevirtual #15
        + Methodref [a/a/a/c/bf.a ()La/a/a/c/ea;]
      [40] invokevirtual #25
        + Methodref [a/a/a/c/ea.next ()Ljava/lang/Object;]
      [43] invokestatic #21
        + Methodref [a/a/a/c/bo.a (Ljava/lang/Object;)La/a/a/c/bo;]
      [46] areturn
      [47] new #5
        + Class [a/a/a/c/dj]
      [50] dup
      [51] aload_0 v0
      [52] aload_0 v0
      [53] invokevirtual #20
        + Methodref [a/a/a/c/bf.toArray ()[Ljava/lang/Object;]
      [56] invokespecial #24
        + Methodref [a/a/a/c/dj.<init> (La/a/a/c/bf;[Ljava/lang/Object;)V]
      [59] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [32] Var: ..., Stack: (empty)
        - [36] Var: ..., Stack: (empty)
        - [47] Var: ..., Stack: (empty)
  + Method:       e()Z
    Access flags: 0x400
      = abstract boolean e()
  + Method:       a([Ljava/lang/Object;I)I
    Access flags: 0x0
      = int a(java.lang.Object[],int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 35, locals = 5, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #18
        + Methodref [a/a/a/c/bf.iterator ()Ljava/util/Iterator;]
      [4] astore_3 v3
      [5] aload_3 v3
      [6] invokeinterface #29
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [11] ifeq +22 (target=33)
      [14] aload_3 v3
      [15] invokeinterface #30
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [20] astore v4
      [22] aload_1 v1
      [23] iload_2 v2
      [24] iinc v2, 1
      [27] aload v4
      [29] aastore
      [30] goto -25 (target=5)
      [33] iload_2 v2
      [34] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [5] Var: ...[a:java/util/Iterator], Stack: (empty)
        - [33] Var: -1, Stack: (empty)
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #15
        + Methodref [a/a/a/c/bf.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bg
  Superclass:    a/a/a/c/bh
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.c.bg extends a.a.a.c.bh

Interfaces (count = 0):

Constant Pool (count = 48):
  + String [initialCapacity]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/bg]
  + Class [a/a/a/c/bh]
  + Class [a/a/a/c/dg]
  + Class [a/a/a/c/z]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/c/bg.a [Ljava/lang/Object;]
  + Fieldref [a/a/a/c/bg.b I]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/bg.a (I)V]
  + Methodref [a/a/a/c/bg.a (II)I]
  + Methodref [a/a/a/c/bg.a (Ljava/lang/Object;)La/a/a/c/bg;]
  + Methodref [a/a/a/c/bh.<init> ()V]
  + Methodref [a/a/a/c/dg.b ([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + Methodref [a/a/a/c/z.a (ILjava/lang/String;)I]
  + NameAndType [<init> ()V]
  + NameAndType [a (I)V]
  + NameAndType [a (II)I]
  + NameAndType [a (ILjava/lang/String;)I]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/c/bg;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a [Ljava/lang/Object;]
  + NameAndType [b ([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + NameAndType [b I]
  + Utf8 [()V]
  + Utf8 [(I)V]
  + Utf8 [(II)I]
  + Utf8 [(ILjava/lang/String;)I]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/bg;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/bh;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/Object;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/bg]
  + Utf8 [a/a/a/c/bh]
  + Utf8 [a/a/a/c/dg]
  + Utf8 [a/a/a/c/z]
  + Utf8 [b]
  + Utf8 [initialCapacity]
  + Utf8 [java/lang/Object]

Fields (count = 2):
  + Field:        a [Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object[] a
  + Field:        b I
    Access flags: 0x0
      = int b

Methods (count = 4):
  - Method:       <init>(I)V
    Access flags: 0x0
      = bg(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 25, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #14
        + Methodref [a/a/a/c/bh.<init> ()V]
      [4] iload_1 v1
      [5] ldc #1
        + String [initialCapacity]
      [7] invokestatic #16
        + Methodref [a/a/a/c/z.a (ILjava/lang/String;)I]
      [10] pop
      [11] aload_0 v0
      [12] iload_1 v1
      [13] anewarray #7
        + Class [java/lang/Object]
      [16] putfield #8
        + Fieldref [a/a/a/c/bg.a [Ljava/lang/Object;]
      [19] aload_0 v0
      [20] iconst_0
      [21] putfield #9
        + Fieldref [a/a/a/c/bg.b I]
      [24] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(I)V
    Access flags: 0x2
      = private void a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 30, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/bg.a [Ljava/lang/Object;]
      [4] arraylength
      [5] iload_1 v1
      [6] ificmpge +23 (target=29)
      [9] aload_0 v0
      [10] aload_0 v0
      [11] getfield #8
        + Fieldref [a/a/a/c/bg.a [Ljava/lang/Object;]
      [14] aload_0 v0
      [15] getfield #8
        + Fieldref [a/a/a/c/bg.a [Ljava/lang/Object;]
      [18] arraylength
      [19] iload_1 v1
      [20] invokestatic #12
        + Methodref [a/a/a/c/bg.a (II)I]
      [23] invokestatic #15
        + Methodref [a/a/a/c/dg.b ([Ljava/lang/Object;I)[Ljava/lang/Object;]
      [26] putfield #8
        + Fieldref [a/a/a/c/bg.a [Ljava/lang/Object;]
      [29] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [29] Var: ..., Stack: (empty)
  + Method:       a(Ljava/lang/Object;)La/a/a/c/bg;
    Access flags: 0x1
      = public a.a.a.c.bg a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 34, locals = 2, stack = 5):
      [0] aload_1 v1
      [1] invokestatic #10
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_0 v0
      [6] aload_0 v0
      [7] getfield #9
        + Fieldref [a/a/a/c/bg.b I]
      [10] iconst_1
      [11] iadd
      [12] invokespecial #11
        + Methodref [a/a/a/c/bg.a (I)V]
      [15] aload_0 v0
      [16] getfield #8
        + Fieldref [a/a/a/c/bg.a [Ljava/lang/Object;]
      [19] aload_0 v0
      [20] dup
      [21] getfield #9
        + Fieldref [a/a/a/c/bg.b I]
      [24] dup_x1
      [25] iconst_1
      [26] iadd
      [27] putfield #9
        + Fieldref [a/a/a/c/bg.b I]
      [30] aload_1 v1
      [31] aastore
      [32] aload_0 v0
      [33] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;)La/a/a/c/bh;
    Access flags: 0x1001
      = public synthetic a.a.a.c.bh b(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #13
        + Methodref [a/a/a/c/bg.a (Ljava/lang/Object;)La/a/a/c/bg;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bh
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.bh extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 42):
  + Integer [2147483647]
  + String [cannot store more than MAX_VALUE elements]
  + Class [a/a/a/c/bh]
  + Class [java/lang/AssertionError]
  + Class [java/lang/Integer]
  + Class [java/lang/Object]
  + Class [java/util/Iterator]
  + Methodref [a/a/a/c/bh.b (Ljava/lang/Object;)La/a/a/c/bh;]
  + Methodref [java/lang/AssertionError.<init> (Ljava/lang/Object;)V]
  + Methodref [java/lang/Integer.highestOneBit (I)I]
  + Methodref [java/lang/Object.<init> ()V]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [b (Ljava/lang/Object;)La/a/a/c/bh;]
  + NameAndType [hasNext ()Z]
  + NameAndType [highestOneBit (I)I]
  + NameAndType [next ()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)I]
  + Utf8 [(II)I]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/bh;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/util/Iterator;)La/a/a/c/bh;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bh]
  + Utf8 [b]
  + Utf8 [cannot store more than MAX_VALUE elements]
  + Utf8 [hasNext]
  + Utf8 [highestOneBit]
  + Utf8 [java/lang/AssertionError]
  + Utf8 [java/lang/Integer]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Iterator]
  + Utf8 [next]

Fields (count = 0):

Methods (count = 4):
  + Method:       a(II)I
    Access flags: 0x8
      = static int a(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 45, locals = 3, stack = 3):
      [0] iload_1 v1
      [1] ifge +13 (target=14)
      [4] new #4
        + Class [java/lang/AssertionError]
      [7] dup
      [8] ldc #2
        + String [cannot store more than MAX_VALUE elements]
      [10] invokespecial #9
        + Methodref [java/lang/AssertionError.<init> (Ljava/lang/Object;)V]
      [13] athrow
      [14] iload_0 v0
      [15] iload_0 v0
      [16] iconst_1
      [17] ishr
      [18] iadd
      [19] iconst_1
      [20] iadd
      [21] istore_2 v2
      [22] iload_2 v2
      [23] iload_1 v1
      [24] ificmpge +12 (target=36)
      [27] iload_1 v1
      [28] iconst_1
      [29] isub
      [30] invokestatic #10
        + Methodref [java/lang/Integer.highestOneBit (I)I]
      [33] iconst_1
      [34] ishl
      [35] istore_2 v2
      [36] iload_2 v2
      [37] ifge +6 (target=43)
      [40] ldc #1
        + Integer [2147483647]
      [42] istore_2 v2
      [43] iload_2 v2
      [44] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [14] Var: ..., Stack: (empty)
        - [36] Var: ...[i], Stack: (empty)
        - [43] Var: ..., Stack: (empty)
  - Method:       <init>()V
    Access flags: 0x0
      = bh()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #11
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;)La/a/a/c/bh;
    Access flags: 0x401
      = public abstract a.a.a.c.bh b(java.lang.Object)
  + Method:       a(Ljava/util/Iterator;)La/a/a/c/bh;
    Access flags: 0x1
      = public a.a.a.c.bh a(java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 25, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] invokeinterface #12
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [6] ifeq +17 (target=23)
      [9] aload_0 v0
      [10] aload_1 v1
      [11] invokeinterface #13
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [16] invokevirtual #8
        + Methodref [a/a/a/c/bh.b (Ljava/lang/Object;)La/a/a/c/bh;]
      [19] pop
      [20] goto -20 (target=0)
      [23] aload_0 v0
      [24] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [0] Var: ..., Stack: (empty)
        - [23] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bi
  Superclass:    a/a/a/c/t
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.bi extends a.a.a.c.t

Interfaces (count = 1):
  + Class [java/io/Serializable]

Constant Pool (count = 31):
  + Class [a/a/a/c/bi]
  + Class [a/a/a/c/t]
  + Class [java/io/Serializable]
  + Class [java/lang/UnsupportedOperationException]
  + Fieldref [a/a/a/c/bi.e Ljava/lang/Object;]
  + Fieldref [a/a/a/c/bi.f Ljava/lang/Object;]
  + Methodref [a/a/a/c/t.<init> ()V]
  + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [e Ljava/lang/Object;]
  + NameAndType [f Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a/a/a/c/bi]
  + Utf8 [a/a/a/c/t]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/UnsupportedOperationException]
  + Utf8 [setValue]

Fields (count = 2):
  + Field:        e Ljava/lang/Object;
    Access flags: 0x10
      = final java.lang.Object e
  + Field:        f Ljava/lang/Object;
    Access flags: 0x10
      = final java.lang.Object f

Methods (count = 4):
  - Method:       <init>(Ljava/lang/Object;Ljava/lang/Object;)V
    Access flags: 0x0
      = bi(java.lang.Object,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #7
        + Methodref [a/a/a/c/t.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #5
        + Fieldref [a/a/a/c/bi.e Ljava/lang/Object;]
      [9] aload_0 v0
      [10] aload_2 v2
      [11] putfield #6
        + Fieldref [a/a/a/c/bi.f Ljava/lang/Object;]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       getKey()Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object getKey()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/c/bi.e Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       getValue()Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object getValue()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/bi.f Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       setValue(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object setValue(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #4
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #8
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bj
  Superclass:    a/a/a/c/bs
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.bj extends a.a.a.c.bs

Interfaces (count = 0):

Constant Pool (count = 82):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/bj]
  + Class [a/a/a/c/bk]
  + Class [a/a/a/c/bl]
  + Class [a/a/a/c/bs]
  + Class [a/a/a/c/ch]
  + Class [java/util/EnumMap]
  + Class [java/util/Map$Entry]
  + Fieldref [a/a/a/c/bj.a Ljava/util/EnumMap;]
  + Methodref [a/a/a/a/o.a (Z)V]
  + Methodref [a/a/a/c/bj.<init> (Ljava/util/EnumMap;)V]
  + Methodref [a/a/a/c/bk.<init> (La/a/a/c/bj;)V]
  + Methodref [a/a/a/c/bl.<init> (La/a/a/c/bj;)V]
  + Methodref [a/a/a/c/bs.<init> ()V]
  + Methodref [a/a/a/c/bs.b (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bs;]
  + Methodref [a/a/a/c/bs.i ()La/a/a/c/bs;]
  + Methodref [a/a/a/c/ch.b (Ljava/lang/Iterable;)Ljava/lang/Object;]
  + Methodref [java/util/EnumMap.containsKey (Ljava/lang/Object;)Z]
  + Methodref [java/util/EnumMap.entrySet ()Ljava/util/Set;]
  + Methodref [java/util/EnumMap.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [java/util/EnumMap.isEmpty ()Z]
  + Methodref [java/util/EnumMap.size ()I]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/bj;)V]
  + NameAndType [<init> (Ljava/util/EnumMap;)V]
  + NameAndType [a (Z)V]
  + NameAndType [a Ljava/util/EnumMap;]
  + NameAndType [b (Ljava/lang/Iterable;)Ljava/lang/Object;]
  + NameAndType [b (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bs;]
  + NameAndType [containsKey (Ljava/lang/Object;)Z]
  + NameAndType [entrySet ()Ljava/util/Set;]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [i ()La/a/a/c/bs;]
  + NameAndType [isEmpty ()Z]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bs;]
  + Utf8 [()La/a/a/c/cb;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/c/bj;)Ljava/util/EnumMap;]
  + Utf8 [(La/a/a/c/bj;)V]
  + Utf8 [(Ljava/lang/Iterable;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bs;]
  + Utf8 [(Ljava/util/EnumMap;)La/a/a/c/bs;]
  + Utf8 [(Ljava/util/EnumMap;)V]
  + Utf8 [(Z)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/util/EnumMap;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/bj]
  + Utf8 [a/a/a/c/bk]
  + Utf8 [a/a/a/c/bl]
  + Utf8 [a/a/a/c/bs]
  + Utf8 [a/a/a/c/ch]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [containsKey]
  + Utf8 [e]
  + Utf8 [entrySet]
  + Utf8 [get]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [i]
  + Utf8 [isEmpty]
  + Utf8 [java/util/EnumMap]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [size]

Fields (count = 1):
  + Field:        a Ljava/util/EnumMap;
    Access flags: 0x92
      = private final transient java.util.EnumMap a

Methods (count = 9):
  + Method:       a(Ljava/util/EnumMap;)La/a/a/c/bs;
    Access flags: 0x8
      = static a.a.a.c.bs a(java.util.EnumMap)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 72, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #22
        + Methodref [java/util/EnumMap.size ()I]
      [4] lookupswitch (2 offsets, default=59) (target=63)
        0: offset = 28, target = 32
        1: offset = 32, target = 36
        default: offset = 59, target = 63
      [32] invokestatic #16
        + Methodref [a/a/a/c/bs.i ()La/a/a/c/bs;]
      [35] areturn
      [36] aload_0 v0
      [37] invokevirtual #19
        + Methodref [java/util/EnumMap.entrySet ()Ljava/util/Set;]
      [40] invokestatic #17
        + Methodref [a/a/a/c/ch.b (Ljava/lang/Iterable;)Ljava/lang/Object;]
      [43] checkcast #8
        + Class [java/util/Map$Entry]
      [46] astore_1 v1
      [47] aload_1 v1
      [48] invokeinterface #23
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [53] aload_1 v1
      [54] invokeinterface #24
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [59] invokestatic #15
        + Methodref [a/a/a/c/bs.b (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bs;]
      [62] areturn
      [63] new #2
        + Class [a/a/a/c/bj]
      [66] dup
      [67] aload_0 v0
      [68] invokespecial #11
        + Methodref [a/a/a/c/bj.<init> (Ljava/util/EnumMap;)V]
      [71] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [32] Var: ..., Stack: (empty)
        - [36] Var: ..., Stack: (empty)
        - [63] Var: ..., Stack: (empty)
  - Method:       <init>(Ljava/util/EnumMap;)V
    Access flags: 0x2
      = private bj(java.util.EnumMap)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 25, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #14
        + Methodref [a/a/a/c/bs.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #9
        + Fieldref [a/a/a/c/bj.a Ljava/util/EnumMap;]
      [9] aload_1 v1
      [10] invokevirtual #21
        + Methodref [java/util/EnumMap.isEmpty ()Z]
      [13] ifne +7 (target=20)
      [16] iconst_1
      [17] goto +4 (target=21)
      [20] iconst_0
      [21] invokestatic #10
        + Methodref [a/a/a/a/o.a (Z)V]
      [24] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [20] Var: [a:a/a/a/c/bj][a:java/util/EnumMap], Stack: 
        - [21] Var: ..., Stack: [i]
  + Method:       a()La/a/a/c/cb;
    Access flags: 0x0
      = a.a.a.c.cb a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #3
        + Class [a/a/a/c/bk]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #12
        + Methodref [a/a/a/c/bk.<init> (La/a/a/c/bj;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/bj.a Ljava/util/EnumMap;]
      [4] invokevirtual #22
        + Methodref [java/util/EnumMap.size ()I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       containsKey(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean containsKey(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/bj.a Ljava/util/EnumMap;]
      [4] aload_1 v1
      [5] invokevirtual #18
        + Methodref [java/util/EnumMap.containsKey (Ljava/lang/Object;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       get(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/bj.a Ljava/util/EnumMap;]
      [4] aload_1 v1
      [5] invokevirtual #20
        + Methodref [java/util/EnumMap.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()La/a/a/c/cb;
    Access flags: 0x0
      = a.a.a.c.cb c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #4
        + Class [a/a/a/c/bl]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #13
        + Methodref [a/a/a/c/bl.<init> (La/a/a/c/bj;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/c/bj;)Ljava/util/EnumMap;
    Access flags: 0x1008
      = static synthetic java.util.EnumMap a(a.a.a.c.bj)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/bj.a Ljava/util/EnumMap;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bk
  Superclass:    a/a/a/c/cb
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.bk extends a.a.a.c.cb

Interfaces (count = 0):

Constant Pool (count = 51):
  + Class [a/a/a/c/bj]
  + Class [a/a/a/c/bk]
  + Class [a/a/a/c/cb]
  + Class [a/a/a/c/ck]
  + Class [java/util/EnumMap]
  + Class [java/util/Set]
  + Fieldref [a/a/a/c/bk.a La/a/a/c/bj;]
  + Methodref [a/a/a/c/bj.a (La/a/a/c/bj;)Ljava/util/EnumMap;]
  + Methodref [a/a/a/c/bj.size ()I]
  + Methodref [a/a/a/c/bk.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/cb.<init> ()V]
  + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;)La/a/a/c/ea;]
  + Methodref [java/util/EnumMap.containsKey (Ljava/lang/Object;)Z]
  + Methodref [java/util/EnumMap.keySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
  + NameAndType [<init> ()V]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a (La/a/a/c/bj;)Ljava/util/EnumMap;]
  + NameAndType [a (Ljava/util/Iterator;)La/a/a/c/ea;]
  + NameAndType [a La/a/a/c/bj;]
  + NameAndType [containsKey (Ljava/lang/Object;)Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [keySet ()Ljava/util/Set;]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/c/bj;)Ljava/util/EnumMap;]
  + Utf8 [(La/a/a/c/bj;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Iterator;)La/a/a/c/ea;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bj;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bj]
  + Utf8 [a/a/a/c/bk]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [contains]
  + Utf8 [containsKey]
  + Utf8 [e]
  + Utf8 [iterator]
  + Utf8 [java/util/EnumMap]
  + Utf8 [java/util/Set]
  + Utf8 [keySet]
  + Utf8 [size]

Fields (count = 1):
  + Field:        a La/a/a/c/bj;
    Access flags: 0x1010
      = final synthetic a.a.a.c.bj a

Methods (count = 6):
  - Method:       <init>(La/a/a/c/bj;)V
    Access flags: 0x0
      = bk(a.a.a.c.bj)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #7
        + Fieldref [a/a/a/c/bk.a La/a/a/c/bj;]
      [5] aload_0 v0
      [6] invokespecial #11
        + Methodref [a/a/a/c/cb.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/c/bk.a La/a/a/c/bj;]
      [4] invokestatic #8
        + Methodref [a/a/a/c/bj.a (La/a/a/c/bj;)Ljava/util/EnumMap;]
      [7] aload_1 v1
      [8] invokevirtual #13
        + Methodref [java/util/EnumMap.containsKey (Ljava/lang/Object;)Z]
      [11] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/c/bk.a La/a/a/c/bj;]
      [4] invokevirtual #9
        + Methodref [a/a/a/c/bj.size ()I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x1
      = public a.a.a.c.ea a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/c/bk.a La/a/a/c/bj;]
      [4] invokestatic #8
        + Methodref [a/a/a/c/bj.a (La/a/a/c/bj;)Ljava/util/EnumMap;]
      [7] invokevirtual #14
        + Methodref [java/util/EnumMap.keySet ()Ljava/util/Set;]
      [10] invokeinterface #15
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [15] invokestatic #12
        + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;)La/a/a/c/ea;]
      [18] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #10
        + Methodref [a/a/a/c/bk.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bl
  Superclass:    a/a/a/c/bw
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.bl extends a.a.a.c.bw

Interfaces (count = 0):

Constant Pool (count = 27):
  + Class [a/a/a/c/bl]
  + Class [a/a/a/c/bm]
  + Class [a/a/a/c/bw]
  + Fieldref [a/a/a/c/bl.a La/a/a/c/bj;]
  + Methodref [a/a/a/c/bl.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/bm.<init> (La/a/a/c/bl;)V]
  + Methodref [a/a/a/c/bw.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/bl;)V]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a La/a/a/c/bj;]
  + Utf8 [()La/a/a/c/bs;]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/c/bj;)V]
  + Utf8 [(La/a/a/c/bl;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bj;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bl]
  + Utf8 [a/a/a/c/bm]
  + Utf8 [a/a/a/c/bw]
  + Utf8 [d]
  + Utf8 [iterator]

Fields (count = 1):
  + Field:        a La/a/a/c/bj;
    Access flags: 0x1010
      = final synthetic a.a.a.c.bj a

Methods (count = 4):
  - Method:       <init>(La/a/a/c/bj;)V
    Access flags: 0x0
      = bl(a.a.a.c.bj)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #4
        + Fieldref [a/a/a/c/bl.a La/a/a/c/bj;]
      [5] aload_0 v0
      [6] invokespecial #7
        + Methodref [a/a/a/c/bw.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()La/a/a/c/bs;
    Access flags: 0x0
      = a.a.a.c.bs d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/c/bl.a La/a/a/c/bj;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x1
      = public a.a.a.c.ea a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #2
        + Class [a/a/a/c/bm]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #6
        + Methodref [a/a/a/c/bm.<init> (La/a/a/c/bl;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #5
        + Methodref [a/a/a/c/bl.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bm
  Superclass:    a/a/a/c/ea
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.bm extends a.a.a.c.ea

Interfaces (count = 0):

Constant Pool (count = 67):
  + Class [a/a/a/c/bj]
  + Class [a/a/a/c/bl]
  + Class [a/a/a/c/bm]
  + Class [a/a/a/c/ct]
  + Class [a/a/a/c/ea]
  + Class [java/util/EnumMap]
  + Class [java/util/Iterator]
  + Class [java/util/Map$Entry]
  + Class [java/util/Set]
  + Fieldref [a/a/a/c/bl.a La/a/a/c/bj;]
  + Fieldref [a/a/a/c/bm.a La/a/a/c/bl;]
  + Fieldref [a/a/a/c/bm.b Ljava/util/Iterator;]
  + Methodref [a/a/a/c/bj.a (La/a/a/c/bj;)Ljava/util/EnumMap;]
  + Methodref [a/a/a/c/bm.a ()Ljava/util/Map$Entry;]
  + Methodref [a/a/a/c/ct.a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + Methodref [a/a/a/c/ea.<init> ()V]
  + Methodref [java/util/EnumMap.entrySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
  + NameAndType [<init> ()V]
  + NameAndType [a ()Ljava/util/Map$Entry;]
  + NameAndType [a (La/a/a/c/bj;)Ljava/util/EnumMap;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + NameAndType [a La/a/a/c/bj;]
  + NameAndType [a La/a/a/c/bl;]
  + NameAndType [b Ljava/util/Iterator;]
  + NameAndType [entrySet ()Ljava/util/Set;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [hasNext ()Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [next ()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Map$Entry;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/c/bj;)Ljava/util/EnumMap;]
  + Utf8 [(La/a/a/c/bl;)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bj;]
  + Utf8 [La/a/a/c/bl;]
  + Utf8 [Ljava/util/Iterator;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bj]
  + Utf8 [a/a/a/c/bl]
  + Utf8 [a/a/a/c/bm]
  + Utf8 [a/a/a/c/ct]
  + Utf8 [a/a/a/c/ea]
  + Utf8 [b]
  + Utf8 [entrySet]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [hasNext]
  + Utf8 [iterator]
  + Utf8 [java/util/EnumMap]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [java/util/Set]
  + Utf8 [next]

Fields (count = 2):
  + Field:        b Ljava/util/Iterator;
    Access flags: 0x12
      = private final java.util.Iterator b
  + Field:        a La/a/a/c/bl;
    Access flags: 0x1010
      = final synthetic a.a.a.c.bl a

Methods (count = 4):
  - Method:       <init>(La/a/a/c/bl;)V
    Access flags: 0x0
      = bm(a.a.a.c.bl)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 32, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #11
        + Fieldref [a/a/a/c/bm.a La/a/a/c/bl;]
      [5] aload_0 v0
      [6] invokespecial #16
        + Methodref [a/a/a/c/ea.<init> ()V]
      [9] aload_0 v0
      [10] aload_0 v0
      [11] getfield #11
        + Fieldref [a/a/a/c/bm.a La/a/a/c/bl;]
      [14] getfield #10
        + Fieldref [a/a/a/c/bl.a La/a/a/c/bj;]
      [17] invokestatic #13
        + Methodref [a/a/a/c/bj.a (La/a/a/c/bj;)Ljava/util/EnumMap;]
      [20] invokevirtual #17
        + Methodref [java/util/EnumMap.entrySet ()Ljava/util/Set;]
      [23] invokeinterface #22
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [28] putfield #12
        + Fieldref [a/a/a/c/bm.b Ljava/util/Iterator;]
      [31] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hasNext()Z
    Access flags: 0x1
      = public boolean hasNext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/bm.b Ljava/util/Iterator;]
      [4] invokeinterface #18
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/Map$Entry;
    Access flags: 0x1
      = public java.util.Map$Entry a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 29, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/c/bm.b Ljava/util/Iterator;]
      [4] invokeinterface #19
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [9] checkcast #8
        + Class [java/util/Map$Entry]
      [12] astore_1 v1
      [13] aload_1 v1
      [14] invokeinterface #20
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [19] aload_1 v1
      [20] invokeinterface #21
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [25] invokestatic #15
        + Methodref [a/a/a/c/ct.a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;]
      [28] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x1001
      = public synthetic java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #14
        + Methodref [a/a/a/c/bm.a ()Ljava/util/Map$Entry;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bn
  Superclass:    a/a/a/c/cb
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.bn extends a.a.a.c.cb

Interfaces (count = 0):

Constant Pool (count = 76):
  + Class [a/a/a/c/bn]
  + Class [a/a/a/c/cb]
  + Class [a/a/a/c/ch]
  + Class [a/a/a/c/ck]
  + Class [java/util/EnumSet]
  + Fieldref [a/a/a/c/bn.a Ljava/util/EnumSet;]
  + Fieldref [a/a/a/c/bn.b I]
  + Methodref [a/a/a/c/bn.<init> (Ljava/util/EnumSet;)V]
  + Methodref [a/a/a/c/bn.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/cb.<init> ()V]
  + Methodref [a/a/a/c/cb.a (Ljava/lang/Object;)La/a/a/c/cb;]
  + Methodref [a/a/a/c/cb.g ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/ch.b (Ljava/lang/Iterable;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;)La/a/a/c/ea;]
  + Methodref [java/util/EnumSet.contains (Ljava/lang/Object;)Z]
  + Methodref [java/util/EnumSet.containsAll (Ljava/util/Collection;)Z]
  + Methodref [java/util/EnumSet.equals (Ljava/lang/Object;)Z]
  + Methodref [java/util/EnumSet.hashCode ()I]
  + Methodref [java/util/EnumSet.isEmpty ()Z]
  + Methodref [java/util/EnumSet.iterator ()Ljava/util/Iterator;]
  + Methodref [java/util/EnumSet.size ()I]
  + Methodref [java/util/EnumSet.toString ()Ljava/lang/String;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/util/EnumSet;)V]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/c/cb;]
  + NameAndType [a (Ljava/util/Iterator;)La/a/a/c/ea;]
  + NameAndType [a Ljava/util/EnumSet;]
  + NameAndType [b (Ljava/lang/Iterable;)Ljava/lang/Object;]
  + NameAndType [b I]
  + NameAndType [contains (Ljava/lang/Object;)Z]
  + NameAndType [containsAll (Ljava/util/Collection;)Z]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [g ()La/a/a/c/cb;]
  + NameAndType [hashCode ()I]
  + NameAndType [isEmpty ()Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [size ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/cb;]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Iterable;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/cb;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Collection;)Z]
  + Utf8 [(Ljava/util/EnumSet;)La/a/a/c/cb;]
  + Utf8 [(Ljava/util/EnumSet;)V]
  + Utf8 [(Ljava/util/Iterator;)La/a/a/c/ea;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [Ljava/util/EnumSet;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bn]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [a/a/a/c/ch]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [b]
  + Utf8 [contains]
  + Utf8 [containsAll]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [g]
  + Utf8 [hashCode]
  + Utf8 [isEmpty]
  + Utf8 [iterator]
  + Utf8 [java/util/EnumSet]
  + Utf8 [size]
  + Utf8 [toString]

Fields (count = 2):
  + Field:        a Ljava/util/EnumSet;
    Access flags: 0x92
      = private final transient java.util.EnumSet a
  + Field:        b I
    Access flags: 0x82
      = private transient int b

Methods (count = 12):
  + Method:       a(Ljava/util/EnumSet;)La/a/a/c/cb;
    Access flags: 0x8
      = static a.a.a.c.cb a(java.util.EnumSet)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 53, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #21
        + Methodref [java/util/EnumSet.size ()I]
      [4] lookupswitch (2 offsets, default=40) (target=44)
        0: offset = 28, target = 32
        1: offset = 32, target = 36
        default: offset = 40, target = 44
      [32] invokestatic #12
        + Methodref [a/a/a/c/cb.g ()La/a/a/c/cb;]
      [35] areturn
      [36] aload_0 v0
      [37] invokestatic #13
        + Methodref [a/a/a/c/ch.b (Ljava/lang/Iterable;)Ljava/lang/Object;]
      [40] invokestatic #11
        + Methodref [a/a/a/c/cb.a (Ljava/lang/Object;)La/a/a/c/cb;]
      [43] areturn
      [44] new #1
        + Class [a/a/a/c/bn]
      [47] dup
      [48] aload_0 v0
      [49] invokespecial #8
        + Methodref [a/a/a/c/bn.<init> (Ljava/util/EnumSet;)V]
      [52] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [32] Var: ..., Stack: (empty)
        - [36] Var: ..., Stack: (empty)
        - [44] Var: ..., Stack: (empty)
  - Method:       <init>(Ljava/util/EnumSet;)V
    Access flags: 0x2
      = private bn(java.util.EnumSet)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #10
        + Methodref [a/a/a/c/cb.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #6
        + Fieldref [a/a/a/c/bn.a Ljava/util/EnumSet;]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x1
      = public a.a.a.c.ea a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/bn.a Ljava/util/EnumSet;]
      [4] invokevirtual #20
        + Methodref [java/util/EnumSet.iterator ()Ljava/util/Iterator;]
      [7] invokestatic #14
        + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;)La/a/a/c/ea;]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/bn.a Ljava/util/EnumSet;]
      [4] invokevirtual #21
        + Methodref [java/util/EnumSet.size ()I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/bn.a Ljava/util/EnumSet;]
      [4] aload_1 v1
      [5] invokevirtual #15
        + Methodref [java/util/EnumSet.contains (Ljava/lang/Object;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       containsAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean containsAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/bn.a Ljava/util/EnumSet;]
      [4] aload_1 v1
      [5] invokevirtual #16
        + Methodref [java/util/EnumSet.containsAll (Ljava/util/Collection;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/bn.a Ljava/util/EnumSet;]
      [4] invokevirtual #19
        + Methodref [java/util/EnumSet.isEmpty ()Z]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] aload_0 v0
      [2] ifacmpeq +14 (target=16)
      [5] aload_0 v0
      [6] getfield #6
        + Fieldref [a/a/a/c/bn.a Ljava/util/EnumSet;]
      [9] aload_1 v1
      [10] invokevirtual #17
        + Methodref [java/util/EnumSet.equals (Ljava/lang/Object;)Z]
      [13] ifeq +7 (target=20)
      [16] iconst_1
      [17] goto +4 (target=21)
      [20] iconst_0
      [21] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [16] Var: ..., Stack: (empty)
        - [20] Var: ..., Stack: (empty)
        - [21] Var: ..., Stack: [i]
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 26, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/c/bn.b I]
      [4] istore_1 v1
      [5] iload_1 v1
      [6] ifne +18 (target=24)
      [9] aload_0 v0
      [10] aload_0 v0
      [11] getfield #6
        + Fieldref [a/a/a/c/bn.a Ljava/util/EnumSet;]
      [14] invokevirtual #18
        + Methodref [java/util/EnumSet.hashCode ()I]
      [17] dup_x1
      [18] putfield #7
        + Fieldref [a/a/a/c/bn.b I]
      [21] goto +4 (target=25)
      [24] iload_1 v1
      [25] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [24] Var: ...[i], Stack: (empty)
        - [25] Var: ..., Stack: [i]
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/bn.a Ljava/util/EnumSet;]
      [4] invokevirtual #22
        + Methodref [java/util/EnumSet.toString ()Ljava/lang/String;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/c/bn.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bo
  Superclass:    a/a/a/c/bf
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.bo extends a.a.a.c.bf

Interfaces (count = 2):
  + Class [java/util/List]
  + Class [java/util/RandomAccess]

Constant Pool (count = 163):
  + Class [[Ljava/lang/Object;]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/bf]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/bp]
  + Class [a/a/a/c/bq]
  + Class [a/a/a/c/br]
  + Class [a/a/a/c/cs]
  + Class [a/a/a/c/dg]
  + Class [a/a/a/c/dk]
  + Class [a/a/a/c/dw]
  + Class [java/lang/Object]
  + Class [java/lang/UnsupportedOperationException]
  + Class [java/util/Collection]
  + Class [java/util/List]
  + Class [java/util/RandomAccess]
  + Fieldref [a/a/a/c/bo.a La/a/a/c/bo;]
  + Fieldref [a/a/a/c/dg.a [Ljava/lang/Object;]
  + Methodref [[Ljava/lang/Object;.clone ()Ljava/lang/Object;]
  + Methodref [a/a/a/a/o.a (III)V]
  + Methodref [a/a/a/c/bf.<init> ()V]
  + Methodref [a/a/a/c/bf.b ()La/a/a/c/bo;]
  + Methodref [a/a/a/c/bo.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/bo.a (I)La/a/a/c/eb;]
  + Methodref [a/a/a/c/bo.a (II)La/a/a/c/bo;]
  + Methodref [a/a/a/c/bo.a (Ljava/lang/Object;)La/a/a/c/bo;]
  + Methodref [a/a/a/c/bo.b (II)La/a/a/c/bo;]
  + Methodref [a/a/a/c/bo.b ([Ljava/lang/Object;)La/a/a/c/bo;]
  + Methodref [a/a/a/c/bo.b ([Ljava/lang/Object;I)La/a/a/c/bo;]
  + Methodref [a/a/a/c/bo.c ([Ljava/lang/Object;)La/a/a/c/bo;]
  + Methodref [a/a/a/c/bo.d ()La/a/a/c/bo;]
  + Methodref [a/a/a/c/bo.e ()Z]
  + Methodref [a/a/a/c/bo.g ()La/a/a/c/eb;]
  + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
  + Methodref [a/a/a/c/bo.indexOf (Ljava/lang/Object;)I]
  + Methodref [a/a/a/c/bo.size ()I]
  + Methodref [a/a/a/c/bo.toArray ()[Ljava/lang/Object;]
  + Methodref [a/a/a/c/bp.<init> (La/a/a/c/bo;II)V]
  + Methodref [a/a/a/c/bq.<init> ()V]
  + Methodref [a/a/a/c/br.<init> (La/a/a/c/bo;II)V]
  + Methodref [a/a/a/c/cs.a (Ljava/util/List;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/cs.b (Ljava/util/List;Ljava/lang/Object;)I]
  + Methodref [a/a/a/c/cs.c (Ljava/util/List;Ljava/lang/Object;)I]
  + Methodref [a/a/a/c/dg.a ([Ljava/lang/Object;)[Ljava/lang/Object;]
  + Methodref [a/a/a/c/dg.b ([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + Methodref [a/a/a/c/dk.<init> ([Ljava/lang/Object;)V]
  + Methodref [a/a/a/c/dw.<init> (Ljava/lang/Object;)V]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
  + InterfaceMethodref [java/util/Collection.toArray ()[Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/bo;II)V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> ([Ljava/lang/Object;)V]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a (I)La/a/a/c/eb;]
  + NameAndType [a (II)La/a/a/c/bo;]
  + NameAndType [a (III)V]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/c/bo;]
  + NameAndType [a (Ljava/util/List;Ljava/lang/Object;)Z]
  + NameAndType [a ([Ljava/lang/Object;)[Ljava/lang/Object;]
  + NameAndType [a La/a/a/c/bo;]
  + NameAndType [a [Ljava/lang/Object;]
  + NameAndType [b ()La/a/a/c/bo;]
  + NameAndType [b (II)La/a/a/c/bo;]
  + NameAndType [b (Ljava/util/List;Ljava/lang/Object;)I]
  + NameAndType [b ([Ljava/lang/Object;)La/a/a/c/bo;]
  + NameAndType [b ([Ljava/lang/Object;I)La/a/a/c/bo;]
  + NameAndType [b ([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + NameAndType [c (Ljava/util/List;Ljava/lang/Object;)I]
  + NameAndType [c ([Ljava/lang/Object;)La/a/a/c/bo;]
  + NameAndType [clone ()Ljava/lang/Object;]
  + NameAndType [d ()La/a/a/c/bo;]
  + NameAndType [e ()Z]
  + NameAndType [g ()La/a/a/c/eb;]
  + NameAndType [get (I)Ljava/lang/Object;]
  + NameAndType [hashCode ()I]
  + NameAndType [indexOf (Ljava/lang/Object;)I]
  + NameAndType [size ()I]
  + NameAndType [toArray ()[Ljava/lang/Object;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bo;]
  + Utf8 [()La/a/a/c/bq;]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()La/a/a/c/eb;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/ListIterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [()[Ljava/lang/Object;]
  + Utf8 [(I)La/a/a/c/eb;]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(I)Ljava/util/ListIterator;]
  + Utf8 [(II)La/a/a/c/bo;]
  + Utf8 [(II)Ljava/util/List;]
  + Utf8 [(III)V]
  + Utf8 [(ILjava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(ILjava/lang/Object;)V]
  + Utf8 [(ILjava/util/Collection;)Z]
  + Utf8 [(La/a/a/c/bo;II)V]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/bo;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Collection;)La/a/a/c/bo;]
  + Utf8 [(Ljava/util/List;Ljava/lang/Object;)I]
  + Utf8 [(Ljava/util/List;Ljava/lang/Object;)Z]
  + Utf8 [([Ljava/lang/Object;)La/a/a/c/bo;]
  + Utf8 [([Ljava/lang/Object;)V]
  + Utf8 [([Ljava/lang/Object;)[Ljava/lang/Object;]
  + Utf8 [([Ljava/lang/Object;I)I]
  + Utf8 [([Ljava/lang/Object;I)La/a/a/c/bo;]
  + Utf8 [([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bo;]
  + Utf8 [Ljava/lang/Deprecated;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/Object;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/bf]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/bp]
  + Utf8 [a/a/a/c/bq]
  + Utf8 [a/a/a/c/br]
  + Utf8 [a/a/a/c/cs]
  + Utf8 [a/a/a/c/dg]
  + Utf8 [a/a/a/c/dk]
  + Utf8 [a/a/a/c/dw]
  + Utf8 [add]
  + Utf8 [addAll]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clone]
  + Utf8 [contains]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [g]
  + Utf8 [get]
  + Utf8 [h]
  + Utf8 [hashCode]
  + Utf8 [indexOf]
  + Utf8 [iterator]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/UnsupportedOperationException]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/List]
  + Utf8 [java/util/RandomAccess]
  + Utf8 [lastIndexOf]
  + Utf8 [listIterator]
  + Utf8 [remove]
  + Utf8 [set]
  + Utf8 [size]
  + Utf8 [subList]
  + Utf8 [toArray]

Fields (count = 1):
  + Field:        a La/a/a/c/bo;
    Access flags: 0x1a
      = private static final a.a.a.c.bo a

Methods (count = 30):
  + Method:       d()La/a/a/c/bo;
    Access flags: 0x9
      = public static a.a.a.c.bo d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] getstatic #17
        + Fieldref [a/a/a/c/bo.a La/a/a/c/bo;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)La/a/a/c/bo;
    Access flags: 0x9
      = public static a.a.a.c.bo a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #11
        + Class [a/a/a/c/dw]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #47
        + Methodref [a/a/a/c/dw.<init> (Ljava/lang/Object;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Collection;)La/a/a/c/bo;
    Access flags: 0x9
      = public static a.a.a.c.bo a(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 44, locals = 2, stack = 1):
      [0] aload_0 v0
      [1] instanceof #3
        + Class [a/a/a/c/bf]
      [4] ifeq +30 (target=34)
      [7] aload_0 v0
      [8] checkcast #3
        + Class [a/a/a/c/bf]
      [11] invokevirtual #22
        + Methodref [a/a/a/c/bf.b ()La/a/a/c/bo;]
      [14] astore_1 v1
      [15] aload_1 v1
      [16] invokevirtual #32
        + Methodref [a/a/a/c/bo.e ()Z]
      [19] ifeq +13 (target=32)
      [22] aload_1 v1
      [23] invokevirtual #37
        + Methodref [a/a/a/c/bo.toArray ()[Ljava/lang/Object;]
      [26] invokestatic #28
        + Methodref [a/a/a/c/bo.b ([Ljava/lang/Object;)La/a/a/c/bo;]
      [29] goto +4 (target=33)
      [32] aload_1 v1
      [33] areturn
      [34] aload_0 v0
      [35] invokeinterface #50
        + InterfaceMethodref [java/util/Collection.toArray ()[Ljava/lang/Object;]
      [40] invokestatic #30
        + Methodref [a/a/a/c/bo.c ([Ljava/lang/Object;)La/a/a/c/bo;]
      [43] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [32] Var: ...[a:a/a/a/c/bo], Stack: (empty)
        - [33] Var: ..., Stack: [a:a/a/a/c/bo]
        - [34] Var: -1, Stack: (empty)
  + Method:       a([Ljava/lang/Object;)La/a/a/c/bo;
    Access flags: 0x9
      = public static a.a.a.c.bo a(java.lang.Object[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 61, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] arraylength
      [2] lookupswitch (2 offsets, default=41) (target=43)
        0: offset = 26, target = 28
        1: offset = 30, target = 32
        default: offset = 41, target = 43
      [28] invokestatic #31
        + Methodref [a/a/a/c/bo.d ()La/a/a/c/bo;]
      [31] areturn
      [32] new #11
        + Class [a/a/a/c/dw]
      [35] dup
      [36] aload_0 v0
      [37] iconst_0
      [38] aaload
      [39] invokespecial #47
        + Methodref [a/a/a/c/dw.<init> (Ljava/lang/Object;)V]
      [42] areturn
      [43] new #10
        + Class [a/a/a/c/dk]
      [46] dup
      [47] aload_0 v0
      [48] invokevirtual #19
        + Methodref [[Ljava/lang/Object;.clone ()Ljava/lang/Object;]
      [51] checkcast #1
        + Class [[Ljava/lang/Object;]
      [54] invokestatic #44
        + Methodref [a/a/a/c/dg.a ([Ljava/lang/Object;)[Ljava/lang/Object;]
      [57] invokespecial #46
        + Methodref [a/a/a/c/dk.<init> ([Ljava/lang/Object;)V]
      [60] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [28] Var: ..., Stack: (empty)
        - [32] Var: ..., Stack: (empty)
        - [43] Var: ..., Stack: (empty)
  + Method:       c([Ljava/lang/Object;)La/a/a/c/bo;
    Access flags: 0x8a
      = private static varargs a.a.a.c.bo c(java.lang.Object[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokestatic #44
        + Methodref [a/a/a/c/dg.a ([Ljava/lang/Object;)[Ljava/lang/Object;]
      [4] invokestatic #28
        + Methodref [a/a/a/c/bo.b ([Ljava/lang/Object;)La/a/a/c/bo;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b([Ljava/lang/Object;)La/a/a/c/bo;
    Access flags: 0x8
      = static a.a.a.c.bo b(java.lang.Object[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] aload_0 v0
      [2] arraylength
      [3] invokestatic #29
        + Methodref [a/a/a/c/bo.b ([Ljava/lang/Object;I)La/a/a/c/bo;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b([Ljava/lang/Object;I)La/a/a/c/bo;
    Access flags: 0x8
      = static a.a.a.c.bo b(java.lang.Object[],int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 66, locals = 3, stack = 4):
      [0] iload_1 v1
      [1] lookupswitch (2 offsets, default=44) (target=45)
        0: offset = 27, target = 28
        1: offset = 31, target = 32
        default: offset = 44, target = 45
      [28] invokestatic #31
        + Methodref [a/a/a/c/bo.d ()La/a/a/c/bo;]
      [31] areturn
      [32] new #11
        + Class [a/a/a/c/dw]
      [35] dup
      [36] aload_0 v0
      [37] iconst_0
      [38] aaload
      [39] invokespecial #47
        + Methodref [a/a/a/c/dw.<init> (Ljava/lang/Object;)V]
      [42] astore_2 v2
      [43] aload_2 v2
      [44] areturn
      [45] iload_1 v1
      [46] aload_0 v0
      [47] arraylength
      [48] ificmpge +9 (target=57)
      [51] aload_0 v0
      [52] iload_1 v1
      [53] invokestatic #45
        + Methodref [a/a/a/c/dg.b ([Ljava/lang/Object;I)[Ljava/lang/Object;]
      [56] astore_0 v0
      [57] new #10
        + Class [a/a/a/c/dk]
      [60] dup
      [61] aload_0 v0
      [62] invokespecial #46
        + Methodref [a/a/a/c/dk.<init> ([Ljava/lang/Object;)V]
      [65] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [28] Var: ..., Stack: (empty)
        - [32] Var: ..., Stack: (empty)
        - [45] Var: ..., Stack: (empty)
        - [57] Var: ..., Stack: (empty)
  - Method:       <init>()V
    Access flags: 0x0
      = bo()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #21
        + Methodref [a/a/a/c/bf.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x1
      = public a.a.a.c.ea a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #33
        + Methodref [a/a/a/c/bo.g ()La/a/a/c/eb;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       g()La/a/a/c/eb;
    Access flags: 0x1
      = public a.a.a.c.eb g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] iconst_0
      [2] invokevirtual #24
        + Methodref [a/a/a/c/bo.a (I)La/a/a/c/eb;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(I)La/a/a/c/eb;
    Access flags: 0x1
      = public a.a.a.c.eb a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 2, stack = 5):
      [0] new #5
        + Class [a/a/a/c/bp]
      [3] dup
      [4] aload_0 v0
      [5] aload_0 v0
      [6] invokevirtual #36
        + Methodref [a/a/a/c/bo.size ()I]
      [9] iload_1 v1
      [10] invokespecial #38
        + Methodref [a/a/a/c/bp.<init> (La/a/a/c/bo;II)V]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       indexOf(Ljava/lang/Object;)I
    Access flags: 0x1
      = public int indexOf(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 14, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] ifnonnull +7 (target=8)
      [4] iconst_m1
      [5] goto +8 (target=13)
      [8] aload_0 v0
      [9] aload_1 v1
      [10] invokestatic #42
        + Methodref [a/a/a/c/cs.b (Ljava/util/List;Ljava/lang/Object;)I]
      [13] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [8] Var: ..., Stack: (empty)
        - [13] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       lastIndexOf(Ljava/lang/Object;)I
    Access flags: 0x1
      = public int lastIndexOf(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 14, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] ifnonnull +7 (target=8)
      [4] iconst_m1
      [5] goto +8 (target=13)
      [8] aload_0 v0
      [9] aload_1 v1
      [10] invokestatic #43
        + Methodref [a/a/a/c/cs.c (Ljava/util/List;Ljava/lang/Object;)I]
      [13] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [8] Var: ..., Stack: (empty)
        - [13] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 14, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #35
        + Methodref [a/a/a/c/bo.indexOf (Ljava/lang/Object;)I]
      [5] iflt +7 (target=12)
      [8] iconst_1
      [9] goto +4 (target=13)
      [12] iconst_0
      [13] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [12] Var: ..., Stack: (empty)
        - [13] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(II)La/a/a/c/bo;
    Access flags: 0x1
      = public a.a.a.c.bo a(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 60, locals = 4, stack = 3):
      [0] iload_1 v1
      [1] iload_2 v2
      [2] aload_0 v0
      [3] invokevirtual #36
        + Methodref [a/a/a/c/bo.size ()I]
      [6] invokestatic #20
        + Methodref [a/a/a/a/o.a (III)V]
      [9] iload_2 v2
      [10] iload_1 v1
      [11] isub
      [12] istore_3 v3
      [13] iload_3 v3
      [14] lookupswitch (2 offsets, default=39) (target=53)
        0: offset = 26, target = 40
        1: offset = 30, target = 44
        default: offset = 39, target = 53
      [40] invokestatic #31
        + Methodref [a/a/a/c/bo.d ()La/a/a/c/bo;]
      [43] areturn
      [44] aload_0 v0
      [45] iload_1 v1
      [46] invokevirtual #34
        + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
      [49] invokestatic #26
        + Methodref [a/a/a/c/bo.a (Ljava/lang/Object;)La/a/a/c/bo;]
      [52] areturn
      [53] aload_0 v0
      [54] iload_1 v1
      [55] iload_2 v2
      [56] invokevirtual #27
        + Methodref [a/a/a/c/bo.b (II)La/a/a/c/bo;]
      [59] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [40] Var: ...[i], Stack: (empty)
        - [44] Var: ..., Stack: (empty)
        - [53] Var: ..., Stack: (empty)
  + Method:       b(II)La/a/a/c/bo;
    Access flags: 0x0
      = a.a.a.c.bo b(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 3, stack = 6):
      [0] new #7
        + Class [a/a/a/c/br]
      [3] dup
      [4] aload_0 v0
      [5] iload_1 v1
      [6] iload_2 v2
      [7] iload_1 v1
      [8] isub
      [9] invokespecial #40
        + Methodref [a/a/a/c/br.<init> (La/a/a/c/bo;II)V]
      [12] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       addAll(ILjava/util/Collection;)Z
    Access flags: 0x11
      = public final boolean addAll(int,java.util.Collection)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 3, stack = 2):
      [0] new #13
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #49
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       set(ILjava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object set(int,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 3, stack = 2):
      [0] new #13
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #49
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       add(ILjava/lang/Object;)V
    Access flags: 0x11
      = public final void add(int,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 3, stack = 2):
      [0] new #13
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #49
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       remove(I)Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object remove(int)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #13
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #49
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       b()La/a/a/c/bo;
    Access flags: 0x11
      = public final a.a.a.c.bo b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a([Ljava/lang/Object;I)I
    Access flags: 0x0
      = int a(java.lang.Object[],int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 36, locals = 5, stack = 4):
      [0] aload_0 v0
      [1] invokevirtual #36
        + Methodref [a/a/a/c/bo.size ()I]
      [4] istore_3 v3
      [5] iconst_0
      [6] istore v4
      [8] iload v4
      [10] iload_3 v3
      [11] ificmpge +21 (target=32)
      [14] aload_1 v1
      [15] iload_2 v2
      [16] iload v4
      [18] iadd
      [19] aload_0 v0
      [20] iload v4
      [22] invokevirtual #34
        + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
      [25] aastore
      [26] iinc v4, 1
      [29] goto -21 (target=8)
      [32] iload_2 v2
      [33] iload_3 v3
      [34] iadd
      [35] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [8] Var: ...[i][i], Stack: (empty)
        - [32] Var: -1, Stack: (empty)
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #41
        + Methodref [a/a/a/c/cs.a (Ljava/util/List;Ljava/lang/Object;)Z]
      [5] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 42, locals = 4, stack = 3):
      [0] iconst_1
      [1] istore_1 v1
      [2] aload_0 v0
      [3] invokevirtual #36
        + Methodref [a/a/a/c/bo.size ()I]
      [6] istore_2 v2
      [7] iconst_0
      [8] istore_3 v3
      [9] iload_3 v3
      [10] iload_2 v2
      [11] ificmpge +29 (target=40)
      [14] bipush 31
      [16] iload_1 v1
      [17] imul
      [18] aload_0 v0
      [19] iload_3 v3
      [20] invokevirtual #34
        + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
      [23] invokevirtual #48
        + Methodref [java/lang/Object.hashCode ()I]
      [26] iadd
      [27] istore_1 v1
      [28] iload_1 v1
      [29] iconst_m1
      [30] ixor
      [31] iconst_m1
      [32] ixor
      [33] istore_1 v1
      [34] iinc v3, 1
      [37] goto -28 (target=9)
      [40] iload_1 v1
      [41] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [9] Var: ...[i][i][i], Stack: (empty)
        - [40] Var: -1, Stack: (empty)
  + Method:       h()La/a/a/c/bq;
    Access flags: 0x9
      = public static a.a.a.c.bq h()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 0, stack = 2):
      [0] new #6
        + Class [a/a/a/c/bq]
      [3] dup
      [4] invokespecial #39
        + Methodref [a/a/a/c/bq.<init> ()V]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #23
        + Methodref [a/a/a/c/bo.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       subList(II)Ljava/util/List;
    Access flags: 0x1001
      = public synthetic java.util.List subList(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] iload_2 v2
      [3] invokevirtual #25
        + Methodref [a/a/a/c/bo.a (II)La/a/a/c/bo;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       listIterator(I)Ljava/util/ListIterator;
    Access flags: 0x1001
      = public synthetic java.util.ListIterator listIterator(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] invokevirtual #24
        + Methodref [a/a/a/c/bo.a (I)La/a/a/c/eb;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       listIterator()Ljava/util/ListIterator;
    Access flags: 0x1001
      = public synthetic java.util.ListIterator listIterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #33
        + Methodref [a/a/a/c/bo.g ()La/a/a/c/eb;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 0, stack = 3):
      [0] new #10
        + Class [a/a/a/c/dk]
      [3] dup
      [4] getstatic #18
        + Fieldref [a/a/a/c/dg.a [Ljava/lang/Object;]
      [7] invokespecial #46
        + Methodref [a/a/a/c/dk.<init> ([Ljava/lang/Object;)V]
      [10] putstatic #17
        + Fieldref [a/a/a/c/bo.a La/a/a/c/bo;]
      [13] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bp
  Superclass:    a/a/a/c/a
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.bp extends a.a.a.c.a

Interfaces (count = 0):

Constant Pool (count = 21):
  + Class [a/a/a/c/a]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/bp]
  + Fieldref [a/a/a/c/bp.a La/a/a/c/bo;]
  + Methodref [a/a/a/c/a.<init> (II)V]
  + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
  + NameAndType [<init> (II)V]
  + NameAndType [a La/a/a/c/bo;]
  + NameAndType [get (I)Ljava/lang/Object;]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(II)V]
  + Utf8 [(La/a/a/c/bo;II)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bo;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/a]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/bp]
  + Utf8 [get]

Fields (count = 1):
  + Field:        a La/a/a/c/bo;
    Access flags: 0x1010
      = final synthetic a.a.a.c.bo a

Methods (count = 2):
  - Method:       <init>(La/a/a/c/bo;II)V
    Access flags: 0x0
      = bp(a.a.a.c.bo,int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #4
        + Fieldref [a/a/a/c/bp.a La/a/a/c/bo;]
      [5] aload_0 v0
      [6] iload_2 v2
      [7] iload_3 v3
      [8] invokespecial #5
        + Methodref [a/a/a/c/a.<init> (II)V]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(I)Ljava/lang/Object;
    Access flags: 0x4
      = protected java.lang.Object a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/c/bp.a La/a/a/c/bo;]
      [4] iload_1 v1
      [5] invokevirtual #6
        + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bq
  Superclass:    a/a/a/c/bg
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.c.bq extends a.a.a.c.bg

Interfaces (count = 0):

Constant Pool (count = 40):
  + Class [a/a/a/c/bg]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/bq]
  + Fieldref [a/a/a/c/bq.a [Ljava/lang/Object;]
  + Fieldref [a/a/a/c/bq.b I]
  + Methodref [a/a/a/c/bg.<init> (I)V]
  + Methodref [a/a/a/c/bg.a (Ljava/lang/Object;)La/a/a/c/bg;]
  + Methodref [a/a/a/c/bg.a (Ljava/util/Iterator;)La/a/a/c/bh;]
  + Methodref [a/a/a/c/bo.b ([Ljava/lang/Object;I)La/a/a/c/bo;]
  + Methodref [a/a/a/c/bq.<init> (I)V]
  + Methodref [a/a/a/c/bq.b (Ljava/util/Iterator;)La/a/a/c/bq;]
  + Methodref [a/a/a/c/bq.c (Ljava/lang/Object;)La/a/a/c/bq;]
  + NameAndType [<init> (I)V]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/c/bg;]
  + NameAndType [a (Ljava/util/Iterator;)La/a/a/c/bh;]
  + NameAndType [a [Ljava/lang/Object;]
  + NameAndType [b (Ljava/util/Iterator;)La/a/a/c/bq;]
  + NameAndType [b ([Ljava/lang/Object;I)La/a/a/c/bo;]
  + NameAndType [b I]
  + NameAndType [c (Ljava/lang/Object;)La/a/a/c/bq;]
  + Utf8 [()La/a/a/c/bo;]
  + Utf8 [()V]
  + Utf8 [(I)V]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/bg;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/bh;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/bq;]
  + Utf8 [(Ljava/util/Iterator;)La/a/a/c/bh;]
  + Utf8 [(Ljava/util/Iterator;)La/a/a/c/bq;]
  + Utf8 [([Ljava/lang/Object;I)La/a/a/c/bo;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [[Ljava/lang/Object;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bg]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/bq]
  + Utf8 [b]
  + Utf8 [c]

Fields (count = 0):

Methods (count = 8):
  - Method:       <init>()V
    Access flags: 0x1
      = public bq()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] iconst_4
      [2] invokespecial #10
        + Methodref [a/a/a/c/bq.<init> (I)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(I)V
    Access flags: 0x0
      = bq(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] invokespecial #6
        + Methodref [a/a/a/c/bg.<init> (I)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(Ljava/lang/Object;)La/a/a/c/bq;
    Access flags: 0x1
      = public a.a.a.c.bq c(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #7
        + Methodref [a/a/a/c/bg.a (Ljava/lang/Object;)La/a/a/c/bg;]
      [5] pop
      [6] aload_0 v0
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/util/Iterator;)La/a/a/c/bq;
    Access flags: 0x1
      = public a.a.a.c.bq b(java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #8
        + Methodref [a/a/a/c/bg.a (Ljava/util/Iterator;)La/a/a/c/bh;]
      [5] pop
      [6] aload_0 v0
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/bo;
    Access flags: 0x1
      = public a.a.a.c.bo a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/c/bq.a [Ljava/lang/Object;]
      [4] aload_0 v0
      [5] getfield #5
        + Fieldref [a/a/a/c/bq.b I]
      [8] invokestatic #9
        + Methodref [a/a/a/c/bo.b ([Ljava/lang/Object;I)La/a/a/c/bo;]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)La/a/a/c/bg;
    Access flags: 0x1001
      = public synthetic a.a.a.c.bg a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #12
        + Methodref [a/a/a/c/bq.c (Ljava/lang/Object;)La/a/a/c/bq;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Iterator;)La/a/a/c/bh;
    Access flags: 0x1001
      = public synthetic a.a.a.c.bh a(java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #11
        + Methodref [a/a/a/c/bq.b (Ljava/util/Iterator;)La/a/a/c/bq;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;)La/a/a/c/bh;
    Access flags: 0x1001
      = public synthetic a.a.a.c.bh b(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #12
        + Methodref [a/a/a/c/bq.c (Ljava/lang/Object;)La/a/a/c/bq;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/br
  Superclass:    a/a/a/c/bo
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.br extends a.a.a.c.bo

Interfaces (count = 0):

Constant Pool (count = 59):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/br]
  + Fieldref [a/a/a/c/br.a I]
  + Fieldref [a/a/a/c/br.b I]
  + Fieldref [a/a/a/c/br.c La/a/a/c/bo;]
  + Methodref [a/a/a/a/o.a (II)I]
  + Methodref [a/a/a/a/o.a (III)V]
  + Methodref [a/a/a/c/bo.<init> ()V]
  + Methodref [a/a/a/c/bo.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/bo.a (I)La/a/a/c/eb;]
  + Methodref [a/a/a/c/bo.a (II)La/a/a/c/bo;]
  + Methodref [a/a/a/c/bo.g ()La/a/a/c/eb;]
  + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
  + Methodref [a/a/a/c/br.a (II)La/a/a/c/bo;]
  + NameAndType [<init> ()V]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a (I)La/a/a/c/eb;]
  + NameAndType [a (II)I]
  + NameAndType [a (II)La/a/a/c/bo;]
  + NameAndType [a (III)V]
  + NameAndType [a I]
  + NameAndType [b I]
  + NameAndType [c La/a/a/c/bo;]
  + NameAndType [g ()La/a/a/c/eb;]
  + NameAndType [get (I)Ljava/lang/Object;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()La/a/a/c/eb;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/ListIterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)La/a/a/c/eb;]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(I)Ljava/util/ListIterator;]
  + Utf8 [(II)I]
  + Utf8 [(II)La/a/a/c/bo;]
  + Utf8 [(II)Ljava/util/List;]
  + Utf8 [(III)V]
  + Utf8 [(La/a/a/c/bo;II)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [La/a/a/c/bo;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/br]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [e]
  + Utf8 [g]
  + Utf8 [get]
  + Utf8 [iterator]
  + Utf8 [listIterator]
  + Utf8 [size]
  + Utf8 [subList]

Fields (count = 3):
  + Field:        a I
    Access flags: 0x90
      = final transient int a
  + Field:        b I
    Access flags: 0x90
      = final transient int b
  + Field:        c La/a/a/c/bo;
    Access flags: 0x1010
      = final synthetic a.a.a.c.bo c

Methods (count = 9):
  - Method:       <init>(La/a/a/c/bo;II)V
    Access flags: 0x0
      = br(a.a.a.c.bo,int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/c/br.c La/a/a/c/bo;]
      [5] aload_0 v0
      [6] invokespecial #9
        + Methodref [a/a/a/c/bo.<init> ()V]
      [9] aload_0 v0
      [10] iload_2 v2
      [11] putfield #4
        + Fieldref [a/a/a/c/br.a I]
      [14] aload_0 v0
      [15] iload_3 v3
      [16] putfield #5
        + Fieldref [a/a/a/c/br.b I]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/c/br.b I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get(I)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 2, stack = 3):
      [0] iload_1 v1
      [1] aload_0 v0
      [2] getfield #5
        + Fieldref [a/a/a/c/br.b I]
      [5] invokestatic #7
        + Methodref [a/a/a/a/o.a (II)I]
      [8] pop
      [9] aload_0 v0
      [10] getfield #6
        + Fieldref [a/a/a/c/br.c La/a/a/c/bo;]
      [13] iload_1 v1
      [14] aload_0 v0
      [15] getfield #4
        + Fieldref [a/a/a/c/br.a I]
      [18] iadd
      [19] invokevirtual #14
        + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(II)La/a/a/c/bo;
    Access flags: 0x1
      = public a.a.a.c.bo a(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 29, locals = 3, stack = 4):
      [0] iload_1 v1
      [1] iload_2 v2
      [2] aload_0 v0
      [3] getfield #5
        + Fieldref [a/a/a/c/br.b I]
      [6] invokestatic #8
        + Methodref [a/a/a/a/o.a (III)V]
      [9] aload_0 v0
      [10] getfield #6
        + Fieldref [a/a/a/c/br.c La/a/a/c/bo;]
      [13] iload_1 v1
      [14] aload_0 v0
      [15] getfield #4
        + Fieldref [a/a/a/c/br.a I]
      [18] iadd
      [19] iload_2 v2
      [20] aload_0 v0
      [21] getfield #4
        + Fieldref [a/a/a/c/br.a I]
      [24] iadd
      [25] invokevirtual #12
        + Methodref [a/a/a/c/bo.a (II)La/a/a/c/bo;]
      [28] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       subList(II)Ljava/util/List;
    Access flags: 0x1001
      = public synthetic java.util.List subList(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] iload_2 v2
      [3] invokevirtual #15
        + Methodref [a/a/a/c/br.a (II)La/a/a/c/bo;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       listIterator(I)Ljava/util/ListIterator;
    Access flags: 0x1001
      = public synthetic java.util.ListIterator listIterator(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] invokespecial #11
        + Methodref [a/a/a/c/bo.a (I)La/a/a/c/eb;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       listIterator()Ljava/util/ListIterator;
    Access flags: 0x1001
      = public synthetic java.util.ListIterator listIterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #13
        + Methodref [a/a/a/c/bo.g ()La/a/a/c/eb;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #10
        + Methodref [a/a/a/c/bo.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bs
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.bs extends java.lang.Object

Interfaces (count = 2):
  + Class [java/io/Serializable]
  + Class [java/util/Map]

Constant Pool (count = 214):
  + String [ and ]
  + String [: ]
  + String [Multiple entries with same ]
  + Class [[Ljava/util/Map$Entry;]
  + Class [a/a/a/c/be]
  + Class [a/a/a/c/bf]
  + Class [a/a/a/c/bj]
  + Class [a/a/a/c/bs]
  + Class [a/a/a/c/bt]
  + Class [a/a/a/c/bv]
  + Class [a/a/a/c/bx]
  + Class [a/a/a/c/bz]
  + Class [a/a/a/c/cb]
  + Class [a/a/a/c/cd]
  + Class [a/a/a/c/ct]
  + Class [a/a/a/c/dl]
  + Class [a/a/a/c/z]
  + Class [java/io/Serializable]
  + Class [java/lang/IllegalArgumentException]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/UnsupportedOperationException]
  + Class [java/util/EnumMap]
  + Class [java/util/Iterator]
  + Class [java/util/Map]
  + Class [java/util/Map$Entry]
  + Class [java/util/Set]
  + Fieldref [a/a/a/c/bs.a [Ljava/util/Map$Entry;]
  + Fieldref [a/a/a/c/bs.b La/a/a/c/cb;]
  + Fieldref [a/a/a/c/bs.c La/a/a/c/cb;]
  + Fieldref [a/a/a/c/bs.d La/a/a/c/bf;]
  + Methodref [a/a/a/c/be.a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/be;]
  + Methodref [a/a/a/c/be.g ()La/a/a/c/be;]
  + Methodref [a/a/a/c/bf.contains (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/bj.a (Ljava/util/EnumMap;)La/a/a/c/bs;]
  + Methodref [a/a/a/c/bs.a ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/bs.b ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/bs.b (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bs;]
  + Methodref [a/a/a/c/bs.b (Ljava/util/Map;)La/a/a/c/bs;]
  + Methodref [a/a/a/c/bs.c ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/bs.c (Ljava/util/Map;)La/a/a/c/bs;]
  + Methodref [a/a/a/c/bs.d ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/bs.e ()Z]
  + Methodref [a/a/a/c/bs.f ()La/a/a/c/bf;]
  + Methodref [a/a/a/c/bs.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/bs.i ()La/a/a/c/bs;]
  + Methodref [a/a/a/c/bs.size ()I]
  + Methodref [a/a/a/c/bt.<init> ()V]
  + Methodref [a/a/a/c/bv.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
  + Methodref [a/a/a/c/bx.<init> (La/a/a/c/bs;)V]
  + Methodref [a/a/a/c/bz.<init> (La/a/a/c/bs;)V]
  + Methodref [a/a/a/c/cb.hashCode ()I]
  + Methodref [a/a/a/c/ct.a (Ljava/util/Map;)Ljava/lang/String;]
  + Methodref [a/a/a/c/ct.d (Ljava/util/Map;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/dl.<init> ([Ljava/util/Map$Entry;)V]
  + Methodref [a/a/a/c/z.a (Ljava/lang/Object;Ljava/lang/Object;)V]
  + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
  + Methodref [java/util/EnumMap.<init> (Ljava/util/Map;)V]
  + Methodref [java/util/EnumMap.entrySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [java/util/Set.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/bs;)V]
  + NameAndType [<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (Ljava/util/Map;)V]
  + NameAndType [<init> ([Ljava/util/Map$Entry;)V]
  + NameAndType [a ()La/a/a/c/cb;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/be;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [a (Ljava/util/EnumMap;)La/a/a/c/bs;]
  + NameAndType [a (Ljava/util/Map;)Ljava/lang/String;]
  + NameAndType [a [Ljava/util/Map$Entry;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b ()La/a/a/c/cb;]
  + NameAndType [b (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bs;]
  + NameAndType [b (Ljava/util/Map;)La/a/a/c/bs;]
  + NameAndType [b La/a/a/c/cb;]
  + NameAndType [c ()La/a/a/c/cb;]
  + NameAndType [c (Ljava/util/Map;)La/a/a/c/bs;]
  + NameAndType [c La/a/a/c/cb;]
  + NameAndType [contains (Ljava/lang/Object;)Z]
  + NameAndType [d ()La/a/a/c/cb;]
  + NameAndType [d (Ljava/util/Map;Ljava/lang/Object;)Z]
  + NameAndType [d La/a/a/c/bf;]
  + NameAndType [e ()Z]
  + NameAndType [entrySet ()Ljava/util/Set;]
  + NameAndType [f ()La/a/a/c/bf;]
  + NameAndType [g ()La/a/a/c/be;]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [hasNext ()Z]
  + NameAndType [hashCode ()I]
  + NameAndType [i ()La/a/a/c/bs;]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [size ()I]
  + NameAndType [toArray ([Ljava/lang/Object;)[Ljava/lang/Object;]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [ and ]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/be;]
  + Utf8 [()La/a/a/c/bf;]
  + Utf8 [()La/a/a/c/bs;]
  + Utf8 [()La/a/a/c/bt;]
  + Utf8 [()La/a/a/c/cb;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/c/bs;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/be;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bs;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bv;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/util/EnumMap;)La/a/a/c/bs;]
  + Utf8 [(Ljava/util/Map;)La/a/a/c/bs;]
  + Utf8 [(Ljava/util/Map;)Ljava/lang/String;]
  + Utf8 [(Ljava/util/Map;)V]
  + Utf8 [(Ljava/util/Map;Ljava/lang/Object;)Z]
  + Utf8 [(ZLjava/lang/String;Ljava/util/Map$Entry;Ljava/util/Map$Entry;)V]
  + Utf8 [([Ljava/lang/Object;)[Ljava/lang/Object;]
  + Utf8 [([Ljava/util/Map$Entry;)V]
  + Utf8 [: ]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bf;]
  + Utf8 [La/a/a/c/cb;]
  + Utf8 [Ljava/lang/Deprecated;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [Multiple entries with same ]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/util/Map$Entry;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/be]
  + Utf8 [a/a/a/c/bf]
  + Utf8 [a/a/a/c/bj]
  + Utf8 [a/a/a/c/bs]
  + Utf8 [a/a/a/c/bt]
  + Utf8 [a/a/a/c/bv]
  + Utf8 [a/a/a/c/bx]
  + Utf8 [a/a/a/c/bz]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [a/a/a/c/cd]
  + Utf8 [a/a/a/c/ct]
  + Utf8 [a/a/a/c/dl]
  + Utf8 [a/a/a/c/z]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clear]
  + Utf8 [contains]
  + Utf8 [containsKey]
  + Utf8 [containsValue]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [entrySet]
  + Utf8 [equals]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [get]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [hasNext]
  + Utf8 [hashCode]
  + Utf8 [i]
  + Utf8 [isEmpty]
  + Utf8 [iterator]
  + Utf8 [j]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/IllegalArgumentException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/UnsupportedOperationException]
  + Utf8 [java/util/EnumMap]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [java/util/Set]
  + Utf8 [keySet]
  + Utf8 [next]
  + Utf8 [put]
  + Utf8 [putAll]
  + Utf8 [remove]
  + Utf8 [size]
  + Utf8 [toArray]
  + Utf8 [toString]
  + Utf8 [values]

Fields (count = 4):
  + Field:        a [Ljava/util/Map$Entry;
    Access flags: 0x1a
      = private static final java.util.Map$Entry[] a
  + Field:        b La/a/a/c/cb;
    Access flags: 0x82
      = private transient a.a.a.c.cb b
  + Field:        c La/a/a/c/cb;
    Access flags: 0x82
      = private transient a.a.a.c.cb c
  + Field:        d La/a/a/c/bf;
    Access flags: 0x82
      = private transient a.a.a.c.bf d

Methods (count = 30):
  + Method:       i()La/a/a/c/bs;
    Access flags: 0x9
      = public static a.a.a.c.bs i()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] invokestatic #33
        + Methodref [a/a/a/c/be.g ()La/a/a/c/be;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bs;
    Access flags: 0x9
      = public static a.a.a.c.bs b(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #32
        + Methodref [a/a/a/c/be.a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/be;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bv;
    Access flags: 0x8
      = static a.a.a.c.bv c(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #56
        + Methodref [a/a/a/c/z.a (Ljava/lang/Object;Ljava/lang/Object;)V]
      [5] new #10
        + Class [a/a/a/c/bv]
      [8] dup
      [9] aload_0 v0
      [10] aload_1 v1
      [11] invokespecial #49
        + Methodref [a/a/a/c/bv.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
      [14] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       j()La/a/a/c/bt;
    Access flags: 0x9
      = public static a.a.a.c.bt j()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 0, stack = 2):
      [0] new #9
        + Class [a/a/a/c/bt]
      [3] dup
      [4] invokespecial #48
        + Methodref [a/a/a/c/bt.<init> ()V]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(ZLjava/lang/String;Ljava/util/Map$Entry;Ljava/util/Map$Entry;)V
    Access flags: 0x8
      = static void a(boolean,java.lang.String,java.util.Map$Entry,java.util.Map$Entry)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 50, locals = 4, stack = 4):
      [0] iload_0 v0
      [1] ifne +48 (target=49)
      [4] new #19
        + Class [java/lang/IllegalArgumentException]
      [7] dup
      [8] new #21
        + Class [java/lang/StringBuilder]
      [11] dup
      [12] invokespecial #59
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [15] ldc #3
        + String [Multiple entries with same ]
      [17] invokevirtual #61
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [20] aload_1 v1
      [21] invokevirtual #61
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [24] ldc #2
        + String [: ]
      [26] invokevirtual #61
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [29] aload_2 v2
      [30] invokevirtual #60
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [33] ldc #1
        + String [ and ]
      [35] invokevirtual #61
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [38] aload_3 v3
      [39] invokevirtual #60
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [42] invokevirtual #62
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [45] invokespecial #57
        + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
      [48] athrow
      [49] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [49] Var: ..., Stack: (empty)
  + Method:       a(Ljava/util/Map;)La/a/a/c/bs;
    Access flags: 0x9
      = public static a.a.a.c.bs a(java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 121, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] instanceof #8
        + Class [a/a/a/c/bs]
      [4] ifeq +27 (target=31)
      [7] aload_0 v0
      [8] instanceof #14
        + Class [a/a/a/c/cd]
      [11] ifne +20 (target=31)
      [14] aload_0 v0
      [15] checkcast #8
        + Class [a/a/a/c/bs]
      [18] astore_1 v1
      [19] aload_1 v1
      [20] invokevirtual #43
        + Methodref [a/a/a/c/bs.e ()Z]
      [23] ifne +5 (target=28)
      [26] aload_1 v1
      [27] areturn
      [28] goto +15 (target=43)
      [31] aload_0 v0
      [32] instanceof #23
        + Class [java/util/EnumMap]
      [35] ifeq +8 (target=43)
      [38] aload_0 v0
      [39] invokestatic #39
        + Methodref [a/a/a/c/bs.b (Ljava/util/Map;)La/a/a/c/bs;]
      [42] areturn
      [43] aload_0 v0
      [44] invokeinterface #68
        + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
      [49] getstatic #28
        + Fieldref [a/a/a/c/bs.a [Ljava/util/Map$Entry;]
      [52] invokeinterface #72
        + InterfaceMethodref [java/util/Set.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;]
      [57] checkcast #4
        + Class [[Ljava/util/Map$Entry;]
      [60] astore_1 v1
      [61] aload_1 v1
      [62] arraylength
      [63] lookupswitch (2 offsets, default=49) (target=112)
        0: offset = 25, target = 88
        1: offset = 29, target = 92
        default: offset = 49, target = 112
      [88] invokestatic #46
        + Methodref [a/a/a/c/bs.i ()La/a/a/c/bs;]
      [91] areturn
      [92] aload_1 v1
      [93] iconst_0
      [94] aaload
      [95] astore_2 v2
      [96] aload_2 v2
      [97] invokeinterface #69
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [102] aload_2 v2
      [103] invokeinterface #70
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [108] invokestatic #38
        + Methodref [a/a/a/c/bs.b (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bs;]
      [111] areturn
      [112] new #16
        + Class [a/a/a/c/dl]
      [115] dup
      [116] aload_1 v1
      [117] invokespecial #55
        + Methodref [a/a/a/c/dl.<init> ([Ljava/util/Map$Entry;)V]
      [120] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [28] Var: ..., Stack: (empty)
        - [31] Var: ..., Stack: (empty)
        - [43] Var: ..., Stack: (empty)
        - [88] Var: ...[a:[Ljava/util/Map$Entry;], Stack: (empty)
        - [92] Var: ..., Stack: (empty)
        - [112] Var: ..., Stack: (empty)
  + Method:       b(Ljava/util/Map;)La/a/a/c/bs;
    Access flags: 0xa
      = private static a.a.a.c.bs b(java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] checkcast #23
        + Class [java/util/EnumMap]
      [4] invokestatic #41
        + Methodref [a/a/a/c/bs.c (Ljava/util/Map;)La/a/a/c/bs;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(Ljava/util/Map;)La/a/a/c/bs;
    Access flags: 0xa
      = private static a.a.a.c.bs c(java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 61, locals = 4, stack = 3):
      [0] new #23
        + Class [java/util/EnumMap]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #64
        + Methodref [java/util/EnumMap.<init> (Ljava/util/Map;)V]
      [8] astore_1 v1
      [9] aload_1 v1
      [10] invokevirtual #65
        + Methodref [java/util/EnumMap.entrySet ()Ljava/util/Set;]
      [13] invokeinterface #71
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [18] astore_2 v2
      [19] aload_2 v2
      [20] invokeinterface #66
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [25] ifeq +31 (target=56)
      [28] aload_2 v2
      [29] invokeinterface #67
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [34] checkcast #26
        + Class [java/util/Map$Entry]
      [37] astore_3 v3
      [38] aload_3 v3
      [39] invokeinterface #69
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [44] aload_3 v3
      [45] invokeinterface #70
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [50] invokestatic #56
        + Methodref [a/a/a/c/z.a (Ljava/lang/Object;Ljava/lang/Object;)V]
      [53] goto -34 (target=19)
      [56] aload_1 v1
      [57] invokestatic #35
        + Methodref [a/a/a/c/bj.a (Ljava/util/EnumMap;)La/a/a/c/bs;]
      [60] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [19] Var: ...[a:java/util/EnumMap][a:java/util/Iterator], Stack: (empty)
        - [56] Var: -1, Stack: (empty)
  - Method:       <init>()V
    Access flags: 0x0
      = bs()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #58
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object put(java.lang.Object,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 3, stack = 2):
      [0] new #22
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #63
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       remove(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object remove(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #22
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #63
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       putAll(Ljava/util/Map;)V
    Access flags: 0x11
      = public final void putAll(java.util.Map)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #22
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #63
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       clear()V
    Access flags: 0x11
      = public final void clear()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #22
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #63
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #47
        + Methodref [a/a/a/c/bs.size ()I]
      [4] ifne +7 (target=11)
      [7] iconst_1
      [8] goto +4 (target=12)
      [11] iconst_0
      [12] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [12] Var: ..., Stack: [i]
  + Method:       containsKey(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean containsKey(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 14, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #45
        + Methodref [a/a/a/c/bs.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [5] ifnull +7 (target=12)
      [8] iconst_1
      [9] goto +4 (target=13)
      [12] iconst_0
      [13] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [12] Var: ..., Stack: (empty)
        - [13] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       containsValue(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean containsValue(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #44
        + Methodref [a/a/a/c/bs.f ()La/a/a/c/bf;]
      [4] aload_1 v1
      [5] invokevirtual #34
        + Methodref [a/a/a/c/bf.contains (Ljava/lang/Object;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       get(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x401
      = public abstract java.lang.Object get(java.lang.Object)
    Class member attributes (count = 1):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b()La/a/a/c/cb;
    Access flags: 0x1
      = public a.a.a.c.cb b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #29
        + Fieldref [a/a/a/c/bs.b La/a/a/c/cb;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnonnull +15 (target=21)
      [9] aload_0 v0
      [10] aload_0 v0
      [11] invokevirtual #40
        + Methodref [a/a/a/c/bs.c ()La/a/a/c/cb;]
      [14] dup_x1
      [15] putfield #29
        + Fieldref [a/a/a/c/bs.b La/a/a/c/cb;]
      [18] goto +4 (target=22)
      [21] aload_1 v1
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [21] Var: ...[a:a/a/a/c/cb], Stack: (empty)
        - [22] Var: ..., Stack: [a:a/a/a/c/cb]
  + Method:       c()La/a/a/c/cb;
    Access flags: 0x400
      = abstract a.a.a.c.cb c()
  + Method:       d()La/a/a/c/cb;
    Access flags: 0x1
      = public a.a.a.c.cb d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #30
        + Fieldref [a/a/a/c/bs.c La/a/a/c/cb;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnonnull +15 (target=21)
      [9] aload_0 v0
      [10] aload_0 v0
      [11] invokevirtual #36
        + Methodref [a/a/a/c/bs.a ()La/a/a/c/cb;]
      [14] dup_x1
      [15] putfield #30
        + Fieldref [a/a/a/c/bs.c La/a/a/c/cb;]
      [18] goto +4 (target=22)
      [21] aload_1 v1
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [21] Var: ...[a:a/a/a/c/cb], Stack: (empty)
        - [22] Var: ..., Stack: [a:a/a/a/c/cb]
  + Method:       a()La/a/a/c/cb;
    Access flags: 0x0
      = a.a.a.c.cb a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #11
        + Class [a/a/a/c/bx]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #50
        + Methodref [a/a/a/c/bx.<init> (La/a/a/c/bs;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()La/a/a/c/bf;
    Access flags: 0x1
      = public a.a.a.c.bf f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 27, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] getfield #31
        + Fieldref [a/a/a/c/bs.d La/a/a/c/bf;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnonnull +19 (target=25)
      [9] aload_0 v0
      [10] new #12
        + Class [a/a/a/c/bz]
      [13] dup
      [14] aload_0 v0
      [15] invokespecial #51
        + Methodref [a/a/a/c/bz.<init> (La/a/a/c/bs;)V]
      [18] dup_x1
      [19] putfield #31
        + Fieldref [a/a/a/c/bs.d La/a/a/c/bf;]
      [22] goto +4 (target=26)
      [25] aload_1 v1
      [26] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [25] Var: ...[a:a/a/a/c/bf], Stack: (empty)
        - [26] Var: ..., Stack: [a:a/a/a/c/bf]
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #54
        + Methodref [a/a/a/c/ct.d (Ljava/util/Map;Ljava/lang/Object;)Z]
      [5] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       e()Z
    Access flags: 0x400
      = abstract boolean e()
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #37
        + Methodref [a/a/a/c/bs.b ()La/a/a/c/cb;]
      [4] invokevirtual #52
        + Methodref [a/a/a/c/cb.hashCode ()I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokestatic #53
        + Methodref [a/a/a/c/ct.a (Ljava/util/Map;)Ljava/lang/String;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       entrySet()Ljava/util/Set;
    Access flags: 0x1001
      = public synthetic java.util.Set entrySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #37
        + Methodref [a/a/a/c/bs.b ()La/a/a/c/cb;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       values()Ljava/util/Collection;
    Access flags: 0x1001
      = public synthetic java.util.Collection values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #44
        + Methodref [a/a/a/c/bs.f ()La/a/a/c/bf;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       keySet()Ljava/util/Set;
    Access flags: 0x1001
      = public synthetic java.util.Set keySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #42
        + Methodref [a/a/a/c/bs.d ()La/a/a/c/cb;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 0, stack = 1):
      [0] iconst_0
      [1] anewarray #26
        + Class [java/util/Map$Entry]
      [4] putstatic #28
        + Fieldref [a/a/a/c/bs.a [Ljava/util/Map$Entry;]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bt
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class a.a.a.c.bt extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 98):
  + Class [[La/a/a/c/bv;]
  + Class [a/a/a/c/bh]
  + Class [a/a/a/c/bs]
  + Class [a/a/a/c/bt]
  + Class [a/a/a/c/bv]
  + Class [a/a/a/c/dg]
  + Class [a/a/a/c/dl]
  + Class [java/lang/Object]
  + Class [java/util/Iterator]
  + Class [java/util/Map]
  + Class [java/util/Map$Entry]
  + Class [java/util/Set]
  + Fieldref [a/a/a/c/bt.a [La/a/a/c/bv;]
  + Fieldref [a/a/a/c/bt.b I]
  + Methodref [a/a/a/c/bh.a (II)I]
  + Methodref [a/a/a/c/bs.b (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bs;]
  + Methodref [a/a/a/c/bs.c (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bv;]
  + Methodref [a/a/a/c/bs.i ()La/a/a/c/bs;]
  + Methodref [a/a/a/c/bt.<init> (I)V]
  + Methodref [a/a/a/c/bt.a (I)V]
  + Methodref [a/a/a/c/bt.a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bt;]
  + Methodref [a/a/a/c/bt.a (Ljava/util/Map$Entry;)La/a/a/c/bt;]
  + Methodref [a/a/a/c/bv.getKey ()Ljava/lang/Object;]
  + Methodref [a/a/a/c/bv.getValue ()Ljava/lang/Object;]
  + Methodref [a/a/a/c/dg.b ([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + Methodref [a/a/a/c/dl.<init> (I[La/a/a/c/bv;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Map.size ()I]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (I)V]
  + NameAndType [<init> (I[La/a/a/c/bv;)V]
  + NameAndType [a (I)V]
  + NameAndType [a (II)I]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bt;]
  + NameAndType [a (Ljava/util/Map$Entry;)La/a/a/c/bt;]
  + NameAndType [a [La/a/a/c/bv;]
  + NameAndType [b (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bs;]
  + NameAndType [b ([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + NameAndType [b I]
  + NameAndType [c (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bv;]
  + NameAndType [entrySet ()Ljava/util/Set;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [hasNext ()Z]
  + NameAndType [i ()La/a/a/c/bs;]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bs;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)V]
  + Utf8 [(II)I]
  + Utf8 [(I[La/a/a/c/bv;)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bs;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bt;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bv;]
  + Utf8 [(Ljava/util/Map$Entry;)La/a/a/c/bt;]
  + Utf8 [(Ljava/util/Map;)La/a/a/c/bt;]
  + Utf8 [([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [StackMapTable]
  + Utf8 [[La/a/a/c/bv;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bh]
  + Utf8 [a/a/a/c/bs]
  + Utf8 [a/a/a/c/bt]
  + Utf8 [a/a/a/c/bv]
  + Utf8 [a/a/a/c/dg]
  + Utf8 [a/a/a/c/dl]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [entrySet]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [hasNext]
  + Utf8 [i]
  + Utf8 [iterator]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [java/util/Set]
  + Utf8 [next]
  + Utf8 [size]

Fields (count = 2):
  + Field:        a [La/a/a/c/bv;
    Access flags: 0x0
      = a.a.a.c.bv[] a
  + Field:        b I
    Access flags: 0x0
      = int b

Methods (count = 7):
  - Method:       <init>()V
    Access flags: 0x1
      = public bt()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] iconst_4
      [2] invokespecial #19
        + Methodref [a/a/a/c/bt.<init> (I)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(I)V
    Access flags: 0x0
      = bt(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #27
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] iload_1 v1
      [6] anewarray #5
        + Class [a/a/a/c/bv]
      [9] putfield #13
        + Fieldref [a/a/a/c/bt.a [La/a/a/c/bv;]
      [12] aload_0 v0
      [13] iconst_0
      [14] putfield #14
        + Fieldref [a/a/a/c/bt.b I]
      [17] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(I)V
    Access flags: 0x2
      = private void a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 33, locals = 2, stack = 4):
      [0] iload_1 v1
      [1] aload_0 v0
      [2] getfield #13
        + Fieldref [a/a/a/c/bt.a [La/a/a/c/bv;]
      [5] arraylength
      [6] ificmple +26 (target=32)
      [9] aload_0 v0
      [10] aload_0 v0
      [11] getfield #13
        + Fieldref [a/a/a/c/bt.a [La/a/a/c/bv;]
      [14] aload_0 v0
      [15] getfield #13
        + Fieldref [a/a/a/c/bt.a [La/a/a/c/bv;]
      [18] arraylength
      [19] iload_1 v1
      [20] invokestatic #15
        + Methodref [a/a/a/c/bh.a (II)I]
      [23] invokestatic #25
        + Methodref [a/a/a/c/dg.b ([Ljava/lang/Object;I)[Ljava/lang/Object;]
      [26] checkcast #1
        + Class [[La/a/a/c/bv;]
      [29] putfield #13
        + Fieldref [a/a/a/c/bt.a [La/a/a/c/bv;]
      [32] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [32] Var: ..., Stack: (empty)
  + Method:       a(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bt;
    Access flags: 0x1
      = public a.a.a.c.bt a(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 35, locals = 4, stack = 5):
      [0] aload_0 v0
      [1] aload_0 v0
      [2] getfield #14
        + Fieldref [a/a/a/c/bt.b I]
      [5] iconst_1
      [6] iadd
      [7] invokespecial #20
        + Methodref [a/a/a/c/bt.a (I)V]
      [10] aload_1 v1
      [11] aload_2 v2
      [12] invokestatic #17
        + Methodref [a/a/a/c/bs.c (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bv;]
      [15] astore_3 v3
      [16] aload_0 v0
      [17] getfield #13
        + Fieldref [a/a/a/c/bt.a [La/a/a/c/bv;]
      [20] aload_0 v0
      [21] dup
      [22] getfield #14
        + Fieldref [a/a/a/c/bt.b I]
      [25] dup_x1
      [26] iconst_1
      [27] iadd
      [28] putfield #14
        + Fieldref [a/a/a/c/bt.b I]
      [31] aload_3 v3
      [32] aastore
      [33] aload_0 v0
      [34] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Map$Entry;)La/a/a/c/bt;
    Access flags: 0x1
      = public a.a.a.c.bt a(java.util.Map$Entry)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokeinterface #32
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [7] aload_1 v1
      [8] invokeinterface #33
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [13] invokevirtual #21
        + Methodref [a/a/a/c/bt.a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bt;]
      [16] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Map;)La/a/a/c/bt;
    Access flags: 0x1
      = public a.a.a.c.bt a(java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 57, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_0 v0
      [2] getfield #14
        + Fieldref [a/a/a/c/bt.b I]
      [5] aload_1 v1
      [6] invokeinterface #31
        + InterfaceMethodref [java/util/Map.size ()I]
      [11] iadd
      [12] invokespecial #20
        + Methodref [a/a/a/c/bt.a (I)V]
      [15] aload_1 v1
      [16] invokeinterface #30
        + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
      [21] invokeinterface #34
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [26] astore_2 v2
      [27] aload_2 v2
      [28] invokeinterface #28
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [33] ifeq +22 (target=55)
      [36] aload_2 v2
      [37] invokeinterface #29
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [42] checkcast #11
        + Class [java/util/Map$Entry]
      [45] astore_3 v3
      [46] aload_0 v0
      [47] aload_3 v3
      [48] invokevirtual #22
        + Methodref [a/a/a/c/bt.a (Ljava/util/Map$Entry;)La/a/a/c/bt;]
      [51] pop
      [52] goto -25 (target=27)
      [55] aload_0 v0
      [56] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [27] Var: ...[a:java/util/Iterator], Stack: (empty)
        - [55] Var: -1, Stack: (empty)
  + Method:       a()La/a/a/c/bs;
    Access flags: 0x1
      = public a.a.a.c.bs a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 74, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] getfield #14
        + Fieldref [a/a/a/c/bt.b I]
      [4] lookupswitch (2 offsets, default=54) (target=58)
        0: offset = 28, target = 32
        1: offset = 32, target = 36
        default: offset = 54, target = 58
      [32] invokestatic #18
        + Methodref [a/a/a/c/bs.i ()La/a/a/c/bs;]
      [35] areturn
      [36] aload_0 v0
      [37] getfield #13
        + Fieldref [a/a/a/c/bt.a [La/a/a/c/bv;]
      [40] iconst_0
      [41] aaload
      [42] invokevirtual #23
        + Methodref [a/a/a/c/bv.getKey ()Ljava/lang/Object;]
      [45] aload_0 v0
      [46] getfield #13
        + Fieldref [a/a/a/c/bt.a [La/a/a/c/bv;]
      [49] iconst_0
      [50] aaload
      [51] invokevirtual #24
        + Methodref [a/a/a/c/bv.getValue ()Ljava/lang/Object;]
      [54] invokestatic #16
        + Methodref [a/a/a/c/bs.b (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bs;]
      [57] areturn
      [58] new #7
        + Class [a/a/a/c/dl]
      [61] dup
      [62] aload_0 v0
      [63] getfield #14
        + Fieldref [a/a/a/c/bt.b I]
      [66] aload_0 v0
      [67] getfield #13
        + Fieldref [a/a/a/c/bt.a [La/a/a/c/bv;]
      [70] invokespecial #26
        + Methodref [a/a/a/c/dl.<init> (I[La/a/a/c/bv;)V]
      [73] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [32] Var: ..., Stack: (empty)
        - [36] Var: ..., Stack: (empty)
        - [58] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bu
  Superclass:    a/a/a/c/bi
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.c.bu extends a.a.a.c.bi

Interfaces (count = 0):

Constant Pool (count = 26):
  + Class [a/a/a/c/bi]
  + Class [a/a/a/c/bu]
  + Class [a/a/a/c/z]
  + Methodref [a/a/a/c/bi.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
  + Methodref [a/a/a/c/bu.getKey ()Ljava/lang/Object;]
  + Methodref [a/a/a/c/bu.getValue ()Ljava/lang/Object;]
  + Methodref [a/a/a/c/z.a (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + Utf8 [()La/a/a/c/bu;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [(La/a/a/c/bu;)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bi]
  + Utf8 [a/a/a/c/bu]
  + Utf8 [a/a/a/c/z]
  + Utf8 [getKey]
  + Utf8 [getValue]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>(Ljava/lang/Object;Ljava/lang/Object;)V
    Access flags: 0x0
      = bu(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokespecial #4
        + Methodref [a/a/a/c/bi.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
      [6] aload_1 v1
      [7] aload_2 v2
      [8] invokestatic #7
        + Methodref [a/a/a/c/z.a (Ljava/lang/Object;Ljava/lang/Object;)V]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/c/bu;)V
    Access flags: 0x0
      = bu(a.a.a.c.bu)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #5
        + Methodref [a/a/a/c/bu.getKey ()Ljava/lang/Object;]
      [5] aload_1 v1
      [6] invokevirtual #6
        + Methodref [a/a/a/c/bu.getValue ()Ljava/lang/Object;]
      [9] invokespecial #4
        + Methodref [a/a/a/c/bi.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
      [12] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/bu;
    Access flags: 0x400
      = abstract a.a.a.c.bu a()
    Class member attributes (count = 1):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bv
  Superclass:    a/a/a/c/bu
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.bv extends a.a.a.c.bu

Interfaces (count = 0):

Constant Pool (count = 14):
  + Class [a/a/a/c/bu]
  + Class [a/a/a/c/bv]
  + Methodref [a/a/a/c/bu.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
  + Utf8 [()La/a/a/c/bu;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bu]
  + Utf8 [a/a/a/c/bv]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>(Ljava/lang/Object;Ljava/lang/Object;)V
    Access flags: 0x0
      = bv(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokespecial #3
        + Methodref [a/a/a/c/bu.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/bu;
    Access flags: 0x0
      = a.a.a.c.bu a()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aconst_null
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bw
  Superclass:    a/a/a/c/cb
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.c.bw extends a.a.a.c.cb

Interfaces (count = 0):

Constant Pool (count = 47):
  + Class [a/a/a/c/bs]
  + Class [a/a/a/c/bw]
  + Class [a/a/a/c/cb]
  + Class [java/lang/Object]
  + Class [java/util/Map$Entry]
  + Methodref [a/a/a/c/bs.e ()Z]
  + Methodref [a/a/a/c/bs.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/bs.size ()I]
  + Methodref [a/a/a/c/bw.d ()La/a/a/c/bs;]
  + Methodref [a/a/a/c/cb.<init> ()V]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [d ()La/a/a/c/bs;]
  + NameAndType [e ()Z]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bs;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a/a/a/c/bs]
  + Utf8 [a/a/a/c/bw]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [contains]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [get]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [size]

Fields (count = 0):

Methods (count = 5):
  - Method:       <init>()V
    Access flags: 0x0
      = bw()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #10
        + Methodref [a/a/a/c/cb.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()La/a/a/c/bs;
    Access flags: 0x400
      = abstract a.a.a.c.bs d()
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/c/bw.d ()La/a/a/c/bs;]
      [4] invokevirtual #8
        + Methodref [a/a/a/c/bs.size ()I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 51, locals = 4, stack = 2):
      [0] aload_1 v1
      [1] instanceof #5
        + Class [java/util/Map$Entry]
      [4] ifeq +45 (target=49)
      [7] aload_1 v1
      [8] checkcast #5
        + Class [java/util/Map$Entry]
      [11] astore_2 v2
      [12] aload_0 v0
      [13] invokevirtual #9
        + Methodref [a/a/a/c/bw.d ()La/a/a/c/bs;]
      [16] aload_2 v2
      [17] invokeinterface #12
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [22] invokevirtual #7
        + Methodref [a/a/a/c/bs.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [25] astore_3 v3
      [26] aload_3 v3
      [27] ifnull +20 (target=47)
      [30] aload_3 v3
      [31] aload_2 v2
      [32] invokeinterface #13
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [37] invokevirtual #11
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [40] ifeq +7 (target=47)
      [43] iconst_1
      [44] goto +4 (target=48)
      [47] iconst_0
      [48] ireturn
      [49] iconst_0
      [50] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [47] Var: ...[a:java/util/Map$Entry][a:java/lang/Object], Stack: (empty)
        - [48] Var: ..., Stack: [i]
        - [49] Var: -2, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/c/bw.d ()La/a/a/c/bs;]
      [4] invokevirtual #6
        + Methodref [a/a/a/c/bs.e ()Z]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bx
  Superclass:    a/a/a/c/cb
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.bx extends a.a.a.c.cb

Interfaces (count = 0):

Constant Pool (count = 52):
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/bs]
  + Class [a/a/a/c/bx]
  + Class [a/a/a/c/by]
  + Class [a/a/a/c/cb]
  + Fieldref [a/a/a/c/bx.a La/a/a/c/bs;]
  + Methodref [a/a/a/c/bo.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/bs.b ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/bs.containsKey (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/bs.size ()I]
  + Methodref [a/a/a/c/bx.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/bx.b ()La/a/a/c/bo;]
  + Methodref [a/a/a/c/by.<init> (La/a/a/c/bx;La/a/a/c/bo;)V]
  + Methodref [a/a/a/c/cb.<init> ()V]
  + Methodref [a/a/a/c/cb.b ()La/a/a/c/bo;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/bx;La/a/a/c/bo;)V]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a La/a/a/c/bs;]
  + NameAndType [b ()La/a/a/c/bo;]
  + NameAndType [b ()La/a/a/c/cb;]
  + NameAndType [containsKey (Ljava/lang/Object;)Z]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bo;]
  + Utf8 [()La/a/a/c/cb;]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/c/bs;)V]
  + Utf8 [(La/a/a/c/bx;La/a/a/c/bo;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bs;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/bs]
  + Utf8 [a/a/a/c/bx]
  + Utf8 [a/a/a/c/by]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [b]
  + Utf8 [contains]
  + Utf8 [containsKey]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [iterator]
  + Utf8 [size]

Fields (count = 1):
  + Field:        a La/a/a/c/bs;
    Access flags: 0x12
      = private final a.a.a.c.bs a

Methods (count = 7):
  - Method:       <init>(La/a/a/c/bs;)V
    Access flags: 0x0
      = bx(a.a.a.c.bs)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #14
        + Methodref [a/a/a/c/cb.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #6
        + Fieldref [a/a/a/c/bx.a La/a/a/c/bs;]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/bx.a La/a/a/c/bs;]
      [4] invokevirtual #10
        + Methodref [a/a/a/c/bs.size ()I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x1
      = public a.a.a.c.ea a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #12
        + Methodref [a/a/a/c/bx.b ()La/a/a/c/bo;]
      [4] invokevirtual #7
        + Methodref [a/a/a/c/bo.a ()La/a/a/c/ea;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/bx.a La/a/a/c/bs;]
      [4] aload_1 v1
      [5] invokevirtual #9
        + Methodref [a/a/a/c/bs.containsKey (Ljava/lang/Object;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       f()La/a/a/c/bo;
    Access flags: 0x0
      = a.a.a.c.bo f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/bx.a La/a/a/c/bs;]
      [4] invokevirtual #8
        + Methodref [a/a/a/c/bs.b ()La/a/a/c/cb;]
      [7] invokevirtual #15
        + Methodref [a/a/a/c/cb.b ()La/a/a/c/bo;]
      [10] astore_1 v1
      [11] new #4
        + Class [a/a/a/c/by]
      [14] dup
      [15] aload_0 v0
      [16] aload_1 v1
      [17] invokespecial #13
        + Methodref [a/a/a/c/by.<init> (La/a/a/c/bx;La/a/a/c/bo;)V]
      [20] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #11
        + Methodref [a/a/a/c/bx.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/by
  Superclass:    a/a/a/c/bd
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.by extends a.a.a.c.bd

Interfaces (count = 0):

Constant Pool (count = 33):
  + Class [a/a/a/c/bd]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/by]
  + Class [java/util/Map$Entry]
  + Fieldref [a/a/a/c/by.a La/a/a/c/bo;]
  + Fieldref [a/a/a/c/by.b La/a/a/c/bx;]
  + Methodref [a/a/a/c/bd.<init> ()V]
  + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [a La/a/a/c/bo;]
  + NameAndType [b La/a/a/c/bx;]
  + NameAndType [get (I)Ljava/lang/Object;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + Utf8 [()La/a/a/c/bf;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(La/a/a/c/bx;La/a/a/c/bo;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bo;]
  + Utf8 [La/a/a/c/bx;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bd]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/by]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [get]
  + Utf8 [getKey]
  + Utf8 [java/util/Map$Entry]

Fields (count = 2):
  + Field:        a La/a/a/c/bo;
    Access flags: 0x1010
      = final synthetic a.a.a.c.bo a
  + Field:        b La/a/a/c/bx;
    Access flags: 0x1010
      = final synthetic a.a.a.c.bx b

Methods (count = 3):
  - Method:       <init>(La/a/a/c/bx;La/a/a/c/bo;)V
    Access flags: 0x0
      = by(a.a.a.c.bx,a.a.a.c.bo)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/c/by.b La/a/a/c/bx;]
      [5] aload_0 v0
      [6] aload_2 v2
      [7] putfield #5
        + Fieldref [a/a/a/c/by.a La/a/a/c/bo;]
      [10] aload_0 v0
      [11] invokespecial #7
        + Methodref [a/a/a/c/bd.<init> ()V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get(I)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/c/by.a La/a/a/c/bo;]
      [4] iload_1 v1
      [5] invokevirtual #8
        + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
      [8] checkcast #4
        + Class [java/util/Map$Entry]
      [11] invokeinterface #9
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [16] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()La/a/a/c/bf;
    Access flags: 0x0
      = a.a.a.c.bf c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/by.b La/a/a/c/bx;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/bz
  Superclass:    a/a/a/c/bf
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.bz extends a.a.a.c.bf

Interfaces (count = 0):

Constant Pool (count = 59):
  + Class [a/a/a/c/bf]
  + Class [a/a/a/c/bs]
  + Class [a/a/a/c/bz]
  + Class [a/a/a/c/ca]
  + Class [a/a/a/c/cb]
  + Class [a/a/a/c/ck]
  + Class [a/a/a/c/ct]
  + Fieldref [a/a/a/c/bz.a La/a/a/c/bs;]
  + Methodref [a/a/a/c/bf.<init> ()V]
  + Methodref [a/a/a/c/bs.b ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/bs.size ()I]
  + Methodref [a/a/a/c/bz.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/ca.<init> (La/a/a/c/bz;La/a/a/c/bo;)V]
  + Methodref [a/a/a/c/cb.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/cb.b ()La/a/a/c/bo;]
  + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/ct.a (La/a/a/c/ea;)La/a/a/c/ea;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/bz;La/a/a/c/bo;)V]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a (La/a/a/c/ea;)La/a/a/c/ea;]
  + NameAndType [a (Ljava/util/Iterator;Ljava/lang/Object;)Z]
  + NameAndType [a La/a/a/c/bs;]
  + NameAndType [b ()La/a/a/c/bo;]
  + NameAndType [b ()La/a/a/c/cb;]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bo;]
  + Utf8 [()La/a/a/c/cb;]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/c/bs;)V]
  + Utf8 [(La/a/a/c/bz;La/a/a/c/bo;)V]
  + Utf8 [(La/a/a/c/ea;)La/a/a/c/ea;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Iterator;Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bs;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bf]
  + Utf8 [a/a/a/c/bs]
  + Utf8 [a/a/a/c/bz]
  + Utf8 [a/a/a/c/ca]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [a/a/a/c/ct]
  + Utf8 [b]
  + Utf8 [contains]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [iterator]
  + Utf8 [size]

Fields (count = 1):
  + Field:        a La/a/a/c/bs;
    Access flags: 0x12
      = private final a.a.a.c.bs a

Methods (count = 7):
  - Method:       <init>(La/a/a/c/bs;)V
    Access flags: 0x0
      = bz(a.a.a.c.bs)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #9
        + Methodref [a/a/a/c/bf.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #8
        + Fieldref [a/a/a/c/bz.a La/a/a/c/bs;]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/bz.a La/a/a/c/bs;]
      [4] invokevirtual #11
        + Methodref [a/a/a/c/bs.size ()I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x1
      = public a.a.a.c.ea a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/bz.a La/a/a/c/bs;]
      [4] invokevirtual #10
        + Methodref [a/a/a/c/bs.b ()La/a/a/c/cb;]
      [7] invokevirtual #14
        + Methodref [a/a/a/c/cb.a ()La/a/a/c/ea;]
      [10] invokestatic #17
        + Methodref [a/a/a/c/ct.a (La/a/a/c/ea;)La/a/a/c/ea;]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 21, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] ifnull +18 (target=19)
      [4] aload_0 v0
      [5] invokevirtual #12
        + Methodref [a/a/a/c/bz.a ()La/a/a/c/ea;]
      [8] aload_1 v1
      [9] invokestatic #16
        + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;Ljava/lang/Object;)Z]
      [12] ifeq +7 (target=19)
      [15] iconst_1
      [16] goto +4 (target=20)
      [19] iconst_0
      [20] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [19] Var: ..., Stack: (empty)
        - [20] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()La/a/a/c/bo;
    Access flags: 0x0
      = a.a.a.c.bo f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/bz.a La/a/a/c/bs;]
      [4] invokevirtual #10
        + Methodref [a/a/a/c/bs.b ()La/a/a/c/cb;]
      [7] invokevirtual #15
        + Methodref [a/a/a/c/cb.b ()La/a/a/c/bo;]
      [10] astore_1 v1
      [11] new #4
        + Class [a/a/a/c/ca]
      [14] dup
      [15] aload_0 v0
      [16] aload_1 v1
      [17] invokespecial #13
        + Methodref [a/a/a/c/ca.<init> (La/a/a/c/bz;La/a/a/c/bo;)V]
      [20] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #12
        + Methodref [a/a/a/c/bz.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ca
  Superclass:    a/a/a/c/bd
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.ca extends a.a.a.c.bd

Interfaces (count = 0):

Constant Pool (count = 33):
  + Class [a/a/a/c/bd]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/ca]
  + Class [java/util/Map$Entry]
  + Fieldref [a/a/a/c/ca.a La/a/a/c/bo;]
  + Fieldref [a/a/a/c/ca.b La/a/a/c/bz;]
  + Methodref [a/a/a/c/bd.<init> ()V]
  + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [a La/a/a/c/bo;]
  + NameAndType [b La/a/a/c/bz;]
  + NameAndType [get (I)Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + Utf8 [()La/a/a/c/bf;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(La/a/a/c/bz;La/a/a/c/bo;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bo;]
  + Utf8 [La/a/a/c/bz;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bd]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/ca]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [get]
  + Utf8 [getValue]
  + Utf8 [java/util/Map$Entry]

Fields (count = 2):
  + Field:        a La/a/a/c/bo;
    Access flags: 0x1010
      = final synthetic a.a.a.c.bo a
  + Field:        b La/a/a/c/bz;
    Access flags: 0x1010
      = final synthetic a.a.a.c.bz b

Methods (count = 3):
  - Method:       <init>(La/a/a/c/bz;La/a/a/c/bo;)V
    Access flags: 0x0
      = ca(a.a.a.c.bz,a.a.a.c.bo)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/c/ca.b La/a/a/c/bz;]
      [5] aload_0 v0
      [6] aload_2 v2
      [7] putfield #5
        + Fieldref [a/a/a/c/ca.a La/a/a/c/bo;]
      [10] aload_0 v0
      [11] invokespecial #7
        + Methodref [a/a/a/c/bd.<init> ()V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get(I)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/c/ca.a La/a/a/c/bo;]
      [4] iload_1 v1
      [5] invokevirtual #8
        + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
      [8] checkcast #4
        + Class [java/util/Map$Entry]
      [11] invokeinterface #9
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [16] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()La/a/a/c/bf;
    Access flags: 0x0
      = a.a.a.c.bf c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/ca.b La/a/a/c/bz;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cb
  Superclass:    a/a/a/c/bf
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.cb extends a.a.a.c.bf

Interfaces (count = 1):
  + Class [java/util/Set]

Constant Pool (count = 173):
  + Integer [751619276]
  + Integer [1073741824]
  + String [collection too large]
  + Class [[Ljava/lang/Object;]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/aa]
  + Class [a/a/a/c/ae]
  + Class [a/a/a/c/bc]
  + Class [a/a/a/c/bf]
  + Class [a/a/a/c/bn]
  + Class [a/a/a/c/cb]
  + Class [a/a/a/c/cc]
  + Class [a/a/a/c/cf]
  + Class [a/a/a/c/dg]
  + Class [a/a/a/c/dp]
  + Class [a/a/a/c/dt]
  + Class [a/a/a/c/dx]
  + Class [java/lang/Integer]
  + Class [java/lang/Iterable]
  + Class [java/lang/Object]
  + Class [java/util/Arrays]
  + Class [java/util/Collection]
  + Class [java/util/EnumSet]
  + Class [java/util/Iterator]
  + Class [java/util/Set]
  + Double [0.7]
  + Fieldref [a/a/a/c/ae.a La/a/a/c/ae;]
  + Methodref [a/a/a/a/o.a (ZLjava/lang/Object;)V]
  + Methodref [a/a/a/c/aa.a (Ljava/lang/Iterable;)Ljava/util/Collection;]
  + Methodref [a/a/a/c/bc.a (I)I]
  + Methodref [a/a/a/c/bf.<init> ()V]
  + Methodref [a/a/a/c/bn.a (Ljava/util/EnumSet;)La/a/a/c/cb;]
  + Methodref [a/a/a/c/cb.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/cb.a (I)I]
  + Methodref [a/a/a/c/cb.a (Ljava/lang/Object;)La/a/a/c/cb;]
  + Methodref [a/a/a/c/cb.a (Ljava/util/Collection;)La/a/a/c/cb;]
  + Methodref [a/a/a/c/cb.a (Ljava/util/EnumSet;)La/a/a/c/cb;]
  + Methodref [a/a/a/c/cb.a (Ljava/util/Iterator;)La/a/a/c/cb;]
  + Methodref [a/a/a/c/cb.b (I[Ljava/lang/Object;)La/a/a/c/cb;]
  + Methodref [a/a/a/c/cb.b_ ()Z]
  + Methodref [a/a/a/c/cb.e ()Z]
  + Methodref [a/a/a/c/cb.g ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/cb.hashCode ()I]
  + Methodref [a/a/a/c/cc.<init> ()V]
  + Methodref [a/a/a/c/cc.a ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/cc.b (Ljava/util/Iterator;)La/a/a/c/cc;]
  + Methodref [a/a/a/c/cc.c (Ljava/lang/Object;)La/a/a/c/cc;]
  + Methodref [a/a/a/c/dg.a (Ljava/lang/Object;I)Ljava/lang/Object;]
  + Methodref [a/a/a/c/dg.b ([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + Methodref [a/a/a/c/dp.<init> ([Ljava/lang/Object;I[Ljava/lang/Object;I)V]
  + Methodref [a/a/a/c/dt.a (Ljava/util/Set;)I]
  + Methodref [a/a/a/c/dt.a (Ljava/util/Set;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/dx.<init> (Ljava/lang/Object;)V]
  + Methodref [a/a/a/c/dx.<init> (Ljava/lang/Object;I)V]
  + Methodref [java/lang/Integer.highestOneBit (I)I]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/util/Arrays.fill ([Ljava/lang/Object;IILjava/lang/Object;)V]
  + Methodref [java/util/EnumSet.copyOf (Ljava/util/EnumSet;)Ljava/util/EnumSet;]
  + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [java/util/Collection.toArray ()[Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/Object;I)V]
  + NameAndType [<init> ([Ljava/lang/Object;I[Ljava/lang/Object;I)V]
  + NameAndType [a ()La/a/a/c/cb;]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a (I)I]
  + NameAndType [a (Ljava/lang/Iterable;)Ljava/util/Collection;]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/c/cb;]
  + NameAndType [a (Ljava/lang/Object;I)Ljava/lang/Object;]
  + NameAndType [a (Ljava/util/Collection;)La/a/a/c/cb;]
  + NameAndType [a (Ljava/util/EnumSet;)La/a/a/c/cb;]
  + NameAndType [a (Ljava/util/Iterator;)La/a/a/c/cb;]
  + NameAndType [a (Ljava/util/Set;)I]
  + NameAndType [a (Ljava/util/Set;Ljava/lang/Object;)Z]
  + NameAndType [a (ZLjava/lang/Object;)V]
  + NameAndType [a La/a/a/c/ae;]
  + NameAndType [b (I[Ljava/lang/Object;)La/a/a/c/cb;]
  + NameAndType [b (Ljava/util/Iterator;)La/a/a/c/cc;]
  + NameAndType [b ([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + NameAndType [b_ ()Z]
  + NameAndType [c (Ljava/lang/Object;)La/a/a/c/cc;]
  + NameAndType [copyOf (Ljava/util/EnumSet;)Ljava/util/EnumSet;]
  + NameAndType [e ()Z]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [fill ([Ljava/lang/Object;IILjava/lang/Object;)V]
  + NameAndType [g ()La/a/a/c/cb;]
  + NameAndType [hasNext ()Z]
  + NameAndType [hashCode ()I]
  + NameAndType [highestOneBit (I)I]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [toArray ()[Ljava/lang/Object;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/cb;]
  + Utf8 [()La/a/a/c/cc;]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [()[Ljava/lang/Object;]
  + Utf8 [(I)I]
  + Utf8 [(I[Ljava/lang/Object;)La/a/a/c/cb;]
  + Utf8 [(Ljava/lang/Iterable;)La/a/a/c/cb;]
  + Utf8 [(Ljava/lang/Iterable;)Ljava/util/Collection;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/cb;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/cc;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;I)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;I)V]
  + Utf8 [(Ljava/util/Collection;)La/a/a/c/cb;]
  + Utf8 [(Ljava/util/EnumSet;)La/a/a/c/cb;]
  + Utf8 [(Ljava/util/EnumSet;)Ljava/util/EnumSet;]
  + Utf8 [(Ljava/util/Iterator;)La/a/a/c/cb;]
  + Utf8 [(Ljava/util/Iterator;)La/a/a/c/cc;]
  + Utf8 [(Ljava/util/Set;)I]
  + Utf8 [(Ljava/util/Set;Ljava/lang/Object;)Z]
  + Utf8 [(ZLjava/lang/Object;)V]
  + Utf8 [([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + Utf8 [([Ljava/lang/Object;IILjava/lang/Object;)V]
  + Utf8 [([Ljava/lang/Object;I[Ljava/lang/Object;I)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/ae;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/Object;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/aa]
  + Utf8 [a/a/a/c/ae]
  + Utf8 [a/a/a/c/bc]
  + Utf8 [a/a/a/c/bf]
  + Utf8 [a/a/a/c/bn]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [a/a/a/c/cc]
  + Utf8 [a/a/a/c/cf]
  + Utf8 [a/a/a/c/dg]
  + Utf8 [a/a/a/c/dp]
  + Utf8 [a/a/a/c/dt]
  + Utf8 [a/a/a/c/dx]
  + Utf8 [b]
  + Utf8 [b_]
  + Utf8 [c]
  + Utf8 [collection too large]
  + Utf8 [copyOf]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [fill]
  + Utf8 [g]
  + Utf8 [h]
  + Utf8 [hasNext]
  + Utf8 [hashCode]
  + Utf8 [highestOneBit]
  + Utf8 [iterator]
  + Utf8 [java/lang/Integer]
  + Utf8 [java/lang/Iterable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Arrays]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/EnumSet]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Set]
  + Utf8 [next]
  + Utf8 [toArray]

Fields (count = 0):

Methods (count = 16):
  + Method:       g()La/a/a/c/cb;
    Access flags: 0x9
      = public static a.a.a.c.cb g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] getstatic #28
        + Fieldref [a/a/a/c/ae.a La/a/a/c/ae;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)La/a/a/c/cb;
    Access flags: 0x9
      = public static a.a.a.c.cb a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #17
        + Class [a/a/a/c/dx]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #54
        + Methodref [a/a/a/c/dx.<init> (Ljava/lang/Object;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(I[Ljava/lang/Object;)La/a/a/c/cb;
    Access flags: 0x8a
      = private static varargs a.a.a.c.cb b(int,java.lang.Object[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 245, locals = 13, stack = 6):
      [0] iload_0 v0
      [1] lookupswitch (2 offsets, default=40) (target=41)
        0: offset = 27, target = 28
        1: offset = 31, target = 32
        default: offset = 40, target = 41
      [28] invokestatic #43
        + Methodref [a/a/a/c/cb.g ()La/a/a/c/cb;]
      [31] areturn
      [32] aload_1 v1
      [33] iconst_0
      [34] aaload
      [35] astore_2 v2
      [36] aload_2 v2
      [37] invokestatic #36
        + Methodref [a/a/a/c/cb.a (Ljava/lang/Object;)La/a/a/c/cb;]
      [40] areturn
      [41] iload_0 v0
      [42] invokestatic #35
        + Methodref [a/a/a/c/cb.a (I)I]
      [45] istore_2 v2
      [46] iload_2 v2
      [47] anewarray #20
        + Class [java/lang/Object]
      [50] astore_3 v3
      [51] iload_2 v2
      [52] iconst_1
      [53] isub
      [54] istore v4
      [56] iconst_0
      [57] istore v5
      [59] iconst_0
      [60] istore v6
      [62] iconst_0
      [63] istore v7
      [65] iload v7
      [67] iload_0 v0
      [68] ificmpge +96 (target=164)
      [71] aload_1 v1
      [72] iload v7
      [74] aaload
      [75] iload v7
      [77] invokestatic #49
        + Methodref [a/a/a/c/dg.a (Ljava/lang/Object;I)Ljava/lang/Object;]
      [80] astore v8
      [82] aload v8
      [84] invokevirtual #58
        + Methodref [java/lang/Object.hashCode ()I]
      [87] istore v9
      [89] iload v9
      [91] invokestatic #31
        + Methodref [a/a/a/c/bc.a (I)I]
      [94] istore v10
      [96] iload v10
      [98] iload v4
      [100] iand
      [101] istore v11
      [103] aload_3 v3
      [104] iload v11
      [106] aaload
      [107] astore v12
      [109] aload v12
      [111] ifnonnull +28 (target=139)
      [114] aload_1 v1
      [115] iload v6
      [117] iinc v6, 1
      [120] aload v8
      [122] aastore
      [123] aload_3 v3
      [124] iload v11
      [126] aload v8
      [128] aastore
      [129] iload v5
      [131] iload v9
      [133] iadd
      [134] istore v5
      [136] goto +22 (target=158)
      [139] aload v12
      [141] aload v8
      [143] invokevirtual #57
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [146] ifeq +6 (target=152)
      [149] goto +9 (target=158)
      [152] iinc v10, 1
      [155] goto -59 (target=96)
      [158] iinc v7, 1
      [161] goto -96 (target=65)
      [164] aload_1 v1
      [165] iload v6
      [167] iload_0 v0
      [168] aconst_null
      [169] invokestatic #59
        + Methodref [java/util/Arrays.fill ([Ljava/lang/Object;IILjava/lang/Object;)V]
      [172] iload v6
      [174] iconst_1
      [175] ificmpne +20 (target=195)
      [178] aload_1 v1
      [179] iconst_0
      [180] aaload
      [181] astore v7
      [183] new #17
        + Class [a/a/a/c/dx]
      [186] dup
      [187] aload v7
      [189] iload v5
      [191] invokespecial #55
        + Methodref [a/a/a/c/dx.<init> (Ljava/lang/Object;I)V]
      [194] areturn
      [195] iload_2 v2
      [196] iload v6
      [198] invokestatic #35
        + Methodref [a/a/a/c/cb.a (I)I]
      [201] ificmpeq +10 (target=211)
      [204] iload v6
      [206] aload_1 v1
      [207] invokestatic #40
        + Methodref [a/a/a/c/cb.b (I[Ljava/lang/Object;)La/a/a/c/cb;]
      [210] areturn
      [211] iload v6
      [213] aload_1 v1
      [214] arraylength
      [215] ificmpge +12 (target=227)
      [218] aload_1 v1
      [219] iload v6
      [221] invokestatic #50
        + Methodref [a/a/a/c/dg.b ([Ljava/lang/Object;I)[Ljava/lang/Object;]
      [224] goto +4 (target=228)
      [227] aload_1 v1
      [228] astore v7
      [230] new #15
        + Class [a/a/a/c/dp]
      [233] dup
      [234] aload v7
      [236] iload v5
      [238] aload_3 v3
      [239] iload v4
      [241] invokespecial #51
        + Methodref [a/a/a/c/dp.<init> ([Ljava/lang/Object;I[Ljava/lang/Object;I)V]
      [244] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 13):
        - [28] Var: ..., Stack: (empty)
        - [32] Var: ..., Stack: (empty)
        - [41] Var: ..., Stack: (empty)
        - [65] Var: [i][a:[Ljava/lang/Object;][i][a:[Ljava/lang/Object;][i][i][i][i], Stack: 
        - [96] Var: ...[a:java/lang/Object][i][i], Stack: (empty)
        - [139] Var: ...[i][a:java/lang/Object], Stack: (empty)
        - [152] Var: -2, Stack: (empty)
        - [158] Var: -3, Stack: (empty)
        - [164] Var: -1, Stack: (empty)
        - [195] Var: ..., Stack: (empty)
        - [211] Var: ..., Stack: (empty)
        - [227] Var: ..., Stack: (empty)
        - [228] Var: ..., Stack: [a:[Ljava/lang/Object;]
  + Method:       a(I)I
    Access flags: 0x8
      = static int a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 55, locals = 2, stack = 4):
      [0] iload_0 v0
      [1] ldc #1
        + Integer [751619276]
      [3] ificmpge +33 (target=36)
      [6] iload_0 v0
      [7] iconst_1
      [8] isub
      [9] invokestatic #56
        + Methodref [java/lang/Integer.highestOneBit (I)I]
      [12] iconst_1
      [13] ishl
      [14] istore_1 v1
      [15] iload_1 v1
      [16] i2d
      [17] ldc2_w #26
        + Double [0.7]
      [20] dmul
      [21] iload_0 v0
      [22] i2d
      [23] dcmpg
      [24] ifge +10 (target=34)
      [27] iload_1 v1
      [28] iconst_1
      [29] ishl
      [30] istore_1 v1
      [31] goto -16 (target=15)
      [34] iload_1 v1
      [35] ireturn
      [36] iload_0 v0
      [37] ldc #2
        + Integer [1073741824]
      [39] ificmpge +7 (target=46)
      [42] iconst_1
      [43] goto +4 (target=47)
      [46] iconst_0
      [47] ldc #3
        + String [collection too large]
      [49] invokestatic #29
        + Methodref [a/a/a/a/o.a (ZLjava/lang/Object;)V]
      [52] ldc #2
        + Integer [1073741824]
      [54] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 5):
        - [15] Var: ...[i], Stack: (empty)
        - [34] Var: ..., Stack: (empty)
        - [36] Var: -1, Stack: (empty)
        - [46] Var: ..., Stack: (empty)
        - [47] Var: ..., Stack: [i]
  + Method:       a(Ljava/lang/Iterable;)La/a/a/c/cb;
    Access flags: 0x9
      = public static a.a.a.c.cb a(java.lang.Iterable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 27, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] instanceof #22
        + Class [java/util/Collection]
      [4] ifeq +13 (target=17)
      [7] aload_0 v0
      [8] invokestatic #30
        + Methodref [a/a/a/c/aa.a (Ljava/lang/Iterable;)Ljava/util/Collection;]
      [11] invokestatic #37
        + Methodref [a/a/a/c/cb.a (Ljava/util/Collection;)La/a/a/c/cb;]
      [14] goto +12 (target=26)
      [17] aload_0 v0
      [18] invokeinterface #61
        + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
      [23] invokestatic #39
        + Methodref [a/a/a/c/cb.a (Ljava/util/Iterator;)La/a/a/c/cb;]
      [26] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [17] Var: ..., Stack: (empty)
        - [26] Var: ..., Stack: [a:a/a/a/c/cb]
  + Method:       a(Ljava/util/Iterator;)La/a/a/c/cb;
    Access flags: 0x9
      = public static a.a.a.c.cb a(java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 53, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokeinterface #63
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [6] ifne +7 (target=13)
      [9] invokestatic #43
        + Methodref [a/a/a/c/cb.g ()La/a/a/c/cb;]
      [12] areturn
      [13] aload_0 v0
      [14] invokeinterface #64
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [19] astore_1 v1
      [20] aload_0 v0
      [21] invokeinterface #63
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [26] ifne +8 (target=34)
      [29] aload_1 v1
      [30] invokestatic #36
        + Methodref [a/a/a/c/cb.a (Ljava/lang/Object;)La/a/a/c/cb;]
      [33] areturn
      [34] new #12
        + Class [a/a/a/c/cc]
      [37] dup
      [38] invokespecial #45
        + Methodref [a/a/a/c/cc.<init> ()V]
      [41] aload_1 v1
      [42] invokevirtual #48
        + Methodref [a/a/a/c/cc.c (Ljava/lang/Object;)La/a/a/c/cc;]
      [45] aload_0 v0
      [46] invokevirtual #47
        + Methodref [a/a/a/c/cc.b (Ljava/util/Iterator;)La/a/a/c/cc;]
      [49] invokevirtual #46
        + Methodref [a/a/a/c/cc.a ()La/a/a/c/cb;]
      [52] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ..., Stack: (empty)
        - [34] Var: ...[a:java/lang/Object], Stack: (empty)
  + Method:       a(Ljava/util/Collection;)La/a/a/c/cb;
    Access flags: 0x9
      = public static a.a.a.c.cb a(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 60, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] instanceof #11
        + Class [a/a/a/c/cb]
      [4] ifeq +27 (target=31)
      [7] aload_0 v0
      [8] instanceof #13
        + Class [a/a/a/c/cf]
      [11] ifne +20 (target=31)
      [14] aload_0 v0
      [15] checkcast #11
        + Class [a/a/a/c/cb]
      [18] astore_1 v1
      [19] aload_1 v1
      [20] invokevirtual #42
        + Methodref [a/a/a/c/cb.e ()Z]
      [23] ifne +5 (target=28)
      [26] aload_1 v1
      [27] areturn
      [28] goto +18 (target=46)
      [31] aload_0 v0
      [32] instanceof #23
        + Class [java/util/EnumSet]
      [35] ifeq +11 (target=46)
      [38] aload_0 v0
      [39] checkcast #23
        + Class [java/util/EnumSet]
      [42] invokestatic #38
        + Methodref [a/a/a/c/cb.a (Ljava/util/EnumSet;)La/a/a/c/cb;]
      [45] areturn
      [46] aload_0 v0
      [47] invokeinterface #62
        + InterfaceMethodref [java/util/Collection.toArray ()[Ljava/lang/Object;]
      [52] astore_1 v1
      [53] aload_1 v1
      [54] arraylength
      [55] aload_1 v1
      [56] invokestatic #40
        + Methodref [a/a/a/c/cb.b (I[Ljava/lang/Object;)La/a/a/c/cb;]
      [59] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [28] Var: ..., Stack: (empty)
        - [31] Var: ..., Stack: (empty)
        - [46] Var: ..., Stack: (empty)
  + Method:       a(Ljava/util/EnumSet;)La/a/a/c/cb;
    Access flags: 0xa
      = private static a.a.a.c.cb a(java.util.EnumSet)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokestatic #60
        + Methodref [java/util/EnumSet.copyOf (Ljava/util/EnumSet;)Ljava/util/EnumSet;]
      [4] invokestatic #33
        + Methodref [a/a/a/c/bn.a (Ljava/util/EnumSet;)La/a/a/c/cb;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>()V
    Access flags: 0x0
      = cb()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #32
        + Methodref [a/a/a/c/bf.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b_()Z
    Access flags: 0x0
      = boolean b_()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 50, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] aload_0 v0
      [2] ifacmpne +5 (target=7)
      [5] iconst_1
      [6] ireturn
      [7] aload_1 v1
      [8] instanceof #11
        + Class [a/a/a/c/cb]
      [11] ifeq +33 (target=44)
      [14] aload_0 v0
      [15] invokevirtual #41
        + Methodref [a/a/a/c/cb.b_ ()Z]
      [18] ifeq +26 (target=44)
      [21] aload_1 v1
      [22] checkcast #11
        + Class [a/a/a/c/cb]
      [25] invokevirtual #41
        + Methodref [a/a/a/c/cb.b_ ()Z]
      [28] ifeq +16 (target=44)
      [31] aload_0 v0
      [32] invokevirtual #44
        + Methodref [a/a/a/c/cb.hashCode ()I]
      [35] aload_1 v1
      [36] invokevirtual #58
        + Methodref [java/lang/Object.hashCode ()I]
      [39] ificmpeq +5 (target=44)
      [42] iconst_0
      [43] ireturn
      [44] aload_0 v0
      [45] aload_1 v1
      [46] invokestatic #53
        + Methodref [a/a/a/c/dt.a (Ljava/util/Set;Ljava/lang/Object;)Z]
      [49] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [7] Var: ..., Stack: (empty)
        - [44] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokestatic #52
        + Methodref [a/a/a/c/dt.a (Ljava/util/Set;)I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x401
      = public abstract a.a.a.c.ea a()
  + Method:       h()La/a/a/c/cc;
    Access flags: 0x9
      = public static a.a.a.c.cc h()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 0, stack = 2):
      [0] new #12
        + Class [a/a/a/c/cc]
      [3] dup
      [4] invokespecial #45
        + Methodref [a/a/a/c/cc.<init> ()V]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #34
        + Methodref [a/a/a/c/cb.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(I[Ljava/lang/Object;)La/a/a/c/cb;
    Access flags: 0x1008
      = static synthetic a.a.a.c.cb a(int,java.lang.Object[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] iload_0 v0
      [1] aload_1 v1
      [2] invokestatic #40
        + Methodref [a/a/a/c/cb.b (I[Ljava/lang/Object;)La/a/a/c/cb;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cc
  Superclass:    a/a/a/c/bg
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class a.a.a.c.cc extends a.a.a.c.bg

Interfaces (count = 0):

Constant Pool (count = 44):
  + Class [a/a/a/c/bg]
  + Class [a/a/a/c/cb]
  + Class [a/a/a/c/cc]
  + Fieldref [a/a/a/c/cc.a [Ljava/lang/Object;]
  + Fieldref [a/a/a/c/cc.b I]
  + Methodref [a/a/a/c/bg.<init> (I)V]
  + Methodref [a/a/a/c/bg.a (Ljava/lang/Object;)La/a/a/c/bg;]
  + Methodref [a/a/a/c/bg.a (Ljava/util/Iterator;)La/a/a/c/bh;]
  + Methodref [a/a/a/c/cb.a (I[Ljava/lang/Object;)La/a/a/c/cb;]
  + Methodref [a/a/a/c/cb.size ()I]
  + Methodref [a/a/a/c/cc.<init> (I)V]
  + Methodref [a/a/a/c/cc.b (Ljava/util/Iterator;)La/a/a/c/cc;]
  + Methodref [a/a/a/c/cc.c (Ljava/lang/Object;)La/a/a/c/cc;]
  + NameAndType [<init> (I)V]
  + NameAndType [a (I[Ljava/lang/Object;)La/a/a/c/cb;]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/c/bg;]
  + NameAndType [a (Ljava/util/Iterator;)La/a/a/c/bh;]
  + NameAndType [a [Ljava/lang/Object;]
  + NameAndType [b (Ljava/util/Iterator;)La/a/a/c/cc;]
  + NameAndType [b I]
  + NameAndType [c (Ljava/lang/Object;)La/a/a/c/cc;]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/cb;]
  + Utf8 [()V]
  + Utf8 [(I)V]
  + Utf8 [(I[Ljava/lang/Object;)La/a/a/c/cb;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/bg;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/bh;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/cc;]
  + Utf8 [(Ljava/util/Iterator;)La/a/a/c/bh;]
  + Utf8 [(Ljava/util/Iterator;)La/a/a/c/cc;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [[Ljava/lang/Object;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bg]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [a/a/a/c/cc]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [size]

Fields (count = 0):

Methods (count = 8):
  - Method:       <init>()V
    Access flags: 0x1
      = public cc()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] iconst_4
      [2] invokespecial #11
        + Methodref [a/a/a/c/cc.<init> (I)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(I)V
    Access flags: 0x0
      = cc(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] invokespecial #6
        + Methodref [a/a/a/c/bg.<init> (I)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(Ljava/lang/Object;)La/a/a/c/cc;
    Access flags: 0x1
      = public a.a.a.c.cc c(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #7
        + Methodref [a/a/a/c/bg.a (Ljava/lang/Object;)La/a/a/c/bg;]
      [5] pop
      [6] aload_0 v0
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/util/Iterator;)La/a/a/c/cc;
    Access flags: 0x1
      = public a.a.a.c.cc b(java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #8
        + Methodref [a/a/a/c/bg.a (Ljava/util/Iterator;)La/a/a/c/bh;]
      [5] pop
      [6] aload_0 v0
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/cb;
    Access flags: 0x1
      = public a.a.a.c.cb a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/c/cc.b I]
      [4] aload_0 v0
      [5] getfield #4
        + Fieldref [a/a/a/c/cc.a [Ljava/lang/Object;]
      [8] invokestatic #9
        + Methodref [a/a/a/c/cb.a (I[Ljava/lang/Object;)La/a/a/c/cb;]
      [11] astore_1 v1
      [12] aload_0 v0
      [13] aload_1 v1
      [14] invokevirtual #10
        + Methodref [a/a/a/c/cb.size ()I]
      [17] putfield #5
        + Fieldref [a/a/a/c/cc.b I]
      [20] aload_1 v1
      [21] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)La/a/a/c/bg;
    Access flags: 0x1001
      = public synthetic a.a.a.c.bg a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #13
        + Methodref [a/a/a/c/cc.c (Ljava/lang/Object;)La/a/a/c/cc;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Iterator;)La/a/a/c/bh;
    Access flags: 0x1001
      = public synthetic a.a.a.c.bh a(java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #12
        + Methodref [a/a/a/c/cc.b (Ljava/util/Iterator;)La/a/a/c/cc;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;)La/a/a/c/bh;
    Access flags: 0x1001
      = public synthetic a.a.a.c.bh b(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #13
        + Methodref [a/a/a/c/cc.c (Ljava/lang/Object;)La/a/a/c/cc;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cd
  Superclass:    a/a/a/c/ce
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.cd extends a.a.a.c.ce

Interfaces (count = 1):
  + Class [java/util/NavigableMap]

Constant Pool (count = 203):
  + String [expected fromKey <= toKey but %s > %s]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/af]
  + Class [a/a/a/c/bf]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/cb]
  + Class [a/a/a/c/cd]
  + Class [a/a/a/c/ce]
  + Class [a/a/a/c/cf]
  + Class [a/a/a/c/ct]
  + Class [a/a/a/c/dh]
  + Class [java/lang/Object]
  + Class [java/lang/UnsupportedOperationException]
  + Class [java/util/Comparator]
  + Class [java/util/Map$Entry]
  + Class [java/util/NavigableMap]
  + Fieldref [a/a/a/c/cd.a Ljava/util/Comparator;]
  + Fieldref [a/a/a/c/cd.b La/a/a/c/cd;]
  + Fieldref [a/a/a/c/cd.c La/a/a/c/cd;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Methodref [a/a/a/c/af.<init> (Ljava/util/Comparator;)V]
  + Methodref [a/a/a/c/bf.contains (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/bf.e ()Z]
  + Methodref [a/a/a/c/bf.size ()I]
  + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
  + Methodref [a/a/a/c/cb.b ()La/a/a/c/bo;]
  + Methodref [a/a/a/c/cd.a (Ljava/lang/Object;)La/a/a/c/cd;]
  + Methodref [a/a/a/c/cd.a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/cd;]
  + Methodref [a/a/a/c/cd.a (Ljava/lang/Object;Z)La/a/a/c/cd;]
  + Methodref [a/a/a/c/cd.a (Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cd;]
  + Methodref [a/a/a/c/cd.b ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/cd.b (Ljava/lang/Object;)La/a/a/c/cd;]
  + Methodref [a/a/a/c/cd.b (Ljava/lang/Object;Z)La/a/a/c/cd;]
  + Methodref [a/a/a/c/cd.ceilingEntry (Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + Methodref [a/a/a/c/cd.comparator ()Ljava/util/Comparator;]
  + Methodref [a/a/a/c/cd.d_ ()La/a/a/c/cf;]
  + Methodref [a/a/a/c/cd.f ()La/a/a/c/bf;]
  + Methodref [a/a/a/c/cd.firstEntry ()Ljava/util/Map$Entry;]
  + Methodref [a/a/a/c/cd.floorEntry (Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + Methodref [a/a/a/c/cd.g ()La/a/a/c/cd;]
  + Methodref [a/a/a/c/cd.h ()La/a/a/c/cd;]
  + Methodref [a/a/a/c/cd.higherEntry (Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + Methodref [a/a/a/c/cd.isEmpty ()Z]
  + Methodref [a/a/a/c/cd.k ()La/a/a/c/cf;]
  + Methodref [a/a/a/c/cd.l ()La/a/a/c/cf;]
  + Methodref [a/a/a/c/cd.lastEntry ()Ljava/util/Map$Entry;]
  + Methodref [a/a/a/c/cd.lowerEntry (Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + Methodref [a/a/a/c/cd.size ()I]
  + Methodref [a/a/a/c/ce.<init> ()V]
  + Methodref [a/a/a/c/ce.b ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/cf.a_ ()La/a/a/c/cf;]
  + Methodref [a/a/a/c/cf.comparator ()Ljava/util/Comparator;]
  + Methodref [a/a/a/c/cf.e ()Z]
  + Methodref [a/a/a/c/cf.first ()Ljava/lang/Object;]
  + Methodref [a/a/a/c/cf.last ()Ljava/lang/Object;]
  + Methodref [a/a/a/c/ct.a (Ljava/util/Map$Entry;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/dh.b ()La/a/a/c/dh;]
  + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
  + InterfaceMethodref [java/util/Comparator.compare (Ljava/lang/Object;Ljava/lang/Object;)I]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/util/Comparator;)V]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/c/cd;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/cd;]
  + NameAndType [a (Ljava/lang/Object;Z)La/a/a/c/cd;]
  + NameAndType [a (Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cd;]
  + NameAndType [a (Ljava/util/Map$Entry;)Ljava/lang/Object;]
  + NameAndType [a (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + NameAndType [a Ljava/util/Comparator;]
  + NameAndType [a_ ()La/a/a/c/cf;]
  + NameAndType [b ()La/a/a/c/bo;]
  + NameAndType [b ()La/a/a/c/cb;]
  + NameAndType [b ()La/a/a/c/dh;]
  + NameAndType [b (Ljava/lang/Object;)La/a/a/c/cd;]
  + NameAndType [b (Ljava/lang/Object;Z)La/a/a/c/cd;]
  + NameAndType [b La/a/a/c/cd;]
  + NameAndType [c La/a/a/c/cd;]
  + NameAndType [ceilingEntry (Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + NameAndType [comparator ()Ljava/util/Comparator;]
  + NameAndType [compare (Ljava/lang/Object;Ljava/lang/Object;)I]
  + NameAndType [contains (Ljava/lang/Object;)Z]
  + NameAndType [d_ ()La/a/a/c/cf;]
  + NameAndType [e ()Z]
  + NameAndType [f ()La/a/a/c/bf;]
  + NameAndType [first ()Ljava/lang/Object;]
  + NameAndType [firstEntry ()Ljava/util/Map$Entry;]
  + NameAndType [floorEntry (Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + NameAndType [g ()La/a/a/c/cd;]
  + NameAndType [get (I)Ljava/lang/Object;]
  + NameAndType [h ()La/a/a/c/cd;]
  + NameAndType [higherEntry (Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + NameAndType [isEmpty ()Z]
  + NameAndType [k ()La/a/a/c/cf;]
  + NameAndType [l ()La/a/a/c/cf;]
  + NameAndType [last ()Ljava/lang/Object;]
  + NameAndType [lastEntry ()Ljava/util/Map$Entry;]
  + NameAndType [lowerEntry (Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bf;]
  + Utf8 [()La/a/a/c/bo;]
  + Utf8 [()La/a/a/c/cb;]
  + Utf8 [()La/a/a/c/cd;]
  + Utf8 [()La/a/a/c/cf;]
  + Utf8 [()La/a/a/c/dh;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Comparator;]
  + Utf8 [()Ljava/util/Map$Entry;]
  + Utf8 [()Ljava/util/NavigableMap;]
  + Utf8 [()Ljava/util/NavigableSet;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(La/a/a/c/cd;)V]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/cd;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + Utf8 [(Ljava/lang/Object;)Ljava/util/SortedMap;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/cd;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;]
  + Utf8 [(Ljava/lang/Object;Z)La/a/a/c/cd;]
  + Utf8 [(Ljava/lang/Object;Z)Ljava/util/NavigableMap;]
  + Utf8 [(Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cd;]
  + Utf8 [(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;]
  + Utf8 [(Ljava/util/Comparator;)V]
  + Utf8 [(Ljava/util/Map$Entry;)Ljava/lang/Object;]
  + Utf8 [(ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/cd;]
  + Utf8 [Ljava/lang/Deprecated;]
  + Utf8 [Ljava/util/Comparator;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/af]
  + Utf8 [a/a/a/c/bf]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [a/a/a/c/cd]
  + Utf8 [a/a/a/c/ce]
  + Utf8 [a/a/a/c/cf]
  + Utf8 [a/a/a/c/ct]
  + Utf8 [a/a/a/c/dh]
  + Utf8 [a_]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [ceilingEntry]
  + Utf8 [ceilingKey]
  + Utf8 [comparator]
  + Utf8 [compare]
  + Utf8 [contains]
  + Utf8 [containsValue]
  + Utf8 [d]
  + Utf8 [d_]
  + Utf8 [descendingKeySet]
  + Utf8 [descendingMap]
  + Utf8 [e]
  + Utf8 [entrySet]
  + Utf8 [expected fromKey <= toKey but %s > %s]
  + Utf8 [f]
  + Utf8 [first]
  + Utf8 [firstEntry]
  + Utf8 [firstKey]
  + Utf8 [floorEntry]
  + Utf8 [floorKey]
  + Utf8 [g]
  + Utf8 [get]
  + Utf8 [h]
  + Utf8 [headMap]
  + Utf8 [higherEntry]
  + Utf8 [higherKey]
  + Utf8 [isEmpty]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/UnsupportedOperationException]
  + Utf8 [java/util/Comparator]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [java/util/NavigableMap]
  + Utf8 [k]
  + Utf8 [keySet]
  + Utf8 [l]
  + Utf8 [last]
  + Utf8 [lastEntry]
  + Utf8 [lastKey]
  + Utf8 [lowerEntry]
  + Utf8 [lowerKey]
  + Utf8 [navigableKeySet]
  + Utf8 [pollFirstEntry]
  + Utf8 [pollLastEntry]
  + Utf8 [size]
  + Utf8 [subMap]
  + Utf8 [tailMap]
  + Utf8 [values]

Fields (count = 3):
  + Field:        a Ljava/util/Comparator;
    Access flags: 0x1a
      = private static final java.util.Comparator a
  + Field:        b La/a/a/c/cd;
    Access flags: 0x1a
      = private static final a.a.a.c.cd b
  + Field:        c La/a/a/c/cd;
    Access flags: 0x82
      = private transient a.a.a.c.cd c

Methods (count = 47):
  - Method:       <init>()V
    Access flags: 0x0
      = cd()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #50
        + Methodref [a/a/a/c/ce.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/c/cd;)V
    Access flags: 0x0
      = cd(a.a.a.c.cd)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #50
        + Methodref [a/a/a/c/ce.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #19
        + Fieldref [a/a/a/c/cd.c La/a/a/c/cd;]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #38
        + Methodref [a/a/a/c/cd.f ()La/a/a/c/bf;]
      [4] invokevirtual #25
        + Methodref [a/a/a/c/bf.size ()I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       containsValue(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean containsValue(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #38
        + Methodref [a/a/a/c/cd.f ()La/a/a/c/bf;]
      [4] aload_1 v1
      [5] invokevirtual #23
        + Methodref [a/a/a/c/bf.contains (Ljava/lang/Object;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 26, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #37
        + Methodref [a/a/a/c/cd.d_ ()La/a/a/c/cf;]
      [4] invokevirtual #54
        + Methodref [a/a/a/c/cf.e ()Z]
      [7] ifne +13 (target=20)
      [10] aload_0 v0
      [11] invokevirtual #38
        + Methodref [a/a/a/c/cd.f ()La/a/a/c/bf;]
      [14] invokevirtual #24
        + Methodref [a/a/a/c/bf.e ()Z]
      [17] ifeq +7 (target=24)
      [20] iconst_1
      [21] goto +4 (target=25)
      [24] iconst_0
      [25] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [20] Var: ..., Stack: (empty)
        - [24] Var: ..., Stack: (empty)
        - [25] Var: ..., Stack: [i]
  + Method:       b()La/a/a/c/cb;
    Access flags: 0x1
      = public a.a.a.c.cb b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #51
        + Methodref [a/a/a/c/ce.b ()La/a/a/c/cb;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d_()La/a/a/c/cf;
    Access flags: 0x401
      = public abstract a.a.a.c.cf d_()
  + Method:       f()La/a/a/c/bf;
    Access flags: 0x401
      = public abstract a.a.a.c.bf f()
  + Method:       comparator()Ljava/util/Comparator;
    Access flags: 0x1
      = public java.util.Comparator comparator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #37
        + Methodref [a/a/a/c/cd.d_ ()La/a/a/c/cf;]
      [4] invokevirtual #53
        + Methodref [a/a/a/c/cf.comparator ()Ljava/util/Comparator;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       firstKey()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object firstKey()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #37
        + Methodref [a/a/a/c/cd.d_ ()La/a/a/c/cf;]
      [4] invokevirtual #55
        + Methodref [a/a/a/c/cf.first ()Ljava/lang/Object;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       lastKey()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object lastKey()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #37
        + Methodref [a/a/a/c/cd.d_ ()La/a/a/c/cf;]
      [4] invokevirtual #56
        + Methodref [a/a/a/c/cf.last ()Ljava/lang/Object;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)La/a/a/c/cd;
    Access flags: 0x1
      = public a.a.a.c.cd a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iconst_0
      [3] invokevirtual #30
        + Methodref [a/a/a/c/cd.a (Ljava/lang/Object;Z)La/a/a/c/cd;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;Z)La/a/a/c/cd;
    Access flags: 0x401
      = public abstract a.a.a.c.cd a(java.lang.Object,boolean)
  + Method:       a(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/cd;
    Access flags: 0x1
      = public a.a.a.c.cd a(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 3, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iconst_1
      [3] aload_2 v2
      [4] iconst_0
      [5] invokevirtual #31
        + Methodref [a/a/a/c/cd.a (Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cd;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cd;
    Access flags: 0x1
      = public a.a.a.c.cd a(java.lang.Object,boolean,java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 59, locals = 5, stack = 6):
      [0] aload_1 v1
      [1] invokestatic #20
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_3 v3
      [6] invokestatic #20
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] pop
      [10] aload_0 v0
      [11] invokevirtual #36
        + Methodref [a/a/a/c/cd.comparator ()Ljava/util/Comparator;]
      [14] aload_1 v1
      [15] aload_3 v3
      [16] invokeinterface #60
        + InterfaceMethodref [java/util/Comparator.compare (Ljava/lang/Object;Ljava/lang/Object;)I]
      [21] ifgt +7 (target=28)
      [24] iconst_1
      [25] goto +4 (target=29)
      [28] iconst_0
      [29] ldc #1
        + String [expected fromKey <= toKey but %s > %s]
      [31] iconst_2
      [32] anewarray #12
        + Class [java/lang/Object]
      [35] dup
      [36] iconst_0
      [37] aload_1 v1
      [38] aastore
      [39] dup
      [40] iconst_1
      [41] aload_3 v3
      [42] aastore
      [43] invokestatic #21
        + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
      [46] aload_0 v0
      [47] aload_3 v3
      [48] iload v4
      [50] invokevirtual #30
        + Methodref [a/a/a/c/cd.a (Ljava/lang/Object;Z)La/a/a/c/cd;]
      [53] aload_1 v1
      [54] iload_2 v2
      [55] invokevirtual #34
        + Methodref [a/a/a/c/cd.b (Ljava/lang/Object;Z)La/a/a/c/cd;]
      [58] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [28] Var: ..., Stack: (empty)
        - [29] Var: ..., Stack: [i]
  + Method:       b(Ljava/lang/Object;)La/a/a/c/cd;
    Access flags: 0x1
      = public a.a.a.c.cd b(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iconst_1
      [3] invokevirtual #34
        + Methodref [a/a/a/c/cd.b (Ljava/lang/Object;Z)La/a/a/c/cd;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;Z)La/a/a/c/cd;
    Access flags: 0x401
      = public abstract a.a.a.c.cd b(java.lang.Object,boolean)
  + Method:       lowerEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
    Access flags: 0x1
      = public java.util.Map$Entry lowerEntry(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iconst_0
      [3] invokevirtual #30
        + Methodref [a/a/a/c/cd.a (Ljava/lang/Object;Z)La/a/a/c/cd;]
      [6] invokevirtual #47
        + Methodref [a/a/a/c/cd.lastEntry ()Ljava/util/Map$Entry;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       lowerKey(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object lowerKey(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #48
        + Methodref [a/a/a/c/cd.lowerEntry (Ljava/lang/Object;)Ljava/util/Map$Entry;]
      [5] invokestatic #57
        + Methodref [a/a/a/c/ct.a (Ljava/util/Map$Entry;)Ljava/lang/Object;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       floorEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
    Access flags: 0x1
      = public java.util.Map$Entry floorEntry(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iconst_1
      [3] invokevirtual #30
        + Methodref [a/a/a/c/cd.a (Ljava/lang/Object;Z)La/a/a/c/cd;]
      [6] invokevirtual #47
        + Methodref [a/a/a/c/cd.lastEntry ()Ljava/util/Map$Entry;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       floorKey(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object floorKey(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #40
        + Methodref [a/a/a/c/cd.floorEntry (Ljava/lang/Object;)Ljava/util/Map$Entry;]
      [5] invokestatic #57
        + Methodref [a/a/a/c/ct.a (Ljava/util/Map$Entry;)Ljava/lang/Object;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       ceilingEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
    Access flags: 0x1
      = public java.util.Map$Entry ceilingEntry(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iconst_1
      [3] invokevirtual #34
        + Methodref [a/a/a/c/cd.b (Ljava/lang/Object;Z)La/a/a/c/cd;]
      [6] invokevirtual #39
        + Methodref [a/a/a/c/cd.firstEntry ()Ljava/util/Map$Entry;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       ceilingKey(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object ceilingKey(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #35
        + Methodref [a/a/a/c/cd.ceilingEntry (Ljava/lang/Object;)Ljava/util/Map$Entry;]
      [5] invokestatic #57
        + Methodref [a/a/a/c/ct.a (Ljava/util/Map$Entry;)Ljava/lang/Object;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       higherEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
    Access flags: 0x1
      = public java.util.Map$Entry higherEntry(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iconst_0
      [3] invokevirtual #34
        + Methodref [a/a/a/c/cd.b (Ljava/lang/Object;Z)La/a/a/c/cd;]
      [6] invokevirtual #39
        + Methodref [a/a/a/c/cd.firstEntry ()Ljava/util/Map$Entry;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       higherKey(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object higherKey(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #43
        + Methodref [a/a/a/c/cd.higherEntry (Ljava/lang/Object;)Ljava/util/Map$Entry;]
      [5] invokestatic #57
        + Methodref [a/a/a/c/ct.a (Ljava/util/Map$Entry;)Ljava/lang/Object;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       firstEntry()Ljava/util/Map$Entry;
    Access flags: 0x1
      = public java.util.Map$Entry firstEntry()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 26, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #44
        + Methodref [a/a/a/c/cd.isEmpty ()Z]
      [4] ifeq +7 (target=11)
      [7] aconst_null
      [8] goto +17 (target=25)
      [11] aload_0 v0
      [12] invokevirtual #32
        + Methodref [a/a/a/c/cd.b ()La/a/a/c/cb;]
      [15] invokevirtual #27
        + Methodref [a/a/a/c/cb.b ()La/a/a/c/bo;]
      [18] iconst_0
      [19] invokevirtual #26
        + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
      [22] checkcast #15
        + Class [java/util/Map$Entry]
      [25] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [25] Var: ..., Stack: [a:java/util/Map$Entry]
  + Method:       lastEntry()Ljava/util/Map$Entry;
    Access flags: 0x1
      = public java.util.Map$Entry lastEntry()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 31, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #44
        + Methodref [a/a/a/c/cd.isEmpty ()Z]
      [4] ifeq +7 (target=11)
      [7] aconst_null
      [8] goto +22 (target=30)
      [11] aload_0 v0
      [12] invokevirtual #32
        + Methodref [a/a/a/c/cd.b ()La/a/a/c/cb;]
      [15] invokevirtual #27
        + Methodref [a/a/a/c/cb.b ()La/a/a/c/bo;]
      [18] aload_0 v0
      [19] invokevirtual #49
        + Methodref [a/a/a/c/cd.size ()I]
      [22] iconst_1
      [23] isub
      [24] invokevirtual #26
        + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
      [27] checkcast #15
        + Class [java/util/Map$Entry]
      [30] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [30] Var: ..., Stack: [a:java/util/Map$Entry]
  + Method:       pollFirstEntry()Ljava/util/Map$Entry;
    Access flags: 0x11
      = public final java.util.Map$Entry pollFirstEntry()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #13
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #59
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       pollLastEntry()Ljava/util/Map$Entry;
    Access flags: 0x11
      = public final java.util.Map$Entry pollLastEntry()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #13
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #59
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       h()La/a/a/c/cd;
    Access flags: 0x1
      = public a.a.a.c.cd h()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #19
        + Fieldref [a/a/a/c/cd.c La/a/a/c/cd;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnonnull +13 (target=19)
      [9] aload_0 v0
      [10] aload_0 v0
      [11] invokevirtual #41
        + Methodref [a/a/a/c/cd.g ()La/a/a/c/cd;]
      [14] dup_x1
      [15] putfield #19
        + Fieldref [a/a/a/c/cd.c La/a/a/c/cd;]
      [18] astore_1 v1
      [19] aload_1 v1
      [20] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [19] Var: ...[a:a/a/a/c/cd], Stack: (empty)
  + Method:       g()La/a/a/c/cd;
    Access flags: 0x400
      = abstract a.a.a.c.cd g()
  + Method:       k()La/a/a/c/cf;
    Access flags: 0x1
      = public a.a.a.c.cf k()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #37
        + Methodref [a/a/a/c/cd.d_ ()La/a/a/c/cf;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       l()La/a/a/c/cf;
    Access flags: 0x1
      = public a.a.a.c.cf l()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #37
        + Methodref [a/a/a/c/cd.d_ ()La/a/a/c/cf;]
      [4] invokevirtual #52
        + Methodref [a/a/a/c/cf.a_ ()La/a/a/c/cf;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()La/a/a/c/cb;
    Access flags: 0x1001
      = public synthetic a.a.a.c.cb d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #37
        + Methodref [a/a/a/c/cd.d_ ()La/a/a/c/cf;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       entrySet()Ljava/util/Set;
    Access flags: 0x1001
      = public synthetic java.util.Set entrySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #32
        + Methodref [a/a/a/c/cd.b ()La/a/a/c/cb;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       values()Ljava/util/Collection;
    Access flags: 0x1001
      = public synthetic java.util.Collection values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #38
        + Methodref [a/a/a/c/cd.f ()La/a/a/c/bf;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       keySet()Ljava/util/Set;
    Access flags: 0x1001
      = public synthetic java.util.Set keySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #37
        + Methodref [a/a/a/c/cd.d_ ()La/a/a/c/cf;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;
    Access flags: 0x1001
      = public synthetic java.util.SortedMap tailMap(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #33
        + Methodref [a/a/a/c/cd.b (Ljava/lang/Object;)La/a/a/c/cd;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       headMap(Ljava/lang/Object;)Ljava/util/SortedMap;
    Access flags: 0x1001
      = public synthetic java.util.SortedMap headMap(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #28
        + Methodref [a/a/a/c/cd.a (Ljava/lang/Object;)La/a/a/c/cd;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
    Access flags: 0x1001
      = public synthetic java.util.SortedMap subMap(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokevirtual #29
        + Methodref [a/a/a/c/cd.a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/cd;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       tailMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
    Access flags: 0x1001
      = public synthetic java.util.NavigableMap tailMap(java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokevirtual #34
        + Methodref [a/a/a/c/cd.b (Ljava/lang/Object;Z)La/a/a/c/cd;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       headMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
    Access flags: 0x1001
      = public synthetic java.util.NavigableMap headMap(java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokevirtual #30
        + Methodref [a/a/a/c/cd.a (Ljava/lang/Object;Z)La/a/a/c/cd;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       subMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;
    Access flags: 0x1001
      = public synthetic java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 5, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aload_3 v3
      [4] iload v4
      [6] invokevirtual #31
        + Methodref [a/a/a/c/cd.a (Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cd;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       descendingKeySet()Ljava/util/NavigableSet;
    Access flags: 0x1001
      = public synthetic java.util.NavigableSet descendingKeySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #46
        + Methodref [a/a/a/c/cd.l ()La/a/a/c/cf;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       navigableKeySet()Ljava/util/NavigableSet;
    Access flags: 0x1001
      = public synthetic java.util.NavigableSet navigableKeySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #45
        + Methodref [a/a/a/c/cd.k ()La/a/a/c/cf;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       descendingMap()Ljava/util/NavigableMap;
    Access flags: 0x1001
      = public synthetic java.util.NavigableMap descendingMap()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #42
        + Methodref [a/a/a/c/cd.h ()La/a/a/c/cd;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 0, stack = 3):
      [0] invokestatic #58
        + Methodref [a/a/a/c/dh.b ()La/a/a/c/dh;]
      [3] putstatic #17
        + Fieldref [a/a/a/c/cd.a Ljava/util/Comparator;]
      [6] new #3
        + Class [a/a/a/c/af]
      [9] dup
      [10] getstatic #17
        + Fieldref [a/a/a/c/cd.a Ljava/util/Comparator;]
      [13] invokespecial #22
        + Methodref [a/a/a/c/af.<init> (Ljava/util/Comparator;)V]
      [16] putstatic #18
        + Fieldref [a/a/a/c/cd.b La/a/a/c/cd;]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ce
  Superclass:    a/a/a/c/bs
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.c.ce extends a.a.a.c.bs

Interfaces (count = 0):

Constant Pool (count = 10):
  + Class [a/a/a/c/bs]
  + Class [a/a/a/c/ce]
  + Methodref [a/a/a/c/bs.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a/a/a/c/bs]
  + Utf8 [a/a/a/c/ce]

Fields (count = 0):

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x0
      = ce()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #3
        + Methodref [a/a/a/c/bs.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cf
  Superclass:    a/a/a/c/cg
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.cf extends a.a.a.c.cg

Interfaces (count = 2):
  + Class [a/a/a/c/dy]
  + Class [java/util/NavigableSet]

Constant Pool (count = 143):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/ac]
  + Class [a/a/a/c/ag]
  + Class [a/a/a/c/cf]
  + Class [a/a/a/c/cg]
  + Class [a/a/a/c/ch]
  + Class [a/a/a/c/ck]
  + Class [a/a/a/c/dh]
  + Class [a/a/a/c/dy]
  + Class [a/a/a/c/ea]
  + Class [java/lang/UnsupportedOperationException]
  + Class [java/util/Comparator]
  + Class [java/util/NavigableSet]
  + Fieldref [a/a/a/c/cf.a Ljava/util/Comparator;]
  + Fieldref [a/a/a/c/cf.b La/a/a/c/cf;]
  + Fieldref [a/a/a/c/cf.c Ljava/util/Comparator;]
  + Fieldref [a/a/a/c/cf.d La/a/a/c/cf;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/a/o.a (Z)V]
  + Methodref [a/a/a/c/ac.<init> (La/a/a/c/cf;)V]
  + Methodref [a/a/a/c/ag.<init> (Ljava/util/Comparator;)V]
  + Methodref [a/a/a/c/cf.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/cf.a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/cf;]
  + Methodref [a/a/a/c/cf.a (Ljava/lang/Object;Z)La/a/a/c/cf;]
  + Methodref [a/a/a/c/cf.a (Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;]
  + Methodref [a/a/a/c/cf.a_ ()La/a/a/c/cf;]
  + Methodref [a/a/a/c/cf.b (Ljava/lang/Object;)La/a/a/c/cf;]
  + Methodref [a/a/a/c/cf.b (Ljava/lang/Object;Z)La/a/a/c/cf;]
  + Methodref [a/a/a/c/cf.b (Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;]
  + Methodref [a/a/a/c/cf.c ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/cf.c (Ljava/lang/Object;)La/a/a/c/cf;]
  + Methodref [a/a/a/c/cf.c (Ljava/lang/Object;Z)La/a/a/c/cf;]
  + Methodref [a/a/a/c/cf.d ()La/a/a/c/cf;]
  + Methodref [a/a/a/c/cf.d (Ljava/lang/Object;Z)La/a/a/c/cf;]
  + Methodref [a/a/a/c/cf.i ()La/a/a/c/cf;]
  + Methodref [a/a/a/c/cg.<init> ()V]
  + Methodref [a/a/a/c/ch.a (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/ck.b (Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/dh.b ()La/a/a/c/dh;]
  + Methodref [a/a/a/c/ea.next ()Ljava/lang/Object;]
  + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
  + InterfaceMethodref [java/util/Comparator.compare (Ljava/lang/Object;Ljava/lang/Object;)I]
  + InterfaceMethodref [java/util/Comparator.equals (Ljava/lang/Object;)Z]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/cf;)V]
  + NameAndType [<init> (Ljava/util/Comparator;)V]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/cf;]
  + NameAndType [a (Ljava/lang/Object;Z)La/a/a/c/cf;]
  + NameAndType [a (Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;]
  + NameAndType [a (Z)V]
  + NameAndType [a Ljava/util/Comparator;]
  + NameAndType [a_ ()La/a/a/c/cf;]
  + NameAndType [b ()La/a/a/c/dh;]
  + NameAndType [b (Ljava/lang/Object;)La/a/a/c/cf;]
  + NameAndType [b (Ljava/lang/Object;Z)La/a/a/c/cf;]
  + NameAndType [b (Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;]
  + NameAndType [b (Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [b La/a/a/c/cf;]
  + NameAndType [c ()La/a/a/c/ea;]
  + NameAndType [c (Ljava/lang/Object;)La/a/a/c/cf;]
  + NameAndType [c (Ljava/lang/Object;Z)La/a/a/c/cf;]
  + NameAndType [c Ljava/util/Comparator;]
  + NameAndType [compare (Ljava/lang/Object;Ljava/lang/Object;)I]
  + NameAndType [d ()La/a/a/c/cf;]
  + NameAndType [d (Ljava/lang/Object;Z)La/a/a/c/cf;]
  + NameAndType [d La/a/a/c/cf;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [i ()La/a/a/c/cf;]
  + NameAndType [next ()Ljava/lang/Object;]
  + Utf8 [()La/a/a/c/cf;]
  + Utf8 [()La/a/a/c/dh;]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Comparator;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/NavigableSet;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/c/cf;)V]
  + Utf8 [(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/cf;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/util/SortedSet;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/cf;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;]
  + Utf8 [(Ljava/lang/Object;Z)La/a/a/c/cf;]
  + Utf8 [(Ljava/lang/Object;Z)Ljava/util/NavigableSet;]
  + Utf8 [(Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;]
  + Utf8 [(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;]
  + Utf8 [(Ljava/util/Comparator;)La/a/a/c/cf;]
  + Utf8 [(Ljava/util/Comparator;)V]
  + Utf8 [(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Z)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/cf;]
  + Utf8 [Ljava/lang/Deprecated;]
  + Utf8 [Ljava/util/Comparator;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/ac]
  + Utf8 [a/a/a/c/ag]
  + Utf8 [a/a/a/c/cf]
  + Utf8 [a/a/a/c/cg]
  + Utf8 [a/a/a/c/ch]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [a/a/a/c/dh]
  + Utf8 [a/a/a/c/dy]
  + Utf8 [a/a/a/c/ea]
  + Utf8 [a_]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [ceiling]
  + Utf8 [comparator]
  + Utf8 [compare]
  + Utf8 [d]
  + Utf8 [descendingIterator]
  + Utf8 [descendingSet]
  + Utf8 [equals]
  + Utf8 [first]
  + Utf8 [floor]
  + Utf8 [headSet]
  + Utf8 [higher]
  + Utf8 [i]
  + Utf8 [iterator]
  + Utf8 [java/lang/UnsupportedOperationException]
  + Utf8 [java/util/Comparator]
  + Utf8 [java/util/NavigableSet]
  + Utf8 [last]
  + Utf8 [lower]
  + Utf8 [next]
  + Utf8 [pollFirst]
  + Utf8 [pollLast]
  + Utf8 [subSet]
  + Utf8 [tailSet]

Fields (count = 4):
  + Field:        c Ljava/util/Comparator;
    Access flags: 0x1a
      = private static final java.util.Comparator c
  + Field:        d La/a/a/c/cf;
    Access flags: 0x1a
      = private static final a.a.a.c.cf d
  + Field:        a Ljava/util/Comparator;
    Access flags: 0x90
      = final transient java.util.Comparator a
  + Field:        b La/a/a/c/cf;
    Access flags: 0x80
      = transient a.a.a.c.cf b

Methods (count = 35):
  + Method:       i()La/a/a/c/cf;
    Access flags: 0xa
      = private static a.a.a.c.cf i()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] getstatic #17
        + Fieldref [a/a/a/c/cf.d La/a/a/c/cf;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Comparator;)La/a/a/c/cf;
    Access flags: 0x8
      = static a.a.a.c.cf a(java.util.Comparator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 25, locals = 1, stack = 3):
      [0] getstatic #16
        + Fieldref [a/a/a/c/cf.c Ljava/util/Comparator;]
      [3] aload_0 v0
      [4] invokeinterface #43
        + InterfaceMethodref [java/util/Comparator.equals (Ljava/lang/Object;)Z]
      [9] ifeq +7 (target=16)
      [12] invokestatic #35
        + Methodref [a/a/a/c/cf.i ()La/a/a/c/cf;]
      [15] areturn
      [16] new #3
        + Class [a/a/a/c/ag]
      [19] dup
      [20] aload_0 v0
      [21] invokespecial #21
        + Methodref [a/a/a/c/ag.<init> (Ljava/util/Comparator;)V]
      [24] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [16] Var: ..., Stack: (empty)
  - Method:       <init>(Ljava/util/Comparator;)V
    Access flags: 0x0
      = cf(java.util.Comparator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #36
        + Methodref [a/a/a/c/cg.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #14
        + Fieldref [a/a/a/c/cf.a Ljava/util/Comparator;]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       comparator()Ljava/util/Comparator;
    Access flags: 0x1
      = public java.util.Comparator comparator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #14
        + Fieldref [a/a/a/c/cf.a Ljava/util/Comparator;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x401
      = public abstract a.a.a.c.ea a()
  + Method:       b(Ljava/lang/Object;)La/a/a/c/cf;
    Access flags: 0x1
      = public a.a.a.c.cf b(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iconst_0
      [3] invokevirtual #32
        + Methodref [a/a/a/c/cf.c (Ljava/lang/Object;Z)La/a/a/c/cf;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(Ljava/lang/Object;Z)La/a/a/c/cf;
    Access flags: 0x1
      = public a.a.a.c.cf c(java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #18
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [5] iload_2 v2
      [6] invokevirtual #24
        + Methodref [a/a/a/c/cf.a (Ljava/lang/Object;Z)La/a/a/c/cf;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/cf;
    Access flags: 0x1
      = public a.a.a.c.cf a(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 3, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iconst_1
      [3] aload_2 v2
      [4] iconst_0
      [5] invokevirtual #29
        + Methodref [a/a/a/c/cf.b (Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;
    Access flags: 0x1
      = public a.a.a.c.cf b(java.lang.Object,boolean,java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 42, locals = 5, stack = 5):
      [0] aload_1 v1
      [1] invokestatic #18
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_3 v3
      [6] invokestatic #18
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] pop
      [10] aload_0 v0
      [11] getfield #14
        + Fieldref [a/a/a/c/cf.a Ljava/util/Comparator;]
      [14] aload_1 v1
      [15] aload_3 v3
      [16] invokeinterface #42
        + InterfaceMethodref [java/util/Comparator.compare (Ljava/lang/Object;Ljava/lang/Object;)I]
      [21] ifgt +7 (target=28)
      [24] iconst_1
      [25] goto +4 (target=29)
      [28] iconst_0
      [29] invokestatic #19
        + Methodref [a/a/a/a/o.a (Z)V]
      [32] aload_0 v0
      [33] aload_1 v1
      [34] iload_2 v2
      [35] aload_3 v3
      [36] iload v4
      [38] invokevirtual #25
        + Methodref [a/a/a/c/cf.a (Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;]
      [41] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [28] Var: ..., Stack: (empty)
        - [29] Var: ..., Stack: [i]
  + Method:       c(Ljava/lang/Object;)La/a/a/c/cf;
    Access flags: 0x1
      = public a.a.a.c.cf c(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iconst_1
      [3] invokevirtual #34
        + Methodref [a/a/a/c/cf.d (Ljava/lang/Object;Z)La/a/a/c/cf;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d(Ljava/lang/Object;Z)La/a/a/c/cf;
    Access flags: 0x1
      = public a.a.a.c.cf d(java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #18
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [5] iload_2 v2
      [6] invokevirtual #28
        + Methodref [a/a/a/c/cf.b (Ljava/lang/Object;Z)La/a/a/c/cf;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;Z)La/a/a/c/cf;
    Access flags: 0x400
      = abstract a.a.a.c.cf a(java.lang.Object,boolean)
  + Method:       a(Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;
    Access flags: 0x400
      = abstract a.a.a.c.cf a(java.lang.Object,boolean,java.lang.Object,boolean)
  + Method:       b(Ljava/lang/Object;Z)La/a/a/c/cf;
    Access flags: 0x400
      = abstract a.a.a.c.cf b(java.lang.Object,boolean)
  + Method:       lower(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object lower(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iconst_0
      [3] invokevirtual #32
        + Methodref [a/a/a/c/cf.c (Ljava/lang/Object;Z)La/a/a/c/cf;]
      [6] invokevirtual #30
        + Methodref [a/a/a/c/cf.c ()La/a/a/c/ea;]
      [9] aconst_null
      [10] invokestatic #38
        + Methodref [a/a/a/c/ck.b (Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       floor(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object floor(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iconst_1
      [3] invokevirtual #32
        + Methodref [a/a/a/c/cf.c (Ljava/lang/Object;Z)La/a/a/c/cf;]
      [6] invokevirtual #30
        + Methodref [a/a/a/c/cf.c ()La/a/a/c/ea;]
      [9] aconst_null
      [10] invokestatic #38
        + Methodref [a/a/a/c/ck.b (Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       ceiling(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object ceiling(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iconst_1
      [3] invokevirtual #34
        + Methodref [a/a/a/c/cf.d (Ljava/lang/Object;Z)La/a/a/c/cf;]
      [6] aconst_null
      [7] invokestatic #37
        + Methodref [a/a/a/c/ch.a (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       higher(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object higher(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iconst_0
      [3] invokevirtual #34
        + Methodref [a/a/a/c/cf.d (Ljava/lang/Object;Z)La/a/a/c/cf;]
      [6] aconst_null
      [7] invokestatic #37
        + Methodref [a/a/a/c/ch.a (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       first()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object first()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #22
        + Methodref [a/a/a/c/cf.a ()La/a/a/c/ea;]
      [4] invokevirtual #40
        + Methodref [a/a/a/c/ea.next ()Ljava/lang/Object;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       last()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object last()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #30
        + Methodref [a/a/a/c/cf.c ()La/a/a/c/ea;]
      [4] invokevirtual #40
        + Methodref [a/a/a/c/ea.next ()Ljava/lang/Object;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       pollFirst()Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object pollFirst()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #11
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #41
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       pollLast()Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object pollLast()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #11
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #41
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       a_()La/a/a/c/cf;
    Access flags: 0x1
      = public a.a.a.c.cf a_()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 26, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #15
        + Fieldref [a/a/a/c/cf.b La/a/a/c/cf;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnonnull +18 (target=24)
      [9] aload_0 v0
      [10] aload_0 v0
      [11] invokevirtual #33
        + Methodref [a/a/a/c/cf.d ()La/a/a/c/cf;]
      [14] dup_x1
      [15] putfield #15
        + Fieldref [a/a/a/c/cf.b La/a/a/c/cf;]
      [18] astore_1 v1
      [19] aload_1 v1
      [20] aload_0 v0
      [21] putfield #15
        + Fieldref [a/a/a/c/cf.b La/a/a/c/cf;]
      [24] aload_1 v1
      [25] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [24] Var: ...[a:a/a/a/c/cf], Stack: (empty)
  + Method:       d()La/a/a/c/cf;
    Access flags: 0x0
      = a.a.a.c.cf d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #2
        + Class [a/a/a/c/ac]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #20
        + Methodref [a/a/a/c/ac.<init> (La/a/a/c/cf;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()La/a/a/c/ea;
    Access flags: 0x401
      = public abstract a.a.a.c.ea c()
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #22
        + Methodref [a/a/a/c/cf.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
    Access flags: 0x1001
      = public synthetic java.util.SortedSet tailSet(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #31
        + Methodref [a/a/a/c/cf.c (Ljava/lang/Object;)La/a/a/c/cf;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
    Access flags: 0x1001
      = public synthetic java.util.SortedSet headSet(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #27
        + Methodref [a/a/a/c/cf.b (Ljava/lang/Object;)La/a/a/c/cf;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
    Access flags: 0x1001
      = public synthetic java.util.SortedSet subSet(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokevirtual #23
        + Methodref [a/a/a/c/cf.a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/cf;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       tailSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
    Access flags: 0x1001
      = public synthetic java.util.NavigableSet tailSet(java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokevirtual #34
        + Methodref [a/a/a/c/cf.d (Ljava/lang/Object;Z)La/a/a/c/cf;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       headSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
    Access flags: 0x1001
      = public synthetic java.util.NavigableSet headSet(java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokevirtual #32
        + Methodref [a/a/a/c/cf.c (Ljava/lang/Object;Z)La/a/a/c/cf;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;
    Access flags: 0x1001
      = public synthetic java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 5, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aload_3 v3
      [4] iload v4
      [6] invokevirtual #29
        + Methodref [a/a/a/c/cf.b (Ljava/lang/Object;ZLjava/lang/Object;Z)La/a/a/c/cf;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       descendingIterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator descendingIterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #30
        + Methodref [a/a/a/c/cf.c ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       descendingSet()Ljava/util/NavigableSet;
    Access flags: 0x1001
      = public synthetic java.util.NavigableSet descendingSet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #26
        + Methodref [a/a/a/c/cf.a_ ()La/a/a/c/cf;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 0, stack = 3):
      [0] invokestatic #39
        + Methodref [a/a/a/c/dh.b ()La/a/a/c/dh;]
      [3] putstatic #16
        + Fieldref [a/a/a/c/cf.c Ljava/util/Comparator;]
      [6] new #3
        + Class [a/a/a/c/ag]
      [9] dup
      [10] getstatic #16
        + Fieldref [a/a/a/c/cf.c Ljava/util/Comparator;]
      [13] invokespecial #21
        + Methodref [a/a/a/c/ag.<init> (Ljava/util/Comparator;)V]
      [16] putstatic #17
        + Fieldref [a/a/a/c/cf.d La/a/a/c/cf;]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cg
  Superclass:    a/a/a/c/cb
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.c.cg extends a.a.a.c.cb

Interfaces (count = 0):

Constant Pool (count = 10):
  + Class [a/a/a/c/cb]
  + Class [a/a/a/c/cg]
  + Methodref [a/a/a/c/cb.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [a/a/a/c/cg]

Fields (count = 0):

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x0
      = cg()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #3
        + Methodref [a/a/a/c/cb.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ch
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.c.ch extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 67):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/ch]
  + Class [a/a/a/c/ci]
  + Class [a/a/a/c/cj]
  + Class [a/a/a/c/ck]
  + Class [a/a/a/c/cs]
  + Class [java/lang/Iterable]
  + Class [java/lang/Object]
  + Class [java/util/Collection]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/ch.d (Ljava/lang/Iterable;)Ljava/util/Collection;]
  + Methodref [a/a/a/c/ci.<init> (Ljava/lang/Iterable;La/a/a/a/p;)V]
  + Methodref [a/a/a/c/cj.<init> (Ljava/lang/Iterable;La/a/a/a/e;)V]
  + Methodref [a/a/a/c/ck.b (Ljava/util/Iterator;)Ljava/lang/String;]
  + Methodref [a/a/a/c/ck.b (Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/ck.c (Ljava/util/Iterator;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/cs.a (Ljava/util/Iterator;)Ljava/util/ArrayList;]
  + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [java/util/Collection.toArray ()[Ljava/lang/Object;]
  + NameAndType [<init> (Ljava/lang/Iterable;La/a/a/a/e;)V]
  + NameAndType [<init> (Ljava/lang/Iterable;La/a/a/a/p;)V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/util/Iterator;)Ljava/util/ArrayList;]
  + NameAndType [b (Ljava/util/Iterator;)Ljava/lang/String;]
  + NameAndType [b (Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [c (Ljava/util/Iterator;)Ljava/lang/Object;]
  + NameAndType [d (Ljava/lang/Iterable;)Ljava/util/Collection;]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [toArray ()[Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()[Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Iterable;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Iterable;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/Iterable;)Ljava/util/Collection;]
  + Utf8 [(Ljava/lang/Iterable;)[Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Iterable;La/a/a/a/e;)Ljava/lang/Iterable;]
  + Utf8 [(Ljava/lang/Iterable;La/a/a/a/e;)V]
  + Utf8 [(Ljava/lang/Iterable;La/a/a/a/p;)Ljava/lang/Iterable;]
  + Utf8 [(Ljava/lang/Iterable;La/a/a/a/p;)V]
  + Utf8 [(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/util/Iterator;)Ljava/lang/Object;]
  + Utf8 [(Ljava/util/Iterator;)Ljava/lang/String;]
  + Utf8 [(Ljava/util/Iterator;)Ljava/util/ArrayList;]
  + Utf8 [(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/ch]
  + Utf8 [a/a/a/c/ci]
  + Utf8 [a/a/a/c/cj]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [a/a/a/c/cs]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [iterator]
  + Utf8 [java/lang/Iterable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Collection]
  + Utf8 [toArray]

Fields (count = 0):

Methods (count = 7):
  + Method:       a(Ljava/lang/Iterable;)Ljava/lang/String;
    Access flags: 0x9
      = public static java.lang.String a(java.lang.Iterable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokeinterface #18
        + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
      [6] invokestatic #14
        + Methodref [a/a/a/c/ck.b (Ljava/util/Iterator;)Ljava/lang/String;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Iterable;)Ljava/lang/Object;
    Access flags: 0x9
      = public static java.lang.Object b(java.lang.Iterable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokeinterface #18
        + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
      [6] invokestatic #16
        + Methodref [a/a/a/c/ck.c (Ljava/util/Iterator;)Ljava/lang/Object;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(Ljava/lang/Iterable;)[Ljava/lang/Object;
    Access flags: 0x8
      = static java.lang.Object[] c(java.lang.Iterable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokestatic #11
        + Methodref [a/a/a/c/ch.d (Ljava/lang/Iterable;)Ljava/util/Collection;]
      [4] invokeinterface #19
        + InterfaceMethodref [java/util/Collection.toArray ()[Ljava/lang/Object;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d(Ljava/lang/Iterable;)Ljava/util/Collection;
    Access flags: 0xa
      = private static java.util.Collection d(java.lang.Iterable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] instanceof #9
        + Class [java/util/Collection]
      [4] ifeq +10 (target=14)
      [7] aload_0 v0
      [8] checkcast #9
        + Class [java/util/Collection]
      [11] goto +12 (target=23)
      [14] aload_0 v0
      [15] invokeinterface #18
        + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
      [20] invokestatic #17
        + Methodref [a/a/a/c/cs.a (Ljava/util/Iterator;)Ljava/util/ArrayList;]
      [23] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [14] Var: ..., Stack: (empty)
        - [23] Var: ..., Stack: [a:java/util/Collection]
  + Method:       a(Ljava/lang/Iterable;La/a/a/a/p;)Ljava/lang/Iterable;
    Access flags: 0x9
      = public static java.lang.Iterable a(java.lang.Iterable,a.a.a.a.p)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] invokestatic #10
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_1 v1
      [6] invokestatic #10
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] pop
      [10] new #3
        + Class [a/a/a/c/ci]
      [13] dup
      [14] aload_0 v0
      [15] aload_1 v1
      [16] invokespecial #12
        + Methodref [a/a/a/c/ci.<init> (Ljava/lang/Iterable;La/a/a/a/p;)V]
      [19] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Iterable;La/a/a/a/e;)Ljava/lang/Iterable;
    Access flags: 0x9
      = public static java.lang.Iterable a(java.lang.Iterable,a.a.a.a.e)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] invokestatic #10
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_1 v1
      [6] invokestatic #10
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] pop
      [10] new #4
        + Class [a/a/a/c/cj]
      [13] dup
      [14] aload_0 v0
      [15] aload_1 v1
      [16] invokespecial #13
        + Methodref [a/a/a/c/cj.<init> (Ljava/lang/Iterable;La/a/a/a/e;)V]
      [19] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x9
      = public static java.lang.Object a(java.lang.Iterable,java.lang.Object)
    Class member attributes (count = 3):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokeinterface #18
        + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
      [6] aload_1 v1
      [7] invokestatic #15
        + Methodref [a/a/a/c/ck.b (Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ci
  Superclass:    a/a/a/c/ah
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.ci extends a.a.a.c.ah

Interfaces (count = 0):

Constant Pool (count = 30):
  + Class [a/a/a/c/ah]
  + Class [a/a/a/c/ci]
  + Class [a/a/a/c/ck]
  + Class [java/lang/Iterable]
  + Fieldref [a/a/a/c/ci.a Ljava/lang/Iterable;]
  + Fieldref [a/a/a/c/ci.b La/a/a/a/p;]
  + Methodref [a/a/a/c/ah.<init> ()V]
  + Methodref [a/a/a/c/ck.b (Ljava/util/Iterator;La/a/a/a/p;)La/a/a/c/ea;]
  + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
  + NameAndType [<init> ()V]
  + NameAndType [a Ljava/lang/Iterable;]
  + NameAndType [b (Ljava/util/Iterator;La/a/a/a/p;)La/a/a/c/ea;]
  + NameAndType [b La/a/a/a/p;]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Iterable;La/a/a/a/p;)V]
  + Utf8 [(Ljava/util/Iterator;La/a/a/a/p;)La/a/a/c/ea;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/p;]
  + Utf8 [Ljava/lang/Iterable;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ah]
  + Utf8 [a/a/a/c/ci]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [b]
  + Utf8 [iterator]
  + Utf8 [java/lang/Iterable]

Fields (count = 2):
  + Field:        a Ljava/lang/Iterable;
    Access flags: 0x1010
      = final synthetic java.lang.Iterable a
  + Field:        b La/a/a/a/p;
    Access flags: 0x1010
      = final synthetic a.a.a.a.p b

Methods (count = 2):
  - Method:       <init>(Ljava/lang/Iterable;La/a/a/a/p;)V
    Access flags: 0x0
      = ci(java.lang.Iterable,a.a.a.a.p)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #5
        + Fieldref [a/a/a/c/ci.a Ljava/lang/Iterable;]
      [5] aload_0 v0
      [6] aload_2 v2
      [7] putfield #6
        + Fieldref [a/a/a/c/ci.b La/a/a/a/p;]
      [10] aload_0 v0
      [11] invokespecial #7
        + Methodref [a/a/a/c/ah.<init> ()V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/c/ci.a Ljava/lang/Iterable;]
      [4] invokeinterface #9
        + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
      [9] aload_0 v0
      [10] getfield #6
        + Fieldref [a/a/a/c/ci.b La/a/a/a/p;]
      [13] invokestatic #8
        + Methodref [a/a/a/c/ck.b (Ljava/util/Iterator;La/a/a/a/p;)La/a/a/c/ea;]
      [16] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cj
  Superclass:    a/a/a/c/ah
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.cj extends a.a.a.c.ah

Interfaces (count = 0):

Constant Pool (count = 30):
  + Class [a/a/a/c/ah]
  + Class [a/a/a/c/cj]
  + Class [a/a/a/c/ck]
  + Class [java/lang/Iterable]
  + Fieldref [a/a/a/c/cj.a Ljava/lang/Iterable;]
  + Fieldref [a/a/a/c/cj.b La/a/a/a/e;]
  + Methodref [a/a/a/c/ah.<init> ()V]
  + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;La/a/a/a/e;)Ljava/util/Iterator;]
  + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/util/Iterator;La/a/a/a/e;)Ljava/util/Iterator;]
  + NameAndType [a Ljava/lang/Iterable;]
  + NameAndType [b La/a/a/a/e;]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Iterable;La/a/a/a/e;)V]
  + Utf8 [(Ljava/util/Iterator;La/a/a/a/e;)Ljava/util/Iterator;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/e;]
  + Utf8 [Ljava/lang/Iterable;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ah]
  + Utf8 [a/a/a/c/cj]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [b]
  + Utf8 [iterator]
  + Utf8 [java/lang/Iterable]

Fields (count = 2):
  + Field:        a Ljava/lang/Iterable;
    Access flags: 0x1010
      = final synthetic java.lang.Iterable a
  + Field:        b La/a/a/a/e;
    Access flags: 0x1010
      = final synthetic a.a.a.a.e b

Methods (count = 2):
  - Method:       <init>(Ljava/lang/Iterable;La/a/a/a/e;)V
    Access flags: 0x0
      = cj(java.lang.Iterable,a.a.a.a.e)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #5
        + Fieldref [a/a/a/c/cj.a Ljava/lang/Iterable;]
      [5] aload_0 v0
      [6] aload_2 v2
      [7] putfield #6
        + Fieldref [a/a/a/c/cj.b La/a/a/a/e;]
      [10] aload_0 v0
      [11] invokespecial #7
        + Methodref [a/a/a/c/ah.<init> ()V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/c/cj.a Ljava/lang/Iterable;]
      [4] invokeinterface #9
        + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
      [9] aload_0 v0
      [10] getfield #6
        + Fieldref [a/a/a/c/cj.b La/a/a/a/e;]
      [13] invokestatic #8
        + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;La/a/a/a/e;)Ljava/util/Iterator;]
      [16] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ck
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.c.ck extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 177):
  + String [, ]
  + String [, ...]
  + String [expected one element but was: <]
  + String [predicate]
  + Class [a/a/a/a/f]
  + Class [a/a/a/a/i]
  + Class [a/a/a/a/o]
  + Class [a/a/a/a/p]
  + Class [a/a/a/a/q]
  + Class [a/a/a/c/aa]
  + Class [a/a/a/c/ck]
  + Class [a/a/a/c/cl]
  + Class [a/a/a/c/cm]
  + Class [a/a/a/c/cn]
  + Class [a/a/a/c/co]
  + Class [a/a/a/c/cp]
  + Class [a/a/a/c/cq]
  + Class [a/a/a/c/cr]
  + Class [a/a/a/c/ea]
  + Class [java/lang/IllegalArgumentException]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/util/Collection]
  + Class [java/util/Iterator]
  + Fieldref [a/a/a/c/aa.a La/a/a/a/f;]
  + Fieldref [a/a/a/c/ck.a La/a/a/c/eb;]
  + Fieldref [a/a/a/c/ck.b Ljava/util/Iterator;]
  + Methodref [a/a/a/a/f.a (Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;]
  + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/a/o.a (III)V]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/a/o.a (Z)V]
  + Methodref [a/a/a/a/o.b (II)I]
  + Methodref [a/a/a/a/q.a (Ljava/lang/Object;)La/a/a/a/p;]
  + Methodref [a/a/a/a/q.a (Ljava/util/Collection;)La/a/a/a/p;]
  + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;La/a/a/a/p;)Z]
  + Methodref [a/a/a/c/ck.a ([Ljava/lang/Object;III)La/a/a/c/eb;]
  + Methodref [a/a/a/c/ck.b ()La/a/a/c/eb;]
  + Methodref [a/a/a/c/ck.c (Ljava/util/Iterator;La/a/a/a/p;)Z]
  + Methodref [a/a/a/c/ck.d (Ljava/util/Iterator;La/a/a/a/p;)I]
  + Methodref [a/a/a/c/cl.<init> ()V]
  + Methodref [a/a/a/c/cm.<init> (II[Ljava/lang/Object;I)V]
  + Methodref [a/a/a/c/cn.<init> (Ljava/lang/Object;)V]
  + Methodref [a/a/a/c/co.<init> ()V]
  + Methodref [a/a/a/c/cp.<init> (Ljava/util/Iterator;)V]
  + Methodref [a/a/a/c/cq.<init> (Ljava/util/Iterator;La/a/a/a/p;)V]
  + Methodref [a/a/a/c/cr.<init> (Ljava/util/Iterator;La/a/a/a/e;)V]
  + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + InterfaceMethodref [a/a/a/a/p.a (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Collection.add (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Iterator.remove ()V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (II[Ljava/lang/Object;I)V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (Ljava/util/Iterator;)V]
  + NameAndType [<init> (Ljava/util/Iterator;La/a/a/a/e;)V]
  + NameAndType [<init> (Ljava/util/Iterator;La/a/a/a/p;)V]
  + NameAndType [a (III)V]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/a/p;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;)Z]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [a (Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;]
  + NameAndType [a (Ljava/util/Collection;)La/a/a/a/p;]
  + NameAndType [a (Ljava/util/Iterator;La/a/a/a/p;)Z]
  + NameAndType [a (Z)V]
  + NameAndType [a ([Ljava/lang/Object;III)La/a/a/c/eb;]
  + NameAndType [a La/a/a/a/f;]
  + NameAndType [a La/a/a/c/eb;]
  + NameAndType [add (Ljava/lang/Object;)Z]
  + NameAndType [append (C)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b ()La/a/a/c/eb;]
  + NameAndType [b (II)I]
  + NameAndType [b Ljava/util/Iterator;]
  + NameAndType [c (Ljava/util/Iterator;La/a/a/a/p;)Z]
  + NameAndType [d (Ljava/util/Iterator;La/a/a/a/p;)I]
  + NameAndType [hasNext ()Z]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [remove ()V]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()La/a/a/c/eb;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(C)Ljava/lang/StringBuilder;]
  + Utf8 [(II)I]
  + Utf8 [(III)V]
  + Utf8 [(II[Ljava/lang/Object;I)V]
  + Utf8 [(Ljava/lang/Object;)La/a/a/a/p;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/ea;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/util/Collection;)La/a/a/a/p;]
  + Utf8 [(Ljava/util/Collection;Ljava/util/Iterator;)Z]
  + Utf8 [(Ljava/util/Iterator;)La/a/a/c/ea;]
  + Utf8 [(Ljava/util/Iterator;)Ljava/lang/Object;]
  + Utf8 [(Ljava/util/Iterator;)Ljava/lang/String;]
  + Utf8 [(Ljava/util/Iterator;)V]
  + Utf8 [(Ljava/util/Iterator;La/a/a/a/e;)Ljava/util/Iterator;]
  + Utf8 [(Ljava/util/Iterator;La/a/a/a/e;)V]
  + Utf8 [(Ljava/util/Iterator;La/a/a/a/p;)I]
  + Utf8 [(Ljava/util/Iterator;La/a/a/a/p;)La/a/a/c/ea;]
  + Utf8 [(Ljava/util/Iterator;La/a/a/a/p;)V]
  + Utf8 [(Ljava/util/Iterator;La/a/a/a/p;)Z]
  + Utf8 [(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/util/Iterator;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Iterator;Ljava/util/Collection;)Z]
  + Utf8 [(Ljava/util/Iterator;Ljava/util/Iterator;)Z]
  + Utf8 [(Z)V]
  + Utf8 [([Ljava/lang/Object;)La/a/a/c/ea;]
  + Utf8 [([Ljava/lang/Object;III)La/a/a/c/eb;]
  + Utf8 [, ]
  + Utf8 [, ...]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/f;]
  + Utf8 [La/a/a/c/eb;]
  + Utf8 [Ljava/util/Iterator;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/f]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/a/p]
  + Utf8 [a/a/a/a/q]
  + Utf8 [a/a/a/c/aa]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [a/a/a/c/cl]
  + Utf8 [a/a/a/c/cm]
  + Utf8 [a/a/a/c/cn]
  + Utf8 [a/a/a/c/co]
  + Utf8 [a/a/a/c/cp]
  + Utf8 [a/a/a/c/cq]
  + Utf8 [a/a/a/c/cr]
  + Utf8 [a/a/a/c/ea]
  + Utf8 [add]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [expected one element but was: <]
  + Utf8 [hasNext]
  + Utf8 [java/lang/IllegalArgumentException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/Iterator]
  + Utf8 [next]
  + Utf8 [predicate]
  + Utf8 [remove]
  + Utf8 [toString]

Fields (count = 2):
  + Field:        a La/a/a/c/eb;
    Access flags: 0x18
      = static final a.a.a.c.eb a
  + Field:        b Ljava/util/Iterator;
    Access flags: 0x1a
      = private static final java.util.Iterator b

Methods (count = 20):
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x9
      = public static a.a.a.c.ea a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] invokestatic #39
        + Methodref [a/a/a/c/ck.b ()La/a/a/c/eb;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/c/eb;
    Access flags: 0x8
      = static a.a.a.c.eb b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] getstatic #26
        + Fieldref [a/a/a/c/ck.a La/a/a/c/eb;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Iterator;)La/a/a/c/ea;
    Access flags: 0x9
      = public static a.a.a.c.ea a(java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 26, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] invokestatic #31
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_0 v0
      [6] instanceof #19
        + Class [a/a/a/c/ea]
      [9] ifeq +8 (target=17)
      [12] aload_0 v0
      [13] checkcast #19
        + Class [a/a/a/c/ea]
      [16] areturn
      [17] new #16
        + Class [a/a/a/c/cp]
      [20] dup
      [21] aload_0 v0
      [22] invokespecial #46
        + Methodref [a/a/a/c/cp.<init> (Ljava/util/Iterator;)V]
      [25] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [17] Var: ..., Stack: (empty)
  + Method:       a(Ljava/util/Iterator;Ljava/lang/Object;)Z
    Access flags: 0x9
      = public static boolean a(java.util.Iterator,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #35
        + Methodref [a/a/a/a/q.a (Ljava/lang/Object;)La/a/a/a/p;]
      [5] invokestatic #40
        + Methodref [a/a/a/c/ck.c (Ljava/util/Iterator;La/a/a/a/p;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/util/Iterator;Ljava/util/Collection;)Z
    Access flags: 0x9
      = public static boolean a(java.util.Iterator,java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #36
        + Methodref [a/a/a/a/q.a (Ljava/util/Collection;)La/a/a/a/p;]
      [5] invokestatic #37
        + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;La/a/a/a/p;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Iterator;La/a/a/a/p;)Z
    Access flags: 0x9
      = public static boolean a(java.util.Iterator,a.a.a.a.p)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 44, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] invokestatic #31
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] iconst_0
      [6] istore_2 v2
      [7] aload_0 v0
      [8] invokeinterface #57
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [13] ifeq +29 (target=42)
      [16] aload_1 v1
      [17] aload_0 v0
      [18] invokeinterface #58
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [23] invokeinterface #55
        + InterfaceMethodref [a/a/a/a/p.a (Ljava/lang/Object;)Z]
      [28] ifeq -21 (target=7)
      [31] aload_0 v0
      [32] invokeinterface #59
        + InterfaceMethodref [java/util/Iterator.remove ()V]
      [37] iconst_1
      [38] istore_2 v2
      [39] goto -32 (target=7)
      [42] iload_2 v2
      [43] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [7] Var: ...[i], Stack: (empty)
        - [42] Var: ..., Stack: (empty)
  + Method:       a(Ljava/util/Iterator;Ljava/util/Iterator;)Z
    Access flags: 0x9
      = public static boolean a(java.util.Iterator,java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 62, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] invokeinterface #57
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [6] ifeq +41 (target=47)
      [9] aload_1 v1
      [10] invokeinterface #57
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [15] ifne +5 (target=20)
      [18] iconst_0
      [19] ireturn
      [20] aload_0 v0
      [21] invokeinterface #58
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [26] astore_2 v2
      [27] aload_1 v1
      [28] invokeinterface #58
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [33] astore_3 v3
      [34] aload_2 v2
      [35] aload_3 v3
      [36] invokestatic #29
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [39] ifne +5 (target=44)
      [42] iconst_0
      [43] ireturn
      [44] goto -44 (target=0)
      [47] aload_1 v1
      [48] invokeinterface #57
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [53] ifne +7 (target=60)
      [56] iconst_1
      [57] goto +4 (target=61)
      [60] iconst_0
      [61] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [0] Var: ..., Stack: (empty)
        - [20] Var: ..., Stack: (empty)
        - [44] Var: ..., Stack: (empty)
        - [47] Var: ..., Stack: (empty)
        - [60] Var: ..., Stack: (empty)
        - [61] Var: ..., Stack: [i]
  + Method:       b(Ljava/util/Iterator;)Ljava/lang/String;
    Access flags: 0x9
      = public static java.lang.String b(java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 1, stack = 3):
      [0] getstatic #25
        + Fieldref [a/a/a/c/aa.a La/a/a/a/f;]
      [3] new #22
        + Class [java/lang/StringBuilder]
      [6] dup
      [7] invokespecial #50
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [10] bipush 91
      [12] invokevirtual #51
        + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
      [15] aload_0 v0
      [16] invokevirtual #28
        + Methodref [a/a/a/a/f.a (Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;]
      [19] bipush 93
      [21] invokevirtual #51
        + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
      [24] invokevirtual #54
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [27] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(Ljava/util/Iterator;)Ljava/lang/Object;
    Access flags: 0x9
      = public static java.lang.Object c(java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 136, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] invokeinterface #58
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [6] astore_1 v1
      [7] aload_0 v0
      [8] invokeinterface #57
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [13] ifne +5 (target=18)
      [16] aload_1 v1
      [17] areturn
      [18] new #22
        + Class [java/lang/StringBuilder]
      [21] dup
      [22] invokespecial #50
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [25] astore_2 v2
      [26] aload_2 v2
      [27] new #22
        + Class [java/lang/StringBuilder]
      [30] dup
      [31] invokespecial #50
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [34] ldc #3
        + String [expected one element but was: <]
      [36] invokevirtual #53
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [39] aload_1 v1
      [40] invokevirtual #52
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [43] invokevirtual #54
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [46] invokevirtual #53
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [49] pop
      [50] iconst_0
      [51] istore_3 v3
      [52] iload_3 v3
      [53] iconst_4
      [54] ificmpge +47 (target=101)
      [57] aload_0 v0
      [58] invokeinterface #57
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [63] ifeq +38 (target=101)
      [66] aload_2 v2
      [67] new #22
        + Class [java/lang/StringBuilder]
      [70] dup
      [71] invokespecial #50
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [74] ldc #1
        + String [, ]
      [76] invokevirtual #53
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [79] aload_0 v0
      [80] invokeinterface #58
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [85] invokevirtual #52
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [88] invokevirtual #54
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [91] invokevirtual #53
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [94] pop
      [95] iinc v3, 1
      [98] goto -46 (target=52)
      [101] aload_0 v0
      [102] invokeinterface #57
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [107] ifeq +10 (target=117)
      [110] aload_2 v2
      [111] ldc #2
        + String [, ...]
      [113] invokevirtual #53
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [116] pop
      [117] aload_2 v2
      [118] bipush 62
      [120] invokevirtual #51
        + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
      [123] pop
      [124] new #20
        + Class [java/lang/IllegalArgumentException]
      [127] dup
      [128] aload_2 v2
      [129] invokevirtual #54
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [132] invokespecial #49
        + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
      [135] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [18] Var: ...[a:java/lang/Object], Stack: (empty)
        - [52] Var: ...[a:java/lang/StringBuilder][i], Stack: (empty)
        - [101] Var: -1, Stack: (empty)
        - [117] Var: ..., Stack: (empty)
  + Method:       a(Ljava/util/Collection;Ljava/util/Iterator;)Z
    Access flags: 0x9
      = public static boolean a(java.util.Collection,java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 41, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] invokestatic #31
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_1 v1
      [6] invokestatic #31
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] pop
      [10] iconst_0
      [11] istore_2 v2
      [12] aload_1 v1
      [13] invokeinterface #57
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [18] ifeq +21 (target=39)
      [21] iload_2 v2
      [22] aload_0 v0
      [23] aload_1 v1
      [24] invokeinterface #58
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [29] invokeinterface #56
        + InterfaceMethodref [java/util/Collection.add (Ljava/lang/Object;)Z]
      [34] ior
      [35] istore_2 v2
      [36] goto -24 (target=12)
      [39] iload_2 v2
      [40] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [12] Var: ...[i], Stack: (empty)
        - [39] Var: ..., Stack: (empty)
  + Method:       b(Ljava/util/Iterator;La/a/a/a/p;)La/a/a/c/ea;
    Access flags: 0x9
      = public static a.a.a.c.ea b(java.util.Iterator,a.a.a.a.p)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] invokestatic #31
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_1 v1
      [6] invokestatic #31
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] pop
      [10] new #17
        + Class [a/a/a/c/cq]
      [13] dup
      [14] aload_0 v0
      [15] aload_1 v1
      [16] invokespecial #47
        + Methodref [a/a/a/c/cq.<init> (Ljava/util/Iterator;La/a/a/a/p;)V]
      [19] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(Ljava/util/Iterator;La/a/a/a/p;)Z
    Access flags: 0x9
      = public static boolean c(java.util.Iterator,a.a.a.a.p)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #41
        + Methodref [a/a/a/c/ck.d (Ljava/util/Iterator;La/a/a/a/p;)I]
      [5] iconst_m1
      [6] ificmpeq +7 (target=13)
      [9] iconst_1
      [10] goto +4 (target=14)
      [13] iconst_0
      [14] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ..., Stack: (empty)
        - [14] Var: ..., Stack: [i]
  + Method:       d(Ljava/util/Iterator;La/a/a/a/p;)I
    Access flags: 0x9
      = public static int d(java.util.Iterator,a.a.a.a.p)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 45, locals = 4, stack = 2):
      [0] aload_1 v1
      [1] ldc #4
        + String [predicate]
      [3] invokestatic #32
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [6] pop
      [7] iconst_0
      [8] istore_2 v2
      [9] aload_0 v0
      [10] invokeinterface #57
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [15] ifeq +28 (target=43)
      [18] aload_0 v0
      [19] invokeinterface #58
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [24] astore_3 v3
      [25] aload_1 v1
      [26] aload_3 v3
      [27] invokeinterface #55
        + InterfaceMethodref [a/a/a/a/p.a (Ljava/lang/Object;)Z]
      [32] ifeq +5 (target=37)
      [35] iload_2 v2
      [36] ireturn
      [37] iinc v2, 1
      [40] goto -31 (target=9)
      [43] iconst_m1
      [44] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [9] Var: ...[i], Stack: (empty)
        - [37] Var: ..., Stack: (empty)
        - [43] Var: -1, Stack: (empty)
  + Method:       a(Ljava/util/Iterator;La/a/a/a/e;)Ljava/util/Iterator;
    Access flags: 0x9
      = public static java.util.Iterator a(java.util.Iterator,a.a.a.a.e)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 2, stack = 4):
      [0] aload_1 v1
      [1] invokestatic #31
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] new #18
        + Class [a/a/a/c/cr]
      [8] dup
      [9] aload_0 v0
      [10] aload_1 v1
      [11] invokespecial #48
        + Methodref [a/a/a/c/cr.<init> (Ljava/util/Iterator;La/a/a/a/e;)V]
      [14] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x9
      = public static java.lang.Object b(java.util.Iterator,java.lang.Object)
    Class member attributes (count = 3):
    + Code attribute instructions (code length = 20, locals = 2, stack = 1):
      [0] aload_0 v0
      [1] invokeinterface #57
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [6] ifeq +12 (target=18)
      [9] aload_0 v0
      [10] invokeinterface #58
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [15] goto +4 (target=19)
      [18] aload_1 v1
      [19] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [18] Var: ..., Stack: (empty)
        - [19] Var: ..., Stack: [a:java/lang/Object]
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       d(Ljava/util/Iterator;)V
    Access flags: 0x8
      = static void d(java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 31, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokestatic #31
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_0 v0
      [6] invokeinterface #57
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [11] ifeq +19 (target=30)
      [14] aload_0 v0
      [15] invokeinterface #58
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [20] pop
      [21] aload_0 v0
      [22] invokeinterface #59
        + InterfaceMethodref [java/util/Iterator.remove ()V]
      [27] goto -22 (target=5)
      [30] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [5] Var: ..., Stack: (empty)
        - [30] Var: ..., Stack: (empty)
  + Method:       a([Ljava/lang/Object;)La/a/a/c/ea;
    Access flags: 0x89
      = public static varargs a.a.a.c.ea a(java.lang.Object[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 4):
      [0] aload_0 v0
      [1] iconst_0
      [2] aload_0 v0
      [3] arraylength
      [4] iconst_0
      [5] invokestatic #38
        + Methodref [a/a/a/c/ck.a ([Ljava/lang/Object;III)La/a/a/c/eb;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a([Ljava/lang/Object;III)La/a/a/c/eb;
    Access flags: 0x8
      = static a.a.a.c.eb a(java.lang.Object[],int,int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 51, locals = 5, stack = 6):
      [0] iload_2 v2
      [1] iflt +7 (target=8)
      [4] iconst_1
      [5] goto +4 (target=9)
      [8] iconst_0
      [9] invokestatic #33
        + Methodref [a/a/a/a/o.a (Z)V]
      [12] iload_1 v1
      [13] iload_2 v2
      [14] iadd
      [15] istore v4
      [17] iload_1 v1
      [18] iload v4
      [20] aload_0 v0
      [21] arraylength
      [22] invokestatic #30
        + Methodref [a/a/a/a/o.a (III)V]
      [25] iload_3 v3
      [26] iload_2 v2
      [27] invokestatic #34
        + Methodref [a/a/a/a/o.b (II)I]
      [30] pop
      [31] iload_2 v2
      [32] ifne +7 (target=39)
      [35] invokestatic #39
        + Methodref [a/a/a/c/ck.b ()La/a/a/c/eb;]
      [38] areturn
      [39] new #13
        + Class [a/a/a/c/cm]
      [42] dup
      [43] iload_2 v2
      [44] iload_3 v3
      [45] aload_0 v0
      [46] iload_1 v1
      [47] invokespecial #43
        + Methodref [a/a/a/c/cm.<init> (II[Ljava/lang/Object;I)V]
      [50] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [8] Var: ..., Stack: (empty)
        - [9] Var: ..., Stack: [i]
        - [39] Var: ...[i], Stack: (empty)
  + Method:       a(Ljava/lang/Object;)La/a/a/c/ea;
    Access flags: 0x9
      = public static a.a.a.c.ea a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #14
        + Class [a/a/a/c/cn]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #44
        + Methodref [a/a/a/c/cn.<init> (Ljava/lang/Object;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 0, stack = 2):
      [0] new #12
        + Class [a/a/a/c/cl]
      [3] dup
      [4] invokespecial #42
        + Methodref [a/a/a/c/cl.<init> ()V]
      [7] putstatic #26
        + Fieldref [a/a/a/c/ck.a La/a/a/c/eb;]
      [10] new #15
        + Class [a/a/a/c/co]
      [13] dup
      [14] invokespecial #45
        + Methodref [a/a/a/c/co.<init> ()V]
      [17] putstatic #27
        + Fieldref [a/a/a/c/ck.b Ljava/util/Iterator;]
      [20] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cl
  Superclass:    a/a/a/c/eb
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.cl extends a.a.a.c.eb

Interfaces (count = 0):

Constant Pool (count = 22):
  + Class [a/a/a/c/cl]
  + Class [a/a/a/c/eb]
  + Class [java/util/NoSuchElementException]
  + Methodref [a/a/a/c/eb.<init> ()V]
  + Methodref [java/util/NoSuchElementException.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a/a/a/c/cl]
  + Utf8 [a/a/a/c/eb]
  + Utf8 [hasNext]
  + Utf8 [hasPrevious]
  + Utf8 [java/util/NoSuchElementException]
  + Utf8 [next]
  + Utf8 [nextIndex]
  + Utf8 [previous]
  + Utf8 [previousIndex]

Fields (count = 0):

Methods (count = 7):
  - Method:       <init>()V
    Access flags: 0x0
      = cl()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #4
        + Methodref [a/a/a/c/eb.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hasNext()Z
    Access flags: 0x1
      = public boolean hasNext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #3
        + Class [java/util/NoSuchElementException]
      [3] dup
      [4] invokespecial #5
        + Methodref [java/util/NoSuchElementException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hasPrevious()Z
    Access flags: 0x1
      = public boolean hasPrevious()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       previous()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object previous()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #3
        + Class [java/util/NoSuchElementException]
      [3] dup
      [4] invokespecial #5
        + Methodref [java/util/NoSuchElementException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       nextIndex()I
    Access flags: 0x1
      = public int nextIndex()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       previousIndex()I
    Access flags: 0x1
      = public int previousIndex()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_m1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cm
  Superclass:    a/a/a/c/a
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.cm extends a.a.a.c.a

Interfaces (count = 0):

Constant Pool (count = 20):
  + Class [a/a/a/c/a]
  + Class [a/a/a/c/cm]
  + Fieldref [a/a/a/c/cm.a [Ljava/lang/Object;]
  + Fieldref [a/a/a/c/cm.b I]
  + Methodref [a/a/a/c/a.<init> (II)V]
  + NameAndType [<init> (II)V]
  + NameAndType [a [Ljava/lang/Object;]
  + NameAndType [b I]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(II)V]
  + Utf8 [(II[Ljava/lang/Object;I)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [[Ljava/lang/Object;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/a]
  + Utf8 [a/a/a/c/cm]
  + Utf8 [b]

Fields (count = 2):
  + Field:        a [Ljava/lang/Object;
    Access flags: 0x1010
      = final synthetic java.lang.Object[] a
  + Field:        b I
    Access flags: 0x1010
      = final synthetic int b

Methods (count = 2):
  - Method:       <init>(II[Ljava/lang/Object;I)V
    Access flags: 0x0
      = cm(int,int,java.lang.Object[],int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 5, stack = 3):
      [0] aload_0 v0
      [1] aload_3 v3
      [2] putfield #3
        + Fieldref [a/a/a/c/cm.a [Ljava/lang/Object;]
      [5] aload_0 v0
      [6] iload v4
      [8] putfield #4
        + Fieldref [a/a/a/c/cm.b I]
      [11] aload_0 v0
      [12] iload_1 v1
      [13] iload_2 v2
      [14] invokespecial #5
        + Methodref [a/a/a/c/a.<init> (II)V]
      [17] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(I)Ljava/lang/Object;
    Access flags: 0x4
      = protected java.lang.Object a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #3
        + Fieldref [a/a/a/c/cm.a [Ljava/lang/Object;]
      [4] aload_0 v0
      [5] getfield #4
        + Fieldref [a/a/a/c/cm.b I]
      [8] iload_1 v1
      [9] iadd
      [10] aaload
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cn
  Superclass:    a/a/a/c/ea
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.cn extends a.a.a.c.ea

Interfaces (count = 0):

Constant Pool (count = 27):
  + Class [a/a/a/c/cn]
  + Class [a/a/a/c/ea]
  + Class [java/util/NoSuchElementException]
  + Fieldref [a/a/a/c/cn.a Z]
  + Fieldref [a/a/a/c/cn.b Ljava/lang/Object;]
  + Methodref [a/a/a/c/ea.<init> ()V]
  + Methodref [java/util/NoSuchElementException.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a Z]
  + NameAndType [b Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [StackMapTable]
  + Utf8 [Z]
  + Utf8 [a]
  + Utf8 [a/a/a/c/cn]
  + Utf8 [a/a/a/c/ea]
  + Utf8 [b]
  + Utf8 [hasNext]
  + Utf8 [java/util/NoSuchElementException]
  + Utf8 [next]

Fields (count = 2):
  + Field:        a Z
    Access flags: 0x0
      = boolean a
  + Field:        b Ljava/lang/Object;
    Access flags: 0x1010
      = final synthetic java.lang.Object b

Methods (count = 3):
  - Method:       <init>(Ljava/lang/Object;)V
    Access flags: 0x0
      = cn(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #5
        + Fieldref [a/a/a/c/cn.b Ljava/lang/Object;]
      [5] aload_0 v0
      [6] invokespecial #6
        + Methodref [a/a/a/c/ea.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hasNext()Z
    Access flags: 0x1
      = public boolean hasNext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/c/cn.a Z]
      [4] ifne +7 (target=11)
      [7] iconst_1
      [8] goto +4 (target=12)
      [11] iconst_0
      [12] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [12] Var: ..., Stack: [i]
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 25, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/c/cn.a Z]
      [4] ifeq +11 (target=15)
      [7] new #3
        + Class [java/util/NoSuchElementException]
      [10] dup
      [11] invokespecial #7
        + Methodref [java/util/NoSuchElementException.<init> ()V]
      [14] athrow
      [15] aload_0 v0
      [16] iconst_1
      [17] putfield #4
        + Fieldref [a/a/a/c/cn.a Z]
      [20] aload_0 v0
      [21] getfield #5
        + Fieldref [a/a/a/c/cn.b Ljava/lang/Object;]
      [24] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [15] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/co
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.co extends java.lang.Object

Interfaces (count = 1):
  + Class [java/util/Iterator]

Constant Pool (count = 26):
  + Class [a/a/a/c/co]
  + Class [a/a/a/c/z]
  + Class [java/lang/Object]
  + Class [java/util/Iterator]
  + Class [java/util/NoSuchElementException]
  + Methodref [a/a/a/c/z.a (Z)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/util/NoSuchElementException.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a (Z)V]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Z)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/c/co]
  + Utf8 [a/a/a/c/z]
  + Utf8 [hasNext]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/NoSuchElementException]
  + Utf8 [next]
  + Utf8 [remove]

Fields (count = 0):

Methods (count = 4):
  - Method:       <init>()V
    Access flags: 0x0
      = co()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #7
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hasNext()Z
    Access flags: 0x1
      = public boolean hasNext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #5
        + Class [java/util/NoSuchElementException]
      [3] dup
      [4] invokespecial #8
        + Methodref [java/util/NoSuchElementException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove()V
    Access flags: 0x1
      = public void remove()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] iconst_0
      [1] invokestatic #6
        + Methodref [a/a/a/c/z.a (Z)V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cp
  Superclass:    a/a/a/c/ea
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.cp extends a.a.a.c.ea

Interfaces (count = 0):

Constant Pool (count = 25):
  + Class [a/a/a/c/cp]
  + Class [a/a/a/c/ea]
  + Class [java/util/Iterator]
  + Fieldref [a/a/a/c/cp.a Ljava/util/Iterator;]
  + Methodref [a/a/a/c/ea.<init> ()V]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [a Ljava/util/Iterator;]
  + NameAndType [hasNext ()Z]
  + NameAndType [next ()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/util/Iterator;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/util/Iterator;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/cp]
  + Utf8 [a/a/a/c/ea]
  + Utf8 [hasNext]
  + Utf8 [java/util/Iterator]
  + Utf8 [next]

Fields (count = 1):
  + Field:        a Ljava/util/Iterator;
    Access flags: 0x1010
      = final synthetic java.util.Iterator a

Methods (count = 3):
  - Method:       <init>(Ljava/util/Iterator;)V
    Access flags: 0x0
      = cp(java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #4
        + Fieldref [a/a/a/c/cp.a Ljava/util/Iterator;]
      [5] aload_0 v0
      [6] invokespecial #5
        + Methodref [a/a/a/c/ea.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hasNext()Z
    Access flags: 0x1
      = public boolean hasNext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/c/cp.a Ljava/util/Iterator;]
      [4] invokeinterface #6
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/c/cp.a Ljava/util/Iterator;]
      [4] invokeinterface #7
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cq
  Superclass:    a/a/a/c/b
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.cq extends a.a.a.c.b

Interfaces (count = 0):

Constant Pool (count = 37):
  + Class [a/a/a/a/p]
  + Class [a/a/a/c/b]
  + Class [a/a/a/c/cq]
  + Class [java/util/Iterator]
  + Fieldref [a/a/a/c/cq.a Ljava/util/Iterator;]
  + Fieldref [a/a/a/c/cq.b La/a/a/a/p;]
  + Methodref [a/a/a/c/b.<init> ()V]
  + Methodref [a/a/a/c/cq.b ()Ljava/lang/Object;]
  + InterfaceMethodref [a/a/a/a/p.a (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;)Z]
  + NameAndType [a Ljava/util/Iterator;]
  + NameAndType [b ()Ljava/lang/Object;]
  + NameAndType [b La/a/a/a/p;]
  + NameAndType [hasNext ()Z]
  + NameAndType [next ()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Iterator;La/a/a/a/p;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/p;]
  + Utf8 [Ljava/util/Iterator;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/p]
  + Utf8 [a/a/a/c/b]
  + Utf8 [a/a/a/c/cq]
  + Utf8 [b]
  + Utf8 [hasNext]
  + Utf8 [java/util/Iterator]
  + Utf8 [next]

Fields (count = 2):
  + Field:        a Ljava/util/Iterator;
    Access flags: 0x1010
      = final synthetic java.util.Iterator a
  + Field:        b La/a/a/a/p;
    Access flags: 0x1010
      = final synthetic a.a.a.a.p b

Methods (count = 2):
  - Method:       <init>(Ljava/util/Iterator;La/a/a/a/p;)V
    Access flags: 0x0
      = cq(java.util.Iterator,a.a.a.a.p)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #5
        + Fieldref [a/a/a/c/cq.a Ljava/util/Iterator;]
      [5] aload_0 v0
      [6] aload_2 v2
      [7] putfield #6
        + Fieldref [a/a/a/c/cq.b La/a/a/a/p;]
      [10] aload_0 v0
      [11] invokespecial #7
        + Methodref [a/a/a/c/b.<init> ()V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/lang/Object;
    Access flags: 0x4
      = protected java.lang.Object a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 45, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/c/cq.a Ljava/util/Iterator;]
      [4] invokeinterface #10
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [9] ifeq +31 (target=40)
      [12] aload_0 v0
      [13] getfield #5
        + Fieldref [a/a/a/c/cq.a Ljava/util/Iterator;]
      [16] invokeinterface #11
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [21] astore_1 v1
      [22] aload_0 v0
      [23] getfield #6
        + Fieldref [a/a/a/c/cq.b La/a/a/a/p;]
      [26] aload_1 v1
      [27] invokeinterface #9
        + InterfaceMethodref [a/a/a/a/p.a (Ljava/lang/Object;)Z]
      [32] ifeq +5 (target=37)
      [35] aload_1 v1
      [36] areturn
      [37] goto -37 (target=0)
      [40] aload_0 v0
      [41] invokevirtual #8
        + Methodref [a/a/a/c/cq.b ()Ljava/lang/Object;]
      [44] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [0] Var: ..., Stack: (empty)
        - [37] Var: ..., Stack: (empty)
        - [40] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cr
  Superclass:    a/a/a/c/dz
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.cr extends a.a.a.c.dz

Interfaces (count = 0):

Constant Pool (count = 20):
  + Class [a/a/a/a/e]
  + Class [a/a/a/c/cr]
  + Class [a/a/a/c/dz]
  + Fieldref [a/a/a/c/cr.a La/a/a/a/e;]
  + Methodref [a/a/a/c/dz.<init> (Ljava/util/Iterator;)V]
  + InterfaceMethodref [a/a/a/a/e.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [<init> (Ljava/util/Iterator;)V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a La/a/a/a/e;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/util/Iterator;)V]
  + Utf8 [(Ljava/util/Iterator;La/a/a/a/e;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/e;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/e]
  + Utf8 [a/a/a/c/cr]
  + Utf8 [a/a/a/c/dz]

Fields (count = 1):
  + Field:        a La/a/a/a/e;
    Access flags: 0x1010
      = final synthetic a.a.a.a.e a

Methods (count = 2):
  - Method:       <init>(Ljava/util/Iterator;La/a/a/a/e;)V
    Access flags: 0x0
      = cr(java.util.Iterator,a.a.a.a.e)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_2 v2
      [2] putfield #4
        + Fieldref [a/a/a/c/cr.a La/a/a/a/e;]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] invokespecial #5
        + Methodref [a/a/a/c/dz.<init> (Ljava/util/Iterator;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/c/cr.a La/a/a/a/e;]
      [4] aload_1 v1
      [5] invokeinterface #6
        + InterfaceMethodref [a/a/a/a/e.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cs
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.c.cs extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 81):
  + Class [a/a/a/a/i]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/ck]
  + Class [a/a/a/c/cs]
  + Class [java/lang/Object]
  + Class [java/util/ArrayList]
  + Class [java/util/List]
  + Class [java/util/ListIterator]
  + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/ck.a (Ljava/util/Collection;Ljava/util/Iterator;)Z]
  + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;Ljava/util/Iterator;)Z]
  + Methodref [a/a/a/c/cs.a ()Ljava/util/ArrayList;]
  + Methodref [java/util/ArrayList.<init> ()V]
  + InterfaceMethodref [java/util/List.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [java/util/List.listIterator ()Ljava/util/ListIterator;]
  + InterfaceMethodref [java/util/List.listIterator (I)Ljava/util/ListIterator;]
  + InterfaceMethodref [java/util/List.size ()I]
  + InterfaceMethodref [java/util/ListIterator.hasNext ()Z]
  + InterfaceMethodref [java/util/ListIterator.hasPrevious ()Z]
  + InterfaceMethodref [java/util/ListIterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/ListIterator.nextIndex ()I]
  + InterfaceMethodref [java/util/ListIterator.previous ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/ListIterator.previousIndex ()I]
  + NameAndType [<init> ()V]
  + NameAndType [a ()Ljava/util/ArrayList;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [a (Ljava/util/Collection;Ljava/util/Iterator;)Z]
  + NameAndType [a (Ljava/util/Iterator;Ljava/util/Iterator;)Z]
  + NameAndType [hasNext ()Z]
  + NameAndType [hasPrevious ()Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [listIterator ()Ljava/util/ListIterator;]
  + NameAndType [listIterator (I)Ljava/util/ListIterator;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [nextIndex ()I]
  + NameAndType [previous ()Ljava/lang/Object;]
  + NameAndType [previousIndex ()I]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/ArrayList;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/ListIterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)Ljava/util/ListIterator;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Collection;Ljava/util/Iterator;)Z]
  + Utf8 [(Ljava/util/Iterator;)Ljava/util/ArrayList;]
  + Utf8 [(Ljava/util/Iterator;Ljava/util/Iterator;)Z]
  + Utf8 [(Ljava/util/List;Ljava/lang/Object;)I]
  + Utf8 [(Ljava/util/List;Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [a/a/a/c/cs]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [hasNext]
  + Utf8 [hasPrevious]
  + Utf8 [iterator]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/ArrayList]
  + Utf8 [java/util/List]
  + Utf8 [java/util/ListIterator]
  + Utf8 [listIterator]
  + Utf8 [next]
  + Utf8 [nextIndex]
  + Utf8 [previous]
  + Utf8 [previousIndex]
  + Utf8 [size]

Fields (count = 0):

Methods (count = 5):
  + Method:       a()Ljava/util/ArrayList;
    Access flags: 0x9
      = public static java.util.ArrayList a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 0, stack = 2):
      [0] new #6
        + Class [java/util/ArrayList]
      [3] dup
      [4] invokespecial #14
        + Methodref [java/util/ArrayList.<init> ()V]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Iterator;)Ljava/util/ArrayList;
    Access flags: 0x9
      = public static java.util.ArrayList a(java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 2, stack = 2):
      [0] invokestatic #13
        + Methodref [a/a/a/c/cs.a ()Ljava/util/ArrayList;]
      [3] astore_1 v1
      [4] aload_1 v1
      [5] aload_0 v0
      [6] invokestatic #11
        + Methodref [a/a/a/c/ck.a (Ljava/util/Collection;Ljava/util/Iterator;)Z]
      [9] pop
      [10] aload_1 v1
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/List;Ljava/lang/Object;)Z
    Access flags: 0x8
      = static boolean a(java.util.List,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 63, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] aload_0 v0
      [2] invokestatic #10
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [5] ifacmpne +5 (target=10)
      [8] iconst_1
      [9] ireturn
      [10] aload_1 v1
      [11] instanceof #7
        + Class [java/util/List]
      [14] ifne +5 (target=19)
      [17] iconst_0
      [18] ireturn
      [19] aload_1 v1
      [20] checkcast #7
        + Class [java/util/List]
      [23] astore_2 v2
      [24] aload_0 v0
      [25] invokeinterface #18
        + InterfaceMethodref [java/util/List.size ()I]
      [30] aload_2 v2
      [31] invokeinterface #18
        + InterfaceMethodref [java/util/List.size ()I]
      [36] ificmpne +25 (target=61)
      [39] aload_0 v0
      [40] invokeinterface #15
        + InterfaceMethodref [java/util/List.iterator ()Ljava/util/Iterator;]
      [45] aload_2 v2
      [46] invokeinterface #15
        + InterfaceMethodref [java/util/List.iterator ()Ljava/util/Iterator;]
      [51] invokestatic #12
        + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;Ljava/util/Iterator;)Z]
      [54] ifeq +7 (target=61)
      [57] iconst_1
      [58] goto +4 (target=62)
      [61] iconst_0
      [62] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [10] Var: ..., Stack: (empty)
        - [19] Var: ..., Stack: (empty)
        - [61] Var: ...[a:java/util/List], Stack: (empty)
        - [62] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b(Ljava/util/List;Ljava/lang/Object;)I
    Access flags: 0x8
      = static int b(java.util.List,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 38, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokeinterface #16
        + InterfaceMethodref [java/util/List.listIterator ()Ljava/util/ListIterator;]
      [6] astore_2 v2
      [7] aload_2 v2
      [8] invokeinterface #19
        + InterfaceMethodref [java/util/ListIterator.hasNext ()Z]
      [13] ifeq +23 (target=36)
      [16] aload_1 v1
      [17] aload_2 v2
      [18] invokeinterface #21
        + InterfaceMethodref [java/util/ListIterator.next ()Ljava/lang/Object;]
      [23] invokestatic #9
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [26] ifeq -19 (target=7)
      [29] aload_2 v2
      [30] invokeinterface #24
        + InterfaceMethodref [java/util/ListIterator.previousIndex ()I]
      [35] ireturn
      [36] iconst_m1
      [37] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [7] Var: ...[a:java/util/ListIterator], Stack: (empty)
        - [36] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       c(Ljava/util/List;Ljava/lang/Object;)I
    Access flags: 0x8
      = static int c(java.util.List,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 44, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_0 v0
      [2] invokeinterface #18
        + InterfaceMethodref [java/util/List.size ()I]
      [7] invokeinterface #17
        + InterfaceMethodref [java/util/List.listIterator (I)Ljava/util/ListIterator;]
      [12] astore_2 v2
      [13] aload_2 v2
      [14] invokeinterface #20
        + InterfaceMethodref [java/util/ListIterator.hasPrevious ()Z]
      [19] ifeq +23 (target=42)
      [22] aload_1 v1
      [23] aload_2 v2
      [24] invokeinterface #23
        + InterfaceMethodref [java/util/ListIterator.previous ()Ljava/lang/Object;]
      [29] invokestatic #9
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [32] ifeq -19 (target=13)
      [35] aload_2 v2
      [36] invokeinterface #22
        + InterfaceMethodref [java/util/ListIterator.nextIndex ()I]
      [41] ireturn
      [42] iconst_m1
      [43] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ...[a:java/util/ListIterator], Stack: (empty)
        - [42] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ct
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.c.ct extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 139):
  + Integer [1073741824]
  + Integer [2147483647]
  + String [=]
  + String [expectedSize]
  + Class [a/a/a/a/f]
  + Class [a/a/a/a/h]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/aa]
  + Class [a/a/a/c/bi]
  + Class [a/a/a/c/ck]
  + Class [a/a/a/c/ct]
  + Class [a/a/a/c/cu]
  + Class [a/a/a/c/cv]
  + Class [a/a/a/c/z]
  + Class [java/lang/ClassCastException]
  + Class [java/lang/NullPointerException]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/util/HashMap]
  + Class [java/util/Map]
  + Class [java/util/Map$Entry]
  + Class [java/util/Set]
  + Fieldref [a/a/a/c/aa.a La/a/a/a/f;]
  + Fieldref [a/a/a/c/ct.a La/a/a/a/h;]
  + Fieldref [a/a/a/c/cv.a La/a/a/c/cv;]
  + Fieldref [a/a/a/c/cv.b La/a/a/c/cv;]
  + Methodref [a/a/a/a/f.c (Ljava/lang/String;)La/a/a/a/h;]
  + Methodref [a/a/a/a/h.a (Ljava/lang/StringBuilder;Ljava/util/Map;)Ljava/lang/StringBuilder;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/aa.a (I)Ljava/lang/StringBuilder;]
  + Methodref [a/a/a/c/bi.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
  + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;La/a/a/a/e;)Ljava/util/Iterator;]
  + Methodref [a/a/a/c/ct.a ()La/a/a/a/e;]
  + Methodref [a/a/a/c/ct.b ()La/a/a/a/e;]
  + Methodref [a/a/a/c/cu.<init> (La/a/a/c/ea;)V]
  + Methodref [a/a/a/c/z.a (ILjava/lang/String;)I]
  + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/HashMap.<init> ()V]
  + InterfaceMethodref [java/util/Map.containsKey (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.size ()I]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Set.equals (Ljava/lang/Object;)Z]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/ea;)V]
  + NameAndType [<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [a ()La/a/a/a/e;]
  + NameAndType [a (I)Ljava/lang/StringBuilder;]
  + NameAndType [a (ILjava/lang/String;)I]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/StringBuilder;Ljava/util/Map;)Ljava/lang/StringBuilder;]
  + NameAndType [a (Ljava/util/Iterator;La/a/a/a/e;)Ljava/util/Iterator;]
  + NameAndType [a La/a/a/a/f;]
  + NameAndType [a La/a/a/a/h;]
  + NameAndType [a La/a/a/c/cv;]
  + NameAndType [append (C)Ljava/lang/StringBuilder;]
  + NameAndType [b ()La/a/a/a/e;]
  + NameAndType [b La/a/a/c/cv;]
  + NameAndType [c (Ljava/lang/String;)La/a/a/a/h;]
  + NameAndType [containsKey (Ljava/lang/Object;)Z]
  + NameAndType [entrySet ()Ljava/util/Set;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [size ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/a/e;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/HashMap;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [(C)Ljava/lang/StringBuilder;]
  + Utf8 [(I)I]
  + Utf8 [(I)Ljava/lang/StringBuilder;]
  + Utf8 [(ILjava/lang/String;)I]
  + Utf8 [(La/a/a/c/ea;)La/a/a/c/ea;]
  + Utf8 [(La/a/a/c/ea;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/String;)La/a/a/a/h;]
  + Utf8 [(Ljava/lang/StringBuilder;Ljava/util/Map;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/util/Iterator;)Ljava/util/Iterator;]
  + Utf8 [(Ljava/util/Iterator;La/a/a/a/e;)Ljava/util/Iterator;]
  + Utf8 [(Ljava/util/Map$Entry;)Ljava/lang/Object;]
  + Utf8 [(Ljava/util/Map;)Ljava/lang/String;]
  + Utf8 [(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/util/Map;Ljava/lang/Object;)Z]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [=]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/f;]
  + Utf8 [La/a/a/a/h;]
  + Utf8 [La/a/a/c/cv;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/f]
  + Utf8 [a/a/a/a/h]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/aa]
  + Utf8 [a/a/a/c/bi]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [a/a/a/c/ct]
  + Utf8 [a/a/a/c/cu]
  + Utf8 [a/a/a/c/cv]
  + Utf8 [a/a/a/c/z]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [containsKey]
  + Utf8 [d]
  + Utf8 [entrySet]
  + Utf8 [equals]
  + Utf8 [expectedSize]
  + Utf8 [get]
  + Utf8 [getKey]
  + Utf8 [java/lang/ClassCastException]
  + Utf8 [java/lang/NullPointerException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/HashMap]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [java/util/Set]
  + Utf8 [remove]
  + Utf8 [size]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a La/a/a/a/h;
    Access flags: 0x18
      = static final a.a.a.a.h a

Methods (count = 15):
  + Method:       a()La/a/a/a/e;
    Access flags: 0x8
      = static a.a.a.a.e a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] getstatic #25
        + Fieldref [a/a/a/c/cv.a La/a/a/c/cv;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/a/e;
    Access flags: 0x8
      = static a.a.a.a.e b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] getstatic #26
        + Fieldref [a/a/a/c/cv.b La/a/a/c/cv;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Iterator;)Ljava/util/Iterator;
    Access flags: 0x8
      = static java.util.Iterator a(java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokestatic #33
        + Methodref [a/a/a/c/ct.a ()La/a/a/a/e;]
      [4] invokestatic #32
        + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;La/a/a/a/e;)Ljava/util/Iterator;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/util/Iterator;)Ljava/util/Iterator;
    Access flags: 0x8
      = static java.util.Iterator b(java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokestatic #34
        + Methodref [a/a/a/c/ct.b ()La/a/a/a/e;]
      [4] invokestatic #32
        + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;La/a/a/a/e;)Ljava/util/Iterator;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/c/ea;)La/a/a/c/ea;
    Access flags: 0x8
      = static a.a.a.c.ea a(a.a.a.c.ea)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #12
        + Class [a/a/a/c/cu]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #35
        + Methodref [a/a/a/c/cu.<init> (La/a/a/c/ea;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()Ljava/util/HashMap;
    Access flags: 0x9
      = public static java.util.HashMap c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 0, stack = 2):
      [0] new #19
        + Class [java/util/HashMap]
      [3] dup
      [4] invokespecial #39
        + Methodref [java/util/HashMap.<init> ()V]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(I)I
    Access flags: 0x8
      = static int a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 31, locals = 1, stack = 3):
      [0] iload_0 v0
      [1] iconst_3
      [2] ificmpge +14 (target=16)
      [5] iload_0 v0
      [6] ldc #4
        + String [expectedSize]
      [8] invokestatic #36
        + Methodref [a/a/a/c/z.a (ILjava/lang/String;)I]
      [11] pop
      [12] iload_0 v0
      [13] iconst_1
      [14] iadd
      [15] ireturn
      [16] iload_0 v0
      [17] ldc #1
        + Integer [1073741824]
      [19] ificmpge +9 (target=28)
      [22] iload_0 v0
      [23] iload_0 v0
      [24] iconst_3
      [25] idiv
      [26] iadd
      [27] ireturn
      [28] ldc #2
        + Integer [2147483647]
      [30] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [16] Var: ..., Stack: (empty)
        - [28] Var: ..., Stack: (empty)
  + Method:       a(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
    Access flags: 0x9
      = public static java.util.Map$Entry a(java.lang.Object,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 10, locals = 2, stack = 4):
      [0] new #9
        + Class [a/a/a/c/bi]
      [3] dup
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokespecial #31
        + Methodref [a/a/a/c/bi.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x8
      = static java.lang.Object a(java.util.Map,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 19, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokestatic #29
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_0 v0
      [6] aload_1 v1
      [7] invokeinterface #42
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [12] areturn
      [13] astore_2 v2
      [14] aconst_null
      [15] areturn
      [16] astore_2 v2
      [17] aconst_null
      [18] areturn
      Code attribute exceptions (count = 2):
      - ExceptionInfo (5 -> 12: 13):
      + Class [java/lang/ClassCastException]
      - ExceptionInfo (5 -> 12: 16):
      + Class [java/lang/NullPointerException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ..., Stack: [a:java/lang/ClassCastException]
        - [16] Var: ..., Stack: [a:java/lang/NullPointerException]
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b(Ljava/util/Map;Ljava/lang/Object;)Z
    Access flags: 0x8
      = static boolean b(java.util.Map,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokestatic #29
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_0 v0
      [6] aload_1 v1
      [7] invokeinterface #40
        + InterfaceMethodref [java/util/Map.containsKey (Ljava/lang/Object;)Z]
      [12] ireturn
      [13] astore_2 v2
      [14] iconst_0
      [15] ireturn
      [16] astore_2 v2
      [17] iconst_0
      [18] ireturn
      Code attribute exceptions (count = 2):
      - ExceptionInfo (5 -> 12: 13):
      + Class [java/lang/ClassCastException]
      - ExceptionInfo (5 -> 12: 16):
      + Class [java/lang/NullPointerException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ..., Stack: [a:java/lang/ClassCastException]
        - [16] Var: ..., Stack: [a:java/lang/NullPointerException]
  + Method:       c(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x8
      = static java.lang.Object c(java.util.Map,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokestatic #29
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_0 v0
      [6] aload_1 v1
      [7] invokeinterface #43
        + InterfaceMethodref [java/util/Map.remove (Ljava/lang/Object;)Ljava/lang/Object;]
      [12] areturn
      [13] astore_2 v2
      [14] aconst_null
      [15] areturn
      [16] astore_2 v2
      [17] aconst_null
      [18] areturn
      Code attribute exceptions (count = 2):
      - ExceptionInfo (5 -> 12: 13):
      + Class [java/lang/ClassCastException]
      - ExceptionInfo (5 -> 12: 16):
      + Class [java/lang/NullPointerException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ..., Stack: [a:java/lang/ClassCastException]
        - [16] Var: ..., Stack: [a:java/lang/NullPointerException]
  + Method:       d(Ljava/util/Map;Ljava/lang/Object;)Z
    Access flags: 0x8
      = static boolean d(java.util.Map,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 39, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] ifacmpne +5 (target=7)
      [5] iconst_1
      [6] ireturn
      [7] aload_1 v1
      [8] instanceof #20
        + Class [java/util/Map]
      [11] ifeq +26 (target=37)
      [14] aload_1 v1
      [15] checkcast #20
        + Class [java/util/Map]
      [18] astore_2 v2
      [19] aload_0 v0
      [20] invokeinterface #41
        + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
      [25] aload_2 v2
      [26] invokeinterface #41
        + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
      [31] invokeinterface #46
        + InterfaceMethodref [java/util/Set.equals (Ljava/lang/Object;)Z]
      [36] ireturn
      [37] iconst_0
      [38] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [7] Var: ..., Stack: (empty)
        - [37] Var: ..., Stack: (empty)
  + Method:       a(Ljava/util/Map;)Ljava/lang/String;
    Access flags: 0x8
      = static java.lang.String a(java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 34, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] invokeinterface #44
        + InterfaceMethodref [java/util/Map.size ()I]
      [6] invokestatic #30
        + Methodref [a/a/a/c/aa.a (I)Ljava/lang/StringBuilder;]
      [9] bipush 123
      [11] invokevirtual #37
        + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
      [14] astore_1 v1
      [15] getstatic #24
        + Fieldref [a/a/a/c/ct.a La/a/a/a/h;]
      [18] aload_1 v1
      [19] aload_0 v0
      [20] invokevirtual #28
        + Methodref [a/a/a/a/h.a (Ljava/lang/StringBuilder;Ljava/util/Map;)Ljava/lang/StringBuilder;]
      [23] pop
      [24] aload_1 v1
      [25] bipush 125
      [27] invokevirtual #37
        + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
      [30] invokevirtual #38
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [33] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Map$Entry;)Ljava/lang/Object;
    Access flags: 0x8
      = static java.lang.Object a(java.util.Map$Entry)
    Class member attributes (count = 3):
    + Code attribute instructions (code length = 15, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] ifnonnull +7 (target=8)
      [4] aconst_null
      [5] goto +9 (target=14)
      [8] aload_0 v0
      [9] invokeinterface #45
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [14] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [8] Var: ..., Stack: (empty)
        - [14] Var: ..., Stack: [a:java/lang/Object]
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 0, stack = 2):
      [0] getstatic #23
        + Fieldref [a/a/a/c/aa.a La/a/a/a/f;]
      [3] ldc #3
        + String [=]
      [5] invokevirtual #27
        + Methodref [a/a/a/a/f.c (Ljava/lang/String;)La/a/a/a/h;]
      [8] putstatic #24
        + Fieldref [a/a/a/c/ct.a La/a/a/a/h;]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cu
  Superclass:    a/a/a/c/ea
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.cu extends a.a.a.c.ea

Interfaces (count = 0):

Constant Pool (count = 28):
  + Class [a/a/a/c/cu]
  + Class [a/a/a/c/ea]
  + Class [java/util/Map$Entry]
  + Fieldref [a/a/a/c/cu.a La/a/a/c/ea;]
  + Methodref [a/a/a/c/ea.<init> ()V]
  + Methodref [a/a/a/c/ea.hasNext ()Z]
  + Methodref [a/a/a/c/ea.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [a La/a/a/c/ea;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [hasNext ()Z]
  + NameAndType [next ()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/c/ea;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/ea;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/cu]
  + Utf8 [a/a/a/c/ea]
  + Utf8 [getValue]
  + Utf8 [hasNext]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [next]

Fields (count = 1):
  + Field:        a La/a/a/c/ea;
    Access flags: 0x1010
      = final synthetic a.a.a.c.ea a

Methods (count = 3):
  - Method:       <init>(La/a/a/c/ea;)V
    Access flags: 0x0
      = cu(a.a.a.c.ea)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #4
        + Fieldref [a/a/a/c/cu.a La/a/a/c/ea;]
      [5] aload_0 v0
      [6] invokespecial #5
        + Methodref [a/a/a/c/ea.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hasNext()Z
    Access flags: 0x1
      = public boolean hasNext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/c/cu.a La/a/a/c/ea;]
      [4] invokevirtual #6
        + Methodref [a/a/a/c/ea.hasNext ()Z]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/c/cu.a La/a/a/c/ea;]
      [4] invokevirtual #7
        + Methodref [a/a/a/c/ea.next ()Ljava/lang/Object;]
      [7] checkcast #3
        + Class [java/util/Map$Entry]
      [10] invokeinterface #8
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [15] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cv
  Superclass:    java/lang/Enum
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4420
    = enum enum a.a.a.c.cv extends java.lang.Enum

Interfaces (count = 1):
  + Class [a/a/a/a/e]

Constant Pool (count = 49):
  + String [KEY]
  + String [VALUE]
  + Class [[La/a/a/c/cv;]
  + Class [a/a/a/a/e]
  + Class [a/a/a/c/cv]
  + Class [a/a/a/c/cw]
  + Class [a/a/a/c/cx]
  + Class [java/lang/Enum]
  + Fieldref [a/a/a/c/cv.a La/a/a/c/cv;]
  + Fieldref [a/a/a/c/cv.b La/a/a/c/cv;]
  + Fieldref [a/a/a/c/cv.c [La/a/a/c/cv;]
  + Methodref [[La/a/a/c/cv;.clone ()Ljava/lang/Object;]
  + Methodref [a/a/a/c/cv.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/c/cw.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/c/cx.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + NameAndType [<init> (Ljava/lang/String;I)V]
  + NameAndType [a La/a/a/c/cv;]
  + NameAndType [b La/a/a/c/cv;]
  + NameAndType [c [La/a/a/c/cv;]
  + NameAndType [clone ()Ljava/lang/Object;]
  + NameAndType [valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()[La/a/a/c/cv;]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [(Ljava/lang/String;)La/a/a/c/cv;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/c/cu;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [KEY]
  + Utf8 [La/a/a/c/cv;]
  + Utf8 [VALUE]
  + Utf8 [[La/a/a/c/cv;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/e]
  + Utf8 [a/a/a/c/cv]
  + Utf8 [a/a/a/c/cw]
  + Utf8 [a/a/a/c/cx]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clone]
  + Utf8 [java/lang/Enum]
  + Utf8 [valueOf]
  + Utf8 [values]

Fields (count = 3):
  + Field:        a La/a/a/c/cv;
    Access flags: 0x4019
      = public static final a.a.a.c.cv a
  + Field:        b La/a/a/c/cv;
    Access flags: 0x4019
      = public static final a.a.a.c.cv b
  + Field:        c [La/a/a/c/cv;
    Access flags: 0x101a
      = private static final synthetic a.a.a.c.cv[] c

Methods (count = 5):
  + Method:       values()[La/a/a/c/cv;
    Access flags: 0x9
      = public static a.a.a.c.cv[] values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 0, stack = 1):
      [0] getstatic #11
        + Fieldref [a/a/a/c/cv.c [La/a/a/c/cv;]
      [3] invokevirtual #12
        + Methodref [[La/a/a/c/cv;.clone ()Ljava/lang/Object;]
      [6] checkcast #3
        + Class [[La/a/a/c/cv;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       valueOf(Ljava/lang/String;)La/a/a/c/cv;
    Access flags: 0x9
      = public static a.a.a.c.cv valueOf(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 1, stack = 2):
      [0] ldc_w #5
        + Class [a/a/a/c/cv]
      [3] aload_0 v0
      [4] invokestatic #17
        + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
      [7] checkcast #5
        + Class [a/a/a/c/cv]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x2
      = private cv(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #16
        + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;ILa/a/a/c/cu;)V
    Access flags: 0x1000
      = synthetic cv(java.lang.String,int,a.a.a.c.cu)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #13
        + Methodref [a/a/a/c/cv.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 46, locals = 0, stack = 4):
      [0] new #6
        + Class [a/a/a/c/cw]
      [3] dup
      [4] ldc #1
        + String [KEY]
      [6] iconst_0
      [7] invokespecial #14
        + Methodref [a/a/a/c/cw.<init> (Ljava/lang/String;I)V]
      [10] putstatic #9
        + Fieldref [a/a/a/c/cv.a La/a/a/c/cv;]
      [13] new #7
        + Class [a/a/a/c/cx]
      [16] dup
      [17] ldc #2
        + String [VALUE]
      [19] iconst_1
      [20] invokespecial #15
        + Methodref [a/a/a/c/cx.<init> (Ljava/lang/String;I)V]
      [23] putstatic #10
        + Fieldref [a/a/a/c/cv.b La/a/a/c/cv;]
      [26] iconst_2
      [27] anewarray #5
        + Class [a/a/a/c/cv]
      [30] dup
      [31] iconst_0
      [32] getstatic #9
        + Fieldref [a/a/a/c/cv.a La/a/a/c/cv;]
      [35] aastore
      [36] dup
      [37] iconst_1
      [38] getstatic #10
        + Fieldref [a/a/a/c/cv.b La/a/a/c/cv;]
      [41] aastore
      [42] putstatic #11
        + Fieldref [a/a/a/c/cv.c [La/a/a/c/cv;]
      [45] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cw
  Superclass:    a/a/a/c/cv
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.c.cw extends a.a.a.c.cv

Interfaces (count = 0):

Constant Pool (count = 24):
  + Class [a/a/a/c/cv]
  + Class [a/a/a/c/cw]
  + Class [java/util/Map$Entry]
  + Methodref [a/a/a/c/cv.<init> (Ljava/lang/String;ILa/a/a/c/cu;)V]
  + Methodref [a/a/a/c/cw.a (Ljava/util/Map$Entry;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/c/cu;)V]
  + NameAndType [a (Ljava/util/Map$Entry;)Ljava/lang/Object;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/c/cu;)V]
  + Utf8 [(Ljava/util/Map$Entry;)Ljava/lang/Object;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/c/cv]
  + Utf8 [a/a/a/c/cw]
  + Utf8 [getKey]
  + Utf8 [java/util/Map$Entry]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = cw(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #4
        + Methodref [a/a/a/c/cv.<init> (Ljava/lang/String;ILa/a/a/c/cu;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Map$Entry;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object a(java.util.Map$Entry)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 7, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokeinterface #6
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1041
      = public bridge synthetic java.lang.Object a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #3
        + Class [java/util/Map$Entry]
      [5] invokevirtual #5
        + Methodref [a/a/a/c/cw.a (Ljava/util/Map$Entry;)Ljava/lang/Object;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cx
  Superclass:    a/a/a/c/cv
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.c.cx extends a.a.a.c.cv

Interfaces (count = 0):

Constant Pool (count = 24):
  + Class [a/a/a/c/cv]
  + Class [a/a/a/c/cx]
  + Class [java/util/Map$Entry]
  + Methodref [a/a/a/c/cv.<init> (Ljava/lang/String;ILa/a/a/c/cu;)V]
  + Methodref [a/a/a/c/cx.a (Ljava/util/Map$Entry;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/c/cu;)V]
  + NameAndType [a (Ljava/util/Map$Entry;)Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/c/cu;)V]
  + Utf8 [(Ljava/util/Map$Entry;)Ljava/lang/Object;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/c/cv]
  + Utf8 [a/a/a/c/cx]
  + Utf8 [getValue]
  + Utf8 [java/util/Map$Entry]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = cx(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #4
        + Methodref [a/a/a/c/cv.<init> (Ljava/lang/String;ILa/a/a/c/cu;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Map$Entry;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object a(java.util.Map$Entry)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 7, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokeinterface #6
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1041
      = public bridge synthetic java.lang.Object a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #3
        + Class [java/util/Map$Entry]
      [5] invokevirtual #5
        + Methodref [a/a/a/c/cx.a (Ljava/util/Map$Entry;)Ljava/lang/Object;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cy
  Superclass:    a/a/a/c/du
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.c.cy extends a.a.a.c.du

Interfaces (count = 0):

Constant Pool (count = 106):
  + Class [a/a/a/a/i]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/ct]
  + Class [a/a/a/c/cy]
  + Class [a/a/a/c/dt]
  + Class [a/a/a/c/du]
  + Class [java/lang/Object]
  + Class [java/lang/UnsupportedOperationException]
  + Class [java/util/Collection]
  + Class [java/util/Iterator]
  + Class [java/util/Map]
  + Class [java/util/Map$Entry]
  + Class [java/util/Set]
  + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/ct.a (Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/cy.a ()Ljava/util/Map;]
  + Methodref [a/a/a/c/cy.contains (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/dt.a (I)Ljava/util/HashSet;]
  + Methodref [a/a/a/c/dt.a (Ljava/util/Set;Ljava/util/Iterator;)Z]
  + Methodref [a/a/a/c/du.<init> ()V]
  + Methodref [a/a/a/c/du.removeAll (Ljava/util/Collection;)Z]
  + Methodref [a/a/a/c/du.retainAll (Ljava/util/Collection;)Z]
  + InterfaceMethodref [java/util/Collection.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [java/util/Collection.size ()I]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.clear ()V]
  + InterfaceMethodref [java/util/Map.containsKey (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Map.isEmpty ()Z]
  + InterfaceMethodref [java/util/Map.keySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Map.size ()I]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Set.add (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Set.remove (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Set.retainAll (Ljava/util/Collection;)Z]
  + NameAndType [<init> ()V]
  + NameAndType [a ()Ljava/util/Map;]
  + NameAndType [a (I)Ljava/util/HashSet;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [a (Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/util/Set;Ljava/util/Iterator;)Z]
  + NameAndType [add (Ljava/lang/Object;)Z]
  + NameAndType [clear ()V]
  + NameAndType [contains (Ljava/lang/Object;)Z]
  + NameAndType [containsKey (Ljava/lang/Object;)Z]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [hasNext ()Z]
  + NameAndType [isEmpty ()Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [keySet ()Ljava/util/Set;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [remove (Ljava/lang/Object;)Z]
  + NameAndType [removeAll (Ljava/util/Collection;)Z]
  + NameAndType [retainAll (Ljava/util/Collection;)Z]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Map;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)Ljava/util/HashSet;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Collection;)Z]
  + Utf8 [(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/util/Set;Ljava/util/Iterator;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/ct]
  + Utf8 [a/a/a/c/cy]
  + Utf8 [a/a/a/c/dt]
  + Utf8 [a/a/a/c/du]
  + Utf8 [add]
  + Utf8 [clear]
  + Utf8 [contains]
  + Utf8 [containsKey]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [hasNext]
  + Utf8 [isEmpty]
  + Utf8 [iterator]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/UnsupportedOperationException]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [java/util/Set]
  + Utf8 [keySet]
  + Utf8 [next]
  + Utf8 [remove]
  + Utf8 [removeAll]
  + Utf8 [retainAll]
  + Utf8 [size]

Fields (count = 0):

Methods (count = 9):
  - Method:       <init>()V
    Access flags: 0x0
      = cy()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #21
        + Methodref [a/a/a/c/du.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/Map;
    Access flags: 0x400
      = abstract java.util.Map a()
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #17
        + Methodref [a/a/a/c/cy.a ()Ljava/util/Map;]
      [4] invokeinterface #32
        + InterfaceMethodref [java/util/Map.size ()I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       clear()V
    Access flags: 0x1
      = public void clear()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #17
        + Methodref [a/a/a/c/cy.a ()Ljava/util/Map;]
      [4] invokeinterface #28
        + InterfaceMethodref [java/util/Map.clear ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 69, locals = 5, stack = 2):
      [0] aload_1 v1
      [1] instanceof #12
        + Class [java/util/Map$Entry]
      [4] ifeq +63 (target=67)
      [7] aload_1 v1
      [8] checkcast #12
        + Class [java/util/Map$Entry]
      [11] astore_2 v2
      [12] aload_2 v2
      [13] invokeinterface #33
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [18] astore_3 v3
      [19] aload_0 v0
      [20] invokevirtual #17
        + Methodref [a/a/a/c/cy.a ()Ljava/util/Map;]
      [23] aload_3 v3
      [24] invokestatic #16
        + Methodref [a/a/a/c/ct.a (Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;]
      [27] astore v4
      [29] aload v4
      [31] aload_2 v2
      [32] invokeinterface #34
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [37] invokestatic #14
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [40] ifeq +25 (target=65)
      [43] aload v4
      [45] ifnonnull +16 (target=61)
      [48] aload_0 v0
      [49] invokevirtual #17
        + Methodref [a/a/a/c/cy.a ()Ljava/util/Map;]
      [52] aload_3 v3
      [53] invokeinterface #29
        + InterfaceMethodref [java/util/Map.containsKey (Ljava/lang/Object;)Z]
      [58] ifeq +7 (target=65)
      [61] iconst_1
      [62] goto +4 (target=66)
      [65] iconst_0
      [66] ireturn
      [67] iconst_0
      [68] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [61] Var: ...[a:java/util/Map$Entry][a:java/lang/Object][a:java/lang/Object], Stack: (empty)
        - [65] Var: ..., Stack: (empty)
        - [66] Var: ..., Stack: [i]
        - [67] Var: -3, Stack: (empty)
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #17
        + Methodref [a/a/a/c/cy.a ()Ljava/util/Map;]
      [4] invokeinterface #30
        + InterfaceMethodref [java/util/Map.isEmpty ()Z]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean remove(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 36, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #18
        + Methodref [a/a/a/c/cy.contains (Ljava/lang/Object;)Z]
      [5] ifeq +29 (target=34)
      [8] aload_1 v1
      [9] checkcast #12
        + Class [java/util/Map$Entry]
      [12] astore_2 v2
      [13] aload_0 v0
      [14] invokevirtual #17
        + Methodref [a/a/a/c/cy.a ()Ljava/util/Map;]
      [17] invokeinterface #31
        + InterfaceMethodref [java/util/Map.keySet ()Ljava/util/Set;]
      [22] aload_2 v2
      [23] invokeinterface #33
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [28] invokeinterface #36
        + InterfaceMethodref [java/util/Set.remove (Ljava/lang/Object;)Z]
      [33] ireturn
      [34] iconst_0
      [35] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [34] Var: ..., Stack: (empty)
  + Method:       removeAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean removeAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #15
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [5] checkcast #9
        + Class [java/util/Collection]
      [8] invokespecial #22
        + Methodref [a/a/a/c/du.removeAll (Ljava/util/Collection;)Z]
      [11] ireturn
      [12] astore_2 v2
      [13] aload_0 v0
      [14] aload_1 v1
      [15] invokeinterface #24
        + InterfaceMethodref [java/util/Collection.iterator ()Ljava/util/Iterator;]
      [20] invokestatic #20
        + Methodref [a/a/a/c/dt.a (Ljava/util/Set;Ljava/util/Iterator;)Z]
      [23] ireturn
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 11: 12):
      + Class [java/lang/UnsupportedOperationException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [12] Var: ..., Stack: [a:java/lang/UnsupportedOperationException]
  + Method:       retainAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean retainAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 99, locals = 7, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #15
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [5] checkcast #9
        + Class [java/util/Collection]
      [8] invokespecial #23
        + Methodref [a/a/a/c/du.retainAll (Ljava/util/Collection;)Z]
      [11] ireturn
      [12] astore_2 v2
      [13] aload_1 v1
      [14] invokeinterface #25
        + InterfaceMethodref [java/util/Collection.size ()I]
      [19] invokestatic #19
        + Methodref [a/a/a/c/dt.a (I)Ljava/util/HashSet;]
      [22] astore_3 v3
      [23] aload_1 v1
      [24] invokeinterface #24
        + InterfaceMethodref [java/util/Collection.iterator ()Ljava/util/Iterator;]
      [29] astore v4
      [31] aload v4
      [33] invokeinterface #26
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [38] ifeq +45 (target=83)
      [41] aload v4
      [43] invokeinterface #27
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [48] astore v5
      [50] aload_0 v0
      [51] aload v5
      [53] invokevirtual #18
        + Methodref [a/a/a/c/cy.contains (Ljava/lang/Object;)Z]
      [56] ifeq +24 (target=80)
      [59] aload v5
      [61] checkcast #12
        + Class [java/util/Map$Entry]
      [64] astore v6
      [66] aload_3 v3
      [67] aload v6
      [69] invokeinterface #33
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [74] invokeinterface #35
        + InterfaceMethodref [java/util/Set.add (Ljava/lang/Object;)Z]
      [79] pop
      [80] goto -49 (target=31)
      [83] aload_0 v0
      [84] invokevirtual #17
        + Methodref [a/a/a/c/cy.a ()Ljava/util/Map;]
      [87] invokeinterface #31
        + InterfaceMethodref [java/util/Map.keySet ()Ljava/util/Set;]
      [92] aload_3 v3
      [93] invokeinterface #37
        + InterfaceMethodref [java/util/Set.retainAll (Ljava/util/Collection;)Z]
      [98] ireturn
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 11: 12):
      + Class [java/lang/UnsupportedOperationException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [12] Var: ..., Stack: [a:java/lang/UnsupportedOperationException]
        - [31] Var: ...[a:java/lang/UnsupportedOperationException][a:java/util/Set][a:java/util/Iterator], Stack: (empty)
        - [80] Var: ..., Stack: (empty)
        - [83] Var: -1, Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/cz
  Superclass:    java/util/AbstractMap
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.c.cz extends java.util.AbstractMap

Interfaces (count = 0):

Constant Pool (count = 47):
  + Class [a/a/a/c/cz]
  + Class [a/a/a/c/da]
  + Class [a/a/a/c/db]
  + Class [java/util/AbstractMap]
  + Class [java/util/Collection]
  + Class [java/util/Set]
  + Fieldref [a/a/a/c/cz.a Ljava/util/Set;]
  + Fieldref [a/a/a/c/cz.b Ljava/util/Set;]
  + Fieldref [a/a/a/c/cz.c Ljava/util/Collection;]
  + Methodref [a/a/a/c/cz.a ()Ljava/util/Set;]
  + Methodref [a/a/a/c/cz.e ()Ljava/util/Set;]
  + Methodref [a/a/a/c/cz.f ()Ljava/util/Collection;]
  + Methodref [a/a/a/c/da.<init> (Ljava/util/Map;)V]
  + Methodref [a/a/a/c/db.<init> (Ljava/util/Map;)V]
  + Methodref [java/util/AbstractMap.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/util/Map;)V]
  + NameAndType [a ()Ljava/util/Set;]
  + NameAndType [a Ljava/util/Set;]
  + NameAndType [b Ljava/util/Set;]
  + NameAndType [c Ljava/util/Collection;]
  + NameAndType [e ()Ljava/util/Set;]
  + NameAndType [f ()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [(Ljava/util/Map;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/util/Collection;]
  + Utf8 [Ljava/util/Set;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/cz]
  + Utf8 [a/a/a/c/da]
  + Utf8 [a/a/a/c/db]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [e]
  + Utf8 [entrySet]
  + Utf8 [f]
  + Utf8 [java/util/AbstractMap]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/Set]
  + Utf8 [keySet]
  + Utf8 [values]

Fields (count = 3):
  + Field:        a Ljava/util/Set;
    Access flags: 0x82
      = private transient java.util.Set a
  + Field:        b Ljava/util/Set;
    Access flags: 0x82
      = private transient java.util.Set b
  + Field:        c Ljava/util/Collection;
    Access flags: 0x82
      = private transient java.util.Collection c

Methods (count = 7):
  - Method:       <init>()V
    Access flags: 0x0
      = cz()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #15
        + Methodref [java/util/AbstractMap.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/Set;
    Access flags: 0x400
      = abstract java.util.Set a()
  + Method:       entrySet()Ljava/util/Set;
    Access flags: 0x1
      = public java.util.Set entrySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/c/cz.a Ljava/util/Set;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnonnull +15 (target=21)
      [9] aload_0 v0
      [10] aload_0 v0
      [11] invokevirtual #10
        + Methodref [a/a/a/c/cz.a ()Ljava/util/Set;]
      [14] dup_x1
      [15] putfield #7
        + Fieldref [a/a/a/c/cz.a Ljava/util/Set;]
      [18] goto +4 (target=22)
      [21] aload_1 v1
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [21] Var: ...[a:java/util/Set], Stack: (empty)
        - [22] Var: ..., Stack: [a:java/util/Set]
  + Method:       keySet()Ljava/util/Set;
    Access flags: 0x1
      = public java.util.Set keySet()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/cz.b Ljava/util/Set;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnonnull +15 (target=21)
      [9] aload_0 v0
      [10] aload_0 v0
      [11] invokevirtual #11
        + Methodref [a/a/a/c/cz.e ()Ljava/util/Set;]
      [14] dup_x1
      [15] putfield #8
        + Fieldref [a/a/a/c/cz.b Ljava/util/Set;]
      [18] goto +4 (target=22)
      [21] aload_1 v1
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [21] Var: ...[a:java/util/Set], Stack: (empty)
        - [22] Var: ..., Stack: [a:java/util/Set]
  + Method:       e()Ljava/util/Set;
    Access flags: 0x0
      = java.util.Set e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #2
        + Class [a/a/a/c/da]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #13
        + Methodref [a/a/a/c/da.<init> (Ljava/util/Map;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       values()Ljava/util/Collection;
    Access flags: 0x1
      = public java.util.Collection values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/cz.c Ljava/util/Collection;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnonnull +15 (target=21)
      [9] aload_0 v0
      [10] aload_0 v0
      [11] invokevirtual #12
        + Methodref [a/a/a/c/cz.f ()Ljava/util/Collection;]
      [14] dup_x1
      [15] putfield #9
        + Fieldref [a/a/a/c/cz.c Ljava/util/Collection;]
      [18] goto +4 (target=22)
      [21] aload_1 v1
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [21] Var: ...[a:java/util/Collection], Stack: (empty)
        - [22] Var: ..., Stack: [a:java/util/Collection]
  + Method:       f()Ljava/util/Collection;
    Access flags: 0x0
      = java.util.Collection f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #3
        + Class [a/a/a/c/db]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #14
        + Methodref [a/a/a/c/db.<init> (Ljava/util/Map;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/da
  Superclass:    a/a/a/c/du
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.da extends a.a.a.c.du

Interfaces (count = 0):

Constant Pool (count = 64):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/ct]
  + Class [a/a/a/c/da]
  + Class [a/a/a/c/du]
  + Class [java/util/Map]
  + Class [java/util/Set]
  + Fieldref [a/a/a/c/da.c Ljava/util/Map;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/ct.a (Ljava/util/Iterator;)Ljava/util/Iterator;]
  + Methodref [a/a/a/c/da.b ()Ljava/util/Map;]
  + Methodref [a/a/a/c/da.contains (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/du.<init> ()V]
  + InterfaceMethodref [java/util/Map.clear ()V]
  + InterfaceMethodref [java/util/Map.containsKey (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Map.isEmpty ()Z]
  + InterfaceMethodref [java/util/Map.remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.size ()I]
  + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/util/Iterator;)Ljava/util/Iterator;]
  + NameAndType [b ()Ljava/util/Map;]
  + NameAndType [c Ljava/util/Map;]
  + NameAndType [clear ()V]
  + NameAndType [contains (Ljava/lang/Object;)Z]
  + NameAndType [containsKey (Ljava/lang/Object;)Z]
  + NameAndType [entrySet ()Ljava/util/Set;]
  + NameAndType [isEmpty ()Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Map;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Iterator;)Ljava/util/Iterator;]
  + Utf8 [(Ljava/util/Map;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/util/Map;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/ct]
  + Utf8 [a/a/a/c/da]
  + Utf8 [a/a/a/c/du]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clear]
  + Utf8 [contains]
  + Utf8 [containsKey]
  + Utf8 [entrySet]
  + Utf8 [isEmpty]
  + Utf8 [iterator]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Set]
  + Utf8 [remove]
  + Utf8 [size]

Fields (count = 1):
  + Field:        c Ljava/util/Map;
    Access flags: 0x10
      = final java.util.Map c

Methods (count = 8):
  - Method:       <init>(Ljava/util/Map;)V
    Access flags: 0x0
      = da(java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #12
        + Methodref [a/a/a/c/du.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokestatic #8
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] checkcast #5
        + Class [java/util/Map]
      [12] putfield #7
        + Fieldref [a/a/a/c/da.c Ljava/util/Map;]
      [15] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()Ljava/util/Map;
    Access flags: 0x0
      = java.util.Map b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/c/da.c Ljava/util/Map;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #10
        + Methodref [a/a/a/c/da.b ()Ljava/util/Map;]
      [4] invokeinterface #15
        + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
      [9] invokeinterface #19
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [14] invokestatic #9
        + Methodref [a/a/a/c/ct.a (Ljava/util/Iterator;)Ljava/util/Iterator;]
      [17] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #10
        + Methodref [a/a/a/c/da.b ()Ljava/util/Map;]
      [4] invokeinterface #18
        + InterfaceMethodref [java/util/Map.size ()I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #10
        + Methodref [a/a/a/c/da.b ()Ljava/util/Map;]
      [4] invokeinterface #16
        + InterfaceMethodref [java/util/Map.isEmpty ()Z]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #10
        + Methodref [a/a/a/c/da.b ()Ljava/util/Map;]
      [4] aload_1 v1
      [5] invokeinterface #14
        + InterfaceMethodref [java/util/Map.containsKey (Ljava/lang/Object;)Z]
      [10] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean remove(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #11
        + Methodref [a/a/a/c/da.contains (Ljava/lang/Object;)Z]
      [5] ifeq +16 (target=21)
      [8] aload_0 v0
      [9] invokevirtual #10
        + Methodref [a/a/a/c/da.b ()Ljava/util/Map;]
      [12] aload_1 v1
      [13] invokeinterface #17
        + InterfaceMethodref [java/util/Map.remove (Ljava/lang/Object;)Ljava/lang/Object;]
      [18] pop
      [19] iconst_1
      [20] ireturn
      [21] iconst_0
      [22] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [21] Var: ..., Stack: (empty)
  + Method:       clear()V
    Access flags: 0x1
      = public void clear()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #10
        + Methodref [a/a/a/c/da.b ()Ljava/util/Map;]
      [4] invokeinterface #13
        + InterfaceMethodref [java/util/Map.clear ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/db
  Superclass:    java/util/AbstractCollection
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.db extends java.util.AbstractCollection

Interfaces (count = 0):

Constant Pool (count = 113):
  + Class [a/a/a/a/i]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/ct]
  + Class [a/a/a/c/db]
  + Class [a/a/a/c/dt]
  + Class [java/lang/UnsupportedOperationException]
  + Class [java/util/AbstractCollection]
  + Class [java/util/Collection]
  + Class [java/util/Iterator]
  + Class [java/util/Map]
  + Class [java/util/Map$Entry]
  + Class [java/util/Set]
  + Fieldref [a/a/a/c/db.a Ljava/util/Map;]
  + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/ct.b (Ljava/util/Iterator;)Ljava/util/Iterator;]
  + Methodref [a/a/a/c/db.a ()Ljava/util/Map;]
  + Methodref [a/a/a/c/dt.a ()Ljava/util/HashSet;]
  + Methodref [java/util/AbstractCollection.<init> ()V]
  + Methodref [java/util/AbstractCollection.remove (Ljava/lang/Object;)Z]
  + Methodref [java/util/AbstractCollection.removeAll (Ljava/util/Collection;)Z]
  + Methodref [java/util/AbstractCollection.retainAll (Ljava/util/Collection;)Z]
  + InterfaceMethodref [java/util/Collection.contains (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.clear ()V]
  + InterfaceMethodref [java/util/Map.containsValue (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Map.isEmpty ()Z]
  + InterfaceMethodref [java/util/Map.keySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Map.remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.size ()I]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Set.add (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [java/util/Set.removeAll (Ljava/util/Collection;)Z]
  + InterfaceMethodref [java/util/Set.retainAll (Ljava/util/Collection;)Z]
  + NameAndType [<init> ()V]
  + NameAndType [a ()Ljava/util/HashSet;]
  + NameAndType [a ()Ljava/util/Map;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [a Ljava/util/Map;]
  + NameAndType [add (Ljava/lang/Object;)Z]
  + NameAndType [b (Ljava/util/Iterator;)Ljava/util/Iterator;]
  + NameAndType [clear ()V]
  + NameAndType [contains (Ljava/lang/Object;)Z]
  + NameAndType [containsValue (Ljava/lang/Object;)Z]
  + NameAndType [entrySet ()Ljava/util/Set;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [hasNext ()Z]
  + NameAndType [isEmpty ()Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [keySet ()Ljava/util/Set;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [remove (Ljava/lang/Object;)Z]
  + NameAndType [removeAll (Ljava/util/Collection;)Z]
  + NameAndType [retainAll (Ljava/util/Collection;)Z]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/HashSet;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Map;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Collection;)Z]
  + Utf8 [(Ljava/util/Iterator;)Ljava/util/Iterator;]
  + Utf8 [(Ljava/util/Map;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/util/Map;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/ct]
  + Utf8 [a/a/a/c/db]
  + Utf8 [a/a/a/c/dt]
  + Utf8 [add]
  + Utf8 [b]
  + Utf8 [clear]
  + Utf8 [contains]
  + Utf8 [containsValue]
  + Utf8 [entrySet]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [hasNext]
  + Utf8 [isEmpty]
  + Utf8 [iterator]
  + Utf8 [java/lang/UnsupportedOperationException]
  + Utf8 [java/util/AbstractCollection]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [java/util/Set]
  + Utf8 [keySet]
  + Utf8 [next]
  + Utf8 [remove]
  + Utf8 [removeAll]
  + Utf8 [retainAll]
  + Utf8 [size]

Fields (count = 1):
  + Field:        a Ljava/util/Map;
    Access flags: 0x10
      = final java.util.Map a

Methods (count = 10):
  - Method:       <init>(Ljava/util/Map;)V
    Access flags: 0x0
      = db(java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #19
        + Methodref [java/util/AbstractCollection.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokestatic #15
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] checkcast #10
        + Class [java/util/Map]
      [12] putfield #13
        + Fieldref [a/a/a/c/db.a Ljava/util/Map;]
      [15] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/Map;
    Access flags: 0x10
      = final java.util.Map a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #13
        + Fieldref [a/a/a/c/db.a Ljava/util/Map;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1
      = public java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #17
        + Methodref [a/a/a/c/db.a ()Ljava/util/Map;]
      [4] invokeinterface #28
        + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
      [9] invokeinterface #36
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [14] invokestatic #16
        + Methodref [a/a/a/c/ct.b (Ljava/util/Iterator;)Ljava/util/Iterator;]
      [17] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean remove(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 80, locals = 5, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #20
        + Methodref [java/util/AbstractCollection.remove (Ljava/lang/Object;)Z]
      [5] ireturn
      [6] astore_2 v2
      [7] aload_0 v0
      [8] invokevirtual #17
        + Methodref [a/a/a/c/db.a ()Ljava/util/Map;]
      [11] invokeinterface #28
        + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
      [16] invokeinterface #36
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [21] astore_3 v3
      [22] aload_3 v3
      [23] invokeinterface #24
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [28] ifeq +50 (target=78)
      [31] aload_3 v3
      [32] invokeinterface #25
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [37] checkcast #11
        + Class [java/util/Map$Entry]
      [40] astore v4
      [42] aload_1 v1
      [43] aload v4
      [45] invokeinterface #34
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [50] invokestatic #14
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [53] ifeq +22 (target=75)
      [56] aload_0 v0
      [57] invokevirtual #17
        + Methodref [a/a/a/c/db.a ()Ljava/util/Map;]
      [60] aload v4
      [62] invokeinterface #33
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [67] invokeinterface #31
        + InterfaceMethodref [java/util/Map.remove (Ljava/lang/Object;)Ljava/lang/Object;]
      [72] pop
      [73] iconst_1
      [74] ireturn
      [75] goto -53 (target=22)
      [78] iconst_0
      [79] ireturn
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 5: 6):
      + Class [java/lang/UnsupportedOperationException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [6] Var: ..., Stack: [a:java/lang/UnsupportedOperationException]
        - [22] Var: ...[a:java/lang/UnsupportedOperationException][a:java/util/Iterator], Stack: (empty)
        - [75] Var: ..., Stack: (empty)
        - [78] Var: -1, Stack: (empty)
  + Method:       removeAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean removeAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 104, locals = 6, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #15
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [5] checkcast #8
        + Class [java/util/Collection]
      [8] invokespecial #21
        + Methodref [java/util/AbstractCollection.removeAll (Ljava/util/Collection;)Z]
      [11] ireturn
      [12] astore_2 v2
      [13] invokestatic #18
        + Methodref [a/a/a/c/dt.a ()Ljava/util/HashSet;]
      [16] astore_3 v3
      [17] aload_0 v0
      [18] invokevirtual #17
        + Methodref [a/a/a/c/db.a ()Ljava/util/Map;]
      [21] invokeinterface #28
        + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
      [26] invokeinterface #36
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [31] astore v4
      [33] aload v4
      [35] invokeinterface #24
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [40] ifeq +48 (target=88)
      [43] aload v4
      [45] invokeinterface #25
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [50] checkcast #11
        + Class [java/util/Map$Entry]
      [53] astore v5
      [55] aload_1 v1
      [56] aload v5
      [58] invokeinterface #34
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [63] invokeinterface #23
        + InterfaceMethodref [java/util/Collection.contains (Ljava/lang/Object;)Z]
      [68] ifeq +17 (target=85)
      [71] aload_3 v3
      [72] aload v5
      [74] invokeinterface #33
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [79] invokeinterface #35
        + InterfaceMethodref [java/util/Set.add (Ljava/lang/Object;)Z]
      [84] pop
      [85] goto -52 (target=33)
      [88] aload_0 v0
      [89] invokevirtual #17
        + Methodref [a/a/a/c/db.a ()Ljava/util/Map;]
      [92] invokeinterface #30
        + InterfaceMethodref [java/util/Map.keySet ()Ljava/util/Set;]
      [97] aload_3 v3
      [98] invokeinterface #37
        + InterfaceMethodref [java/util/Set.removeAll (Ljava/util/Collection;)Z]
      [103] ireturn
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 11: 12):
      + Class [java/lang/UnsupportedOperationException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [12] Var: ..., Stack: [a:java/lang/UnsupportedOperationException]
        - [33] Var: ...[a:java/lang/UnsupportedOperationException][a:java/util/Set][a:java/util/Iterator], Stack: (empty)
        - [85] Var: ..., Stack: (empty)
        - [88] Var: -1, Stack: (empty)
  + Method:       retainAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean retainAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 104, locals = 6, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #15
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [5] checkcast #8
        + Class [java/util/Collection]
      [8] invokespecial #22
        + Methodref [java/util/AbstractCollection.retainAll (Ljava/util/Collection;)Z]
      [11] ireturn
      [12] astore_2 v2
      [13] invokestatic #18
        + Methodref [a/a/a/c/dt.a ()Ljava/util/HashSet;]
      [16] astore_3 v3
      [17] aload_0 v0
      [18] invokevirtual #17
        + Methodref [a/a/a/c/db.a ()Ljava/util/Map;]
      [21] invokeinterface #28
        + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
      [26] invokeinterface #36
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [31] astore v4
      [33] aload v4
      [35] invokeinterface #24
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [40] ifeq +48 (target=88)
      [43] aload v4
      [45] invokeinterface #25
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [50] checkcast #11
        + Class [java/util/Map$Entry]
      [53] astore v5
      [55] aload_1 v1
      [56] aload v5
      [58] invokeinterface #34
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [63] invokeinterface #23
        + InterfaceMethodref [java/util/Collection.contains (Ljava/lang/Object;)Z]
      [68] ifeq +17 (target=85)
      [71] aload_3 v3
      [72] aload v5
      [74] invokeinterface #33
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [79] invokeinterface #35
        + InterfaceMethodref [java/util/Set.add (Ljava/lang/Object;)Z]
      [84] pop
      [85] goto -52 (target=33)
      [88] aload_0 v0
      [89] invokevirtual #17
        + Methodref [a/a/a/c/db.a ()Ljava/util/Map;]
      [92] invokeinterface #30
        + InterfaceMethodref [java/util/Map.keySet ()Ljava/util/Set;]
      [97] aload_3 v3
      [98] invokeinterface #38
        + InterfaceMethodref [java/util/Set.retainAll (Ljava/util/Collection;)Z]
      [103] ireturn
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 11: 12):
      + Class [java/lang/UnsupportedOperationException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [12] Var: ..., Stack: [a:java/lang/UnsupportedOperationException]
        - [33] Var: ...[a:java/lang/UnsupportedOperationException][a:java/util/Set][a:java/util/Iterator], Stack: (empty)
        - [85] Var: ..., Stack: (empty)
        - [88] Var: -1, Stack: (empty)
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #17
        + Methodref [a/a/a/c/db.a ()Ljava/util/Map;]
      [4] invokeinterface #32
        + InterfaceMethodref [java/util/Map.size ()I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #17
        + Methodref [a/a/a/c/db.a ()Ljava/util/Map;]
      [4] invokeinterface #29
        + InterfaceMethodref [java/util/Map.isEmpty ()Z]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #17
        + Methodref [a/a/a/c/db.a ()Ljava/util/Map;]
      [4] aload_1 v1
      [5] invokeinterface #27
        + InterfaceMethodref [java/util/Map.containsValue (Ljava/lang/Object;)Z]
      [10] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       clear()V
    Access flags: 0x1
      = public void clear()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #17
        + Methodref [a/a/a/c/db.a ()Ljava/util/Map;]
      [4] invokeinterface #26
        + InterfaceMethodref [java/util/Map.clear ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dc
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface a.a.a.c.dc extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 7):
  + Class [a/a/a/c/dc]
  + Class [java/lang/Object]
  + Utf8 [()Ljava/util/Map;]
  + Utf8 [a/a/a/c/dc]
  + Utf8 [f]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 1):
  + Method:       f()Ljava/util/Map;
    Access flags: 0x401
      = public abstract java.util.Map f()

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dd
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.c.dd extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 23):
  + Class [a/a/a/c/dc]
  + Class [a/a/a/c/dd]
  + Class [java/lang/Object]
  + Class [java/util/Map]
  + InterfaceMethodref [a/a/a/c/dc.f ()Ljava/util/Map;]
  + InterfaceMethodref [java/util/Map.equals (Ljava/lang/Object;)Z]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [f ()Ljava/util/Map;]
  + Utf8 [()Ljava/util/Map;]
  + Utf8 [(La/a/a/c/dc;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/dc]
  + Utf8 [a/a/a/c/dd]
  + Utf8 [equals]
  + Utf8 [f]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Map]

Fields (count = 0):

Methods (count = 1):
  + Method:       a(La/a/a/c/dc;Ljava/lang/Object;)Z
    Access flags: 0x8
      = static boolean a(a.a.a.c.dc,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 39, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] aload_0 v0
      [2] ifacmpne +5 (target=7)
      [5] iconst_1
      [6] ireturn
      [7] aload_1 v1
      [8] instanceof #1
        + Class [a/a/a/c/dc]
      [11] ifeq +26 (target=37)
      [14] aload_1 v1
      [15] checkcast #1
        + Class [a/a/a/c/dc]
      [18] astore_2 v2
      [19] aload_0 v0
      [20] invokeinterface #5
        + InterfaceMethodref [a/a/a/c/dc.f ()Ljava/util/Map;]
      [25] aload_2 v2
      [26] invokeinterface #5
        + InterfaceMethodref [a/a/a/c/dc.f ()Ljava/util/Map;]
      [31] invokeinterface #6
        + InterfaceMethodref [java/util/Map.equals (Ljava/lang/Object;)Z]
      [36] ireturn
      [37] iconst_0
      [38] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [7] Var: ..., Stack: (empty)
        - [37] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/de
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface a.a.a.c.de extends java.lang.Object

Interfaces (count = 1):
  + Class [java/util/Collection]

Constant Pool (count = 9):
  + Class [a/a/a/c/de]
  + Class [java/lang/Object]
  + Class [java/util/Collection]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/de]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Collection]

Fields (count = 0):

Methods (count = 1):
  + Method:       a()Ljava/util/Set;
    Access flags: 0x401
      = public abstract java.util.Set a()

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/df
  Superclass:    a/a/a/c/dh
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.df extends a.a.a.c.dh

Interfaces (count = 1):
  + Class [java/io/Serializable]

Constant Pool (count = 44):
  + String [Ordering.natural()]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/df]
  + Class [a/a/a/c/dh]
  + Class [a/a/a/c/dq]
  + Class [java/io/Serializable]
  + Class [java/lang/Comparable]
  + Fieldref [a/a/a/c/df.a La/a/a/c/df;]
  + Fieldref [a/a/a/c/dq.a La/a/a/c/dq;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/df.<init> ()V]
  + Methodref [a/a/a/c/df.a (Ljava/lang/Comparable;Ljava/lang/Comparable;)I]
  + Methodref [a/a/a/c/dh.<init> ()V]
  + InterfaceMethodref [java/lang/Comparable.compareTo (Ljava/lang/Object;)I]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Comparable;Ljava/lang/Comparable;)I]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a La/a/a/c/df;]
  + NameAndType [a La/a/a/c/dq;]
  + NameAndType [compareTo (Ljava/lang/Object;)I]
  + Utf8 [()La/a/a/c/dh;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Comparable;Ljava/lang/Comparable;)I]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)I]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/df;]
  + Utf8 [La/a/a/c/dq;]
  + Utf8 [Ordering.natural()]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/df]
  + Utf8 [a/a/a/c/dh]
  + Utf8 [a/a/a/c/dq]
  + Utf8 [compare]
  + Utf8 [compareTo]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Comparable]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a La/a/a/c/df;
    Access flags: 0x18
      = static final a.a.a.c.df a

Methods (count = 6):
  + Method:       a(Ljava/lang/Comparable;Ljava/lang/Comparable;)I
    Access flags: 0x1
      = public int a(java.lang.Comparable,java.lang.Comparable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] invokestatic #10
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_2 v2
      [6] invokestatic #10
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] pop
      [10] aload_1 v1
      [11] aload_2 v2
      [12] invokeinterface #14
        + InterfaceMethodref [java/lang/Comparable.compareTo (Ljava/lang/Object;)I]
      [17] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/dh;
    Access flags: 0x1
      = public a.a.a.c.dh a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 1):
      [0] getstatic #9
        + Fieldref [a/a/a/c/dq.a La/a/a/c/dq;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 3, locals = 1, stack = 1):
      [0] ldc #1
        + String [Ordering.natural()]
      [2] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>()V
    Access flags: 0x2
      = private df()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #13
        + Methodref [a/a/a/c/dh.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       compare(Ljava/lang/Object;Ljava/lang/Object;)I
    Access flags: 0x1001
      = public synthetic int compare(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #7
        + Class [java/lang/Comparable]
      [5] aload_2 v2
      [6] checkcast #7
        + Class [java/lang/Comparable]
      [9] invokevirtual #12
        + Methodref [a/a/a/c/df.a (Ljava/lang/Comparable;Ljava/lang/Comparable;)I]
      [12] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 0, stack = 2):
      [0] new #3
        + Class [a/a/a/c/df]
      [3] dup
      [4] invokespecial #11
        + Methodref [a/a/a/c/df.<init> ()V]
      [7] putstatic #8
        + Fieldref [a/a/a/c/df.a La/a/a/c/df;]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dg
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.c.dg extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 62):
  + String [at index ]
  + Class [a/a/a/c/dg]
  + Class [a/a/a/c/di]
  + Class [java/lang/Math]
  + Class [java/lang/NullPointerException]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/System]
  + Fieldref [a/a/a/c/dg.a [Ljava/lang/Object;]
  + Methodref [a/a/a/c/dg.a (Ljava/lang/Object;I)Ljava/lang/Object;]
  + Methodref [a/a/a/c/dg.a ([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + Methodref [a/a/a/c/dg.c ([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + Methodref [a/a/a/c/di.a ([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + Methodref [java/lang/Math.min (II)I]
  + Methodref [java/lang/NullPointerException.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/lang/System.arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [a (Ljava/lang/Object;I)Ljava/lang/Object;]
  + NameAndType [a ([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + NameAndType [a [Ljava/lang/Object;]
  + NameAndType [append (I)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
  + NameAndType [c ([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + NameAndType [min (II)I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(I)Ljava/lang/StringBuilder;]
  + Utf8 [(II)I]
  + Utf8 [(Ljava/lang/Object;I)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;II)V]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [([Ljava/lang/Object;)[Ljava/lang/Object;]
  + Utf8 [([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/Object;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/dg]
  + Utf8 [a/a/a/c/di]
  + Utf8 [append]
  + Utf8 [arraycopy]
  + Utf8 [at index ]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [java/lang/Math]
  + Utf8 [java/lang/NullPointerException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/System]
  + Utf8 [min]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a [Ljava/lang/Object;
    Access flags: 0x18
      = static final java.lang.Object[] a

Methods (count = 6):
  + Method:       a([Ljava/lang/Object;I)[Ljava/lang/Object;
    Access flags: 0x9
      = public static java.lang.Object[] a(java.lang.Object[],int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] invokestatic #13
        + Methodref [a/a/a/c/di.a ([Ljava/lang/Object;I)[Ljava/lang/Object;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b([Ljava/lang/Object;I)[Ljava/lang/Object;
    Access flags: 0x8
      = static java.lang.Object[] b(java.lang.Object[],int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 3, stack = 6):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] invokestatic #11
        + Methodref [a/a/a/c/dg.a ([Ljava/lang/Object;I)[Ljava/lang/Object;]
      [5] astore_2 v2
      [6] aload_0 v0
      [7] iconst_0
      [8] aload_2 v2
      [9] iconst_0
      [10] aload_0 v0
      [11] arraylength
      [12] iload_1 v1
      [13] invokestatic #14
        + Methodref [java/lang/Math.min (II)I]
      [16] invokestatic #20
        + Methodref [java/lang/System.arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
      [19] aload_2 v2
      [20] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a([Ljava/lang/Object;)[Ljava/lang/Object;
    Access flags: 0x88
      = static varargs java.lang.Object[] a(java.lang.Object[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] aload_0 v0
      [2] arraylength
      [3] invokestatic #12
        + Methodref [a/a/a/c/dg.c ([Ljava/lang/Object;I)[Ljava/lang/Object;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c([Ljava/lang/Object;I)[Ljava/lang/Object;
    Access flags: 0x8
      = static java.lang.Object[] c(java.lang.Object[],int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 3, stack = 2):
      [0] iconst_0
      [1] istore_2 v2
      [2] iload_2 v2
      [3] iload_1 v1
      [4] ificmpge +17 (target=21)
      [7] aload_0 v0
      [8] iload_2 v2
      [9] aaload
      [10] iload_2 v2
      [11] invokestatic #10
        + Methodref [a/a/a/c/dg.a (Ljava/lang/Object;I)Ljava/lang/Object;]
      [14] pop
      [15] iinc v2, 1
      [18] goto -16 (target=2)
      [21] aload_0 v0
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [2] Var: ...[i], Stack: (empty)
        - [21] Var: -1, Stack: (empty)
  + Method:       a(Ljava/lang/Object;I)Ljava/lang/Object;
    Access flags: 0x8
      = static java.lang.Object a(java.lang.Object,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 33, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] ifnonnull +30 (target=31)
      [4] new #5
        + Class [java/lang/NullPointerException]
      [7] dup
      [8] new #7
        + Class [java/lang/StringBuilder]
      [11] dup
      [12] invokespecial #16
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [15] ldc #1
        + String [at index ]
      [17] invokevirtual #18
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [20] iload_1 v1
      [21] invokevirtual #17
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [24] invokevirtual #19
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [27] invokespecial #15
        + Methodref [java/lang/NullPointerException.<init> (Ljava/lang/String;)V]
      [30] athrow
      [31] aload_0 v0
      [32] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [31] Var: ..., Stack: (empty)
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 0, stack = 1):
      [0] iconst_0
      [1] anewarray #6
        + Class [java/lang/Object]
      [4] putstatic #9
        + Fieldref [a/a/a/c/dg.a [Ljava/lang/Object;]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dh
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.dh extends java.lang.Object

Interfaces (count = 1):
  + Class [java/util/Comparator]

Constant Pool (count = 69):
  + Class [[Ljava/lang/Object;]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/ab]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/ch]
  + Class [a/a/a/c/df]
  + Class [a/a/a/c/dh]
  + Class [a/a/a/c/dr]
  + Class [a/a/a/c/y]
  + Class [java/lang/Iterable]
  + Class [java/lang/Object]
  + Class [java/util/Arrays]
  + Class [java/util/Comparator]
  + Fieldref [a/a/a/c/df.a La/a/a/c/df;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/ab.<init> (Ljava/util/Comparator;)V]
  + Methodref [a/a/a/c/bo.b ([Ljava/lang/Object;)La/a/a/c/bo;]
  + Methodref [a/a/a/c/ch.c (Ljava/lang/Iterable;)[Ljava/lang/Object;]
  + Methodref [a/a/a/c/dr.<init> (La/a/a/c/dh;)V]
  + Methodref [a/a/a/c/y.<init> (La/a/a/a/e;La/a/a/c/dh;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/util/Arrays.sort ([Ljava/lang/Object;Ljava/util/Comparator;)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/a/e;La/a/a/c/dh;)V]
  + NameAndType [<init> (La/a/a/c/dh;)V]
  + NameAndType [<init> (Ljava/util/Comparator;)V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a La/a/a/c/df;]
  + NameAndType [b ([Ljava/lang/Object;)La/a/a/c/bo;]
  + NameAndType [c (Ljava/lang/Iterable;)[Ljava/lang/Object;]
  + NameAndType [sort ([Ljava/lang/Object;Ljava/util/Comparator;)V]
  + Utf8 [()La/a/a/c/dh;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/a/e;)La/a/a/c/dh;]
  + Utf8 [(La/a/a/a/e;La/a/a/c/dh;)V]
  + Utf8 [(La/a/a/c/dh;)V]
  + Utf8 [(Ljava/lang/Iterable;)La/a/a/c/bo;]
  + Utf8 [(Ljava/lang/Iterable;)[Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)I]
  + Utf8 [(Ljava/util/Comparator;)La/a/a/c/dh;]
  + Utf8 [(Ljava/util/Comparator;)V]
  + Utf8 [([Ljava/lang/Object;)La/a/a/c/bo;]
  + Utf8 [([Ljava/lang/Object;Ljava/util/Comparator;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/df;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/Object;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/ab]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/ch]
  + Utf8 [a/a/a/c/df]
  + Utf8 [a/a/a/c/dh]
  + Utf8 [a/a/a/c/dr]
  + Utf8 [a/a/a/c/y]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [compare]
  + Utf8 [java/lang/Iterable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Arrays]
  + Utf8 [java/util/Comparator]
  + Utf8 [sort]

Fields (count = 0):

Methods (count = 7):
  + Method:       b()La/a/a/c/dh;
    Access flags: 0x9
      = public static a.a.a.c.dh b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] getstatic #14
        + Fieldref [a/a/a/c/df.a La/a/a/c/df;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Comparator;)La/a/a/c/dh;
    Access flags: 0x9
      = public static a.a.a.c.dh a(java.util.Comparator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] instanceof #7
        + Class [a/a/a/c/dh]
      [4] ifeq +10 (target=14)
      [7] aload_0 v0
      [8] checkcast #7
        + Class [a/a/a/c/dh]
      [11] goto +11 (target=22)
      [14] new #3
        + Class [a/a/a/c/ab]
      [17] dup
      [18] aload_0 v0
      [19] invokespecial #16
        + Methodref [a/a/a/c/ab.<init> (Ljava/util/Comparator;)V]
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [14] Var: ..., Stack: (empty)
        - [22] Var: ..., Stack: [a:a/a/a/c/dh]
  - Method:       <init>()V
    Access flags: 0x4
      = protected dh()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #21
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/dh;
    Access flags: 0x1
      = public a.a.a.c.dh a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #8
        + Class [a/a/a/c/dr]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #19
        + Methodref [a/a/a/c/dr.<init> (La/a/a/c/dh;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/a/e;)La/a/a/c/dh;
    Access flags: 0x1
      = public a.a.a.c.dh a(a.a.a.a.e)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 4):
      [0] new #9
        + Class [a/a/a/c/y]
      [3] dup
      [4] aload_1 v1
      [5] aload_0 v0
      [6] invokespecial #20
        + Methodref [a/a/a/c/y.<init> (La/a/a/a/e;La/a/a/c/dh;)V]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       compare(Ljava/lang/Object;Ljava/lang/Object;)I
    Access flags: 0x401
      = public abstract int compare(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Iterable;)La/a/a/c/bo;
    Access flags: 0x1
      = public a.a.a.c.bo a(java.lang.Iterable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 52, locals = 7, stack = 2):
      [0] aload_1 v1
      [1] invokestatic #18
        + Methodref [a/a/a/c/ch.c (Ljava/lang/Iterable;)[Ljava/lang/Object;]
      [4] checkcast #1
        + Class [[Ljava/lang/Object;]
      [7] astore_2 v2
      [8] aload_2 v2
      [9] astore_3 v3
      [10] aload_3 v3
      [11] arraylength
      [12] istore v4
      [14] iconst_0
      [15] istore v5
      [17] iload v5
      [19] iload v4
      [21] ificmpge +21 (target=42)
      [24] aload_3 v3
      [25] iload v5
      [27] aaload
      [28] astore v6
      [30] aload v6
      [32] invokestatic #15
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [35] pop
      [36] iinc v5, 1
      [39] goto -22 (target=17)
      [42] aload_2 v2
      [43] aload_0 v0
      [44] invokestatic #22
        + Methodref [java/util/Arrays.sort ([Ljava/lang/Object;Ljava/util/Comparator;)V]
      [47] aload_2 v2
      [48] invokestatic #17
        + Methodref [a/a/a/c/bo.b ([Ljava/lang/Object;)La/a/a/c/bo;]
      [51] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [17] Var: [a:a/a/a/c/dh][a:java/lang/Iterable][a:[Ljava/lang/Object;][a:[Ljava/lang/Object;][i][i], Stack: 
        - [42] Var: -3, Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/di
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.di extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 25):
  + Class [[Ljava/lang/Object;]
  + Class [a/a/a/c/di]
  + Class [java/lang/Class]
  + Class [java/lang/Object]
  + Class [java/lang/reflect/Array]
  + Methodref [java/lang/Class.getComponentType ()Ljava/lang/Class;]
  + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
  + Methodref [java/lang/reflect/Array.newInstance (Ljava/lang/Class;I)Ljava/lang/Object;]
  + NameAndType [getClass ()Ljava/lang/Class;]
  + NameAndType [getComponentType ()Ljava/lang/Class;]
  + NameAndType [newInstance (Ljava/lang/Class;I)Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/Class;I)Ljava/lang/Object;]
  + Utf8 [([Ljava/lang/Object;I)[Ljava/lang/Object;]
  + Utf8 [Code]
  + Utf8 [[Ljava/lang/Object;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/di]
  + Utf8 [getClass]
  + Utf8 [getComponentType]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/reflect/Array]
  + Utf8 [newInstance]

Fields (count = 0):

Methods (count = 1):
  + Method:       a([Ljava/lang/Object;I)[Ljava/lang/Object;
    Access flags: 0x8
      = static java.lang.Object[] a(java.lang.Object[],int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #7
        + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
      [4] invokevirtual #6
        + Methodref [java/lang/Class.getComponentType ()Ljava/lang/Class;]
      [7] astore_2 v2
      [8] aload_2 v2
      [9] iload_1 v1
      [10] invokestatic #8
        + Methodref [java/lang/reflect/Array.newInstance (Ljava/lang/Class;I)Ljava/lang/Object;]
      [13] checkcast #1
        + Class [[Ljava/lang/Object;]
      [16] checkcast #1
        + Class [[Ljava/lang/Object;]
      [19] astore_3 v3
      [20] aload_3 v3
      [21] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dj
  Superclass:    a/a/a/c/bd
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.dj extends a.a.a.c.bd

Interfaces (count = 0):

Constant Pool (count = 42):
  + Class [a/a/a/c/bd]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/dj]
  + Fieldref [a/a/a/c/dj.a La/a/a/c/bf;]
  + Fieldref [a/a/a/c/dj.b La/a/a/c/bo;]
  + Methodref [a/a/a/c/bd.<init> ()V]
  + Methodref [a/a/a/c/bo.a (I)La/a/a/c/eb;]
  + Methodref [a/a/a/c/bo.a ([Ljava/lang/Object;I)I]
  + Methodref [a/a/a/c/bo.b ([Ljava/lang/Object;)La/a/a/c/bo;]
  + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
  + Methodref [a/a/a/c/dj.<init> (La/a/a/c/bf;La/a/a/c/bo;)V]
  + Methodref [a/a/a/c/dj.a (I)La/a/a/c/eb;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/bf;La/a/a/c/bo;)V]
  + NameAndType [a (I)La/a/a/c/eb;]
  + NameAndType [a ([Ljava/lang/Object;I)I]
  + NameAndType [a La/a/a/c/bf;]
  + NameAndType [b ([Ljava/lang/Object;)La/a/a/c/bo;]
  + NameAndType [b La/a/a/c/bo;]
  + NameAndType [get (I)Ljava/lang/Object;]
  + Utf8 [()La/a/a/c/bf;]
  + Utf8 [()V]
  + Utf8 [(I)La/a/a/c/eb;]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(I)Ljava/util/ListIterator;]
  + Utf8 [(La/a/a/c/bf;La/a/a/c/bo;)V]
  + Utf8 [(La/a/a/c/bf;[Ljava/lang/Object;)V]
  + Utf8 [([Ljava/lang/Object;)La/a/a/c/bo;]
  + Utf8 [([Ljava/lang/Object;I)I]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bf;]
  + Utf8 [La/a/a/c/bo;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bd]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/dj]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [get]
  + Utf8 [listIterator]

Fields (count = 2):
  + Field:        a La/a/a/c/bf;
    Access flags: 0x12
      = private final a.a.a.c.bf a
  + Field:        b La/a/a/c/bo;
    Access flags: 0x12
      = private final a.a.a.c.bo b

Methods (count = 7):
  - Method:       <init>(La/a/a/c/bf;La/a/a/c/bo;)V
    Access flags: 0x0
      = dj(a.a.a.c.bf,a.a.a.c.bo)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #6
        + Methodref [a/a/a/c/bd.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #4
        + Fieldref [a/a/a/c/dj.a La/a/a/c/bf;]
      [9] aload_0 v0
      [10] aload_2 v2
      [11] putfield #5
        + Fieldref [a/a/a/c/dj.b La/a/a/c/bo;]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/c/bf;[Ljava/lang/Object;)V
    Access flags: 0x0
      = dj(a.a.a.c.bf,java.lang.Object[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokestatic #9
        + Methodref [a/a/a/c/bo.b ([Ljava/lang/Object;)La/a/a/c/bo;]
      [6] invokespecial #11
        + Methodref [a/a/a/c/dj.<init> (La/a/a/c/bf;La/a/a/c/bo;)V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()La/a/a/c/bf;
    Access flags: 0x0
      = a.a.a.c.bf c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/c/dj.a La/a/a/c/bf;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(I)La/a/a/c/eb;
    Access flags: 0x1
      = public a.a.a.c.eb a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/c/dj.b La/a/a/c/bo;]
      [4] iload_1 v1
      [5] invokevirtual #7
        + Methodref [a/a/a/c/bo.a (I)La/a/a/c/eb;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a([Ljava/lang/Object;I)I
    Access flags: 0x0
      = int a(java.lang.Object[],int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/c/dj.b La/a/a/c/bo;]
      [4] aload_1 v1
      [5] iload_2 v2
      [6] invokevirtual #8
        + Methodref [a/a/a/c/bo.a ([Ljava/lang/Object;I)I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get(I)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/c/dj.b La/a/a/c/bo;]
      [4] iload_1 v1
      [5] invokevirtual #10
        + Methodref [a/a/a/c/bo.get (I)Ljava/lang/Object;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       listIterator(I)Ljava/util/ListIterator;
    Access flags: 0x1001
      = public synthetic java.util.ListIterator listIterator(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] invokevirtual #12
        + Methodref [a/a/a/c/dj.a (I)La/a/a/c/eb;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dk
  Superclass:    a/a/a/c/bo
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.dk extends a.a.a.c.bo

Interfaces (count = 0):

Constant Pool (count = 66):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/ck]
  + Class [a/a/a/c/dk]
  + Class [java/lang/Object]
  + Class [java/lang/System]
  + Fieldref [a/a/a/c/dk.a I]
  + Fieldref [a/a/a/c/dk.b I]
  + Fieldref [a/a/a/c/dk.c [Ljava/lang/Object;]
  + Methodref [a/a/a/a/o.a (II)I]
  + Methodref [a/a/a/c/bo.<init> ()V]
  + Methodref [a/a/a/c/ck.a ([Ljava/lang/Object;III)La/a/a/c/eb;]
  + Methodref [a/a/a/c/dk.<init> ([Ljava/lang/Object;II)V]
  + Methodref [a/a/a/c/dk.a (I)La/a/a/c/eb;]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/System.arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> ([Ljava/lang/Object;II)V]
  + NameAndType [a (I)La/a/a/c/eb;]
  + NameAndType [a (II)I]
  + NameAndType [a ([Ljava/lang/Object;III)La/a/a/c/eb;]
  + NameAndType [a I]
  + NameAndType [arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
  + NameAndType [b I]
  + NameAndType [c [Ljava/lang/Object;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + Utf8 [()I]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)La/a/a/c/eb;]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(I)Ljava/util/ListIterator;]
  + Utf8 [(II)I]
  + Utf8 [(II)La/a/a/c/bo;]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;II)V]
  + Utf8 [([Ljava/lang/Object;)V]
  + Utf8 [([Ljava/lang/Object;I)I]
  + Utf8 [([Ljava/lang/Object;II)V]
  + Utf8 [([Ljava/lang/Object;III)La/a/a/c/eb;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/Object;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [a/a/a/c/dk]
  + Utf8 [arraycopy]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [get]
  + Utf8 [indexOf]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/System]
  + Utf8 [lastIndexOf]
  + Utf8 [listIterator]
  + Utf8 [size]

Fields (count = 3):
  + Field:        a I
    Access flags: 0x92
      = private final transient int a
  + Field:        b I
    Access flags: 0x92
      = private final transient int b
  + Field:        c [Ljava/lang/Object;
    Access flags: 0x92
      = private final transient java.lang.Object[] c

Methods (count = 11):
  - Method:       <init>([Ljava/lang/Object;II)V
    Access flags: 0x0
      = dk(java.lang.Object[],int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #11
        + Methodref [a/a/a/c/bo.<init> ()V]
      [4] aload_0 v0
      [5] iload_2 v2
      [6] putfield #7
        + Fieldref [a/a/a/c/dk.a I]
      [9] aload_0 v0
      [10] iload_3 v3
      [11] putfield #8
        + Fieldref [a/a/a/c/dk.b I]
      [14] aload_0 v0
      [15] aload_1 v1
      [16] putfield #9
        + Fieldref [a/a/a/c/dk.c [Ljava/lang/Object;]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>([Ljava/lang/Object;)V
    Access flags: 0x0
      = dk(java.lang.Object[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iconst_0
      [3] aload_1 v1
      [4] arraylength
      [5] invokespecial #13
        + Methodref [a/a/a/c/dk.<init> ([Ljava/lang/Object;II)V]
      [8] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/dk.b I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/dk.b I]
      [4] aload_0 v0
      [5] getfield #9
        + Fieldref [a/a/a/c/dk.c [Ljava/lang/Object;]
      [8] arraylength
      [9] ificmpeq +7 (target=16)
      [12] iconst_1
      [13] goto +4 (target=17)
      [16] iconst_0
      [17] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [16] Var: ..., Stack: (empty)
        - [17] Var: ..., Stack: [i]
  + Method:       a([Ljava/lang/Object;I)I
    Access flags: 0x0
      = int a(java.lang.Object[],int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 3, stack = 5):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/dk.c [Ljava/lang/Object;]
      [4] aload_0 v0
      [5] getfield #7
        + Fieldref [a/a/a/c/dk.a I]
      [8] aload_1 v1
      [9] iload_2 v2
      [10] aload_0 v0
      [11] getfield #8
        + Fieldref [a/a/a/c/dk.b I]
      [14] invokestatic #16
        + Methodref [java/lang/System.arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
      [17] iload_2 v2
      [18] aload_0 v0
      [19] getfield #8
        + Fieldref [a/a/a/c/dk.b I]
      [22] iadd
      [23] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get(I)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 2, stack = 3):
      [0] iload_1 v1
      [1] aload_0 v0
      [2] getfield #8
        + Fieldref [a/a/a/c/dk.b I]
      [5] invokestatic #10
        + Methodref [a/a/a/a/o.a (II)I]
      [8] pop
      [9] aload_0 v0
      [10] getfield #9
        + Fieldref [a/a/a/c/dk.c [Ljava/lang/Object;]
      [13] iload_1 v1
      [14] aload_0 v0
      [15] getfield #7
        + Fieldref [a/a/a/c/dk.a I]
      [18] iadd
      [19] aaload
      [20] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       indexOf(Ljava/lang/Object;)I
    Access flags: 0x1
      = public int indexOf(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 44, locals = 3, stack = 3):
      [0] aload_1 v1
      [1] ifnonnull +5 (target=6)
      [4] iconst_m1
      [5] ireturn
      [6] iconst_0
      [7] istore_2 v2
      [8] iload_2 v2
      [9] aload_0 v0
      [10] getfield #8
        + Fieldref [a/a/a/c/dk.b I]
      [13] ificmpge +29 (target=42)
      [16] aload_0 v0
      [17] getfield #9
        + Fieldref [a/a/a/c/dk.c [Ljava/lang/Object;]
      [20] aload_0 v0
      [21] getfield #7
        + Fieldref [a/a/a/c/dk.a I]
      [24] iload_2 v2
      [25] iadd
      [26] aaload
      [27] aload_1 v1
      [28] invokevirtual #15
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [31] ifeq +5 (target=36)
      [34] iload_2 v2
      [35] ireturn
      [36] iinc v2, 1
      [39] goto -31 (target=8)
      [42] iconst_m1
      [43] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [6] Var: ..., Stack: (empty)
        - [8] Var: ...[i], Stack: (empty)
        - [36] Var: ..., Stack: (empty)
        - [42] Var: -1, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       lastIndexOf(Ljava/lang/Object;)I
    Access flags: 0x1
      = public int lastIndexOf(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 45, locals = 3, stack = 3):
      [0] aload_1 v1
      [1] ifnonnull +5 (target=6)
      [4] iconst_m1
      [5] ireturn
      [6] aload_0 v0
      [7] getfield #8
        + Fieldref [a/a/a/c/dk.b I]
      [10] iconst_1
      [11] isub
      [12] istore_2 v2
      [13] iload_2 v2
      [14] iflt +29 (target=43)
      [17] aload_0 v0
      [18] getfield #9
        + Fieldref [a/a/a/c/dk.c [Ljava/lang/Object;]
      [21] aload_0 v0
      [22] getfield #7
        + Fieldref [a/a/a/c/dk.a I]
      [25] iload_2 v2
      [26] iadd
      [27] aaload
      [28] aload_1 v1
      [29] invokevirtual #15
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [32] ifeq +5 (target=37)
      [35] iload_2 v2
      [36] ireturn
      [37] iinc v2, -1
      [40] goto -27 (target=13)
      [43] iconst_m1
      [44] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [6] Var: ..., Stack: (empty)
        - [13] Var: ...[i], Stack: (empty)
        - [37] Var: ..., Stack: (empty)
        - [43] Var: -1, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b(II)La/a/a/c/bo;
    Access flags: 0x0
      = a.a.a.c.bo b(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 3, stack = 6):
      [0] new #4
        + Class [a/a/a/c/dk]
      [3] dup
      [4] aload_0 v0
      [5] getfield #9
        + Fieldref [a/a/a/c/dk.c [Ljava/lang/Object;]
      [8] aload_0 v0
      [9] getfield #7
        + Fieldref [a/a/a/c/dk.a I]
      [12] iload_1 v1
      [13] iadd
      [14] iload_2 v2
      [15] iload_1 v1
      [16] isub
      [17] invokespecial #13
        + Methodref [a/a/a/c/dk.<init> ([Ljava/lang/Object;II)V]
      [20] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(I)La/a/a/c/eb;
    Access flags: 0x1
      = public a.a.a.c.eb a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/dk.c [Ljava/lang/Object;]
      [4] aload_0 v0
      [5] getfield #7
        + Fieldref [a/a/a/c/dk.a I]
      [8] aload_0 v0
      [9] getfield #8
        + Fieldref [a/a/a/c/dk.b I]
      [12] iload_1 v1
      [13] invokestatic #12
        + Methodref [a/a/a/c/ck.a ([Ljava/lang/Object;III)La/a/a/c/eb;]
      [16] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       listIterator(I)Ljava/util/ListIterator;
    Access flags: 0x1001
      = public synthetic java.util.ListIterator listIterator(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] invokevirtual #14
        + Methodref [a/a/a/c/dk.a (I)La/a/a/c/eb;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dl
  Superclass:    a/a/a/c/bs
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.dl extends a.a.a.c.bs

Interfaces (count = 0):

Constant Pool (count = 107):
  + String [key]
  + Class [[La/a/a/c/bv;]
  + Class [[Ljava/util/Map$Entry;]
  + Class [a/a/a/c/bc]
  + Class [a/a/a/c/bs]
  + Class [a/a/a/c/bu]
  + Class [a/a/a/c/bv]
  + Class [a/a/a/c/dl]
  + Class [a/a/a/c/dn]
  + Class [a/a/a/c/do]
  + Class [a/a/a/c/z]
  + Class [java/lang/Object]
  + Class [java/util/Map$Entry]
  + Double [1.2]
  + Fieldref [a/a/a/c/dl.a [La/a/a/c/bu;]
  + Fieldref [a/a/a/c/dl.b [La/a/a/c/bu;]
  + Fieldref [a/a/a/c/dl.c I]
  + Methodref [a/a/a/c/bc.a (I)I]
  + Methodref [a/a/a/c/bc.a (ID)I]
  + Methodref [a/a/a/c/bs.<init> ()V]
  + Methodref [a/a/a/c/bu.a ()La/a/a/c/bu;]
  + Methodref [a/a/a/c/bu.getKey ()Ljava/lang/Object;]
  + Methodref [a/a/a/c/bu.getValue ()Ljava/lang/Object;]
  + Methodref [a/a/a/c/bv.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
  + Methodref [a/a/a/c/bv.getKey ()Ljava/lang/Object;]
  + Methodref [a/a/a/c/dl.a (I)[La/a/a/c/bu;]
  + Methodref [a/a/a/c/dl.a (Ljava/lang/Object;La/a/a/c/bu;La/a/a/c/bu;)V]
  + Methodref [a/a/a/c/dl.a (ZLjava/lang/String;Ljava/util/Map$Entry;Ljava/util/Map$Entry;)V]
  + Methodref [a/a/a/c/dn.<init> (La/a/a/c/dl;La/a/a/c/dm;)V]
  + Methodref [a/a/a/c/do.<init> (La/a/a/c/bu;La/a/a/c/bu;)V]
  + Methodref [a/a/a/c/do.<init> (Ljava/lang/Object;Ljava/lang/Object;La/a/a/c/bu;)V]
  + Methodref [a/a/a/c/z.a (Ljava/lang/Object;Ljava/lang/Object;)V]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.hashCode ()I]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/bu;La/a/a/c/bu;)V]
  + NameAndType [<init> (La/a/a/c/dl;La/a/a/c/dm;)V]
  + NameAndType [<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/Object;Ljava/lang/Object;La/a/a/c/bu;)V]
  + NameAndType [a ()La/a/a/c/bu;]
  + NameAndType [a (I)I]
  + NameAndType [a (I)[La/a/a/c/bu;]
  + NameAndType [a (ID)I]
  + NameAndType [a (Ljava/lang/Object;La/a/a/c/bu;La/a/a/c/bu;)V]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [a (ZLjava/lang/String;Ljava/util/Map$Entry;Ljava/util/Map$Entry;)V]
  + NameAndType [a [La/a/a/c/bu;]
  + NameAndType [b [La/a/a/c/bu;]
  + NameAndType [c I]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [hashCode ()I]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bu;]
  + Utf8 [()La/a/a/c/cb;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)I]
  + Utf8 [(I)[La/a/a/c/bu;]
  + Utf8 [(ID)I]
  + Utf8 [(I[La/a/a/c/bv;)V]
  + Utf8 [(La/a/a/c/bu;La/a/a/c/bu;)V]
  + Utf8 [(La/a/a/c/dl;)[La/a/a/c/bu;]
  + Utf8 [(La/a/a/c/dl;La/a/a/c/dm;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;La/a/a/c/bu;La/a/a/c/bu;)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;La/a/a/c/bu;)V]
  + Utf8 [(ZLjava/lang/String;Ljava/util/Map$Entry;Ljava/util/Map$Entry;)V]
  + Utf8 [([Ljava/util/Map$Entry;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [[La/a/a/c/bu;]
  + Utf8 [[La/a/a/c/bv;]
  + Utf8 [[Ljava/util/Map$Entry;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bc]
  + Utf8 [a/a/a/c/bs]
  + Utf8 [a/a/a/c/bu]
  + Utf8 [a/a/a/c/bv]
  + Utf8 [a/a/a/c/dl]
  + Utf8 [a/a/a/c/dn]
  + Utf8 [a/a/a/c/do]
  + Utf8 [a/a/a/c/z]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [get]
  + Utf8 [getKey]
  + Utf8 [getValue]
  + Utf8 [hashCode]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [key]
  + Utf8 [size]

Fields (count = 3):
  + Field:        a [La/a/a/c/bu;
    Access flags: 0x92
      = private final transient a.a.a.c.bu[] a
  + Field:        b [La/a/a/c/bu;
    Access flags: 0x92
      = private final transient a.a.a.c.bu[] b
  + Field:        c I
    Access flags: 0x92
      = private final transient int c

Methods (count = 9):
  - Method:       <init>(I[La/a/a/c/bv;)V
    Access flags: 0x0
      = dl(int,a.a.a.c.bv[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 141, locals = 10, stack = 4):
      [0] aload_0 v0
      [1] invokespecial #21
        + Methodref [a/a/a/c/bs.<init> ()V]
      [4] aload_0 v0
      [5] aload_0 v0
      [6] iload_1 v1
      [7] invokespecial #27
        + Methodref [a/a/a/c/dl.a (I)[La/a/a/c/bu;]
      [10] putfield #16
        + Fieldref [a/a/a/c/dl.a [La/a/a/c/bu;]
      [13] iload_1 v1
      [14] ldc2_w #14
        + Double [1.2]
      [17] invokestatic #20
        + Methodref [a/a/a/c/bc.a (ID)I]
      [20] istore_3 v3
      [21] aload_0 v0
      [22] aload_0 v0
      [23] iload_3 v3
      [24] invokespecial #27
        + Methodref [a/a/a/c/dl.a (I)[La/a/a/c/bu;]
      [27] putfield #17
        + Fieldref [a/a/a/c/dl.b [La/a/a/c/bu;]
      [30] aload_0 v0
      [31] iload_3 v3
      [32] iconst_1
      [33] isub
      [34] putfield #18
        + Fieldref [a/a/a/c/dl.c I]
      [37] iconst_0
      [38] istore v4
      [40] iload v4
      [42] iload_1 v1
      [43] ificmpge +97 (target=140)
      [46] aload_2 v2
      [47] iload v4
      [49] aaload
      [50] astore v5
      [52] aload v5
      [54] invokevirtual #26
        + Methodref [a/a/a/c/bv.getKey ()Ljava/lang/Object;]
      [57] astore v6
      [59] aload v6
      [61] invokevirtual #35
        + Methodref [java/lang/Object.hashCode ()I]
      [64] invokestatic #19
        + Methodref [a/a/a/c/bc.a (I)I]
      [67] aload_0 v0
      [68] getfield #18
        + Fieldref [a/a/a/c/dl.c I]
      [71] iand
      [72] istore v7
      [74] aload_0 v0
      [75] getfield #17
        + Fieldref [a/a/a/c/dl.b [La/a/a/c/bu;]
      [78] iload v7
      [80] aaload
      [81] astore v8
      [83] aload v8
      [85] ifnonnull +8 (target=93)
      [88] aload v5
      [90] goto +14 (target=104)
      [93] new #10
        + Class [a/a/a/c/do]
      [96] dup
      [97] aload v5
      [99] aload v8
      [101] invokespecial #31
        + Methodref [a/a/a/c/do.<init> (La/a/a/c/bu;La/a/a/c/bu;)V]
      [104] astore v9
      [106] aload_0 v0
      [107] getfield #17
        + Fieldref [a/a/a/c/dl.b [La/a/a/c/bu;]
      [110] iload v7
      [112] aload v9
      [114] aastore
      [115] aload_0 v0
      [116] getfield #16
        + Fieldref [a/a/a/c/dl.a [La/a/a/c/bu;]
      [119] iload v4
      [121] aload v9
      [123] aastore
      [124] aload_0 v0
      [125] aload v6
      [127] aload v9
      [129] aload v8
      [131] invokespecial #28
        + Methodref [a/a/a/c/dl.a (Ljava/lang/Object;La/a/a/c/bu;La/a/a/c/bu;)V]
      [134] iinc v4, 1
      [137] goto -97 (target=40)
      [140] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [40] Var: [a:a/a/a/c/dl][i][a:[La/a/a/c/bv;][i][i], Stack: 
        - [93] Var: [a:a/a/a/c/dl][i][a:[La/a/a/c/bv;][i][i][a:a/a/a/c/bv][a:java/lang/Object][i][a:a/a/a/c/bu], Stack: 
        - [104] Var: ..., Stack: [a:a/a/a/c/bu]
        - [140] Var: [a:a/a/a/c/dl][i][a:[La/a/a/c/bv;][i], Stack: 
  - Method:       <init>([Ljava/util/Map$Entry;)V
    Access flags: 0x0
      = dl(java.util.Map$Entry[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 173, locals = 11, stack = 5):
      [0] aload_0 v0
      [1] invokespecial #21
        + Methodref [a/a/a/c/bs.<init> ()V]
      [4] aload_1 v1
      [5] arraylength
      [6] istore_2 v2
      [7] aload_0 v0
      [8] aload_0 v0
      [9] iload_2 v2
      [10] invokespecial #27
        + Methodref [a/a/a/c/dl.a (I)[La/a/a/c/bu;]
      [13] putfield #16
        + Fieldref [a/a/a/c/dl.a [La/a/a/c/bu;]
      [16] iload_2 v2
      [17] ldc2_w #14
        + Double [1.2]
      [20] invokestatic #20
        + Methodref [a/a/a/c/bc.a (ID)I]
      [23] istore_3 v3
      [24] aload_0 v0
      [25] aload_0 v0
      [26] iload_3 v3
      [27] invokespecial #27
        + Methodref [a/a/a/c/dl.a (I)[La/a/a/c/bu;]
      [30] putfield #17
        + Fieldref [a/a/a/c/dl.b [La/a/a/c/bu;]
      [33] aload_0 v0
      [34] iload_3 v3
      [35] iconst_1
      [36] isub
      [37] putfield #18
        + Fieldref [a/a/a/c/dl.c I]
      [40] iconst_0
      [41] istore v4
      [43] iload v4
      [45] iload_2 v2
      [46] ificmpge +126 (target=172)
      [49] aload_1 v1
      [50] iload v4
      [52] aaload
      [53] astore v5
      [55] aload v5
      [57] invokeinterface #36
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [62] astore v6
      [64] aload v5
      [66] invokeinterface #37
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [71] astore v7
      [73] aload v6
      [75] aload v7
      [77] invokestatic #33
        + Methodref [a/a/a/c/z.a (Ljava/lang/Object;Ljava/lang/Object;)V]
      [80] aload v6
      [82] invokevirtual #35
        + Methodref [java/lang/Object.hashCode ()I]
      [85] invokestatic #19
        + Methodref [a/a/a/c/bc.a (I)I]
      [88] aload_0 v0
      [89] getfield #18
        + Fieldref [a/a/a/c/dl.c I]
      [92] iand
      [93] istore v8
      [95] aload_0 v0
      [96] getfield #17
        + Fieldref [a/a/a/c/dl.b [La/a/a/c/bu;]
      [99] iload v8
      [101] aaload
      [102] astore v9
      [104] aload v9
      [106] ifnonnull +17 (target=123)
      [109] new #7
        + Class [a/a/a/c/bv]
      [112] dup
      [113] aload v6
      [115] aload v7
      [117] invokespecial #25
        + Methodref [a/a/a/c/bv.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
      [120] goto +16 (target=136)
      [123] new #10
        + Class [a/a/a/c/do]
      [126] dup
      [127] aload v6
      [129] aload v7
      [131] aload v9
      [133] invokespecial #32
        + Methodref [a/a/a/c/do.<init> (Ljava/lang/Object;Ljava/lang/Object;La/a/a/c/bu;)V]
      [136] astore v10
      [138] aload_0 v0
      [139] getfield #17
        + Fieldref [a/a/a/c/dl.b [La/a/a/c/bu;]
      [142] iload v8
      [144] aload v10
      [146] aastore
      [147] aload_0 v0
      [148] getfield #16
        + Fieldref [a/a/a/c/dl.a [La/a/a/c/bu;]
      [151] iload v4
      [153] aload v10
      [155] aastore
      [156] aload_0 v0
      [157] aload v6
      [159] aload v10
      [161] aload v9
      [163] invokespecial #28
        + Methodref [a/a/a/c/dl.a (Ljava/lang/Object;La/a/a/c/bu;La/a/a/c/bu;)V]
      [166] iinc v4, 1
      [169] goto -126 (target=43)
      [172] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [43] Var: [a:a/a/a/c/dl][a:[Ljava/util/Map$Entry;][i][i][i], Stack: 
        - [123] Var: [a:a/a/a/c/dl][a:[Ljava/util/Map$Entry;][i][i][i][a:java/util/Map$Entry][a:java/lang/Object][a:java/lang/Object][i][a:a/a/a/c/bu], Stack: 
        - [136] Var: ..., Stack: [a:a/a/a/c/bu]
        - [172] Var: [a:a/a/a/c/dl][a:[Ljava/util/Map$Entry;][i][i], Stack: 
  + Method:       a(Ljava/lang/Object;La/a/a/c/bu;La/a/a/c/bu;)V
    Access flags: 0x2
      = private void a(java.lang.Object,a.a.a.c.bu,a.a.a.c.bu)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 36, locals = 4, stack = 4):
      [0] aload_3 v3
      [1] ifnull +34 (target=35)
      [4] aload_1 v1
      [5] aload_3 v3
      [6] invokevirtual #23
        + Methodref [a/a/a/c/bu.getKey ()Ljava/lang/Object;]
      [9] invokevirtual #34
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [12] ifne +7 (target=19)
      [15] iconst_1
      [16] goto +4 (target=20)
      [19] iconst_0
      [20] ldc #1
        + String [key]
      [22] aload_2 v2
      [23] aload_3 v3
      [24] invokestatic #29
        + Methodref [a/a/a/c/dl.a (ZLjava/lang/String;Ljava/util/Map$Entry;Ljava/util/Map$Entry;)V]
      [27] aload_3 v3
      [28] invokevirtual #22
        + Methodref [a/a/a/c/bu.a ()La/a/a/c/bu;]
      [31] astore_3 v3
      [32] goto -32 (target=0)
      [35] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [0] Var: ..., Stack: (empty)
        - [19] Var: ..., Stack: (empty)
        - [20] Var: ..., Stack: [i]
        - [35] Var: ..., Stack: (empty)
  + Method:       a(I)[La/a/a/c/bu;
    Access flags: 0x2
      = private a.a.a.c.bu[] a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] iload_1 v1
      [1] anewarray #6
        + Class [a/a/a/c/bu]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 60, locals = 5, stack = 2):
      [0] aload_1 v1
      [1] ifnonnull +5 (target=6)
      [4] aconst_null
      [5] areturn
      [6] aload_1 v1
      [7] invokevirtual #35
        + Methodref [java/lang/Object.hashCode ()I]
      [10] invokestatic #19
        + Methodref [a/a/a/c/bc.a (I)I]
      [13] aload_0 v0
      [14] getfield #18
        + Fieldref [a/a/a/c/dl.c I]
      [17] iand
      [18] istore_2 v2
      [19] aload_0 v0
      [20] getfield #17
        + Fieldref [a/a/a/c/dl.b [La/a/a/c/bu;]
      [23] iload_2 v2
      [24] aaload
      [25] astore_3 v3
      [26] aload_3 v3
      [27] ifnull +31 (target=58)
      [30] aload_3 v3
      [31] invokevirtual #23
        + Methodref [a/a/a/c/bu.getKey ()Ljava/lang/Object;]
      [34] astore v4
      [36] aload_1 v1
      [37] aload v4
      [39] invokevirtual #34
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [42] ifeq +8 (target=50)
      [45] aload_3 v3
      [46] invokevirtual #24
        + Methodref [a/a/a/c/bu.getValue ()Ljava/lang/Object;]
      [49] areturn
      [50] aload_3 v3
      [51] invokevirtual #22
        + Methodref [a/a/a/c/bu.a ()La/a/a/c/bu;]
      [54] astore_3 v3
      [55] goto -29 (target=26)
      [58] aconst_null
      [59] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [6] Var: ..., Stack: (empty)
        - [26] Var: ...[i][a:a/a/a/c/bu], Stack: (empty)
        - [50] Var: ..., Stack: (empty)
        - [58] Var: -1, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #16
        + Fieldref [a/a/a/c/dl.a [La/a/a/c/bu;]
      [4] arraylength
      [5] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()La/a/a/c/cb;
    Access flags: 0x0
      = a.a.a.c.cb c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 4):
      [0] new #9
        + Class [a/a/a/c/dn]
      [3] dup
      [4] aload_0 v0
      [5] aconst_null
      [6] invokespecial #30
        + Methodref [a/a/a/c/dn.<init> (La/a/a/c/dl;La/a/a/c/dm;)V]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/c/dl;)[La/a/a/c/bu;
    Access flags: 0x1008
      = static synthetic a.a.a.c.bu[] a(a.a.a.c.dl)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #16
        + Fieldref [a/a/a/c/dl.a [La/a/a/c/bu;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dm
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x1020
    = synthetic class a.a.a.c.dm extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 5):
  + Class [a/a/a/c/dm]
  + Class [java/lang/Object]
  + Utf8 [a/a/a/c/dm]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dn
  Superclass:    a/a/a/c/bw
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.c.dn extends a.a.a.c.bw

Interfaces (count = 0):

Constant Pool (count = 43):
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/bw]
  + Class [a/a/a/c/dj]
  + Class [a/a/a/c/dl]
  + Class [a/a/a/c/dn]
  + Fieldref [a/a/a/c/dn.a La/a/a/c/dl;]
  + Methodref [a/a/a/c/bo.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/bw.<init> ()V]
  + Methodref [a/a/a/c/dj.<init> (La/a/a/c/bf;[Ljava/lang/Object;)V]
  + Methodref [a/a/a/c/dl.a (La/a/a/c/dl;)[La/a/a/c/bu;]
  + Methodref [a/a/a/c/dn.<init> (La/a/a/c/dl;)V]
  + Methodref [a/a/a/c/dn.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/dn.b ()La/a/a/c/bo;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/bf;[Ljava/lang/Object;)V]
  + NameAndType [<init> (La/a/a/c/dl;)V]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a (La/a/a/c/dl;)[La/a/a/c/bu;]
  + NameAndType [a La/a/a/c/dl;]
  + NameAndType [b ()La/a/a/c/bo;]
  + Utf8 [()La/a/a/c/bo;]
  + Utf8 [()La/a/a/c/bs;]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/c/bf;[Ljava/lang/Object;)V]
  + Utf8 [(La/a/a/c/dl;)V]
  + Utf8 [(La/a/a/c/dl;)[La/a/a/c/bu;]
  + Utf8 [(La/a/a/c/dl;La/a/a/c/dm;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/dl;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/bw]
  + Utf8 [a/a/a/c/dj]
  + Utf8 [a/a/a/c/dl]
  + Utf8 [a/a/a/c/dn]
  + Utf8 [b]
  + Utf8 [d]
  + Utf8 [f]
  + Utf8 [iterator]

Fields (count = 1):
  + Field:        a La/a/a/c/dl;
    Access flags: 0x1010
      = final synthetic a.a.a.c.dl a

Methods (count = 6):
  - Method:       <init>(La/a/a/c/dl;)V
    Access flags: 0x2
      = private dn(a.a.a.c.dl)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/c/dn.a La/a/a/c/dl;]
      [5] aload_0 v0
      [6] invokespecial #8
        + Methodref [a/a/a/c/bw.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d()La/a/a/c/bs;
    Access flags: 0x0
      = a.a.a.c.bs d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/c/dn.a La/a/a/c/dl;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x1
      = public a.a.a.c.ea a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #13
        + Methodref [a/a/a/c/dn.b ()La/a/a/c/bo;]
      [4] invokevirtual #7
        + Methodref [a/a/a/c/bo.a ()La/a/a/c/ea;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()La/a/a/c/bo;
    Access flags: 0x0
      = a.a.a.c.bo f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 4):
      [0] new #3
        + Class [a/a/a/c/dj]
      [3] dup
      [4] aload_0 v0
      [5] aload_0 v0
      [6] getfield #6
        + Fieldref [a/a/a/c/dn.a La/a/a/c/dl;]
      [9] invokestatic #10
        + Methodref [a/a/a/c/dl.a (La/a/a/c/dl;)[La/a/a/c/bu;]
      [12] invokespecial #9
        + Methodref [a/a/a/c/dj.<init> (La/a/a/c/bf;[Ljava/lang/Object;)V]
      [15] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #12
        + Methodref [a/a/a/c/dn.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/c/dl;La/a/a/c/dm;)V
    Access flags: 0x1000
      = synthetic dn(a.a.a.c.dl,a.a.a.c.dm)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #11
        + Methodref [a/a/a/c/dn.<init> (La/a/a/c/dl;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/do
  Superclass:    a/a/a/c/bu
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.do extends a.a.a.c.bu

Interfaces (count = 0):

Constant Pool (count = 20):
  + Class [a/a/a/c/bu]
  + Class [a/a/a/c/do]
  + Fieldref [a/a/a/c/do.a La/a/a/c/bu;]
  + Methodref [a/a/a/c/bu.<init> (La/a/a/c/bu;)V]
  + Methodref [a/a/a/c/bu.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [<init> (La/a/a/c/bu;)V]
  + NameAndType [<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [a La/a/a/c/bu;]
  + Utf8 [()La/a/a/c/bu;]
  + Utf8 [(La/a/a/c/bu;)V]
  + Utf8 [(La/a/a/c/bu;La/a/a/c/bu;)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;La/a/a/c/bu;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bu;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bu]
  + Utf8 [a/a/a/c/do]

Fields (count = 1):
  + Field:        a La/a/a/c/bu;
    Access flags: 0x12
      = private final a.a.a.c.bu a

Methods (count = 3):
  - Method:       <init>(Ljava/lang/Object;Ljava/lang/Object;La/a/a/c/bu;)V
    Access flags: 0x0
      = do(java.lang.Object,java.lang.Object,a.a.a.c.bu)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokespecial #5
        + Methodref [a/a/a/c/bu.<init> (Ljava/lang/Object;Ljava/lang/Object;)V]
      [6] aload_0 v0
      [7] aload_3 v3
      [8] putfield #3
        + Fieldref [a/a/a/c/do.a La/a/a/c/bu;]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/c/bu;La/a/a/c/bu;)V
    Access flags: 0x0
      = do(a.a.a.c.bu,a.a.a.c.bu)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #4
        + Methodref [a/a/a/c/bu.<init> (La/a/a/c/bu;)V]
      [5] aload_0 v0
      [6] aload_2 v2
      [7] putfield #3
        + Fieldref [a/a/a/c/do.a La/a/a/c/bu;]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/bu;
    Access flags: 0x0
      = a.a.a.c.bu a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #3
        + Fieldref [a/a/a/c/do.a La/a/a/c/bu;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dp
  Superclass:    a/a/a/c/cb
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.dp extends a.a.a.c.cb

Interfaces (count = 0):

Constant Pool (count = 70):
  + Class [a/a/a/c/bc]
  + Class [a/a/a/c/cb]
  + Class [a/a/a/c/ck]
  + Class [a/a/a/c/dj]
  + Class [a/a/a/c/dp]
  + Class [java/lang/Object]
  + Class [java/lang/System]
  + Fieldref [a/a/a/c/dp.a [Ljava/lang/Object;]
  + Fieldref [a/a/a/c/dp.b [Ljava/lang/Object;]
  + Fieldref [a/a/a/c/dp.c I]
  + Fieldref [a/a/a/c/dp.d I]
  + Methodref [a/a/a/c/bc.a (I)I]
  + Methodref [a/a/a/c/cb.<init> ()V]
  + Methodref [a/a/a/c/ck.a ([Ljava/lang/Object;)La/a/a/c/ea;]
  + Methodref [a/a/a/c/dj.<init> (La/a/a/c/bf;[Ljava/lang/Object;)V]
  + Methodref [a/a/a/c/dp.a ()La/a/a/c/ea;]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/lang/System.arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/bf;[Ljava/lang/Object;)V]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a (I)I]
  + NameAndType [a ([Ljava/lang/Object;)La/a/a/c/ea;]
  + NameAndType [a [Ljava/lang/Object;]
  + NameAndType [arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
  + NameAndType [b [Ljava/lang/Object;]
  + NameAndType [c I]
  + NameAndType [d I]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [hashCode ()I]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bo;]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)I]
  + Utf8 [(La/a/a/c/bf;[Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;II)V]
  + Utf8 [([Ljava/lang/Object;)La/a/a/c/ea;]
  + Utf8 [([Ljava/lang/Object;I)I]
  + Utf8 [([Ljava/lang/Object;I[Ljava/lang/Object;I)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/Object;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bc]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [a/a/a/c/dj]
  + Utf8 [a/a/a/c/dp]
  + Utf8 [arraycopy]
  + Utf8 [b]
  + Utf8 [b_]
  + Utf8 [c]
  + Utf8 [contains]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [f]
  + Utf8 [hashCode]
  + Utf8 [iterator]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/System]
  + Utf8 [size]

Fields (count = 4):
  + Field:        b [Ljava/lang/Object;
    Access flags: 0x12
      = private final java.lang.Object[] b
  + Field:        a [Ljava/lang/Object;
    Access flags: 0x90
      = final transient java.lang.Object[] a
  + Field:        c I
    Access flags: 0x92
      = private final transient int c
  + Field:        d I
    Access flags: 0x92
      = private final transient int d

Methods (count = 10):
  - Method:       <init>([Ljava/lang/Object;I[Ljava/lang/Object;I)V
    Access flags: 0x0
      = dp(java.lang.Object[],int,java.lang.Object[],int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 26, locals = 5, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #13
        + Methodref [a/a/a/c/cb.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #9
        + Fieldref [a/a/a/c/dp.b [Ljava/lang/Object;]
      [9] aload_0 v0
      [10] aload_3 v3
      [11] putfield #8
        + Fieldref [a/a/a/c/dp.a [Ljava/lang/Object;]
      [14] aload_0 v0
      [15] iload v4
      [17] putfield #10
        + Fieldref [a/a/a/c/dp.c I]
      [20] aload_0 v0
      [21] iload_2 v2
      [22] putfield #11
        + Fieldref [a/a/a/c/dp.d I]
      [25] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 48, locals = 4, stack = 3):
      [0] aload_1 v1
      [1] ifnonnull +5 (target=6)
      [4] iconst_0
      [5] ireturn
      [6] aload_1 v1
      [7] invokevirtual #18
        + Methodref [java/lang/Object.hashCode ()I]
      [10] invokestatic #12
        + Methodref [a/a/a/c/bc.a (I)I]
      [13] istore_2 v2
      [14] aload_0 v0
      [15] getfield #8
        + Fieldref [a/a/a/c/dp.a [Ljava/lang/Object;]
      [18] iload_2 v2
      [19] aload_0 v0
      [20] getfield #10
        + Fieldref [a/a/a/c/dp.c I]
      [23] iand
      [24] aaload
      [25] astore_3 v3
      [26] aload_3 v3
      [27] ifnonnull +5 (target=32)
      [30] iconst_0
      [31] ireturn
      [32] aload_3 v3
      [33] aload_1 v1
      [34] invokevirtual #17
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [37] ifeq +5 (target=42)
      [40] iconst_1
      [41] ireturn
      [42] iinc v2, 1
      [45] goto -31 (target=14)
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [6] Var: ..., Stack: (empty)
        - [14] Var: ...[i], Stack: (empty)
        - [32] Var: ...[a:java/lang/Object], Stack: (empty)
        - [42] Var: -1, Stack: (empty)
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/dp.b [Ljava/lang/Object;]
      [4] arraylength
      [5] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x1
      = public a.a.a.c.ea a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/dp.b [Ljava/lang/Object;]
      [4] invokestatic #14
        + Methodref [a/a/a/c/ck.a ([Ljava/lang/Object;)La/a/a/c/ea;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a([Ljava/lang/Object;I)I
    Access flags: 0x0
      = int a(java.lang.Object[],int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 3, stack = 5):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/dp.b [Ljava/lang/Object;]
      [4] iconst_0
      [5] aload_1 v1
      [6] iload_2 v2
      [7] aload_0 v0
      [8] getfield #9
        + Fieldref [a/a/a/c/dp.b [Ljava/lang/Object;]
      [11] arraylength
      [12] invokestatic #19
        + Methodref [java/lang/System.arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
      [15] iload_2 v2
      [16] aload_0 v0
      [17] getfield #9
        + Fieldref [a/a/a/c/dp.b [Ljava/lang/Object;]
      [20] arraylength
      [21] iadd
      [22] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()La/a/a/c/bo;
    Access flags: 0x0
      = a.a.a.c.bo f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 4):
      [0] new #4
        + Class [a/a/a/c/dj]
      [3] dup
      [4] aload_0 v0
      [5] aload_0 v0
      [6] getfield #9
        + Fieldref [a/a/a/c/dp.b [Ljava/lang/Object;]
      [9] invokespecial #15
        + Methodref [a/a/a/c/dj.<init> (La/a/a/c/bf;[Ljava/lang/Object;)V]
      [12] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/c/dp.d I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b_()Z
    Access flags: 0x0
      = boolean b_()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #16
        + Methodref [a/a/a/c/dp.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dq
  Superclass:    a/a/a/c/dh
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.dq extends a.a.a.c.dh

Interfaces (count = 1):
  + Class [java/io/Serializable]

Constant Pool (count = 43):
  + String [Ordering.natural().reverse()]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/dh]
  + Class [a/a/a/c/dq]
  + Class [java/io/Serializable]
  + Class [java/lang/Comparable]
  + Fieldref [a/a/a/c/dq.a La/a/a/c/dq;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/dh.<init> ()V]
  + Methodref [a/a/a/c/dh.b ()La/a/a/c/dh;]
  + Methodref [a/a/a/c/dq.<init> ()V]
  + Methodref [a/a/a/c/dq.a (Ljava/lang/Comparable;Ljava/lang/Comparable;)I]
  + InterfaceMethodref [java/lang/Comparable.compareTo (Ljava/lang/Object;)I]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Comparable;Ljava/lang/Comparable;)I]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a La/a/a/c/dq;]
  + NameAndType [b ()La/a/a/c/dh;]
  + NameAndType [compareTo (Ljava/lang/Object;)I]
  + Utf8 [()La/a/a/c/dh;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Comparable;Ljava/lang/Comparable;)I]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)I]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/dq;]
  + Utf8 [Ordering.natural().reverse()]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/dh]
  + Utf8 [a/a/a/c/dq]
  + Utf8 [b]
  + Utf8 [compare]
  + Utf8 [compareTo]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Comparable]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a La/a/a/c/dq;
    Access flags: 0x18
      = static final a.a.a.c.dq a

Methods (count = 6):
  + Method:       a(Ljava/lang/Comparable;Ljava/lang/Comparable;)I
    Access flags: 0x1
      = public int a(java.lang.Comparable,java.lang.Comparable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] invokestatic #8
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_1 v1
      [6] aload_2 v2
      [7] ifacmpne +5 (target=12)
      [10] iconst_0
      [11] ireturn
      [12] aload_2 v2
      [13] aload_1 v1
      [14] invokeinterface #13
        + InterfaceMethodref [java/lang/Comparable.compareTo (Ljava/lang/Object;)I]
      [19] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [12] Var: ..., Stack: (empty)
  + Method:       a()La/a/a/c/dh;
    Access flags: 0x1
      = public a.a.a.c.dh a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 1):
      [0] invokestatic #10
        + Methodref [a/a/a/c/dh.b ()La/a/a/c/dh;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 3, locals = 1, stack = 1):
      [0] ldc #1
        + String [Ordering.natural().reverse()]
      [2] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>()V
    Access flags: 0x2
      = private dq()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #9
        + Methodref [a/a/a/c/dh.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       compare(Ljava/lang/Object;Ljava/lang/Object;)I
    Access flags: 0x1001
      = public synthetic int compare(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #6
        + Class [java/lang/Comparable]
      [5] aload_2 v2
      [6] checkcast #6
        + Class [java/lang/Comparable]
      [9] invokevirtual #12
        + Methodref [a/a/a/c/dq.a (Ljava/lang/Comparable;Ljava/lang/Comparable;)I]
      [12] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 0, stack = 2):
      [0] new #4
        + Class [a/a/a/c/dq]
      [3] dup
      [4] invokespecial #11
        + Methodref [a/a/a/c/dq.<init> ()V]
      [7] putstatic #7
        + Fieldref [a/a/a/c/dq.a La/a/a/c/dq;]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dr
  Superclass:    a/a/a/c/dh
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.dr extends a.a.a.c.dh

Interfaces (count = 1):
  + Class [java/io/Serializable]

Constant Pool (count = 56):
  + String [.reverse()]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/dh]
  + Class [a/a/a/c/dr]
  + Class [java/io/Serializable]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Fieldref [a/a/a/c/dr.a La/a/a/c/dh;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/dh.<init> ()V]
  + Methodref [a/a/a/c/dh.compare (Ljava/lang/Object;Ljava/lang/Object;)I]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a La/a/a/c/dh;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [compare (Ljava/lang/Object;Ljava/lang/Object;)I]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [hashCode ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/dh;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/c/dh;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [.reverse()]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/dh;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/dh]
  + Utf8 [a/a/a/c/dr]
  + Utf8 [append]
  + Utf8 [compare]
  + Utf8 [equals]
  + Utf8 [hashCode]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a La/a/a/c/dh;
    Access flags: 0x10
      = final a.a.a.c.dh a

Methods (count = 6):
  - Method:       <init>(La/a/a/c/dh;)V
    Access flags: 0x0
      = dr(a.a.a.c.dh)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #10
        + Methodref [a/a/a/c/dh.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokestatic #9
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] checkcast #3
        + Class [a/a/a/c/dh]
      [12] putfield #8
        + Fieldref [a/a/a/c/dr.a La/a/a/c/dh;]
      [15] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       compare(Ljava/lang/Object;Ljava/lang/Object;)I
    Access flags: 0x1
      = public int compare(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/dr.a La/a/a/c/dh;]
      [4] aload_2 v2
      [5] aload_1 v1
      [6] invokevirtual #11
        + Methodref [a/a/a/c/dh.compare (Ljava/lang/Object;Ljava/lang/Object;)I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/dh;
    Access flags: 0x1
      = public a.a.a.c.dh a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/dr.a La/a/a/c/dh;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/dr.a La/a/a/c/dh;]
      [4] invokevirtual #13
        + Methodref [java/lang/Object.hashCode ()I]
      [7] ineg
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 33, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] aload_0 v0
      [2] ifacmpne +5 (target=7)
      [5] iconst_1
      [6] ireturn
      [7] aload_1 v1
      [8] instanceof #4
        + Class [a/a/a/c/dr]
      [11] ifeq +20 (target=31)
      [14] aload_1 v1
      [15] checkcast #4
        + Class [a/a/a/c/dr]
      [18] astore_2 v2
      [19] aload_0 v0
      [20] getfield #8
        + Fieldref [a/a/a/c/dr.a La/a/a/c/dh;]
      [23] aload_2 v2
      [24] getfield #8
        + Fieldref [a/a/a/c/dr.a La/a/a/c/dh;]
      [27] invokevirtual #12
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [30] ireturn
      [31] iconst_0
      [32] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [7] Var: ..., Stack: (empty)
        - [31] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 1, stack = 2):
      [0] new #7
        + Class [java/lang/StringBuilder]
      [3] dup
      [4] invokespecial #14
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [7] aload_0 v0
      [8] getfield #8
        + Fieldref [a/a/a/c/dr.a La/a/a/c/dh;]
      [11] invokevirtual #15
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [14] ldc #1
        + String [.reverse()]
      [16] invokevirtual #16
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [19] invokevirtual #17
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [22] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ds
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface a.a.a.c.ds extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/c/dc]

Constant Pool (count = 7):
  + Class [a/a/a/c/dc]
  + Class [a/a/a/c/ds]
  + Class [java/lang/Object]
  + Utf8 [a/a/a/c/dc]
  + Utf8 [a/a/a/c/ds]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dt
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.c.dt extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 86):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/ck]
  + Class [a/a/a/c/ct]
  + Class [a/a/a/c/de]
  + Class [a/a/a/c/dt]
  + Class [java/lang/ClassCastException]
  + Class [java/lang/NullPointerException]
  + Class [java/lang/Object]
  + Class [java/util/Collection]
  + Class [java/util/HashSet]
  + Class [java/util/Iterator]
  + Class [java/util/Set]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;Ljava/util/Collection;)Z]
  + Methodref [a/a/a/c/ct.a (I)I]
  + Methodref [a/a/a/c/dt.a (Ljava/util/Set;Ljava/util/Iterator;)Z]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/util/HashSet.<init> ()V]
  + Methodref [java/util/HashSet.<init> (I)V]
  + InterfaceMethodref [a/a/a/c/de.a ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Collection.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [java/util/Collection.size ()I]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Set.containsAll (Ljava/util/Collection;)Z]
  + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [java/util/Set.remove (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Set.size ()I]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (I)V]
  + NameAndType [a ()Ljava/util/Set;]
  + NameAndType [a (I)I]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/util/Iterator;Ljava/util/Collection;)Z]
  + NameAndType [a (Ljava/util/Set;Ljava/util/Iterator;)Z]
  + NameAndType [containsAll (Ljava/util/Collection;)Z]
  + NameAndType [hasNext ()Z]
  + NameAndType [hashCode ()I]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [remove (Ljava/lang/Object;)Z]
  + NameAndType [size ()I]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/HashSet;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)I]
  + Utf8 [(I)Ljava/util/HashSet;]
  + Utf8 [(I)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Collection;)Z]
  + Utf8 [(Ljava/util/Iterator;Ljava/util/Collection;)Z]
  + Utf8 [(Ljava/util/Set;)I]
  + Utf8 [(Ljava/util/Set;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/util/Set;Ljava/util/Collection;)Z]
  + Utf8 [(Ljava/util/Set;Ljava/util/Iterator;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [a/a/a/c/ct]
  + Utf8 [a/a/a/c/de]
  + Utf8 [a/a/a/c/dt]
  + Utf8 [containsAll]
  + Utf8 [hasNext]
  + Utf8 [hashCode]
  + Utf8 [iterator]
  + Utf8 [java/lang/ClassCastException]
  + Utf8 [java/lang/NullPointerException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/HashSet]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Set]
  + Utf8 [next]
  + Utf8 [remove]
  + Utf8 [size]

Fields (count = 0):

Methods (count = 6):
  + Method:       a()Ljava/util/HashSet;
    Access flags: 0x9
      = public static java.util.HashSet a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 0, stack = 2):
      [0] new #10
        + Class [java/util/HashSet]
      [3] dup
      [4] invokespecial #18
        + Methodref [java/util/HashSet.<init> ()V]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(I)Ljava/util/HashSet;
    Access flags: 0x9
      = public static java.util.HashSet a(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 1, stack = 3):
      [0] new #10
        + Class [java/util/HashSet]
      [3] dup
      [4] iload_0 v0
      [5] invokestatic #15
        + Methodref [a/a/a/c/ct.a (I)I]
      [8] invokespecial #19
        + Methodref [java/util/HashSet.<init> (I)V]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Set;)I
    Access flags: 0x8
      = static int a(java.util.Set)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 51, locals = 4, stack = 2):
      [0] iconst_0
      [1] istore_1 v1
      [2] aload_0 v0
      [3] invokeinterface #26
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [8] astore_2 v2
      [9] aload_2 v2
      [10] invokeinterface #23
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [15] ifeq +34 (target=49)
      [18] aload_2 v2
      [19] invokeinterface #24
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [24] astore_3 v3
      [25] iload_1 v1
      [26] aload_3 v3
      [27] ifnull +10 (target=37)
      [30] aload_3 v3
      [31] invokevirtual #17
        + Methodref [java/lang/Object.hashCode ()I]
      [34] goto +4 (target=38)
      [37] iconst_0
      [38] iadd
      [39] istore_1 v1
      [40] iload_1 v1
      [41] iconst_m1
      [42] ixor
      [43] iconst_m1
      [44] ixor
      [45] istore_1 v1
      [46] goto -37 (target=9)
      [49] iload_1 v1
      [50] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [9] Var: ...[i][a:java/util/Iterator], Stack: (empty)
        - [37] Var: [a:java/util/Set][i][a:java/util/Iterator][a:java/lang/Object], Stack: [i]
        - [38] Var: [a:java/util/Set][i][a:java/util/Iterator][a:java/lang/Object], Stack: [i][i]
        - [49] Var: -2, Stack: (empty)
  + Method:       a(Ljava/util/Set;Ljava/lang/Object;)Z
    Access flags: 0x8
      = static boolean a(java.util.Set,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 58, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] ifacmpne +5 (target=7)
      [5] iconst_1
      [6] ireturn
      [7] aload_1 v1
      [8] instanceof #12
        + Class [java/util/Set]
      [11] ifeq +45 (target=56)
      [14] aload_1 v1
      [15] checkcast #12
        + Class [java/util/Set]
      [18] astore_2 v2
      [19] aload_0 v0
      [20] invokeinterface #28
        + InterfaceMethodref [java/util/Set.size ()I]
      [25] aload_2 v2
      [26] invokeinterface #28
        + InterfaceMethodref [java/util/Set.size ()I]
      [31] ificmpne +17 (target=48)
      [34] aload_0 v0
      [35] aload_2 v2
      [36] invokeinterface #25
        + InterfaceMethodref [java/util/Set.containsAll (Ljava/util/Collection;)Z]
      [41] ifeq +7 (target=48)
      [44] iconst_1
      [45] goto +4 (target=49)
      [48] iconst_0
      [49] ireturn
      [50] astore_3 v3
      [51] iconst_0
      [52] ireturn
      [53] astore_3 v3
      [54] iconst_0
      [55] ireturn
      [56] iconst_0
      [57] ireturn
      Code attribute exceptions (count = 2):
      - ExceptionInfo (19 -> 49: 50):
      + Class [java/lang/NullPointerException]
      - ExceptionInfo (19 -> 49: 53):
      + Class [java/lang/ClassCastException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [7] Var: ..., Stack: (empty)
        - [48] Var: ...[a:java/util/Set], Stack: (empty)
        - [49] Var: ..., Stack: [i]
        - [50] Var: ..., Stack: [a:java/lang/NullPointerException]
        - [53] Var: ..., Stack: [a:java/lang/ClassCastException]
        - [56] Var: -1, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/util/Set;Ljava/util/Iterator;)Z
    Access flags: 0x8
      = static boolean a(java.util.Set,java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 31, locals = 3, stack = 3):
      [0] iconst_0
      [1] istore_2 v2
      [2] aload_1 v1
      [3] invokeinterface #23
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [8] ifeq +21 (target=29)
      [11] iload_2 v2
      [12] aload_0 v0
      [13] aload_1 v1
      [14] invokeinterface #24
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [19] invokeinterface #27
        + InterfaceMethodref [java/util/Set.remove (Ljava/lang/Object;)Z]
      [24] ior
      [25] istore_2 v2
      [26] goto -24 (target=2)
      [29] iload_2 v2
      [30] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [2] Var: ...[i], Stack: (empty)
        - [29] Var: ..., Stack: (empty)
  + Method:       a(Ljava/util/Set;Ljava/util/Collection;)Z
    Access flags: 0x8
      = static boolean a(java.util.Set,java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 66, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] invokestatic #13
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_1 v1
      [6] instanceof #4
        + Class [a/a/a/c/de]
      [9] ifeq +13 (target=22)
      [12] aload_1 v1
      [13] checkcast #4
        + Class [a/a/a/c/de]
      [16] invokeinterface #20
        + InterfaceMethodref [a/a/a/c/de.a ()Ljava/util/Set;]
      [21] astore_1 v1
      [22] aload_1 v1
      [23] instanceof #12
        + Class [java/util/Set]
      [26] ifeq +29 (target=55)
      [29] aload_1 v1
      [30] invokeinterface #22
        + InterfaceMethodref [java/util/Collection.size ()I]
      [35] aload_0 v0
      [36] invokeinterface #28
        + InterfaceMethodref [java/util/Set.size ()I]
      [41] ificmple +14 (target=55)
      [44] aload_0 v0
      [45] invokeinterface #26
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [50] aload_1 v1
      [51] invokestatic #14
        + Methodref [a/a/a/c/ck.a (Ljava/util/Iterator;Ljava/util/Collection;)Z]
      [54] ireturn
      [55] aload_0 v0
      [56] aload_1 v1
      [57] invokeinterface #21
        + InterfaceMethodref [java/util/Collection.iterator ()Ljava/util/Iterator;]
      [62] invokestatic #16
        + Methodref [a/a/a/c/dt.a (Ljava/util/Set;Ljava/util/Iterator;)Z]
      [65] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [22] Var: ..., Stack: (empty)
        - [55] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/du
  Superclass:    java/util/AbstractSet
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.c.du extends java.util.AbstractSet

Interfaces (count = 0):

Constant Pool (count = 28):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/dt]
  + Class [a/a/a/c/du]
  + Class [java/util/AbstractSet]
  + Class [java/util/Collection]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/dt.a (Ljava/util/Set;Ljava/util/Collection;)Z]
  + Methodref [java/util/AbstractSet.<init> ()V]
  + Methodref [java/util/AbstractSet.retainAll (Ljava/util/Collection;)Z]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/util/Set;Ljava/util/Collection;)Z]
  + NameAndType [retainAll (Ljava/util/Collection;)Z]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/util/Collection;)Z]
  + Utf8 [(Ljava/util/Set;Ljava/util/Collection;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/dt]
  + Utf8 [a/a/a/c/du]
  + Utf8 [java/util/AbstractSet]
  + Utf8 [java/util/Collection]
  + Utf8 [removeAll]
  + Utf8 [retainAll]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x0
      = du()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #8
        + Methodref [java/util/AbstractSet.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       removeAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean removeAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #7
        + Methodref [a/a/a/c/dt.a (Ljava/util/Set;Ljava/util/Collection;)Z]
      [5] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       retainAll(Ljava/util/Collection;)Z
    Access flags: 0x1
      = public boolean retainAll(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #6
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [5] checkcast #5
        + Class [java/util/Collection]
      [8] invokespecial #9
        + Methodref [java/util/AbstractSet.retainAll (Ljava/util/Collection;)Z]
      [11] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dv
  Superclass:    a/a/a/c/be
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.dv extends a.a.a.c.be

Interfaces (count = 0):

Constant Pool (count = 59):
  + Class [a/a/a/c/be]
  + Class [a/a/a/c/cb]
  + Class [a/a/a/c/ct]
  + Class [a/a/a/c/dv]
  + Class [a/a/a/c/z]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/c/dv.a Ljava/lang/Object;]
  + Fieldref [a/a/a/c/dv.b Ljava/lang/Object;]
  + Fieldref [a/a/a/c/dv.c La/a/a/c/be;]
  + Methodref [a/a/a/c/be.<init> ()V]
  + Methodref [a/a/a/c/cb.a (Ljava/lang/Object;)La/a/a/c/cb;]
  + Methodref [a/a/a/c/ct.a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + Methodref [a/a/a/c/dv.<init> (Ljava/lang/Object;Ljava/lang/Object;La/a/a/c/be;)V]
  + Methodref [a/a/a/c/z.a (Ljava/lang/Object;Ljava/lang/Object;)V]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Object;Ljava/lang/Object;La/a/a/c/be;)V]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/c/cb;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [a Ljava/lang/Object;]
  + NameAndType [b Ljava/lang/Object;]
  + NameAndType [c La/a/a/c/be;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/be;]
  + Utf8 [()La/a/a/c/cb;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/cb;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;La/a/a/c/be;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/be;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/be]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [a/a/a/c/ct]
  + Utf8 [a/a/a/c/dv]
  + Utf8 [a/a/a/c/z]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [c_]
  + Utf8 [containsKey]
  + Utf8 [containsValue]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [get]
  + Utf8 [java/lang/Object]
  + Utf8 [size]

Fields (count = 3):
  + Field:        a Ljava/lang/Object;
    Access flags: 0x90
      = final transient java.lang.Object a
  + Field:        b Ljava/lang/Object;
    Access flags: 0x90
      = final transient java.lang.Object b
  + Field:        c La/a/a/c/be;
    Access flags: 0x80
      = transient a.a.a.c.be c

Methods (count = 10):
  - Method:       <init>(Ljava/lang/Object;Ljava/lang/Object;)V
    Access flags: 0x0
      = dv(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #10
        + Methodref [a/a/a/c/be.<init> ()V]
      [4] aload_1 v1
      [5] aload_2 v2
      [6] invokestatic #14
        + Methodref [a/a/a/c/z.a (Ljava/lang/Object;Ljava/lang/Object;)V]
      [9] aload_0 v0
      [10] aload_1 v1
      [11] putfield #7
        + Fieldref [a/a/a/c/dv.a Ljava/lang/Object;]
      [14] aload_0 v0
      [15] aload_2 v2
      [16] putfield #8
        + Fieldref [a/a/a/c/dv.b Ljava/lang/Object;]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/Object;Ljava/lang/Object;La/a/a/c/be;)V
    Access flags: 0x2
      = private dv(java.lang.Object,java.lang.Object,a.a.a.c.be)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #10
        + Methodref [a/a/a/c/be.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #7
        + Fieldref [a/a/a/c/dv.a Ljava/lang/Object;]
      [9] aload_0 v0
      [10] aload_2 v2
      [11] putfield #8
        + Fieldref [a/a/a/c/dv.b Ljava/lang/Object;]
      [14] aload_0 v0
      [15] aload_3 v3
      [16] putfield #9
        + Fieldref [a/a/a/c/dv.c La/a/a/c/be;]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 20, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/c/dv.a Ljava/lang/Object;]
      [4] aload_1 v1
      [5] invokevirtual #15
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [8] ifeq +10 (target=18)
      [11] aload_0 v0
      [12] getfield #8
        + Fieldref [a/a/a/c/dv.b Ljava/lang/Object;]
      [15] goto +4 (target=19)
      [18] aconst_null
      [19] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [18] Var: ..., Stack: (empty)
        - [19] Var: ..., Stack: [a:java/lang/Object]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       containsKey(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean containsKey(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/c/dv.a Ljava/lang/Object;]
      [4] aload_1 v1
      [5] invokevirtual #15
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       containsValue(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean containsValue(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #8
        + Fieldref [a/a/a/c/dv.b Ljava/lang/Object;]
      [4] aload_1 v1
      [5] invokevirtual #15
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()La/a/a/c/cb;
    Access flags: 0x0
      = a.a.a.c.cb c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/c/dv.a Ljava/lang/Object;]
      [4] aload_0 v0
      [5] getfield #8
        + Fieldref [a/a/a/c/dv.b Ljava/lang/Object;]
      [8] invokestatic #12
        + Methodref [a/a/a/c/ct.a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;]
      [11] invokestatic #11
        + Methodref [a/a/a/c/cb.a (Ljava/lang/Object;)La/a/a/c/cb;]
      [14] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/cb;
    Access flags: 0x0
      = a.a.a.c.cb a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/c/dv.a Ljava/lang/Object;]
      [4] invokestatic #11
        + Methodref [a/a/a/c/cb.a (Ljava/lang/Object;)La/a/a/c/cb;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c_()La/a/a/c/be;
    Access flags: 0x1
      = public a.a.a.c.be c_()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 33, locals = 2, stack = 6):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/dv.c La/a/a/c/be;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnonnull +25 (target=31)
      [9] aload_0 v0
      [10] new #4
        + Class [a/a/a/c/dv]
      [13] dup
      [14] aload_0 v0
      [15] getfield #8
        + Fieldref [a/a/a/c/dv.b Ljava/lang/Object;]
      [18] aload_0 v0
      [19] getfield #7
        + Fieldref [a/a/a/c/dv.a Ljava/lang/Object;]
      [22] aload_0 v0
      [23] invokespecial #13
        + Methodref [a/a/a/c/dv.<init> (Ljava/lang/Object;Ljava/lang/Object;La/a/a/c/be;)V]
      [26] dup_x1
      [27] putfield #9
        + Fieldref [a/a/a/c/dv.c La/a/a/c/be;]
      [30] areturn
      [31] aload_1 v1
      [32] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [31] Var: ...[a:a/a/a/c/be], Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dw
  Superclass:    a/a/a/c/bo
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.dw extends a.a.a.c.bo

Interfaces (count = 0):

Constant Pool (count = 99):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/ck]
  + Class [a/a/a/c/dw]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/StringBuilder]
  + Class [java/util/List]
  + Fieldref [a/a/a/c/dw.a Ljava/lang/Object;]
  + Methodref [a/a/a/a/o.a (II)I]
  + Methodref [a/a/a/a/o.a (III)V]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/bo.<init> ()V]
  + Methodref [a/a/a/c/bo.d ()La/a/a/c/bo;]
  + Methodref [a/a/a/c/ck.a (Ljava/lang/Object;)La/a/a/c/ea;]
  + Methodref [a/a/a/c/dw.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/dw.a (II)La/a/a/c/bo;]
  + Methodref [a/a/a/c/dw.indexOf (Ljava/lang/Object;)I]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
  + Methodref [java/lang/String.length ()I]
  + Methodref [java/lang/StringBuilder.<init> (I)V]
  + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + InterfaceMethodref [java/util/List.get (I)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/List.size ()I]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (I)V]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a (II)I]
  + NameAndType [a (II)La/a/a/c/bo;]
  + NameAndType [a (III)V]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/c/ea;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a Ljava/lang/Object;]
  + NameAndType [append (C)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [d ()La/a/a/c/bo;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [get (I)Ljava/lang/Object;]
  + NameAndType [hashCode ()I]
  + NameAndType [indexOf (Ljava/lang/Object;)I]
  + NameAndType [length ()I]
  + NameAndType [size ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bo;]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(C)Ljava/lang/StringBuilder;]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(I)V]
  + Utf8 [(II)I]
  + Utf8 [(II)La/a/a/c/bo;]
  + Utf8 [(II)Ljava/util/List;]
  + Utf8 [(III)V]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/ea;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [([Ljava/lang/Object;I)I]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [a/a/a/c/dw]
  + Utf8 [append]
  + Utf8 [contains]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [get]
  + Utf8 [hashCode]
  + Utf8 [indexOf]
  + Utf8 [isEmpty]
  + Utf8 [iterator]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/List]
  + Utf8 [lastIndexOf]
  + Utf8 [length]
  + Utf8 [size]
  + Utf8 [subList]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a Ljava/lang/Object;
    Access flags: 0x90
      = final transient java.lang.Object a

Methods (count = 16):
  - Method:       <init>(Ljava/lang/Object;)V
    Access flags: 0x0
      = dw(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #13
        + Methodref [a/a/a/c/bo.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokestatic #12
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] putfield #9
        + Fieldref [a/a/a/c/dw.a Ljava/lang/Object;]
      [12] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get(I)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] iload_1 v1
      [1] iconst_1
      [2] invokestatic #10
        + Methodref [a/a/a/a/o.a (II)I]
      [5] pop
      [6] aload_0 v0
      [7] getfield #9
        + Fieldref [a/a/a/c/dw.a Ljava/lang/Object;]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       indexOf(Ljava/lang/Object;)I
    Access flags: 0x1
      = public int indexOf(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 17, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/dw.a Ljava/lang/Object;]
      [4] aload_1 v1
      [5] invokevirtual #19
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [8] ifeq +7 (target=15)
      [11] iconst_0
      [12] goto +4 (target=16)
      [15] iconst_m1
      [16] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [15] Var: ..., Stack: (empty)
        - [16] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x1
      = public a.a.a.c.ea a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/dw.a Ljava/lang/Object;]
      [4] invokestatic #15
        + Methodref [a/a/a/c/ck.a (Ljava/lang/Object;)La/a/a/c/ea;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       lastIndexOf(Ljava/lang/Object;)I
    Access flags: 0x1
      = public int lastIndexOf(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #18
        + Methodref [a/a/a/c/dw.indexOf (Ljava/lang/Object;)I]
      [5] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(II)La/a/a/c/bo;
    Access flags: 0x1
      = public a.a.a.c.bo a(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 3, stack = 3):
      [0] iload_1 v1
      [1] iload_2 v2
      [2] iconst_1
      [3] invokestatic #11
        + Methodref [a/a/a/a/o.a (III)V]
      [6] iload_1 v1
      [7] iload_2 v2
      [8] ificmpne +9 (target=17)
      [11] invokestatic #14
        + Methodref [a/a/a/c/bo.d ()La/a/a/c/bo;]
      [14] goto +4 (target=18)
      [17] aload_0 v0
      [18] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [17] Var: ..., Stack: (empty)
        - [18] Var: ..., Stack: [a:a/a/a/c/bo]
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/dw.a Ljava/lang/Object;]
      [4] aload_1 v1
      [5] invokevirtual #19
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 54, locals = 3, stack = 3):
      [0] aload_1 v1
      [1] aload_0 v0
      [2] ifacmpne +5 (target=7)
      [5] iconst_1
      [6] ireturn
      [7] aload_1 v1
      [8] instanceof #8
        + Class [java/util/List]
      [11] ifeq +41 (target=52)
      [14] aload_1 v1
      [15] checkcast #8
        + Class [java/util/List]
      [18] astore_2 v2
      [19] aload_2 v2
      [20] invokeinterface #28
        + InterfaceMethodref [java/util/List.size ()I]
      [25] iconst_1
      [26] ificmpne +24 (target=50)
      [29] aload_0 v0
      [30] getfield #9
        + Fieldref [a/a/a/c/dw.a Ljava/lang/Object;]
      [33] aload_2 v2
      [34] iconst_0
      [35] invokeinterface #27
        + InterfaceMethodref [java/util/List.get (I)Ljava/lang/Object;]
      [40] invokevirtual #19
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [43] ifeq +7 (target=50)
      [46] iconst_1
      [47] goto +4 (target=51)
      [50] iconst_0
      [51] ireturn
      [52] iconst_0
      [53] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [7] Var: ..., Stack: (empty)
        - [50] Var: ...[a:java/util/List], Stack: (empty)
        - [51] Var: ..., Stack: [i]
        - [52] Var: -1, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 1, stack = 2):
      [0] bipush 31
      [2] aload_0 v0
      [3] getfield #9
        + Fieldref [a/a/a/c/dw.a Ljava/lang/Object;]
      [6] invokevirtual #20
        + Methodref [java/lang/Object.hashCode ()I]
      [9] iadd
      [10] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 39, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/c/dw.a Ljava/lang/Object;]
      [4] invokevirtual #21
        + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
      [7] astore_1 v1
      [8] new #7
        + Class [java/lang/StringBuilder]
      [11] dup
      [12] aload_1 v1
      [13] invokevirtual #22
        + Methodref [java/lang/String.length ()I]
      [16] iconst_2
      [17] iadd
      [18] invokespecial #23
        + Methodref [java/lang/StringBuilder.<init> (I)V]
      [21] bipush 91
      [23] invokevirtual #24
        + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
      [26] aload_1 v1
      [27] invokevirtual #25
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [30] bipush 93
      [32] invokevirtual #24
        + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
      [35] invokevirtual #26
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [38] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a([Ljava/lang/Object;I)I
    Access flags: 0x0
      = int a(java.lang.Object[],int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 3, stack = 3):
      [0] aload_1 v1
      [1] iload_2 v2
      [2] aload_0 v0
      [3] getfield #9
        + Fieldref [a/a/a/c/dw.a Ljava/lang/Object;]
      [6] aastore
      [7] iload_2 v2
      [8] iconst_1
      [9] iadd
      [10] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       subList(II)Ljava/util/List;
    Access flags: 0x1001
      = public synthetic java.util.List subList(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] iload_2 v2
      [3] invokevirtual #17
        + Methodref [a/a/a/c/dw.a (II)La/a/a/c/bo;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #16
        + Methodref [a/a/a/c/dw.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dx
  Superclass:    a/a/a/c/cb
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.c.dx extends a.a.a.c.cb

Interfaces (count = 0):

Constant Pool (count = 89):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/cb]
  + Class [a/a/a/c/ck]
  + Class [a/a/a/c/dx]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/StringBuilder]
  + Class [java/util/Iterator]
  + Class [java/util/Set]
  + Fieldref [a/a/a/c/dx.a Ljava/lang/Object;]
  + Fieldref [a/a/a/c/dx.b I]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/cb.<init> ()V]
  + Methodref [a/a/a/c/ck.a (Ljava/lang/Object;)La/a/a/c/ea;]
  + Methodref [a/a/a/c/dx.a ()La/a/a/c/ea;]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
  + Methodref [java/lang/String.length ()I]
  + Methodref [java/lang/StringBuilder.<init> (I)V]
  + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [java/util/Set.size ()I]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (I)V]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/c/ea;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a Ljava/lang/Object;]
  + NameAndType [append (C)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b I]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [hashCode ()I]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [length ()I]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [size ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(C)Ljava/lang/StringBuilder;]
  + Utf8 [(I)V]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/ea;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;I)V]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [([Ljava/lang/Object;I)I]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [a/a/a/c/ck]
  + Utf8 [a/a/a/c/dx]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [b_]
  + Utf8 [contains]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [hashCode]
  + Utf8 [isEmpty]
  + Utf8 [iterator]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Set]
  + Utf8 [length]
  + Utf8 [next]
  + Utf8 [size]
  + Utf8 [toString]

Fields (count = 2):
  + Field:        a Ljava/lang/Object;
    Access flags: 0x90
      = final transient java.lang.Object a
  + Field:        b I
    Access flags: 0x82
      = private transient int b

Methods (count = 13):
  - Method:       <init>(Ljava/lang/Object;)V
    Access flags: 0x0
      = dx(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #13
        + Methodref [a/a/a/c/cb.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokestatic #12
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] putfield #10
        + Fieldref [a/a/a/c/dx.a Ljava/lang/Object;]
      [12] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/Object;I)V
    Access flags: 0x0
      = dx(java.lang.Object,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #13
        + Methodref [a/a/a/c/cb.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #10
        + Fieldref [a/a/a/c/dx.a Ljava/lang/Object;]
      [9] aload_0 v0
      [10] iload_2 v2
      [11] putfield #11
        + Fieldref [a/a/a/c/dx.b I]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isEmpty()Z
    Access flags: 0x1
      = public boolean isEmpty()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       contains(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean contains(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/c/dx.a Ljava/lang/Object;]
      [4] aload_1 v1
      [5] invokevirtual #16
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/c/ea;
    Access flags: 0x1
      = public a.a.a.c.ea a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/c/dx.a Ljava/lang/Object;]
      [4] invokestatic #14
        + Methodref [a/a/a/c/ck.a (Ljava/lang/Object;)La/a/a/c/ea;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Z
    Access flags: 0x0
      = boolean e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a([Ljava/lang/Object;I)I
    Access flags: 0x0
      = int a(java.lang.Object[],int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 3, stack = 3):
      [0] aload_1 v1
      [1] iload_2 v2
      [2] aload_0 v0
      [3] getfield #10
        + Fieldref [a/a/a/c/dx.a Ljava/lang/Object;]
      [6] aastore
      [7] iload_2 v2
      [8] iconst_1
      [9] iadd
      [10] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 58, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] aload_0 v0
      [2] ifacmpne +5 (target=7)
      [5] iconst_1
      [6] ireturn
      [7] aload_1 v1
      [8] instanceof #9
        + Class [java/util/Set]
      [11] ifeq +45 (target=56)
      [14] aload_1 v1
      [15] checkcast #9
        + Class [java/util/Set]
      [18] astore_2 v2
      [19] aload_2 v2
      [20] invokeinterface #26
        + InterfaceMethodref [java/util/Set.size ()I]
      [25] iconst_1
      [26] ificmpne +28 (target=54)
      [29] aload_0 v0
      [30] getfield #10
        + Fieldref [a/a/a/c/dx.a Ljava/lang/Object;]
      [33] aload_2 v2
      [34] invokeinterface #25
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [39] invokeinterface #24
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [44] invokevirtual #16
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [47] ifeq +7 (target=54)
      [50] iconst_1
      [51] goto +4 (target=55)
      [54] iconst_0
      [55] ireturn
      [56] iconst_0
      [57] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [7] Var: ..., Stack: (empty)
        - [54] Var: ...[a:java/util/Set], Stack: (empty)
        - [55] Var: ..., Stack: [i]
        - [56] Var: -1, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x11
      = public final int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/c/dx.b I]
      [4] istore_1 v1
      [5] iload_1 v1
      [6] ifne +16 (target=22)
      [9] aload_0 v0
      [10] aload_0 v0
      [11] getfield #10
        + Fieldref [a/a/a/c/dx.a Ljava/lang/Object;]
      [14] invokevirtual #17
        + Methodref [java/lang/Object.hashCode ()I]
      [17] dup
      [18] istore_1 v1
      [19] putfield #11
        + Fieldref [a/a/a/c/dx.b I]
      [22] iload_1 v1
      [23] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [22] Var: ...[i], Stack: (empty)
  + Method:       b_()Z
    Access flags: 0x0
      = boolean b_()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/c/dx.b I]
      [4] ifeq +7 (target=11)
      [7] iconst_1
      [8] goto +4 (target=12)
      [11] iconst_0
      [12] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [12] Var: ..., Stack: [i]
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 39, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/c/dx.a Ljava/lang/Object;]
      [4] invokevirtual #18
        + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
      [7] astore_1 v1
      [8] new #7
        + Class [java/lang/StringBuilder]
      [11] dup
      [12] aload_1 v1
      [13] invokevirtual #19
        + Methodref [java/lang/String.length ()I]
      [16] iconst_2
      [17] iadd
      [18] invokespecial #20
        + Methodref [java/lang/StringBuilder.<init> (I)V]
      [21] bipush 91
      [23] invokevirtual #21
        + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
      [26] aload_1 v1
      [27] invokevirtual #22
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [30] bipush 93
      [32] invokevirtual #21
        + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
      [35] invokevirtual #23
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [38] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       iterator()Ljava/util/Iterator;
    Access flags: 0x1001
      = public synthetic java.util.Iterator iterator()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #15
        + Methodref [a/a/a/c/dx.a ()La/a/a/c/ea;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dy
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x600
    = interface a.a.a.c.dy extends java.lang.Object

Interfaces (count = 1):
  + Class [java/lang/Iterable]

Constant Pool (count = 7):
  + Class [a/a/a/c/dy]
  + Class [java/lang/Iterable]
  + Class [java/lang/Object]
  + Utf8 [a/a/a/c/dy]
  + Utf8 [java/lang/Iterable]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/dz
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.c.dz extends java.lang.Object

Interfaces (count = 1):
  + Class [java/util/Iterator]

Constant Pool (count = 35):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/dz]
  + Class [java/lang/Object]
  + Class [java/util/Iterator]
  + Fieldref [a/a/a/c/dz.b Ljava/util/Iterator;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/dz.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [java/lang/Object.<init> ()V]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Iterator.remove ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [b Ljava/util/Iterator;]
  + NameAndType [hasNext ()Z]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [remove ()V]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/util/Iterator;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/util/Iterator;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/dz]
  + Utf8 [b]
  + Utf8 [hasNext]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Iterator]
  + Utf8 [next]
  + Utf8 [remove]

Fields (count = 1):
  + Field:        b Ljava/util/Iterator;
    Access flags: 0x10
      = final java.util.Iterator b

Methods (count = 5):
  - Method:       <init>(Ljava/util/Iterator;)V
    Access flags: 0x0
      = dz(java.util.Iterator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #8
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokestatic #6
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] checkcast #4
        + Class [java/util/Iterator]
      [12] putfield #5
        + Fieldref [a/a/a/c/dz.b Ljava/util/Iterator;]
      [15] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x400
      = abstract java.lang.Object a(java.lang.Object)
  + Method:       hasNext()Z
    Access flags: 0x11
      = public final boolean hasNext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/c/dz.b Ljava/util/Iterator;]
      [4] invokeinterface #9
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       next()Ljava/lang/Object;
    Access flags: 0x11
      = public final java.lang.Object next()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] aload_0 v0
      [2] getfield #5
        + Fieldref [a/a/a/c/dz.b Ljava/util/Iterator;]
      [5] invokeinterface #10
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [10] invokevirtual #7
        + Methodref [a/a/a/c/dz.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove()V
    Access flags: 0x11
      = public final void remove()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/c/dz.b Ljava/util/Iterator;]
      [4] invokeinterface #11
        + InterfaceMethodref [java/util/Iterator.remove ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/ea
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.ea extends java.lang.Object

Interfaces (count = 1):
  + Class [java/util/Iterator]

Constant Pool (count = 18):
  + Class [a/a/a/c/ea]
  + Class [java/lang/Object]
  + Class [java/lang/UnsupportedOperationException]
  + Class [java/util/Iterator]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/Deprecated;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [a/a/a/c/ea]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/UnsupportedOperationException]
  + Utf8 [java/util/Iterator]
  + Utf8 [remove]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>()V
    Access flags: 0x4
      = protected ea()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #5
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       remove()V
    Access flags: 0x11
      = public final void remove()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #3
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/c/eb
  Superclass:    a/a/a/c/ea
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.c.eb extends a.a.a.c.ea

Interfaces (count = 1):
  + Class [java/util/ListIterator]

Constant Pool (count = 20):
  + Class [a/a/a/c/ea]
  + Class [a/a/a/c/eb]
  + Class [java/lang/UnsupportedOperationException]
  + Class [java/util/ListIterator]
  + Methodref [a/a/a/c/ea.<init> ()V]
  + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/Deprecated;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [a/a/a/c/ea]
  + Utf8 [a/a/a/c/eb]
  + Utf8 [add]
  + Utf8 [java/lang/UnsupportedOperationException]
  + Utf8 [java/util/ListIterator]
  + Utf8 [set]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x4
      = protected eb()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #5
        + Methodref [a/a/a/c/ea.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       add(Ljava/lang/Object;)V
    Access flags: 0x11
      = public final void add(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #3
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       set(Ljava/lang/Object;)V
    Access flags: 0x11
      = public final void set(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] new #3
        + Class [java/lang/UnsupportedOperationException]
      [3] dup
      [4] invokespecial #6
        + Methodref [java/lang/UnsupportedOperationException.<init> ()V]
      [7] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/d/a
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.d.a extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/d/k]

Constant Pool (count = 147):
  + String [ arguments.  Event subscriber methods must require a single argument.]
  + String [ has @Subscribe annotation, but requires ]
  + String [Method ]
  + Class [[Ljava/lang/Class;]
  + Class [[Ljava/lang/reflect/Method;]
  + Class [a/a/a/b/d]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/ct]
  + Class [a/a/a/d/a]
  + Class [a/a/a/d/b]
  + Class [a/a/a/d/c]
  + Class [a/a/a/d/i]
  + Class [a/a/a/d/k]
  + Class [a/a/a/f/l]
  + Class [a/a/a/f/w]
  + Class [java/lang/Class]
  + Class [java/lang/IllegalArgumentException]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/reflect/Method]
  + Class [java/util/Iterator]
  + Class [java/util/Map]
  + Class [java/util/Set]
  + Fieldref [a/a/a/d/a.a La/a/a/b/m;]
  + Methodref [a/a/a/b/d.a ()La/a/a/b/d;]
  + Methodref [a/a/a/b/d.a (La/a/a/b/j;)La/a/a/b/m;]
  + Methodref [a/a/a/b/d.h ()La/a/a/b/d;]
  + Methodref [a/a/a/c/bo.a (Ljava/util/Collection;)La/a/a/c/bo;]
  + Methodref [a/a/a/c/ct.c ()Ljava/util/HashMap;]
  + Methodref [a/a/a/d/a.b (Ljava/lang/Class;)La/a/a/c/bo;]
  + Methodref [a/a/a/d/b.<init> ()V]
  + Methodref [a/a/a/d/c.<init> (Ljava/lang/reflect/Method;)V]
  + Methodref [a/a/a/f/l.a (Ljava/lang/Class;)La/a/a/f/l;]
  + Methodref [a/a/a/f/l.e ()La/a/a/f/w;]
  + Methodref [a/a/a/f/w.d ()Ljava/util/Set;]
  + Methodref [java/lang/Class.getMethods ()[Ljava/lang/reflect/Method;]
  + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/lang/reflect/Method.getParameterTypes ()[Ljava/lang/Class;]
  + Methodref [java/lang/reflect/Method.isAnnotationPresent (Ljava/lang/Class;)Z]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.containsKey (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.values ()Ljava/util/Collection;]
  + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (Ljava/lang/reflect/Method;)V]
  + NameAndType [a ()La/a/a/b/d;]
  + NameAndType [a (La/a/a/b/j;)La/a/a/b/m;]
  + NameAndType [a (Ljava/lang/Class;)La/a/a/f/l;]
  + NameAndType [a (Ljava/util/Collection;)La/a/a/c/bo;]
  + NameAndType [a La/a/a/b/m;]
  + NameAndType [append (I)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b (Ljava/lang/Class;)La/a/a/c/bo;]
  + NameAndType [c ()Ljava/util/HashMap;]
  + NameAndType [containsKey (Ljava/lang/Object;)Z]
  + NameAndType [d ()Ljava/util/Set;]
  + NameAndType [e ()La/a/a/f/w;]
  + NameAndType [getMethods ()[Ljava/lang/reflect/Method;]
  + NameAndType [getParameterTypes ()[Ljava/lang/Class;]
  + NameAndType [h ()La/a/a/b/d;]
  + NameAndType [hasNext ()Z]
  + NameAndType [isAnnotationPresent (Ljava/lang/Class;)Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [values ()Ljava/util/Collection;]
  + Utf8 [ arguments.  Event subscriber methods must require a single argument.]
  + Utf8 [ has @Subscribe annotation, but requires ]
  + Utf8 [()La/a/a/b/d;]
  + Utf8 [()La/a/a/f/w;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/HashMap;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [()[Ljava/lang/Class;]
  + Utf8 [()[Ljava/lang/reflect/Method;]
  + Utf8 [(I)Ljava/lang/StringBuilder;]
  + Utf8 [(La/a/a/b/j;)La/a/a/b/m;]
  + Utf8 [(Ljava/lang/Class;)La/a/a/c/bo;]
  + Utf8 [(Ljava/lang/Class;)La/a/a/f/l;]
  + Utf8 [(Ljava/lang/Class;)Z]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/reflect/Method;)V]
  + Utf8 [(Ljava/util/Collection;)La/a/a/c/bo;]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/m;]
  + Utf8 [Method ]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/Class;]
  + Utf8 [[Ljava/lang/reflect/Method;]
  + Utf8 [a]
  + Utf8 [a/a/a/b/d]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/ct]
  + Utf8 [a/a/a/d/a]
  + Utf8 [a/a/a/d/b]
  + Utf8 [a/a/a/d/c]
  + Utf8 [a/a/a/d/i]
  + Utf8 [a/a/a/d/k]
  + Utf8 [a/a/a/f/l]
  + Utf8 [a/a/a/f/w]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [containsKey]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [getMethods]
  + Utf8 [getParameterTypes]
  + Utf8 [h]
  + Utf8 [hasNext]
  + Utf8 [isAnnotationPresent]
  + Utf8 [iterator]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/IllegalArgumentException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/reflect/Method]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Set]
  + Utf8 [next]
  + Utf8 [put]
  + Utf8 [toString]
  + Utf8 [values]

Fields (count = 1):
  + Field:        a La/a/a/b/m;
    Access flags: 0x1a
      = private static final a.a.a.b.m a

Methods (count = 4):
  - Method:       <init>()V
    Access flags: 0x0
      = a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #38
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Class;)La/a/a/c/bo;
    Access flags: 0xa
      = private static a.a.a.c.bo b(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 191, locals = 11, stack = 4):
      [0] aload_0 v0
      [1] invokestatic #33
        + Methodref [a/a/a/f/l.a (Ljava/lang/Class;)La/a/a/f/l;]
      [4] invokevirtual #34
        + Methodref [a/a/a/f/l.e ()La/a/a/f/w;]
      [7] invokevirtual #35
        + Methodref [a/a/a/f/w.d ()Ljava/util/Set;]
      [10] astore_1 v1
      [11] invokestatic #29
        + Methodref [a/a/a/c/ct.c ()Ljava/util/HashMap;]
      [14] astore_2 v2
      [15] aload_1 v1
      [16] invokeinterface #51
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [21] astore_3 v3
      [22] aload_3 v3
      [23] invokeinterface #46
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [28] ifeq +153 (target=181)
      [31] aload_3 v3
      [32] invokeinterface #47
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [37] checkcast #16
        + Class [java/lang/Class]
      [40] astore v4
      [42] aload v4
      [44] invokevirtual #36
        + Methodref [java/lang/Class.getMethods ()[Ljava/lang/reflect/Method;]
      [47] astore v5
      [49] aload v5
      [51] arraylength
      [52] istore v6
      [54] iconst_0
      [55] istore v7
      [57] iload v7
      [59] iload v6
      [61] ificmpge +117 (target=178)
      [64] aload v5
      [66] iload v7
      [68] aaload
      [69] astore v8
      [71] aload v8
      [73] ldc #12
        + Class [a/a/a/d/i]
      [75] invokevirtual #45
        + Methodref [java/lang/reflect/Method.isAnnotationPresent (Ljava/lang/Class;)Z]
      [78] ifeq +94 (target=172)
      [81] aload v8
      [83] invokevirtual #44
        + Methodref [java/lang/reflect/Method.getParameterTypes ()[Ljava/lang/Class;]
      [86] astore v9
      [88] aload v9
      [90] arraylength
      [91] iconst_1
      [92] ificmpeq +47 (target=139)
      [95] new #17
        + Class [java/lang/IllegalArgumentException]
      [98] dup
      [99] new #19
        + Class [java/lang/StringBuilder]
      [102] dup
      [103] invokespecial #39
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [106] ldc #3
        + String [Method ]
      [108] invokevirtual #42
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [111] aload v8
      [113] invokevirtual #41
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [116] ldc #2
        + String [ has @Subscribe annotation, but requires ]
      [118] invokevirtual #42
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [121] aload v9
      [123] arraylength
      [124] invokevirtual #40
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [127] ldc #1
        + String [ arguments.  Event subscriber methods must require a single argument.]
      [129] invokevirtual #42
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [132] invokevirtual #43
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [135] invokespecial #37
        + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
      [138] athrow
      [139] new #11
        + Class [a/a/a/d/c]
      [142] dup
      [143] aload v8
      [145] invokespecial #32
        + Methodref [a/a/a/d/c.<init> (Ljava/lang/reflect/Method;)V]
      [148] astore v10
      [150] aload_2 v2
      [151] aload v10
      [153] invokeinterface #48
        + InterfaceMethodref [java/util/Map.containsKey (Ljava/lang/Object;)Z]
      [158] ifne +14 (target=172)
      [161] aload_2 v2
      [162] aload v10
      [164] aload v8
      [166] invokeinterface #49
        + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [171] pop
      [172] iinc v7, 1
      [175] goto -118 (target=57)
      [178] goto -156 (target=22)
      [181] aload_2 v2
      [182] invokeinterface #50
        + InterfaceMethodref [java/util/Map.values ()Ljava/util/Collection;]
      [187] invokestatic #28
        + Methodref [a/a/a/c/bo.a (Ljava/util/Collection;)La/a/a/c/bo;]
      [190] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [22] Var: ...[a:java/util/Set][a:java/util/Map][a:java/util/Iterator], Stack: (empty)
        - [57] Var: [a:java/lang/Class][a:java/util/Set][a:java/util/Map][a:java/util/Iterator][a:java/lang/Class][a:[Ljava/lang/reflect/Method;][i][i], Stack: 
        - [139] Var: ...[a:java/lang/reflect/Method][a:[Ljava/lang/Class;], Stack: (empty)
        - [172] Var: -2, Stack: (empty)
        - [178] Var: [a:java/lang/Class][a:java/util/Set][a:java/util/Map][a:java/util/Iterator], Stack: 
        - [181] Var: -1, Stack: (empty)
  + Method:       a(Ljava/lang/Class;)La/a/a/c/bo;
    Access flags: 0x1008
      = static synthetic a.a.a.c.bo a(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokestatic #30
        + Methodref [a/a/a/d/a.b (Ljava/lang/Class;)La/a/a/c/bo;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 0, stack = 3):
      [0] invokestatic #25
        + Methodref [a/a/a/b/d.a ()La/a/a/b/d;]
      [3] invokevirtual #27
        + Methodref [a/a/a/b/d.h ()La/a/a/b/d;]
      [6] new #10
        + Class [a/a/a/d/b]
      [9] dup
      [10] invokespecial #31
        + Methodref [a/a/a/d/b.<init> ()V]
      [13] invokevirtual #26
        + Methodref [a/a/a/b/d.a (La/a/a/b/j;)La/a/a/b/m;]
      [16] putstatic #24
        + Fieldref [a/a/a/d/a.a La/a/a/b/m;]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/d/b
  Superclass:    a/a/a/b/j
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.d.b extends a.a.a.b.j

Interfaces (count = 0):

Constant Pool (count = 20):
  + Class [a/a/a/b/j]
  + Class [a/a/a/d/a]
  + Class [a/a/a/d/b]
  + Class [java/lang/Class]
  + Methodref [a/a/a/b/j.<init> ()V]
  + Methodref [a/a/a/d/a.a (Ljava/lang/Class;)La/a/a/c/bo;]
  + Methodref [a/a/a/d/b.a (Ljava/lang/Class;)La/a/a/c/bo;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Class;)La/a/a/c/bo;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Class;)La/a/a/c/bo;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/b/j]
  + Utf8 [a/a/a/d/a]
  + Utf8 [a/a/a/d/b]
  + Utf8 [java/lang/Class]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x0
      = b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #5
        + Methodref [a/a/a/b/j.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Class;)La/a/a/c/bo;
    Access flags: 0x1
      = public a.a.a.c.bo a(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokestatic #6
        + Methodref [a/a/a/d/a.a (Ljava/lang/Class;)La/a/a/c/bo;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1041
      = public bridge synthetic java.lang.Object a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #4
        + Class [java/lang/Class]
      [5] invokevirtual #7
        + Methodref [a/a/a/d/b.a (Ljava/lang/Class;)La/a/a/c/bo;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/d/c
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.d.c extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 54):
  + Class [a/a/a/a/i]
  + Class [a/a/a/d/c]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/reflect/Method]
  + Class [java/util/Arrays]
  + Class [java/util/List]
  + Fieldref [a/a/a/d/c.a Ljava/lang/String;]
  + Fieldref [a/a/a/d/c.b Ljava/util/List;]
  + Methodref [a/a/a/a/i.a ([Ljava/lang/Object;)I]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/reflect/Method.getName ()Ljava/lang/String;]
  + Methodref [java/lang/reflect/Method.getParameterTypes ()[Ljava/lang/Class;]
  + Methodref [java/util/Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;]
  + InterfaceMethodref [java/util/List.equals (Ljava/lang/Object;)Z]
  + NameAndType [<init> ()V]
  + NameAndType [a ([Ljava/lang/Object;)I]
  + NameAndType [a Ljava/lang/String;]
  + NameAndType [asList ([Ljava/lang/Object;)Ljava/util/List;]
  + NameAndType [b Ljava/util/List;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [getName ()Ljava/lang/String;]
  + NameAndType [getParameterTypes ()[Ljava/lang/Class;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [()[Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/reflect/Method;)V]
  + Utf8 [([Ljava/lang/Object;)I]
  + Utf8 [([Ljava/lang/Object;)Ljava/util/List;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/String;]
  + Utf8 [Ljava/util/List;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/d/c]
  + Utf8 [asList]
  + Utf8 [b]
  + Utf8 [equals]
  + Utf8 [getName]
  + Utf8 [getParameterTypes]
  + Utf8 [hashCode]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/reflect/Method]
  + Utf8 [java/util/Arrays]
  + Utf8 [java/util/List]

Fields (count = 2):
  + Field:        a Ljava/lang/String;
    Access flags: 0x12
      = private final java.lang.String a
  + Field:        b Ljava/util/List;
    Access flags: 0x12
      = private final java.util.List b

Methods (count = 3):
  - Method:       <init>(Ljava/lang/reflect/Method;)V
    Access flags: 0x0
      = c(java.lang.reflect.Method)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #11
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokevirtual #13
        + Methodref [java/lang/reflect/Method.getName ()Ljava/lang/String;]
      [9] putfield #8
        + Fieldref [a/a/a/d/c.a Ljava/lang/String;]
      [12] aload_0 v0
      [13] aload_1 v1
      [14] invokevirtual #14
        + Methodref [java/lang/reflect/Method.getParameterTypes ()[Ljava/lang/Class;]
      [17] invokestatic #15
        + Methodref [java/util/Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;]
      [20] putfield #9
        + Fieldref [a/a/a/d/c.b Ljava/util/List;]
      [23] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 1, stack = 4):
      [0] iconst_2
      [1] anewarray #3
        + Class [java/lang/Object]
      [4] dup
      [5] iconst_0
      [6] aload_0 v0
      [7] getfield #8
        + Fieldref [a/a/a/d/c.a Ljava/lang/String;]
      [10] aastore
      [11] dup
      [12] iconst_1
      [13] aload_0 v0
      [14] getfield #9
        + Fieldref [a/a/a/d/c.b Ljava/util/List;]
      [17] aastore
      [18] invokestatic #10
        + Methodref [a/a/a/a/i.a ([Ljava/lang/Object;)I]
      [21] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 50, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] instanceof #2
        + Class [a/a/a/d/c]
      [4] ifeq +44 (target=48)
      [7] aload_1 v1
      [8] checkcast #2
        + Class [a/a/a/d/c]
      [11] astore_2 v2
      [12] aload_0 v0
      [13] getfield #8
        + Fieldref [a/a/a/d/c.a Ljava/lang/String;]
      [16] aload_2 v2
      [17] getfield #8
        + Fieldref [a/a/a/d/c.a Ljava/lang/String;]
      [20] invokevirtual #12
        + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
      [23] ifeq +23 (target=46)
      [26] aload_0 v0
      [27] getfield #9
        + Fieldref [a/a/a/d/c.b Ljava/util/List;]
      [30] aload_2 v2
      [31] getfield #9
        + Fieldref [a/a/a/d/c.b Ljava/util/List;]
      [34] invokeinterface #16
        + InterfaceMethodref [java/util/List.equals (Ljava/lang/Object;)Z]
      [39] ifeq +7 (target=46)
      [42] iconst_1
      [43] goto +4 (target=47)
      [46] iconst_0
      [47] ireturn
      [48] iconst_0
      [49] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [46] Var: ...[a:a/a/a/d/c], Stack: (empty)
        - [47] Var: ..., Stack: [i]
        - [48] Var: -1, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/d/d
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class a.a.a.d.d extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 89):
  + String [default]
  + Class [a/a/a/a/o]
  + Class [a/a/a/b/d]
  + Class [a/a/a/c/bb]
  + Class [a/a/a/d/a]
  + Class [a/a/a/d/d]
  + Class [a/a/a/d/e]
  + Class [a/a/a/d/f]
  + Class [a/a/a/d/g]
  + Class [a/a/a/d/h]
  + Class [a/a/a/d/j]
  + Class [java/lang/Object]
  + Class [java/util/concurrent/locks/ReentrantReadWriteLock]
  + Fieldref [a/a/a/d/d.a La/a/a/b/m;]
  + Fieldref [a/a/a/d/d.b La/a/a/c/ds;]
  + Fieldref [a/a/a/d/d.c Ljava/util/concurrent/locks/ReadWriteLock;]
  + Fieldref [a/a/a/d/d.d La/a/a/d/k;]
  + Fieldref [a/a/a/d/d.e Ljava/lang/ThreadLocal;]
  + Fieldref [a/a/a/d/d.f Ljava/lang/ThreadLocal;]
  + Fieldref [a/a/a/d/d.g La/a/a/d/j;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/b/d.a ()La/a/a/b/d;]
  + Methodref [a/a/a/b/d.a (La/a/a/b/j;)La/a/a/b/m;]
  + Methodref [a/a/a/b/d.h ()La/a/a/b/d;]
  + Methodref [a/a/a/c/bb.h ()La/a/a/c/bb;]
  + Methodref [a/a/a/d/a.<init> ()V]
  + Methodref [a/a/a/d/d.<init> (La/a/a/d/j;)V]
  + Methodref [a/a/a/d/d.<init> (Ljava/lang/String;)V]
  + Methodref [a/a/a/d/e.<init> ()V]
  + Methodref [a/a/a/d/f.<init> (La/a/a/d/d;)V]
  + Methodref [a/a/a/d/g.<init> (La/a/a/d/d;)V]
  + Methodref [a/a/a/d/h.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/util/concurrent/locks/ReentrantReadWriteLock.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/d/d;)V]
  + NameAndType [<init> (La/a/a/d/j;)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [a ()La/a/a/b/d;]
  + NameAndType [a (La/a/a/b/j;)La/a/a/b/m;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a La/a/a/b/m;]
  + NameAndType [b La/a/a/c/ds;]
  + NameAndType [c Ljava/util/concurrent/locks/ReadWriteLock;]
  + NameAndType [d La/a/a/d/k;]
  + NameAndType [e Ljava/lang/ThreadLocal;]
  + NameAndType [f Ljava/lang/ThreadLocal;]
  + NameAndType [g La/a/a/d/j;]
  + NameAndType [h ()La/a/a/b/d;]
  + NameAndType [h ()La/a/a/c/bb;]
  + Utf8 [()La/a/a/b/d;]
  + Utf8 [()La/a/a/c/bb;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/b/j;)La/a/a/b/m;]
  + Utf8 [(La/a/a/d/d;)V]
  + Utf8 [(La/a/a/d/j;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/b/m;]
  + Utf8 [La/a/a/c/ds;]
  + Utf8 [La/a/a/d/j;]
  + Utf8 [La/a/a/d/k;]
  + Utf8 [Ljava/lang/ThreadLocal;]
  + Utf8 [Ljava/util/concurrent/locks/ReadWriteLock;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/b/d]
  + Utf8 [a/a/a/c/bb]
  + Utf8 [a/a/a/d/a]
  + Utf8 [a/a/a/d/d]
  + Utf8 [a/a/a/d/e]
  + Utf8 [a/a/a/d/f]
  + Utf8 [a/a/a/d/g]
  + Utf8 [a/a/a/d/h]
  + Utf8 [a/a/a/d/j]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [default]
  + Utf8 [e]
  + Utf8 [f]
  + Utf8 [g]
  + Utf8 [h]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/concurrent/locks/ReentrantReadWriteLock]

Fields (count = 7):
  + Field:        a La/a/a/b/m;
    Access flags: 0x1a
      = private static final a.a.a.b.m a
  + Field:        b La/a/a/c/ds;
    Access flags: 0x12
      = private final a.a.a.c.ds b
  + Field:        c Ljava/util/concurrent/locks/ReadWriteLock;
    Access flags: 0x12
      = private final java.util.concurrent.locks.ReadWriteLock c
  + Field:        d La/a/a/d/k;
    Access flags: 0x12
      = private final a.a.a.d.k d
  + Field:        e Ljava/lang/ThreadLocal;
    Access flags: 0x12
      = private final java.lang.ThreadLocal e
  + Field:        f Ljava/lang/ThreadLocal;
    Access flags: 0x12
      = private final java.lang.ThreadLocal f
  + Field:        g La/a/a/d/j;
    Access flags: 0x2
      = private a.a.a.d.j g

Methods (count = 4):
  - Method:       <init>()V
    Access flags: 0x1
      = public d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] ldc #1
        + String [default]
      [3] invokespecial #28
        + Methodref [a/a/a/d/d.<init> (Ljava/lang/String;)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;)V
    Access flags: 0x1
      = public d(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] new #10
        + Class [a/a/a/d/h]
      [4] dup
      [5] aload_1 v1
      [6] invokespecial #32
        + Methodref [a/a/a/d/h.<init> (Ljava/lang/String;)V]
      [9] invokespecial #27
        + Methodref [a/a/a/d/d.<init> (La/a/a/d/j;)V]
      [12] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/d/j;)V
    Access flags: 0x1
      = public d(a.a.a.d.j)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 69, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] invokespecial #33
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] invokestatic #25
        + Methodref [a/a/a/c/bb.h ()La/a/a/c/bb;]
      [8] putfield #15
        + Fieldref [a/a/a/d/d.b La/a/a/c/ds;]
      [11] aload_0 v0
      [12] new #13
        + Class [java/util/concurrent/locks/ReentrantReadWriteLock]
      [15] dup
      [16] invokespecial #34
        + Methodref [java/util/concurrent/locks/ReentrantReadWriteLock.<init> ()V]
      [19] putfield #16
        + Fieldref [a/a/a/d/d.c Ljava/util/concurrent/locks/ReadWriteLock;]
      [22] aload_0 v0
      [23] new #5
        + Class [a/a/a/d/a]
      [26] dup
      [27] invokespecial #26
        + Methodref [a/a/a/d/a.<init> ()V]
      [30] putfield #17
        + Fieldref [a/a/a/d/d.d La/a/a/d/k;]
      [33] aload_0 v0
      [34] new #8
        + Class [a/a/a/d/f]
      [37] dup
      [38] aload_0 v0
      [39] invokespecial #30
        + Methodref [a/a/a/d/f.<init> (La/a/a/d/d;)V]
      [42] putfield #18
        + Fieldref [a/a/a/d/d.e Ljava/lang/ThreadLocal;]
      [45] aload_0 v0
      [46] new #9
        + Class [a/a/a/d/g]
      [49] dup
      [50] aload_0 v0
      [51] invokespecial #31
        + Methodref [a/a/a/d/g.<init> (La/a/a/d/d;)V]
      [54] putfield #19
        + Fieldref [a/a/a/d/d.f Ljava/lang/ThreadLocal;]
      [57] aload_0 v0
      [58] aload_1 v1
      [59] invokestatic #21
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [62] checkcast #11
        + Class [a/a/a/d/j]
      [65] putfield #20
        + Fieldref [a/a/a/d/d.g La/a/a/d/j;]
      [68] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 0, stack = 3):
      [0] invokestatic #22
        + Methodref [a/a/a/b/d.a ()La/a/a/b/d;]
      [3] invokevirtual #24
        + Methodref [a/a/a/b/d.h ()La/a/a/b/d;]
      [6] new #7
        + Class [a/a/a/d/e]
      [9] dup
      [10] invokespecial #29
        + Methodref [a/a/a/d/e.<init> ()V]
      [13] invokevirtual #23
        + Methodref [a/a/a/b/d.a (La/a/a/b/j;)La/a/a/b/m;]
      [16] putstatic #14
        + Fieldref [a/a/a/d/d.a La/a/a/b/m;]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/d/e
  Superclass:    a/a/a/b/j
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.d.e extends a.a.a.b.j

Interfaces (count = 0):

Constant Pool (count = 32):
  + Class [a/a/a/b/j]
  + Class [a/a/a/d/e]
  + Class [a/a/a/f/l]
  + Class [a/a/a/f/w]
  + Class [java/lang/Class]
  + Methodref [a/a/a/b/j.<init> ()V]
  + Methodref [a/a/a/d/e.a (Ljava/lang/Class;)Ljava/util/Set;]
  + Methodref [a/a/a/f/l.a (Ljava/lang/Class;)La/a/a/f/l;]
  + Methodref [a/a/a/f/l.e ()La/a/a/f/w;]
  + Methodref [a/a/a/f/w.d ()Ljava/util/Set;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Class;)La/a/a/f/l;]
  + NameAndType [a (Ljava/lang/Class;)Ljava/util/Set;]
  + NameAndType [d ()Ljava/util/Set;]
  + NameAndType [e ()La/a/a/f/w;]
  + Utf8 [()La/a/a/f/w;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Class;)La/a/a/f/l;]
  + Utf8 [(Ljava/lang/Class;)Ljava/util/Set;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/b/j]
  + Utf8 [a/a/a/d/e]
  + Utf8 [a/a/a/f/l]
  + Utf8 [a/a/a/f/w]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [java/lang/Class]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x0
      = e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #6
        + Methodref [a/a/a/b/j.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Class;)Ljava/util/Set;
    Access flags: 0x1
      = public java.util.Set a(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokestatic #8
        + Methodref [a/a/a/f/l.a (Ljava/lang/Class;)La/a/a/f/l;]
      [4] invokevirtual #9
        + Methodref [a/a/a/f/l.e ()La/a/a/f/w;]
      [7] invokevirtual #10
        + Methodref [a/a/a/f/w.d ()Ljava/util/Set;]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1041
      = public bridge synthetic java.lang.Object a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #5
        + Class [java/lang/Class]
      [5] invokevirtual #7
        + Methodref [a/a/a/d/e.a (Ljava/lang/Class;)Ljava/util/Set;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/d/f
  Superclass:    java/lang/ThreadLocal
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.d.f extends java.lang.ThreadLocal

Interfaces (count = 0):

Constant Pool (count = 23):
  + Class [a/a/a/d/f]
  + Class [java/lang/ThreadLocal]
  + Class [java/util/LinkedList]
  + Fieldref [a/a/a/d/f.a La/a/a/d/d;]
  + Methodref [a/a/a/d/f.a ()Ljava/util/Queue;]
  + Methodref [java/lang/ThreadLocal.<init> ()V]
  + Methodref [java/util/LinkedList.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a ()Ljava/util/Queue;]
  + NameAndType [a La/a/a/d/d;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Queue;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/d/d;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/d/d;]
  + Utf8 [a]
  + Utf8 [a/a/a/d/f]
  + Utf8 [initialValue]
  + Utf8 [java/lang/ThreadLocal]
  + Utf8 [java/util/LinkedList]

Fields (count = 1):
  + Field:        a La/a/a/d/d;
    Access flags: 0x1010
      = final synthetic a.a.a.d.d a

Methods (count = 3):
  - Method:       <init>(La/a/a/d/d;)V
    Access flags: 0x0
      = f(a.a.a.d.d)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #4
        + Fieldref [a/a/a/d/f.a La/a/a/d/d;]
      [5] aload_0 v0
      [6] invokespecial #6
        + Methodref [java/lang/ThreadLocal.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/Queue;
    Access flags: 0x4
      = protected java.util.Queue a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 2):
      [0] new #3
        + Class [java/util/LinkedList]
      [3] dup
      [4] invokespecial #7
        + Methodref [java/util/LinkedList.<init> ()V]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       initialValue()Ljava/lang/Object;
    Access flags: 0x1004
      = protected synthetic java.lang.Object initialValue()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #5
        + Methodref [a/a/a/d/f.a ()Ljava/util/Queue;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/d/g
  Superclass:    java/lang/ThreadLocal
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.d.g extends java.lang.ThreadLocal

Interfaces (count = 0):

Constant Pool (count = 26):
  + Class [a/a/a/d/g]
  + Class [java/lang/Boolean]
  + Class [java/lang/ThreadLocal]
  + Fieldref [a/a/a/d/g.a La/a/a/d/d;]
  + Methodref [a/a/a/d/g.a ()Ljava/lang/Boolean;]
  + Methodref [java/lang/Boolean.valueOf (Z)Ljava/lang/Boolean;]
  + Methodref [java/lang/ThreadLocal.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a ()Ljava/lang/Boolean;]
  + NameAndType [a La/a/a/d/d;]
  + NameAndType [valueOf (Z)Ljava/lang/Boolean;]
  + Utf8 [()Ljava/lang/Boolean;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/d/d;)V]
  + Utf8 [(Z)Ljava/lang/Boolean;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/d/d;]
  + Utf8 [a]
  + Utf8 [a/a/a/d/g]
  + Utf8 [initialValue]
  + Utf8 [java/lang/Boolean]
  + Utf8 [java/lang/ThreadLocal]
  + Utf8 [valueOf]

Fields (count = 1):
  + Field:        a La/a/a/d/d;
    Access flags: 0x1010
      = final synthetic a.a.a.d.d a

Methods (count = 3):
  - Method:       <init>(La/a/a/d/d;)V
    Access flags: 0x0
      = g(a.a.a.d.d)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #4
        + Fieldref [a/a/a/d/g.a La/a/a/d/d;]
      [5] aload_0 v0
      [6] invokespecial #7
        + Methodref [java/lang/ThreadLocal.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/lang/Boolean;
    Access flags: 0x4
      = protected java.lang.Boolean a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] iconst_0
      [1] invokestatic #6
        + Methodref [java/lang/Boolean.valueOf (Z)Ljava/lang/Boolean;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       initialValue()Ljava/lang/Object;
    Access flags: 0x1004
      = protected synthetic java.lang.Object initialValue()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #5
        + Methodref [a/a/a/d/g.a ()Ljava/lang/Boolean;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/d/h
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.d.h extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/d/j]

Constant Pool (count = 50):
  + String [.]
  + Class [a/a/a/a/o]
  + Class [a/a/a/d/d]
  + Class [a/a/a/d/h]
  + Class [a/a/a/d/j]
  + Class [java/lang/Class]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/StringBuilder]
  + Class [java/util/logging/Logger]
  + Fieldref [a/a/a/d/h.a Ljava/util/logging/Logger;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [java/lang/Class.getName ()Ljava/lang/String;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/logging/Logger.getLogger (Ljava/lang/String;)Ljava/util/logging/Logger;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a Ljava/util/logging/Logger;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [getLogger (Ljava/lang/String;)Ljava/util/logging/Logger;]
  + NameAndType [getName ()Ljava/lang/String;]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)Ljava/util/logging/Logger;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [.]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/util/logging/Logger;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/d/d]
  + Utf8 [a/a/a/d/h]
  + Utf8 [a/a/a/d/j]
  + Utf8 [append]
  + Utf8 [getLogger]
  + Utf8 [getName]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/logging/Logger]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a Ljava/util/logging/Logger;
    Access flags: 0x12
      = private final java.util.logging.Logger a

Methods (count = 1):
  - Method:       <init>(Ljava/lang/String;)V
    Access flags: 0x1
      = public h(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 45, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #14
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] new #9
        + Class [java/lang/StringBuilder]
      [8] dup
      [9] invokespecial #15
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [12] ldc #3
        + Class [a/a/a/d/d]
      [14] invokevirtual #13
        + Methodref [java/lang/Class.getName ()Ljava/lang/String;]
      [17] invokevirtual #16
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [20] ldc #1
        + String [.]
      [22] invokevirtual #16
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [25] aload_1 v1
      [26] invokestatic #12
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [29] checkcast #8
        + Class [java/lang/String]
      [32] invokevirtual #16
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [35] invokevirtual #17
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [38] invokestatic #18
        + Methodref [java/util/logging/Logger.getLogger (Ljava/lang/String;)Ljava/util/logging/Logger;]
      [41] putfield #11
        + Fieldref [a/a/a/d/h.a Ljava/util/logging/Logger;]
      [44] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/d/i
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x2601
    = @ public @interface a.a.a.d.i extends java.lang.Object

Interfaces (count = 1):
  + Class [java/lang/annotation/Annotation]

Constant Pool (count = 15):
  + Class [a/a/a/d/i]
  + Class [java/lang/Object]
  + Class [java/lang/annotation/Annotation]
  + Utf8 [Ljava/lang/annotation/ElementType;]
  + Utf8 [Ljava/lang/annotation/Retention;]
  + Utf8 [Ljava/lang/annotation/RetentionPolicy;]
  + Utf8 [Ljava/lang/annotation/Target;]
  + Utf8 [METHOD]
  + Utf8 [RUNTIME]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [a/a/a/d/i]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/annotation/Annotation]
  + Utf8 [value]

Fields (count = 0):

Methods (count = 0):

Class file attributes (count = 1):
  + Runtime visible annotations attribute:
    - Annotation [Ljava/lang/annotation/Retention;]:
      - Enum constant element value [value, Ljava/lang/annotation/RetentionPolicy;, RUNTIME]
    - Annotation [Ljava/lang/annotation/Target;]:
      - Array element value [value]:
        + Enum constant element value [(default), Ljava/lang/annotation/ElementType;, METHOD]

_____________________________________________________________________
+ Program class: a/a/a/d/j
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface a.a.a.d.j extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 5):
  + Class [a/a/a/d/j]
  + Class [java/lang/Object]
  + Utf8 [a/a/a/d/j]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/d/k
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x600
    = interface a.a.a.d.k extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 5):
  + Class [a/a/a/d/k]
  + Class [java/lang/Object]
  + Utf8 [a/a/a/d/k]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/e/a
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.e.a extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 15):
  + Integer [-2147483648]
  + Integer [2147483647]
  + Class [a/a/a/e/a]
  + Class [java/lang/Object]
  + Long [-2147483648]
  + Long [2147483647]
  + Utf8 [(J)I]
  + Utf8 [Code]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/e/a]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 1):
  + Method:       a(J)I
    Access flags: 0x9
      = public static int a(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 25, locals = 2, stack = 4):
      [0] lload_0 v0
      [1] ldc2_w #7
        + Long [2147483647]
      [4] lcmp
      [5] ifle +6 (target=11)
      [8] ldc #2
        + Integer [2147483647]
      [10] ireturn
      [11] lload_0 v0
      [12] ldc2_w #5
        + Long [-2147483648]
      [15] lcmp
      [16] ifge +6 (target=22)
      [19] ldc #1
        + Integer [-2147483648]
      [21] ireturn
      [22] lload_0 v0
      [23] l2i
      [24] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [22] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/a
  Superclass:    java/lang/reflect/AccessibleObject
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.f.a extends java.lang.reflect.AccessibleObject

Interfaces (count = 1):
  + Class [java/lang/reflect/Member]

Constant Pool (count = 79):
  + Class [a/a/a/f/a]
  + Class [a/a/a/f/l]
  + Class [java/lang/Object]
  + Class [java/lang/reflect/AccessibleObject]
  + Class [java/lang/reflect/Member]
  + Fieldref [a/a/a/f/a.a Ljava/lang/reflect/AccessibleObject;]
  + Fieldref [a/a/a/f/a.b Ljava/lang/reflect/Member;]
  + Methodref [a/a/a/f/a.a ()La/a/a/f/l;]
  + Methodref [a/a/a/f/a.getDeclaringClass ()Ljava/lang/Class;]
  + Methodref [a/a/a/f/l.a (Ljava/lang/Class;)La/a/a/f/l;]
  + Methodref [a/a/a/f/l.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
  + Methodref [java/lang/reflect/AccessibleObject.getAnnotation (Ljava/lang/Class;)Ljava/lang/annotation/Annotation;]
  + Methodref [java/lang/reflect/AccessibleObject.getAnnotations ()[Ljava/lang/annotation/Annotation;]
  + Methodref [java/lang/reflect/AccessibleObject.getDeclaredAnnotations ()[Ljava/lang/annotation/Annotation;]
  + Methodref [java/lang/reflect/AccessibleObject.isAccessible ()Z]
  + Methodref [java/lang/reflect/AccessibleObject.isAnnotationPresent (Ljava/lang/Class;)Z]
  + Methodref [java/lang/reflect/AccessibleObject.setAccessible (Z)V]
  + InterfaceMethodref [java/lang/reflect/Member.getDeclaringClass ()Ljava/lang/Class;]
  + InterfaceMethodref [java/lang/reflect/Member.getModifiers ()I]
  + InterfaceMethodref [java/lang/reflect/Member.getName ()Ljava/lang/String;]
  + InterfaceMethodref [java/lang/reflect/Member.isSynthetic ()Z]
  + NameAndType [a ()La/a/a/f/l;]
  + NameAndType [a (Ljava/lang/Class;)La/a/a/f/l;]
  + NameAndType [a Ljava/lang/reflect/AccessibleObject;]
  + NameAndType [b Ljava/lang/reflect/Member;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [getAnnotation (Ljava/lang/Class;)Ljava/lang/annotation/Annotation;]
  + NameAndType [getAnnotations ()[Ljava/lang/annotation/Annotation;]
  + NameAndType [getDeclaredAnnotations ()[Ljava/lang/annotation/Annotation;]
  + NameAndType [getDeclaringClass ()Ljava/lang/Class;]
  + NameAndType [getModifiers ()I]
  + NameAndType [getName ()Ljava/lang/String;]
  + NameAndType [hashCode ()I]
  + NameAndType [isAccessible ()Z]
  + NameAndType [isAnnotationPresent (Ljava/lang/Class;)Z]
  + NameAndType [isSynthetic ()Z]
  + NameAndType [setAccessible (Z)V]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/f/l;]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Z]
  + Utf8 [()[Ljava/lang/annotation/Annotation;]
  + Utf8 [(Ljava/lang/Class;)La/a/a/f/l;]
  + Utf8 [(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;]
  + Utf8 [(Ljava/lang/Class;)Z]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Z)V]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/reflect/AccessibleObject;]
  + Utf8 [Ljava/lang/reflect/Member;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/f/a]
  + Utf8 [a/a/a/f/l]
  + Utf8 [b]
  + Utf8 [equals]
  + Utf8 [getAnnotation]
  + Utf8 [getAnnotations]
  + Utf8 [getDeclaredAnnotations]
  + Utf8 [getDeclaringClass]
  + Utf8 [getModifiers]
  + Utf8 [getName]
  + Utf8 [hashCode]
  + Utf8 [isAccessible]
  + Utf8 [isAnnotationPresent]
  + Utf8 [isSynthetic]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/reflect/AccessibleObject]
  + Utf8 [java/lang/reflect/Member]
  + Utf8 [setAccessible]
  + Utf8 [toString]

Fields (count = 2):
  + Field:        a Ljava/lang/reflect/AccessibleObject;
    Access flags: 0x12
      = private final java.lang.reflect.AccessibleObject a
  + Field:        b Ljava/lang/reflect/Member;
    Access flags: 0x12
      = private final java.lang.reflect.Member b

Methods (count = 14):
  + Method:       a()La/a/a/f/l;
    Access flags: 0x1
      = public a.a.a.f.l a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/f/a.getDeclaringClass ()Ljava/lang/Class;]
      [4] invokestatic #10
        + Methodref [a/a/a/f/l.a (Ljava/lang/Class;)La/a/a/f/l;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isAnnotationPresent(Ljava/lang/Class;)Z
    Access flags: 0x11
      = public final boolean isAnnotationPresent(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/f/a.a Ljava/lang/reflect/AccessibleObject;]
      [4] aload_1 v1
      [5] invokevirtual #19
        + Methodref [java/lang/reflect/AccessibleObject.isAnnotationPresent (Ljava/lang/Class;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
    Access flags: 0x11
      = public final java.lang.annotation.Annotation getAnnotation(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/f/a.a Ljava/lang/reflect/AccessibleObject;]
      [4] aload_1 v1
      [5] invokevirtual #15
        + Methodref [java/lang/reflect/AccessibleObject.getAnnotation (Ljava/lang/Class;)Ljava/lang/annotation/Annotation;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getAnnotations()[Ljava/lang/annotation/Annotation;
    Access flags: 0x11
      = public final java.lang.annotation.Annotation[] getAnnotations()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/f/a.a Ljava/lang/reflect/AccessibleObject;]
      [4] invokevirtual #16
        + Methodref [java/lang/reflect/AccessibleObject.getAnnotations ()[Ljava/lang/annotation/Annotation;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getDeclaredAnnotations()[Ljava/lang/annotation/Annotation;
    Access flags: 0x11
      = public final java.lang.annotation.Annotation[] getDeclaredAnnotations()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/f/a.a Ljava/lang/reflect/AccessibleObject;]
      [4] invokevirtual #17
        + Methodref [java/lang/reflect/AccessibleObject.getDeclaredAnnotations ()[Ljava/lang/annotation/Annotation;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       setAccessible(Z)V
    Access flags: 0x11
      = public final void setAccessible(boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/f/a.a Ljava/lang/reflect/AccessibleObject;]
      [4] iload_1 v1
      [5] invokevirtual #20
        + Methodref [java/lang/reflect/AccessibleObject.setAccessible (Z)V]
      [8] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isAccessible()Z
    Access flags: 0x11
      = public final boolean isAccessible()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/f/a.a Ljava/lang/reflect/AccessibleObject;]
      [4] invokevirtual #18
        + Methodref [java/lang/reflect/AccessibleObject.isAccessible ()Z]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getDeclaringClass()Ljava/lang/Class;
    Access flags: 0x1
      = public java.lang.Class getDeclaringClass()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/f/a.b Ljava/lang/reflect/Member;]
      [4] invokeinterface #21
        + InterfaceMethodref [java/lang/reflect/Member.getDeclaringClass ()Ljava/lang/Class;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getName()Ljava/lang/String;
    Access flags: 0x11
      = public final java.lang.String getName()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/f/a.b Ljava/lang/reflect/Member;]
      [4] invokeinterface #23
        + InterfaceMethodref [java/lang/reflect/Member.getName ()Ljava/lang/String;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getModifiers()I
    Access flags: 0x11
      = public final int getModifiers()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/f/a.b Ljava/lang/reflect/Member;]
      [4] invokeinterface #22
        + InterfaceMethodref [java/lang/reflect/Member.getModifiers ()I]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isSynthetic()Z
    Access flags: 0x11
      = public final boolean isSynthetic()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/f/a.b Ljava/lang/reflect/Member;]
      [4] invokeinterface #24
        + InterfaceMethodref [java/lang/reflect/Member.isSynthetic ()Z]
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 48, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] instanceof #1
        + Class [a/a/a/f/a]
      [4] ifeq +42 (target=46)
      [7] aload_1 v1
      [8] checkcast #1
        + Class [a/a/a/f/a]
      [11] astore_2 v2
      [12] aload_0 v0
      [13] invokevirtual #8
        + Methodref [a/a/a/f/a.a ()La/a/a/f/l;]
      [16] aload_2 v2
      [17] invokevirtual #8
        + Methodref [a/a/a/f/a.a ()La/a/a/f/l;]
      [20] invokevirtual #11
        + Methodref [a/a/a/f/l.equals (Ljava/lang/Object;)Z]
      [23] ifeq +21 (target=44)
      [26] aload_0 v0
      [27] getfield #7
        + Fieldref [a/a/a/f/a.b Ljava/lang/reflect/Member;]
      [30] aload_2 v2
      [31] getfield #7
        + Fieldref [a/a/a/f/a.b Ljava/lang/reflect/Member;]
      [34] invokevirtual #12
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [37] ifeq +7 (target=44)
      [40] iconst_1
      [41] goto +4 (target=45)
      [44] iconst_0
      [45] ireturn
      [46] iconst_0
      [47] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [44] Var: ...[a:a/a/a/f/a], Stack: (empty)
        - [45] Var: ..., Stack: [i]
        - [46] Var: -1, Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/f/a.b Ljava/lang/reflect/Member;]
      [4] invokevirtual #13
        + Methodref [java/lang/Object.hashCode ()I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/f/a.b Ljava/lang/reflect/Member;]
      [4] invokevirtual #14
        + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/b
  Superclass:    a/a/a/f/a
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.f.b extends a.a.a.f.a

Interfaces (count = 1):
  + Class [java/lang/reflect/GenericDeclaration]

Constant Pool (count = 32):
  + Class [a/a/a/f/a]
  + Class [a/a/a/f/b]
  + Class [a/a/a/f/l]
  + Class [java/lang/reflect/GenericDeclaration]
  + Methodref [a/a/a/f/a.equals (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/f/a.getDeclaringClass ()Ljava/lang/Class;]
  + Methodref [a/a/a/f/a.hashCode ()I]
  + Methodref [a/a/a/f/a.toString ()Ljava/lang/String;]
  + Methodref [a/a/a/f/b.getDeclaringClass ()Ljava/lang/Class;]
  + Methodref [a/a/a/f/l.a (Ljava/lang/Class;)La/a/a/f/l;]
  + NameAndType [a (Ljava/lang/Class;)La/a/a/f/l;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [getDeclaringClass ()Ljava/lang/Class;]
  + NameAndType [hashCode ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/f/l;]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [(Ljava/lang/Class;)La/a/a/f/l;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/f/a]
  + Utf8 [a/a/a/f/b]
  + Utf8 [a/a/a/f/l]
  + Utf8 [equals]
  + Utf8 [getDeclaringClass]
  + Utf8 [hashCode]
  + Utf8 [java/lang/reflect/GenericDeclaration]
  + Utf8 [toString]

Fields (count = 0):

Methods (count = 5):
  + Method:       getDeclaringClass()Ljava/lang/Class;
    Access flags: 0x11
      = public final java.lang.Class getDeclaringClass()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #6
        + Methodref [a/a/a/f/a.getDeclaringClass ()Ljava/lang/Class;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/f/l;
    Access flags: 0x1
      = public a.a.a.f.l a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #9
        + Methodref [a/a/a/f/b.getDeclaringClass ()Ljava/lang/Class;]
      [4] invokestatic #10
        + Methodref [a/a/a/f/l.a (Ljava/lang/Class;)La/a/a/f/l;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1041
      = public bridge synthetic java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #8
        + Methodref [a/a/a/f/a.toString ()Ljava/lang/String;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hashCode()I
    Access flags: 0x1041
      = public bridge synthetic int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #7
        + Methodref [a/a/a/f/a.hashCode ()I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1041
      = public bridge synthetic boolean equals(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #5
        + Methodref [a/a/a/f/a.equals (Ljava/lang/Object;)Z]
      [5] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/c
  Superclass:    a/a/a/f/b
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.f.c extends a.a.a.f.b

Interfaces (count = 0):

Constant Pool (count = 16):
  + Class [a/a/a/f/b]
  + Class [a/a/a/f/c]
  + Class [java/lang/reflect/Method]
  + Fieldref [a/a/a/f/c.a Ljava/lang/reflect/Method;]
  + Methodref [java/lang/reflect/Method.getTypeParameters ()[Ljava/lang/reflect/TypeVariable;]
  + NameAndType [a Ljava/lang/reflect/Method;]
  + NameAndType [getTypeParameters ()[Ljava/lang/reflect/TypeVariable;]
  + Utf8 [()[Ljava/lang/reflect/TypeVariable;]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/reflect/Method;]
  + Utf8 [a]
  + Utf8 [a/a/a/f/b]
  + Utf8 [a/a/a/f/c]
  + Utf8 [getTypeParameters]
  + Utf8 [java/lang/reflect/Method]

Fields (count = 1):
  + Field:        a Ljava/lang/reflect/Method;
    Access flags: 0x10
      = final java.lang.reflect.Method a

Methods (count = 1):
  + Method:       getTypeParameters()[Ljava/lang/reflect/TypeVariable;
    Access flags: 0x11
      = public final java.lang.reflect.TypeVariable[] getTypeParameters()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [a/a/a/f/c.a Ljava/lang/reflect/Method;]
      [4] invokevirtual #5
        + Methodref [java/lang/reflect/Method.getTypeParameters ()[Ljava/lang/reflect/TypeVariable;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/d
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.f.d extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 34):
  + String [%s isn't parameterized]
  + Class [a/a/a/a/o]
  + Class [a/a/a/f/d]
  + Class [java/lang/Class]
  + Class [java/lang/Object]
  + Class [java/lang/reflect/ParameterizedType]
  + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Methodref [java/lang/Class.getGenericSuperclass ()Ljava/lang/reflect/Type;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getActualTypeArguments ()[Ljava/lang/reflect/Type;]
  + NameAndType [<init> ()V]
  + NameAndType [a (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + NameAndType [getActualTypeArguments ()[Ljava/lang/reflect/Type;]
  + NameAndType [getClass ()Ljava/lang/Class;]
  + NameAndType [getGenericSuperclass ()Ljava/lang/reflect/Type;]
  + Utf8 [%s isn't parameterized]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [()Ljava/lang/reflect/Type;]
  + Utf8 [()V]
  + Utf8 [()[Ljava/lang/reflect/Type;]
  + Utf8 [(ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/f/d]
  + Utf8 [getActualTypeArguments]
  + Utf8 [getClass]
  + Utf8 [getGenericSuperclass]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/reflect/ParameterizedType]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>()V
    Access flags: 0x0
      = d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #9
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/lang/reflect/Type;
    Access flags: 0x10
      = final java.lang.reflect.Type a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 37, locals = 2, stack = 6):
      [0] aload_0 v0
      [1] invokevirtual #10
        + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
      [4] invokevirtual #8
        + Methodref [java/lang/Class.getGenericSuperclass ()Ljava/lang/reflect/Type;]
      [7] astore_1 v1
      [8] aload_1 v1
      [9] instanceof #6
        + Class [java/lang/reflect/ParameterizedType]
      [12] ldc #1
        + String [%s isn't parameterized]
      [14] iconst_1
      [15] anewarray #5
        + Class [java/lang/Object]
      [18] dup
      [19] iconst_0
      [20] aload_1 v1
      [21] aastore
      [22] invokestatic #7
        + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
      [25] aload_1 v1
      [26] checkcast #6
        + Class [java/lang/reflect/ParameterizedType]
      [29] invokeinterface #11
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getActualTypeArguments ()[Ljava/lang/reflect/Type;]
      [34] iconst_0
      [35] aaload
      [36] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/e
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.f.e extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 153):
  + String [ is not a ]
  + Class [[Ljava/lang/reflect/Type;]
  + Class [a/a/a/a/o]
  + Class [a/a/a/f/ao]
  + Class [a/a/a/f/e]
  + Class [a/a/a/f/f]
  + Class [a/a/a/f/g]
  + Class [a/a/a/f/h]
  + Class [a/a/a/f/y]
  + Class [java/lang/Class]
  + Class [java/lang/ClassCastException]
  + Class [java/lang/IllegalArgumentException]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/reflect/GenericArrayType]
  + Class [java/lang/reflect/ParameterizedType]
  + Class [java/lang/reflect/Type]
  + Class [java/lang/reflect/TypeVariable]
  + Class [java/lang/reflect/WildcardType]
  + Fieldref [a/a/a/f/e.a La/a/a/f/h;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/f/ao.<init> ([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/e.<init> ()V]
  + Methodref [a/a/a/f/e.<init> (La/a/a/f/h;)V]
  + Methodref [a/a/a/f/e.a (Ljava/lang/reflect/GenericArrayType;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/e.a (Ljava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/ParameterizedType;]
  + Methodref [a/a/a/f/e.a (Ljava/lang/reflect/WildcardType;)Ljava/lang/reflect/WildcardType;]
  + Methodref [a/a/a/f/e.a (Ljava/util/Map;)La/a/a/f/e;]
  + Methodref [a/a/a/f/e.a ([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/e.b (Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/f/e.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/e.b (Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/f.<init> (Ljava/util/Map;Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/f.a ([Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/g.a (Ljava/lang/reflect/Type;)La/a/a/c/bs;]
  + Methodref [a/a/a/f/h.<init> ()V]
  + Methodref [a/a/a/f/h.a (Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/h.a (Ljava/util/Map;)La/a/a/f/h;]
  + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;]
  + Methodref [java/lang/Class.cast (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [java/lang/Class.getSimpleName ()Ljava/lang/String;]
  + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + InterfaceMethodref [java/lang/reflect/GenericArrayType.getGenericComponentType ()Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getActualTypeArguments ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getOwnerType ()Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getRawType ()Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/WildcardType.getLowerBounds ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/f/h;)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (Ljava/util/Map;Ljava/lang/reflect/Type;)V]
  + NameAndType [<init> ([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/reflect/GenericArrayType;)Ljava/lang/reflect/Type;]
  + NameAndType [a (Ljava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/ParameterizedType;]
  + NameAndType [a (Ljava/lang/reflect/Type;)La/a/a/c/bs;]
  + NameAndType [a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + NameAndType [a (Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;]
  + NameAndType [a (Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;]
  + NameAndType [a (Ljava/lang/reflect/WildcardType;)Ljava/lang/reflect/WildcardType;]
  + NameAndType [a (Ljava/util/Map;)La/a/a/f/e;]
  + NameAndType [a (Ljava/util/Map;)La/a/a/f/h;]
  + NameAndType [a ([Ljava/lang/reflect/Type;)V]
  + NameAndType [a ([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;]
  + NameAndType [a La/a/a/f/h;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b (Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + NameAndType [b (Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V]
  + NameAndType [cast (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [getActualTypeArguments ()[Ljava/lang/reflect/Type;]
  + NameAndType [getGenericComponentType ()Ljava/lang/reflect/Type;]
  + NameAndType [getLowerBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [getOwnerType ()Ljava/lang/reflect/Type;]
  + NameAndType [getRawType ()Ljava/lang/reflect/Type;]
  + NameAndType [getSimpleName ()Ljava/lang/String;]
  + NameAndType [getUpperBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [ is not a ]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/reflect/Type;]
  + Utf8 [()V]
  + Utf8 [()[Ljava/lang/reflect/Type;]
  + Utf8 [(La/a/a/f/e;[Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;]
  + Utf8 [(La/a/a/f/h;)V]
  + Utf8 [(La/a/a/f/h;La/a/a/f/f;)V]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/reflect/GenericArrayType;)Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/ParameterizedType;]
  + Utf8 [(Ljava/lang/reflect/Type;)La/a/a/c/bs;]
  + Utf8 [(Ljava/lang/reflect/Type;)La/a/a/f/e;]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;]
  + Utf8 [(Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/reflect/WildcardType;)Ljava/lang/reflect/WildcardType;]
  + Utf8 [(Ljava/util/Map;)La/a/a/f/e;]
  + Utf8 [(Ljava/util/Map;)La/a/a/f/h;]
  + Utf8 [(Ljava/util/Map;Ljava/lang/reflect/Type;)V]
  + Utf8 [(Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V]
  + Utf8 [([Ljava/lang/reflect/Type;)V]
  + Utf8 [([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;]
  + Utf8 [([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/f/h;]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/reflect/Type;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/f/ao]
  + Utf8 [a/a/a/f/e]
  + Utf8 [a/a/a/f/f]
  + Utf8 [a/a/a/f/g]
  + Utf8 [a/a/a/f/h]
  + Utf8 [a/a/a/f/y]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [cast]
  + Utf8 [equals]
  + Utf8 [getActualTypeArguments]
  + Utf8 [getGenericComponentType]
  + Utf8 [getLowerBounds]
  + Utf8 [getOwnerType]
  + Utf8 [getRawType]
  + Utf8 [getSimpleName]
  + Utf8 [getUpperBounds]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/ClassCastException]
  + Utf8 [java/lang/IllegalArgumentException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/reflect/GenericArrayType]
  + Utf8 [java/lang/reflect/ParameterizedType]
  + Utf8 [java/lang/reflect/Type]
  + Utf8 [java/lang/reflect/TypeVariable]
  + Utf8 [java/lang/reflect/WildcardType]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a La/a/a/f/h;
    Access flags: 0x12
      = private final a.a.a.f.h a

Methods (count = 15):
  - Method:       <init>()V
    Access flags: 0x1
      = public e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #44
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] new #8
        + Class [a/a/a/f/h]
      [8] dup
      [9] invokespecial #36
        + Methodref [a/a/a/f/h.<init> ()V]
      [12] putfield #20
        + Fieldref [a/a/a/f/e.a La/a/a/f/h;]
      [15] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/f/h;)V
    Access flags: 0x2
      = private e(a.a.a.f.h)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #44
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #20
        + Fieldref [a/a/a/f/e.a La/a/a/f/h;]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/Type;)La/a/a/f/e;
    Access flags: 0x8
      = static a.a.a.f.e a(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 1, stack = 2):
      [0] new #5
        + Class [a/a/a/f/e]
      [3] dup
      [4] invokespecial #23
        + Methodref [a/a/a/f/e.<init> ()V]
      [7] aload_0 v0
      [8] invokestatic #35
        + Methodref [a/a/a/f/g.a (Ljava/lang/reflect/Type;)La/a/a/c/bs;]
      [11] invokevirtual #28
        + Methodref [a/a/a/f/e.a (Ljava/util/Map;)La/a/a/f/e;]
      [14] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Map;)La/a/a/f/e;
    Access flags: 0x0
      = a.a.a.f.e a(java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 2, stack = 4):
      [0] new #5
        + Class [a/a/a/f/e]
      [3] dup
      [4] aload_0 v0
      [5] getfield #20
        + Fieldref [a/a/a/f/e.a La/a/a/f/h;]
      [8] aload_1 v1
      [9] invokevirtual #38
        + Methodref [a/a/a/f/h.a (Ljava/util/Map;)La/a/a/f/h;]
      [12] invokespecial #24
        + Methodref [a/a/a/f/e.<init> (La/a/a/f/h;)V]
      [15] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V
    Access flags: 0xa
      = private static void b(java.util.Map,java.lang.reflect.Type,java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 30, locals = 3, stack = 5):
      [0] aload_1 v1
      [1] aload_2 v2
      [2] invokevirtual #45
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [5] ifeq +4 (target=9)
      [8] return
      [9] new #6
        + Class [a/a/a/f/f]
      [12] dup
      [13] aload_0 v0
      [14] aload_2 v2
      [15] invokespecial #33
        + Methodref [a/a/a/f/f.<init> (Ljava/util/Map;Ljava/lang/reflect/Type;)V]
      [18] iconst_1
      [19] anewarray #17
        + Class [java/lang/reflect/Type]
      [22] dup
      [23] iconst_0
      [24] aload_1 v1
      [25] aastore
      [26] invokevirtual #34
        + Methodref [a/a/a/f/f.a ([Ljava/lang/reflect/Type;)V]
      [29] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [9] Var: ..., Stack: (empty)
  + Method:       b(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
    Access flags: 0x1
      = public java.lang.reflect.Type b(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 74, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] invokestatic #21
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_1 v1
      [6] instanceof #18
        + Class [java/lang/reflect/TypeVariable]
      [9] ifeq +15 (target=24)
      [12] aload_0 v0
      [13] getfield #20
        + Fieldref [a/a/a/f/e.a La/a/a/f/h;]
      [16] aload_1 v1
      [17] checkcast #18
        + Class [java/lang/reflect/TypeVariable]
      [20] invokevirtual #37
        + Methodref [a/a/a/f/h.a (Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;]
      [23] areturn
      [24] aload_1 v1
      [25] instanceof #16
        + Class [java/lang/reflect/ParameterizedType]
      [28] ifeq +12 (target=40)
      [31] aload_0 v0
      [32] aload_1 v1
      [33] checkcast #16
        + Class [java/lang/reflect/ParameterizedType]
      [36] invokespecial #26
        + Methodref [a/a/a/f/e.a (Ljava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/ParameterizedType;]
      [39] areturn
      [40] aload_1 v1
      [41] instanceof #15
        + Class [java/lang/reflect/GenericArrayType]
      [44] ifeq +12 (target=56)
      [47] aload_0 v0
      [48] aload_1 v1
      [49] checkcast #15
        + Class [java/lang/reflect/GenericArrayType]
      [52] invokespecial #25
        + Methodref [a/a/a/f/e.a (Ljava/lang/reflect/GenericArrayType;)Ljava/lang/reflect/Type;]
      [55] areturn
      [56] aload_1 v1
      [57] instanceof #19
        + Class [java/lang/reflect/WildcardType]
      [60] ifeq +12 (target=72)
      [63] aload_0 v0
      [64] aload_1 v1
      [65] checkcast #19
        + Class [java/lang/reflect/WildcardType]
      [68] invokespecial #27
        + Methodref [a/a/a/f/e.a (Ljava/lang/reflect/WildcardType;)Ljava/lang/reflect/WildcardType;]
      [71] areturn
      [72] aload_1 v1
      [73] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [24] Var: ..., Stack: (empty)
        - [40] Var: ..., Stack: (empty)
        - [56] Var: ..., Stack: (empty)
        - [72] Var: ..., Stack: (empty)
  + Method:       a([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;
    Access flags: 0x2
      = private java.lang.reflect.Type[] a(java.lang.reflect.Type[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 32, locals = 4, stack = 5):
      [0] aload_1 v1
      [1] arraylength
      [2] anewarray #17
        + Class [java/lang/reflect/Type]
      [5] astore_2 v2
      [6] iconst_0
      [7] istore_3 v3
      [8] iload_3 v3
      [9] aload_1 v1
      [10] arraylength
      [11] ificmpge +19 (target=30)
      [14] aload_2 v2
      [15] iload_3 v3
      [16] aload_0 v0
      [17] aload_1 v1
      [18] iload_3 v3
      [19] aaload
      [20] invokevirtual #31
        + Methodref [a/a/a/f/e.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [23] aastore
      [24] iinc v3, 1
      [27] goto -19 (target=8)
      [30] aload_2 v2
      [31] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [8] Var: ...[a:[Ljava/lang/reflect/Type;][i], Stack: (empty)
        - [30] Var: -1, Stack: (empty)
  + Method:       a(Ljava/lang/reflect/WildcardType;)Ljava/lang/reflect/WildcardType;
    Access flags: 0x2
      = private java.lang.reflect.WildcardType a(java.lang.reflect.WildcardType)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 32, locals = 4, stack = 5):
      [0] aload_1 v1
      [1] invokeinterface #54
        + InterfaceMethodref [java/lang/reflect/WildcardType.getLowerBounds ()[Ljava/lang/reflect/Type;]
      [6] astore_2 v2
      [7] aload_1 v1
      [8] invokeinterface #55
        + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
      [13] astore_3 v3
      [14] new #4
        + Class [a/a/a/f/ao]
      [17] dup
      [18] aload_0 v0
      [19] aload_2 v2
      [20] invokespecial #29
        + Methodref [a/a/a/f/e.a ([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;]
      [23] aload_0 v0
      [24] aload_3 v3
      [25] invokespecial #29
        + Methodref [a/a/a/f/e.a ([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;]
      [28] invokespecial #22
        + Methodref [a/a/a/f/ao.<init> ([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V]
      [31] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/GenericArrayType;)Ljava/lang/reflect/Type;
    Access flags: 0x2
      = private java.lang.reflect.Type a(java.lang.reflect.GenericArrayType)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 4, stack = 2):
      [0] aload_1 v1
      [1] invokeinterface #50
        + InterfaceMethodref [java/lang/reflect/GenericArrayType.getGenericComponentType ()Ljava/lang/reflect/Type;]
      [6] astore_2 v2
      [7] aload_0 v0
      [8] aload_2 v2
      [9] invokevirtual #31
        + Methodref [a/a/a/f/e.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [12] astore_3 v3
      [13] aload_3 v3
      [14] invokestatic #39
        + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [17] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/ParameterizedType;
    Access flags: 0x2
      = private java.lang.reflect.ParameterizedType a(java.lang.reflect.ParameterizedType)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 61, locals = 7, stack = 3):
      [0] aload_1 v1
      [1] invokeinterface #52
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getOwnerType ()Ljava/lang/reflect/Type;]
      [6] astore_2 v2
      [7] aload_2 v2
      [8] ifnonnull +7 (target=15)
      [11] aconst_null
      [12] goto +8 (target=20)
      [15] aload_0 v0
      [16] aload_2 v2
      [17] invokevirtual #31
        + Methodref [a/a/a/f/e.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [20] astore_3 v3
      [21] aload_0 v0
      [22] aload_1 v1
      [23] invokeinterface #53
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getRawType ()Ljava/lang/reflect/Type;]
      [28] invokevirtual #31
        + Methodref [a/a/a/f/e.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [31] astore v4
      [33] aload_1 v1
      [34] invokeinterface #51
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getActualTypeArguments ()[Ljava/lang/reflect/Type;]
      [39] astore v5
      [41] aload_0 v0
      [42] aload v5
      [44] invokespecial #29
        + Methodref [a/a/a/f/e.a ([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;]
      [47] astore v6
      [49] aload_3 v3
      [50] aload v4
      [52] checkcast #10
        + Class [java/lang/Class]
      [55] aload v6
      [57] invokestatic #40
        + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;]
      [60] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [15] Var: ...[a:java/lang/reflect/Type], Stack: (empty)
        - [20] Var: ..., Stack: [a:java/lang/reflect/Type]
  + Method:       b(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0xa
      = private static java.lang.Object b(java.lang.Class,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 41, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #41
        + Methodref [java/lang/Class.cast (Ljava/lang/Object;)Ljava/lang/Object;]
      [5] areturn
      [6] astore_2 v2
      [7] new #12
        + Class [java/lang/IllegalArgumentException]
      [10] dup
      [11] new #14
        + Class [java/lang/StringBuilder]
      [14] dup
      [15] invokespecial #46
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [18] aload_1 v1
      [19] invokevirtual #47
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [22] ldc #1
        + String [ is not a ]
      [24] invokevirtual #48
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [27] aload_0 v0
      [28] invokevirtual #42
        + Methodref [java/lang/Class.getSimpleName ()Ljava/lang/String;]
      [31] invokevirtual #48
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [34] invokevirtual #49
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [37] invokespecial #43
        + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
      [40] athrow
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 5: 6):
      + Class [java/lang/ClassCastException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [6] Var: ..., Stack: [a:java/lang/ClassCastException]
  + Method:       a(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1008
      = static synthetic java.lang.Object a(java.lang.Class,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #30
        + Methodref [a/a/a/f/e.b (Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V
    Access flags: 0x1008
      = static synthetic void a(java.util.Map,java.lang.reflect.Type,java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokestatic #32
        + Methodref [a/a/a/f/e.b (Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/f/h;La/a/a/f/f;)V
    Access flags: 0x1000
      = synthetic e(a.a.a.f.h,a.a.a.f.f)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #24
        + Methodref [a/a/a/f/e.<init> (La/a/a/f/h;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/f/e;[Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;
    Access flags: 0x1008
      = static synthetic java.lang.reflect.Type[] a(a.a.a.f.e,java.lang.reflect.Type[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #29
        + Methodref [a/a/a/f/e.a ([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/f
  Superclass:    a/a/a/f/x
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.f extends a.a.a.f.x

Interfaces (count = 0):

Constant Pool (count = 116):
  + String [%s is not an array type.]
  + String [%s not compatible with %s]
  + String [Incompatible type: %s vs. %s]
  + String [Inconsistent raw type: %s vs. %s]
  + String [No type mapping from ]
  + Class [[Ljava/lang/reflect/Type;]
  + Class [a/a/a/a/o]
  + Class [a/a/a/f/e]
  + Class [a/a/a/f/f]
  + Class [a/a/a/f/j]
  + Class [a/a/a/f/x]
  + Class [a/a/a/f/y]
  + Class [java/lang/IllegalArgumentException]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/reflect/GenericArrayType]
  + Class [java/lang/reflect/ParameterizedType]
  + Class [java/lang/reflect/Type]
  + Class [java/lang/reflect/WildcardType]
  + Class [java/util/Map]
  + Fieldref [a/a/a/f/f.a Ljava/util/Map;]
  + Fieldref [a/a/a/f/f.b Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Methodref [a/a/a/f/e.a (Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/f/e.a (Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/j.<init> (Ljava/lang/reflect/TypeVariable;)V]
  + Methodref [a/a/a/f/x.<init> ()V]
  + Methodref [a/a/a/f/y.e (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + InterfaceMethodref [java/lang/reflect/GenericArrayType.getGenericComponentType ()Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getActualTypeArguments ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getRawType ()Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/WildcardType.getLowerBounds ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (Ljava/lang/reflect/TypeVariable;)V]
  + NameAndType [a (Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V]
  + NameAndType [a (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + NameAndType [a Ljava/util/Map;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b Ljava/lang/reflect/Type;]
  + NameAndType [e (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [getActualTypeArguments ()[Ljava/lang/reflect/Type;]
  + NameAndType [getGenericComponentType ()Ljava/lang/reflect/Type;]
  + NameAndType [getLowerBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [getRawType ()Ljava/lang/reflect/Type;]
  + NameAndType [getUpperBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [%s is not an array type.]
  + Utf8 [%s not compatible with %s]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/reflect/Type;]
  + Utf8 [()V]
  + Utf8 [()[Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/Class;)V]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/reflect/GenericArrayType;)V]
  + Utf8 [(Ljava/lang/reflect/ParameterizedType;)V]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/reflect/TypeVariable;)V]
  + Utf8 [(Ljava/lang/reflect/WildcardType;)V]
  + Utf8 [(Ljava/util/Map;Ljava/lang/reflect/Type;)V]
  + Utf8 [(Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V]
  + Utf8 [(ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Incompatible type: %s vs. %s]
  + Utf8 [Inconsistent raw type: %s vs. %s]
  + Utf8 [Ljava/lang/reflect/Type;]
  + Utf8 [Ljava/util/Map;]
  + Utf8 [No type mapping from ]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/reflect/Type;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/f/e]
  + Utf8 [a/a/a/f/f]
  + Utf8 [a/a/a/f/j]
  + Utf8 [a/a/a/f/x]
  + Utf8 [a/a/a/f/y]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [getActualTypeArguments]
  + Utf8 [getGenericComponentType]
  + Utf8 [getLowerBounds]
  + Utf8 [getRawType]
  + Utf8 [getUpperBounds]
  + Utf8 [java/lang/IllegalArgumentException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/reflect/GenericArrayType]
  + Utf8 [java/lang/reflect/ParameterizedType]
  + Utf8 [java/lang/reflect/Type]
  + Utf8 [java/lang/reflect/WildcardType]
  + Utf8 [java/util/Map]
  + Utf8 [put]
  + Utf8 [toString]

Fields (count = 2):
  + Field:        a Ljava/util/Map;
    Access flags: 0x1010
      = final synthetic java.util.Map a
  + Field:        b Ljava/lang/reflect/Type;
    Access flags: 0x1010
      = final synthetic java.lang.reflect.Type b

Methods (count = 6):
  - Method:       <init>(Ljava/util/Map;Ljava/lang/reflect/Type;)V
    Access flags: 0x0
      = f(java.util.Map,java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #21
        + Fieldref [a/a/a/f/f.a Ljava/util/Map;]
      [5] aload_0 v0
      [6] aload_2 v2
      [7] putfield #22
        + Fieldref [a/a/a/f/f.b Ljava/lang/reflect/Type;]
      [10] aload_0 v0
      [11] invokespecial #27
        + Methodref [a/a/a/f/x.<init> ()V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/TypeVariable;)V
    Access flags: 0x0
      = void a(java.lang.reflect.TypeVariable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] getfield #21
        + Fieldref [a/a/a/f/f.a Ljava/util/Map;]
      [4] new #10
        + Class [a/a/a/f/j]
      [7] dup
      [8] aload_1 v1
      [9] invokespecial #26
        + Methodref [a/a/a/f/j.<init> (Ljava/lang/reflect/TypeVariable;)V]
      [12] aload_0 v0
      [13] getfield #22
        + Fieldref [a/a/a/f/f.b Ljava/lang/reflect/Type;]
      [16] invokeinterface #40
        + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [21] pop
      [22] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/WildcardType;)V
    Access flags: 0x0
      = void a(java.lang.reflect.WildcardType)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 153, locals = 8, stack = 6):
      [0] ldc #19
        + Class [java/lang/reflect/WildcardType]
      [2] aload_0 v0
      [3] getfield #22
        + Fieldref [a/a/a/f/f.b Ljava/lang/reflect/Type;]
      [6] invokestatic #24
        + Methodref [a/a/a/f/e.a (Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;]
      [9] checkcast #19
        + Class [java/lang/reflect/WildcardType]
      [12] astore_2 v2
      [13] aload_1 v1
      [14] invokeinterface #39
        + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
      [19] astore_3 v3
      [20] aload_2 v2
      [21] invokeinterface #39
        + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
      [26] astore v4
      [28] aload_1 v1
      [29] invokeinterface #38
        + InterfaceMethodref [java/lang/reflect/WildcardType.getLowerBounds ()[Ljava/lang/reflect/Type;]
      [34] astore v5
      [36] aload_2 v2
      [37] invokeinterface #38
        + InterfaceMethodref [java/lang/reflect/WildcardType.getLowerBounds ()[Ljava/lang/reflect/Type;]
      [42] astore v6
      [44] aload_3 v3
      [45] arraylength
      [46] aload v4
      [48] arraylength
      [49] ificmpne +16 (target=65)
      [52] aload v5
      [54] arraylength
      [55] aload v6
      [57] arraylength
      [58] ificmpne +7 (target=65)
      [61] iconst_1
      [62] goto +4 (target=66)
      [65] iconst_0
      [66] ldc #3
        + String [Incompatible type: %s vs. %s]
      [68] iconst_2
      [69] anewarray #14
        + Class [java/lang/Object]
      [72] dup
      [73] iconst_0
      [74] aload_1 v1
      [75] aastore
      [76] dup
      [77] iconst_1
      [78] aload_0 v0
      [79] getfield #22
        + Fieldref [a/a/a/f/f.b Ljava/lang/reflect/Type;]
      [82] aastore
      [83] invokestatic #23
        + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
      [86] iconst_0
      [87] istore v7
      [89] iload v7
      [91] aload_3 v3
      [92] arraylength
      [93] ificmpge +25 (target=118)
      [96] aload_0 v0
      [97] getfield #21
        + Fieldref [a/a/a/f/f.a Ljava/util/Map;]
      [100] aload_3 v3
      [101] iload v7
      [103] aaload
      [104] aload v4
      [106] iload v7
      [108] aaload
      [109] invokestatic #25
        + Methodref [a/a/a/f/e.a (Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V]
      [112] iinc v7, 1
      [115] goto -26 (target=89)
      [118] iconst_0
      [119] istore v7
      [121] iload v7
      [123] aload v5
      [125] arraylength
      [126] ificmpge +26 (target=152)
      [129] aload_0 v0
      [130] getfield #21
        + Fieldref [a/a/a/f/f.a Ljava/util/Map;]
      [133] aload v5
      [135] iload v7
      [137] aaload
      [138] aload v6
      [140] iload v7
      [142] aaload
      [143] invokestatic #25
        + Methodref [a/a/a/f/e.a (Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V]
      [146] iinc v7, 1
      [149] goto -28 (target=121)
      [152] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [65] Var: [a:a/a/a/f/f][a:java/lang/reflect/WildcardType][a:java/lang/reflect/WildcardType][a:[Ljava/lang/reflect/Type;][a:[Ljava/lang/reflect/Type;][a:[Ljava/lang/reflect/Type;][a:[Ljava/lang/reflect/Type;], Stack: 
        - [66] Var: ..., Stack: [i]
        - [89] Var: ...[i], Stack: (empty)
        - [118] Var: -1, Stack: (empty)
        - [121] Var: ...[i], Stack: (empty)
        - [152] Var: -1, Stack: (empty)
  + Method:       a(Ljava/lang/reflect/ParameterizedType;)V
    Access flags: 0x0
      = void a(java.lang.reflect.ParameterizedType)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 126, locals = 6, stack = 6):
      [0] ldc #17
        + Class [java/lang/reflect/ParameterizedType]
      [2] aload_0 v0
      [3] getfield #22
        + Fieldref [a/a/a/f/f.b Ljava/lang/reflect/Type;]
      [6] invokestatic #24
        + Methodref [a/a/a/f/e.a (Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;]
      [9] checkcast #17
        + Class [java/lang/reflect/ParameterizedType]
      [12] astore_2 v2
      [13] aload_1 v1
      [14] invokeinterface #37
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getRawType ()Ljava/lang/reflect/Type;]
      [19] aload_2 v2
      [20] invokeinterface #37
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getRawType ()Ljava/lang/reflect/Type;]
      [25] invokevirtual #30
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [28] ldc #4
        + String [Inconsistent raw type: %s vs. %s]
      [30] iconst_2
      [31] anewarray #14
        + Class [java/lang/Object]
      [34] dup
      [35] iconst_0
      [36] aload_1 v1
      [37] aastore
      [38] dup
      [39] iconst_1
      [40] aload_0 v0
      [41] getfield #22
        + Fieldref [a/a/a/f/f.b Ljava/lang/reflect/Type;]
      [44] aastore
      [45] invokestatic #23
        + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
      [48] aload_1 v1
      [49] invokeinterface #36
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getActualTypeArguments ()[Ljava/lang/reflect/Type;]
      [54] astore_3 v3
      [55] aload_2 v2
      [56] invokeinterface #36
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getActualTypeArguments ()[Ljava/lang/reflect/Type;]
      [61] astore v4
      [63] aload_3 v3
      [64] arraylength
      [65] aload v4
      [67] arraylength
      [68] ificmpne +7 (target=75)
      [71] iconst_1
      [72] goto +4 (target=76)
      [75] iconst_0
      [76] ldc #2
        + String [%s not compatible with %s]
      [78] iconst_2
      [79] anewarray #14
        + Class [java/lang/Object]
      [82] dup
      [83] iconst_0
      [84] aload_1 v1
      [85] aastore
      [86] dup
      [87] iconst_1
      [88] aload_2 v2
      [89] aastore
      [90] invokestatic #23
        + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
      [93] iconst_0
      [94] istore v5
      [96] iload v5
      [98] aload_3 v3
      [99] arraylength
      [100] ificmpge +25 (target=125)
      [103] aload_0 v0
      [104] getfield #21
        + Fieldref [a/a/a/f/f.a Ljava/util/Map;]
      [107] aload_3 v3
      [108] iload v5
      [110] aaload
      [111] aload v4
      [113] iload v5
      [115] aaload
      [116] invokestatic #25
        + Methodref [a/a/a/f/e.a (Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V]
      [119] iinc v5, 1
      [122] goto -26 (target=96)
      [125] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [75] Var: ...[a:java/lang/reflect/ParameterizedType][a:[Ljava/lang/reflect/Type;][a:[Ljava/lang/reflect/Type;], Stack: (empty)
        - [76] Var: ..., Stack: [i]
        - [96] Var: ...[i], Stack: (empty)
        - [125] Var: -1, Stack: (empty)
  + Method:       a(Ljava/lang/reflect/GenericArrayType;)V
    Access flags: 0x0
      = void a(java.lang.reflect.GenericArrayType)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 48, locals = 3, stack = 6):
      [0] aload_0 v0
      [1] getfield #22
        + Fieldref [a/a/a/f/f.b Ljava/lang/reflect/Type;]
      [4] invokestatic #28
        + Methodref [a/a/a/f/y.e (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [7] astore_2 v2
      [8] aload_2 v2
      [9] ifnull +7 (target=16)
      [12] iconst_1
      [13] goto +4 (target=17)
      [16] iconst_0
      [17] ldc #1
        + String [%s is not an array type.]
      [19] iconst_1
      [20] anewarray #14
        + Class [java/lang/Object]
      [23] dup
      [24] iconst_0
      [25] aload_0 v0
      [26] getfield #22
        + Fieldref [a/a/a/f/f.b Ljava/lang/reflect/Type;]
      [29] aastore
      [30] invokestatic #23
        + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
      [33] aload_0 v0
      [34] getfield #21
        + Fieldref [a/a/a/f/f.a Ljava/util/Map;]
      [37] aload_1 v1
      [38] invokeinterface #35
        + InterfaceMethodref [java/lang/reflect/GenericArrayType.getGenericComponentType ()Ljava/lang/reflect/Type;]
      [43] aload_2 v2
      [44] invokestatic #25
        + Methodref [a/a/a/f/e.a (Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V]
      [47] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [16] Var: ...[a:java/lang/reflect/Type], Stack: (empty)
        - [17] Var: ..., Stack: [i]
  + Method:       a(Ljava/lang/Class;)V
    Access flags: 0x0
      = void a(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 27, locals = 2, stack = 4):
      [0] new #13
        + Class [java/lang/IllegalArgumentException]
      [3] dup
      [4] new #15
        + Class [java/lang/StringBuilder]
      [7] dup
      [8] invokespecial #31
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [11] ldc #5
        + String [No type mapping from ]
      [13] invokevirtual #33
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [16] aload_1 v1
      [17] invokevirtual #32
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [20] invokevirtual #34
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [23] invokespecial #29
        + Methodref [java/lang/IllegalArgumentException.<init> (Ljava/lang/String;)V]
      [26] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/g
  Superclass:    a/a/a/f/x
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.g extends a.a.a.f.x

Interfaces (count = 0):

Constant Pool (count = 124):
  + Class [[Ljava/lang/reflect/Type;]
  + Class [[Ljava/lang/reflect/TypeVariable;]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/bs]
  + Class [a/a/a/c/ct]
  + Class [a/a/a/f/g]
  + Class [a/a/a/f/j]
  + Class [a/a/a/f/k]
  + Class [a/a/a/f/x]
  + Class [java/lang/Class]
  + Class [java/lang/reflect/ParameterizedType]
  + Class [java/lang/reflect/Type]
  + Class [java/lang/reflect/TypeVariable]
  + Class [java/lang/reflect/WildcardType]
  + Class [java/util/Map]
  + Fieldref [a/a/a/f/g.a La/a/a/f/k;]
  + Fieldref [a/a/a/f/g.b Ljava/util/Map;]
  + Methodref [a/a/a/a/o.b (Z)V]
  + Methodref [a/a/a/c/bs.a (Ljava/util/Map;)La/a/a/c/bs;]
  + Methodref [a/a/a/c/ct.c ()Ljava/util/HashMap;]
  + Methodref [a/a/a/f/g.<init> ()V]
  + Methodref [a/a/a/f/g.a (La/a/a/f/j;Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/g.a ([Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/j.<init> (Ljava/lang/reflect/TypeVariable;)V]
  + Methodref [a/a/a/f/j.a (Ljava/lang/reflect/Type;)Ljava/lang/Object;]
  + Methodref [a/a/a/f/j.b (Ljava/lang/reflect/Type;)Z]
  + Methodref [a/a/a/f/k.<init> (La/a/a/f/f;)V]
  + Methodref [a/a/a/f/k.a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/x.<init> ()V]
  + Methodref [java/lang/Class.getGenericInterfaces ()[Ljava/lang/reflect/Type;]
  + Methodref [java/lang/Class.getGenericSuperclass ()Ljava/lang/reflect/Type;]
  + Methodref [java/lang/Class.getTypeParameters ()[Ljava/lang/reflect/TypeVariable;]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getActualTypeArguments ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getOwnerType ()Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getRawType ()Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/TypeVariable.getBounds ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/util/Map.containsKey (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/f/f;)V]
  + NameAndType [<init> (Ljava/lang/reflect/TypeVariable;)V]
  + NameAndType [a (La/a/a/f/j;Ljava/lang/reflect/Type;)V]
  + NameAndType [a (Ljava/lang/reflect/Type;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + NameAndType [a (Ljava/util/Map;)La/a/a/c/bs;]
  + NameAndType [a ([Ljava/lang/reflect/Type;)V]
  + NameAndType [a La/a/a/f/k;]
  + NameAndType [b (Ljava/lang/reflect/Type;)Z]
  + NameAndType [b (Z)V]
  + NameAndType [b Ljava/util/Map;]
  + NameAndType [c ()Ljava/util/HashMap;]
  + NameAndType [containsKey (Ljava/lang/Object;)Z]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [getActualTypeArguments ()[Ljava/lang/reflect/Type;]
  + NameAndType [getBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [getGenericInterfaces ()[Ljava/lang/reflect/Type;]
  + NameAndType [getGenericSuperclass ()Ljava/lang/reflect/Type;]
  + NameAndType [getOwnerType ()Ljava/lang/reflect/Type;]
  + NameAndType [getRawType ()Ljava/lang/reflect/Type;]
  + NameAndType [getTypeParameters ()[Ljava/lang/reflect/TypeVariable;]
  + NameAndType [getUpperBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [remove (Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/reflect/Type;]
  + Utf8 [()Ljava/util/HashMap;]
  + Utf8 [()V]
  + Utf8 [()[Ljava/lang/reflect/Type;]
  + Utf8 [()[Ljava/lang/reflect/TypeVariable;]
  + Utf8 [(La/a/a/f/f;)V]
  + Utf8 [(La/a/a/f/j;Ljava/lang/reflect/Type;)V]
  + Utf8 [(Ljava/lang/Class;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/reflect/ParameterizedType;)V]
  + Utf8 [(Ljava/lang/reflect/Type;)La/a/a/c/bs;]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/reflect/Type;)Z]
  + Utf8 [(Ljava/lang/reflect/TypeVariable;)V]
  + Utf8 [(Ljava/lang/reflect/WildcardType;)V]
  + Utf8 [(Ljava/util/Map;)La/a/a/c/bs;]
  + Utf8 [(Z)V]
  + Utf8 [([Ljava/lang/reflect/Type;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/f/k;]
  + Utf8 [Ljava/util/Map;]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/reflect/Type;]
  + Utf8 [[Ljava/lang/reflect/TypeVariable;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/bs]
  + Utf8 [a/a/a/c/ct]
  + Utf8 [a/a/a/f/g]
  + Utf8 [a/a/a/f/j]
  + Utf8 [a/a/a/f/k]
  + Utf8 [a/a/a/f/x]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [containsKey]
  + Utf8 [get]
  + Utf8 [getActualTypeArguments]
  + Utf8 [getBounds]
  + Utf8 [getGenericInterfaces]
  + Utf8 [getGenericSuperclass]
  + Utf8 [getOwnerType]
  + Utf8 [getRawType]
  + Utf8 [getTypeParameters]
  + Utf8 [getUpperBounds]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/reflect/ParameterizedType]
  + Utf8 [java/lang/reflect/Type]
  + Utf8 [java/lang/reflect/TypeVariable]
  + Utf8 [java/lang/reflect/WildcardType]
  + Utf8 [java/util/Map]
  + Utf8 [put]
  + Utf8 [remove]

Fields (count = 2):
  + Field:        a La/a/a/f/k;
    Access flags: 0x1a
      = private static final a.a.a.f.k a
  + Field:        b Ljava/util/Map;
    Access flags: 0x12
      = private final java.util.Map b

Methods (count = 8):
  - Method:       <init>()V
    Access flags: 0x2
      = private g()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #29
        + Methodref [a/a/a/f/x.<init> ()V]
      [4] aload_0 v0
      [5] invokestatic #20
        + Methodref [a/a/a/c/ct.c ()Ljava/util/HashMap;]
      [8] putfield #17
        + Fieldref [a/a/a/f/g.b Ljava/util/Map;]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/Type;)La/a/a/c/bs;
    Access flags: 0x8
      = static a.a.a.c.bs a(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 34, locals = 2, stack = 6):
      [0] new #6
        + Class [a/a/a/f/g]
      [3] dup
      [4] invokespecial #21
        + Methodref [a/a/a/f/g.<init> ()V]
      [7] astore_1 v1
      [8] aload_1 v1
      [9] iconst_1
      [10] anewarray #12
        + Class [java/lang/reflect/Type]
      [13] dup
      [14] iconst_0
      [15] getstatic #16
        + Fieldref [a/a/a/f/g.a La/a/a/f/k;]
      [18] aload_0 v0
      [19] invokevirtual #28
        + Methodref [a/a/a/f/k.a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [22] aastore
      [23] invokevirtual #23
        + Methodref [a/a/a/f/g.a ([Ljava/lang/reflect/Type;)V]
      [26] aload_1 v1
      [27] getfield #17
        + Fieldref [a/a/a/f/g.b Ljava/util/Map;]
      [30] invokestatic #19
        + Methodref [a/a/a/c/bs.a (Ljava/util/Map;)La/a/a/c/bs;]
      [33] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Class;)V
    Access flags: 0x0
      = void a(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 2, stack = 5):
      [0] aload_0 v0
      [1] iconst_1
      [2] anewarray #12
        + Class [java/lang/reflect/Type]
      [5] dup
      [6] iconst_0
      [7] aload_1 v1
      [8] invokevirtual #31
        + Methodref [java/lang/Class.getGenericSuperclass ()Ljava/lang/reflect/Type;]
      [11] aastore
      [12] invokevirtual #23
        + Methodref [a/a/a/f/g.a ([Ljava/lang/reflect/Type;)V]
      [15] aload_0 v0
      [16] aload_1 v1
      [17] invokevirtual #30
        + Methodref [java/lang/Class.getGenericInterfaces ()[Ljava/lang/reflect/Type;]
      [20] invokevirtual #23
        + Methodref [a/a/a/f/g.a ([Ljava/lang/reflect/Type;)V]
      [23] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/ParameterizedType;)V
    Access flags: 0x0
      = void a(java.lang.reflect.ParameterizedType)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 105, locals = 6, stack = 5):
      [0] aload_1 v1
      [1] invokeinterface #35
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getRawType ()Ljava/lang/reflect/Type;]
      [6] checkcast #10
        + Class [java/lang/Class]
      [9] astore_2 v2
      [10] aload_2 v2
      [11] invokevirtual #32
        + Methodref [java/lang/Class.getTypeParameters ()[Ljava/lang/reflect/TypeVariable;]
      [14] astore_3 v3
      [15] aload_1 v1
      [16] invokeinterface #33
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getActualTypeArguments ()[Ljava/lang/reflect/Type;]
      [21] astore v4
      [23] aload_3 v3
      [24] arraylength
      [25] aload v4
      [27] arraylength
      [28] ificmpne +7 (target=35)
      [31] iconst_1
      [32] goto +4 (target=36)
      [35] iconst_0
      [36] invokestatic #18
        + Methodref [a/a/a/a/o.b (Z)V]
      [39] iconst_0
      [40] istore v5
      [42] iload v5
      [44] aload_3 v3
      [45] arraylength
      [46] ificmpge +29 (target=75)
      [49] aload_0 v0
      [50] new #7
        + Class [a/a/a/f/j]
      [53] dup
      [54] aload_3 v3
      [55] iload v5
      [57] aaload
      [58] invokespecial #24
        + Methodref [a/a/a/f/j.<init> (Ljava/lang/reflect/TypeVariable;)V]
      [61] aload v4
      [63] iload v5
      [65] aaload
      [66] invokespecial #22
        + Methodref [a/a/a/f/g.a (La/a/a/f/j;Ljava/lang/reflect/Type;)V]
      [69] iinc v5, 1
      [72] goto -30 (target=42)
      [75] aload_0 v0
      [76] iconst_1
      [77] anewarray #12
        + Class [java/lang/reflect/Type]
      [80] dup
      [81] iconst_0
      [82] aload_2 v2
      [83] aastore
      [84] invokevirtual #23
        + Methodref [a/a/a/f/g.a ([Ljava/lang/reflect/Type;)V]
      [87] aload_0 v0
      [88] iconst_1
      [89] anewarray #12
        + Class [java/lang/reflect/Type]
      [92] dup
      [93] iconst_0
      [94] aload_1 v1
      [95] invokeinterface #34
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getOwnerType ()Ljava/lang/reflect/Type;]
      [100] aastore
      [101] invokevirtual #23
        + Methodref [a/a/a/f/g.a ([Ljava/lang/reflect/Type;)V]
      [104] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [35] Var: ...[a:java/lang/Class][a:[Ljava/lang/reflect/TypeVariable;][a:[Ljava/lang/reflect/Type;], Stack: (empty)
        - [36] Var: ..., Stack: [i]
        - [42] Var: ...[i], Stack: (empty)
        - [75] Var: -1, Stack: (empty)
  + Method:       a(Ljava/lang/reflect/TypeVariable;)V
    Access flags: 0x0
      = void a(java.lang.reflect.TypeVariable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokeinterface #36
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getBounds ()[Ljava/lang/reflect/Type;]
      [7] invokevirtual #23
        + Methodref [a/a/a/f/g.a ([Ljava/lang/reflect/Type;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/WildcardType;)V
    Access flags: 0x0
      = void a(java.lang.reflect.WildcardType)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokeinterface #37
        + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
      [7] invokevirtual #23
        + Methodref [a/a/a/f/g.a ([Ljava/lang/reflect/Type;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/f/j;Ljava/lang/reflect/Type;)V
    Access flags: 0x2
      = private void a(a.a.a.f.j,java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 92, locals = 5, stack = 3):
      [0] aload_0 v0
      [1] getfield #17
        + Fieldref [a/a/a/f/g.b Ljava/util/Map;]
      [4] aload_1 v1
      [5] invokeinterface #38
        + InterfaceMethodref [java/util/Map.containsKey (Ljava/lang/Object;)Z]
      [10] ifeq +4 (target=14)
      [13] return
      [14] aload_2 v2
      [15] astore_3 v3
      [16] aload_3 v3
      [17] ifnull +62 (target=79)
      [20] aload_1 v1
      [21] aload_3 v3
      [22] invokevirtual #26
        + Methodref [a/a/a/f/j.b (Ljava/lang/reflect/Type;)Z]
      [25] ifeq +34 (target=59)
      [28] aload_2 v2
      [29] astore v4
      [31] aload v4
      [33] ifnull +25 (target=58)
      [36] aload_0 v0
      [37] getfield #17
        + Fieldref [a/a/a/f/g.b Ljava/util/Map;]
      [40] aload v4
      [42] invokestatic #25
        + Methodref [a/a/a/f/j.a (Ljava/lang/reflect/Type;)Ljava/lang/Object;]
      [45] invokeinterface #41
        + InterfaceMethodref [java/util/Map.remove (Ljava/lang/Object;)Ljava/lang/Object;]
      [50] checkcast #12
        + Class [java/lang/reflect/Type]
      [53] astore v4
      [55] goto -24 (target=31)
      [58] return
      [59] aload_0 v0
      [60] getfield #17
        + Fieldref [a/a/a/f/g.b Ljava/util/Map;]
      [63] aload_3 v3
      [64] invokestatic #25
        + Methodref [a/a/a/f/j.a (Ljava/lang/reflect/Type;)Ljava/lang/Object;]
      [67] invokeinterface #39
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [72] checkcast #12
        + Class [java/lang/reflect/Type]
      [75] astore_3 v3
      [76] goto -60 (target=16)
      [79] aload_0 v0
      [80] getfield #17
        + Fieldref [a/a/a/f/g.b Ljava/util/Map;]
      [83] aload_1 v1
      [84] aload_2 v2
      [85] invokeinterface #40
        + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [90] pop
      [91] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [14] Var: ..., Stack: (empty)
        - [16] Var: ...[a:java/lang/reflect/Type], Stack: (empty)
        - [31] Var: ...[a:java/lang/reflect/Type], Stack: (empty)
        - [58] Var: -1, Stack: (empty)
        - [59] Var: ..., Stack: (empty)
        - [79] Var: -1, Stack: (empty)
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 0, stack = 3):
      [0] new #8
        + Class [a/a/a/f/k]
      [3] dup
      [4] aconst_null
      [5] invokespecial #27
        + Methodref [a/a/a/f/k.<init> (La/a/a/f/f;)V]
      [8] putstatic #16
        + Fieldref [a/a/a/f/g.a La/a/a/f/k;]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/h
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.f.h extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 143):
  + String [Type variable %s bound to itself]
  + Class [[Ljava/lang/reflect/Type;]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/bs]
  + Class [a/a/a/c/bt]
  + Class [a/a/a/f/al]
  + Class [a/a/a/f/e]
  + Class [a/a/a/f/h]
  + Class [a/a/a/f/i]
  + Class [a/a/a/f/j]
  + Class [a/a/a/f/y]
  + Class [java/lang/Object]
  + Class [java/lang/reflect/Type]
  + Class [java/lang/reflect/TypeVariable]
  + Class [java/util/Arrays]
  + Class [java/util/Iterator]
  + Class [java/util/Map]
  + Class [java/util/Map$Entry]
  + Class [java/util/Set]
  + Fieldref [a/a/a/f/al.a Z]
  + Fieldref [a/a/a/f/h.a La/a/a/c/bs;]
  + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Methodref [a/a/a/c/bs.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/bs.i ()La/a/a/c/bs;]
  + Methodref [a/a/a/c/bs.j ()La/a/a/c/bt;]
  + Methodref [a/a/a/c/bt.a ()La/a/a/c/bs;]
  + Methodref [a/a/a/c/bt.a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bt;]
  + Methodref [a/a/a/c/bt.a (Ljava/util/Map;)La/a/a/c/bt;]
  + Methodref [a/a/a/f/e.<init> (La/a/a/f/h;La/a/a/f/f;)V]
  + Methodref [a/a/a/f/e.a (La/a/a/f/e;[Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/e.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/h.<init> (La/a/a/c/bs;)V]
  + Methodref [a/a/a/f/h.a (Ljava/lang/reflect/TypeVariable;La/a/a/f/h;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/i.<init> (La/a/a/f/h;Ljava/lang/reflect/TypeVariable;La/a/a/f/h;)V]
  + Methodref [a/a/a/f/j.<init> (Ljava/lang/reflect/TypeVariable;)V]
  + Methodref [a/a/a/f/j.b (Ljava/lang/reflect/Type;)Z]
  + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/util/Arrays.equals ([Ljava/lang/Object;[Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/lang/reflect/TypeVariable.getBounds ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/TypeVariable.getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
  + InterfaceMethodref [java/lang/reflect/TypeVariable.getName ()Ljava/lang/String;]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/bs;)V]
  + NameAndType [<init> (La/a/a/f/h;La/a/a/f/f;)V]
  + NameAndType [<init> (La/a/a/f/h;Ljava/lang/reflect/TypeVariable;La/a/a/f/h;)V]
  + NameAndType [<init> (Ljava/lang/reflect/TypeVariable;)V]
  + NameAndType [a ()La/a/a/c/bs;]
  + NameAndType [a (La/a/a/f/e;[Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bt;]
  + NameAndType [a (Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;]
  + NameAndType [a (Ljava/lang/reflect/TypeVariable;La/a/a/f/h;)Ljava/lang/reflect/Type;]
  + NameAndType [a (Ljava/util/Map;)La/a/a/c/bt;]
  + NameAndType [a (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + NameAndType [a La/a/a/c/bs;]
  + NameAndType [a Z]
  + NameAndType [b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + NameAndType [b (Ljava/lang/reflect/Type;)Z]
  + NameAndType [entrySet ()Ljava/util/Set;]
  + NameAndType [equals ([Ljava/lang/Object;[Ljava/lang/Object;)Z]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [getBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
  + NameAndType [getKey ()Ljava/lang/Object;]
  + NameAndType [getName ()Ljava/lang/String;]
  + NameAndType [getValue ()Ljava/lang/Object;]
  + NameAndType [hasNext ()Z]
  + NameAndType [i ()La/a/a/c/bs;]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [j ()La/a/a/c/bt;]
  + NameAndType [next ()Ljava/lang/Object;]
  + Utf8 [()La/a/a/c/bs;]
  + Utf8 [()La/a/a/c/bt;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/reflect/GenericDeclaration;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [()[Ljava/lang/reflect/Type;]
  + Utf8 [(La/a/a/c/bs;)V]
  + Utf8 [(La/a/a/f/e;[Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;]
  + Utf8 [(La/a/a/f/h;La/a/a/f/f;)V]
  + Utf8 [(La/a/a/f/h;Ljava/lang/reflect/TypeVariable;La/a/a/f/h;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bt;]
  + Utf8 [(Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/reflect/Type;)Z]
  + Utf8 [(Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/reflect/TypeVariable;)V]
  + Utf8 [(Ljava/lang/reflect/TypeVariable;La/a/a/f/h;)Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/util/Map;)La/a/a/c/bt;]
  + Utf8 [(Ljava/util/Map;)La/a/a/f/h;]
  + Utf8 [(ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Utf8 [([Ljava/lang/Object;[Ljava/lang/Object;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bs;]
  + Utf8 [StackMapTable]
  + Utf8 [Type variable %s bound to itself]
  + Utf8 [Z]
  + Utf8 [[Ljava/lang/reflect/Type;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/bs]
  + Utf8 [a/a/a/c/bt]
  + Utf8 [a/a/a/f/al]
  + Utf8 [a/a/a/f/e]
  + Utf8 [a/a/a/f/h]
  + Utf8 [a/a/a/f/i]
  + Utf8 [a/a/a/f/j]
  + Utf8 [a/a/a/f/y]
  + Utf8 [b]
  + Utf8 [entrySet]
  + Utf8 [equals]
  + Utf8 [get]
  + Utf8 [getBounds]
  + Utf8 [getGenericDeclaration]
  + Utf8 [getKey]
  + Utf8 [getName]
  + Utf8 [getValue]
  + Utf8 [hasNext]
  + Utf8 [i]
  + Utf8 [iterator]
  + Utf8 [j]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/reflect/Type]
  + Utf8 [java/lang/reflect/TypeVariable]
  + Utf8 [java/util/Arrays]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Map$Entry]
  + Utf8 [java/util/Set]
  + Utf8 [next]

Fields (count = 1):
  + Field:        a La/a/a/c/bs;
    Access flags: 0x12
      = private final a.a.a.c.bs a

Methods (count = 5):
  - Method:       <init>()V
    Access flags: 0x0
      = h()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #38
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] invokestatic #24
        + Methodref [a/a/a/c/bs.i ()La/a/a/c/bs;]
      [8] putfield #21
        + Fieldref [a/a/a/f/h.a La/a/a/c/bs;]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/c/bs;)V
    Access flags: 0x2
      = private h(a.a.a.c.bs)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #38
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #21
        + Fieldref [a/a/a/f/h.a La/a/a/c/bs;]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Map;)La/a/a/f/h;
    Access flags: 0x10
      = final a.a.a.f.h a(java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 122, locals = 7, stack = 6):
      [0] invokestatic #25
        + Methodref [a/a/a/c/bs.j ()La/a/a/c/bt;]
      [3] astore_2 v2
      [4] aload_2 v2
      [5] aload_0 v0
      [6] getfield #21
        + Fieldref [a/a/a/f/h.a La/a/a/c/bs;]
      [9] invokevirtual #28
        + Methodref [a/a/a/c/bt.a (Ljava/util/Map;)La/a/a/c/bt;]
      [12] pop
      [13] aload_1 v1
      [14] invokeinterface #45
        + InterfaceMethodref [java/util/Map.entrySet ()Ljava/util/Set;]
      [19] invokeinterface #48
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [24] astore_3 v3
      [25] aload_3 v3
      [26] invokeinterface #43
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [31] ifeq +79 (target=110)
      [34] aload_3 v3
      [35] invokeinterface #44
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [40] checkcast #18
        + Class [java/util/Map$Entry]
      [43] astore v4
      [45] aload v4
      [47] invokeinterface #46
        + InterfaceMethodref [java/util/Map$Entry.getKey ()Ljava/lang/Object;]
      [52] checkcast #10
        + Class [a/a/a/f/j]
      [55] astore v5
      [57] aload v4
      [59] invokeinterface #47
        + InterfaceMethodref [java/util/Map$Entry.getValue ()Ljava/lang/Object;]
      [64] checkcast #13
        + Class [java/lang/reflect/Type]
      [67] astore v6
      [69] aload v5
      [71] aload v6
      [73] invokevirtual #36
        + Methodref [a/a/a/f/j.b (Ljava/lang/reflect/Type;)Z]
      [76] ifne +7 (target=83)
      [79] iconst_1
      [80] goto +4 (target=84)
      [83] iconst_0
      [84] ldc #1
        + String [Type variable %s bound to itself]
      [86] iconst_1
      [87] anewarray #12
        + Class [java/lang/Object]
      [90] dup
      [91] iconst_0
      [92] aload v5
      [94] aastore
      [95] invokestatic #22
        + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
      [98] aload_2 v2
      [99] aload v5
      [101] aload v6
      [103] invokevirtual #27
        + Methodref [a/a/a/c/bt.a (Ljava/lang/Object;Ljava/lang/Object;)La/a/a/c/bt;]
      [106] pop
      [107] goto -82 (target=25)
      [110] new #8
        + Class [a/a/a/f/h]
      [113] dup
      [114] aload_2 v2
      [115] invokevirtual #26
        + Methodref [a/a/a/c/bt.a ()La/a/a/c/bs;]
      [118] invokespecial #32
        + Methodref [a/a/a/f/h.<init> (La/a/a/c/bs;)V]
      [121] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [25] Var: ...[a:a/a/a/c/bt][a:java/util/Iterator], Stack: (empty)
        - [83] Var: ...[a:java/util/Map$Entry][a:a/a/a/f/j][a:java/lang/reflect/Type], Stack: (empty)
        - [84] Var: ..., Stack: [i]
        - [110] Var: [a:a/a/a/f/h][a:java/util/Map][a:a/a/a/c/bt], Stack: 
  + Method:       a(Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;
    Access flags: 0x10
      = final java.lang.reflect.Type a(java.lang.reflect.TypeVariable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 4, stack = 5):
      [0] aload_0 v0
      [1] astore_2 v2
      [2] new #9
        + Class [a/a/a/f/i]
      [5] dup
      [6] aload_0 v0
      [7] aload_1 v1
      [8] aload_2 v2
      [9] invokespecial #34
        + Methodref [a/a/a/f/i.<init> (La/a/a/f/h;Ljava/lang/reflect/TypeVariable;La/a/a/f/h;)V]
      [12] astore_3 v3
      [13] aload_0 v0
      [14] aload_1 v1
      [15] aload_3 v3
      [16] invokevirtual #33
        + Methodref [a/a/a/f/h.a (Ljava/lang/reflect/TypeVariable;La/a/a/f/h;)Ljava/lang/reflect/Type;]
      [19] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/TypeVariable;La/a/a/f/h;)Ljava/lang/reflect/Type;
    Access flags: 0x0
      = java.lang.reflect.Type a(java.lang.reflect.TypeVariable,a.a.a.f.h)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 105, locals = 6, stack = 4):
      [0] aload_0 v0
      [1] getfield #21
        + Fieldref [a/a/a/f/h.a La/a/a/c/bs;]
      [4] new #10
        + Class [a/a/a/f/j]
      [7] dup
      [8] aload_1 v1
      [9] invokespecial #35
        + Methodref [a/a/a/f/j.<init> (Ljava/lang/reflect/TypeVariable;)V]
      [12] invokevirtual #23
        + Methodref [a/a/a/c/bs.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [15] checkcast #13
        + Class [java/lang/reflect/Type]
      [18] astore_3 v3
      [19] aload_3 v3
      [20] ifnonnull +71 (target=91)
      [23] aload_1 v1
      [24] invokeinterface #40
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getBounds ()[Ljava/lang/reflect/Type;]
      [29] astore v4
      [31] aload v4
      [33] arraylength
      [34] ifne +5 (target=39)
      [37] aload_1 v1
      [38] areturn
      [39] new #7
        + Class [a/a/a/f/e]
      [42] dup
      [43] aload_2 v2
      [44] aconst_null
      [45] invokespecial #29
        + Methodref [a/a/a/f/e.<init> (La/a/a/f/h;La/a/a/f/f;)V]
      [48] aload v4
      [50] invokestatic #30
        + Methodref [a/a/a/f/e.a (La/a/a/f/e;[Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;]
      [53] astore v5
      [55] getstatic #20
        + Fieldref [a/a/a/f/al.a Z]
      [58] ifeq +15 (target=73)
      [61] aload v4
      [63] aload v5
      [65] invokestatic #39
        + Methodref [java/util/Arrays.equals ([Ljava/lang/Object;[Ljava/lang/Object;)Z]
      [68] ifeq +5 (target=73)
      [71] aload_1 v1
      [72] areturn
      [73] aload_1 v1
      [74] invokeinterface #41
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
      [79] aload_1 v1
      [80] invokeinterface #42
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getName ()Ljava/lang/String;]
      [85] aload v5
      [87] invokestatic #37
        + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;]
      [90] areturn
      [91] new #7
        + Class [a/a/a/f/e]
      [94] dup
      [95] aload_2 v2
      [96] aconst_null
      [97] invokespecial #29
        + Methodref [a/a/a/f/e.<init> (La/a/a/f/h;La/a/a/f/f;)V]
      [100] aload_3 v3
      [101] invokevirtual #31
        + Methodref [a/a/a/f/e.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [104] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [39] Var: ...[a:java/lang/reflect/Type][a:[Ljava/lang/reflect/Type;], Stack: (empty)
        - [73] Var: ...[a:[Ljava/lang/reflect/Type;], Stack: (empty)
        - [91] Var: -2, Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/i
  Superclass:    a/a/a/f/h
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.f.i extends a.a.a.f.h

Interfaces (count = 0):

Constant Pool (count = 38):
  + Class [a/a/a/f/h]
  + Class [a/a/a/f/i]
  + Class [java/lang/Object]
  + Class [java/lang/reflect/TypeVariable]
  + Fieldref [a/a/a/f/i.a Ljava/lang/reflect/TypeVariable;]
  + Fieldref [a/a/a/f/i.b La/a/a/f/h;]
  + Fieldref [a/a/a/f/i.c La/a/a/f/h;]
  + Methodref [a/a/a/f/h.<init> ()V]
  + Methodref [a/a/a/f/h.a (Ljava/lang/reflect/TypeVariable;La/a/a/f/h;)Ljava/lang/reflect/Type;]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/lang/reflect/TypeVariable.getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/reflect/TypeVariable;La/a/a/f/h;)Ljava/lang/reflect/Type;]
  + NameAndType [a Ljava/lang/reflect/TypeVariable;]
  + NameAndType [b La/a/a/f/h;]
  + NameAndType [c La/a/a/f/h;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
  + Utf8 [()Ljava/lang/reflect/GenericDeclaration;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/f/h;Ljava/lang/reflect/TypeVariable;La/a/a/f/h;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/reflect/TypeVariable;La/a/a/f/h;)Ljava/lang/reflect/Type;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/f/h;]
  + Utf8 [Ljava/lang/reflect/TypeVariable;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/f/h]
  + Utf8 [a/a/a/f/i]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [equals]
  + Utf8 [getGenericDeclaration]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/reflect/TypeVariable]

Fields (count = 3):
  + Field:        a Ljava/lang/reflect/TypeVariable;
    Access flags: 0x1010
      = final synthetic java.lang.reflect.TypeVariable a
  + Field:        b La/a/a/f/h;
    Access flags: 0x1010
      = final synthetic a.a.a.f.h b
  + Field:        c La/a/a/f/h;
    Access flags: 0x1010
      = final synthetic a.a.a.f.h c

Methods (count = 2):
  - Method:       <init>(La/a/a/f/h;Ljava/lang/reflect/TypeVariable;La/a/a/f/h;)V
    Access flags: 0x0
      = i(a.a.a.f.h,java.lang.reflect.TypeVariable,a.a.a.f.h)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #7
        + Fieldref [a/a/a/f/i.c La/a/a/f/h;]
      [5] aload_0 v0
      [6] aload_2 v2
      [7] putfield #5
        + Fieldref [a/a/a/f/i.a Ljava/lang/reflect/TypeVariable;]
      [10] aload_0 v0
      [11] aload_3 v3
      [12] putfield #6
        + Fieldref [a/a/a/f/i.b La/a/a/f/h;]
      [15] aload_0 v0
      [16] invokespecial #8
        + Methodref [a/a/a/f/h.<init> ()V]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/TypeVariable;La/a/a/f/h;)Ljava/lang/reflect/Type;
    Access flags: 0x1
      = public java.lang.reflect.Type a(java.lang.reflect.TypeVariable,a.a.a.f.h)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 33, locals = 3, stack = 3):
      [0] aload_1 v1
      [1] invokeinterface #11
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
      [6] aload_0 v0
      [7] getfield #5
        + Fieldref [a/a/a/f/i.a Ljava/lang/reflect/TypeVariable;]
      [10] invokeinterface #11
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
      [15] invokevirtual #10
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [18] ifeq +5 (target=23)
      [21] aload_1 v1
      [22] areturn
      [23] aload_0 v0
      [24] getfield #6
        + Fieldref [a/a/a/f/i.b La/a/a/f/h;]
      [27] aload_1 v1
      [28] aload_2 v2
      [29] invokevirtual #9
        + Methodref [a/a/a/f/h.a (Ljava/lang/reflect/TypeVariable;La/a/a/f/h;)Ljava/lang/reflect/Type;]
      [32] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [23] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/j
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.j extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 56):
  + Class [a/a/a/a/i]
  + Class [a/a/a/a/o]
  + Class [a/a/a/f/j]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/reflect/TypeVariable]
  + Fieldref [a/a/a/f/j.a Ljava/lang/reflect/TypeVariable;]
  + Methodref [a/a/a/a/i.a ([Ljava/lang/Object;)I]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/f/j.<init> (Ljava/lang/reflect/TypeVariable;)V]
  + Methodref [a/a/a/f/j.a (Ljava/lang/reflect/TypeVariable;)Z]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
  + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/lang/reflect/TypeVariable.getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
  + InterfaceMethodref [java/lang/reflect/TypeVariable.getName ()Ljava/lang/String;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/reflect/TypeVariable;)V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/reflect/TypeVariable;)Z]
  + NameAndType [a ([Ljava/lang/Object;)I]
  + NameAndType [a Ljava/lang/reflect/TypeVariable;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
  + NameAndType [getName ()Ljava/lang/String;]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/reflect/GenericDeclaration;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/reflect/Type;)Z]
  + Utf8 [(Ljava/lang/reflect/TypeVariable;)V]
  + Utf8 [(Ljava/lang/reflect/TypeVariable;)Z]
  + Utf8 [([Ljava/lang/Object;)I]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/reflect/TypeVariable;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/f/j]
  + Utf8 [b]
  + Utf8 [equals]
  + Utf8 [getGenericDeclaration]
  + Utf8 [getName]
  + Utf8 [hashCode]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/reflect/TypeVariable]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a Ljava/lang/reflect/TypeVariable;
    Access flags: 0x12
      = private final java.lang.reflect.TypeVariable a

Methods (count = 7):
  - Method:       <init>(Ljava/lang/reflect/TypeVariable;)V
    Access flags: 0x0
      = j(java.lang.reflect.TypeVariable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #12
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokestatic #9
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] checkcast #6
        + Class [java/lang/reflect/TypeVariable]
      [12] putfield #7
        + Fieldref [a/a/a/f/j.a Ljava/lang/reflect/TypeVariable;]
      [15] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 32, locals = 1, stack = 4):
      [0] iconst_2
      [1] anewarray #4
        + Class [java/lang/Object]
      [4] dup
      [5] iconst_0
      [6] aload_0 v0
      [7] getfield #7
        + Fieldref [a/a/a/f/j.a Ljava/lang/reflect/TypeVariable;]
      [10] invokeinterface #16
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
      [15] aastore
      [16] dup
      [17] iconst_1
      [18] aload_0 v0
      [19] getfield #7
        + Fieldref [a/a/a/f/j.a Ljava/lang/reflect/TypeVariable;]
      [22] invokeinterface #17
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getName ()Ljava/lang/String;]
      [27] aastore
      [28] invokestatic #8
        + Methodref [a/a/a/a/i.a ([Ljava/lang/Object;)I]
      [31] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] instanceof #3
        + Class [a/a/a/f/j]
      [4] ifeq +17 (target=21)
      [7] aload_1 v1
      [8] checkcast #3
        + Class [a/a/a/f/j]
      [11] astore_2 v2
      [12] aload_0 v0
      [13] aload_2 v2
      [14] getfield #7
        + Fieldref [a/a/a/f/j.a Ljava/lang/reflect/TypeVariable;]
      [17] invokespecial #11
        + Methodref [a/a/a/f/j.a (Ljava/lang/reflect/TypeVariable;)Z]
      [20] ireturn
      [21] iconst_0
      [22] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [21] Var: ..., Stack: (empty)
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/f/j.a Ljava/lang/reflect/TypeVariable;]
      [4] invokevirtual #14
        + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/Type;)Ljava/lang/Object;
    Access flags: 0x8
      = static java.lang.Object a(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] instanceof #6
        + Class [java/lang/reflect/TypeVariable]
      [4] ifeq +15 (target=19)
      [7] new #3
        + Class [a/a/a/f/j]
      [10] dup
      [11] aload_0 v0
      [12] checkcast #6
        + Class [java/lang/reflect/TypeVariable]
      [15] invokespecial #10
        + Methodref [a/a/a/f/j.<init> (Ljava/lang/reflect/TypeVariable;)V]
      [18] areturn
      [19] aconst_null
      [20] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [19] Var: ..., Stack: (empty)
  + Method:       b(Ljava/lang/reflect/Type;)Z
    Access flags: 0x0
      = boolean b(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] instanceof #6
        + Class [java/lang/reflect/TypeVariable]
      [4] ifeq +12 (target=16)
      [7] aload_0 v0
      [8] aload_1 v1
      [9] checkcast #6
        + Class [java/lang/reflect/TypeVariable]
      [12] invokespecial #11
        + Methodref [a/a/a/f/j.a (Ljava/lang/reflect/TypeVariable;)Z]
      [15] ireturn
      [16] iconst_0
      [17] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [16] Var: ..., Stack: (empty)
  + Method:       a(Ljava/lang/reflect/TypeVariable;)Z
    Access flags: 0x2
      = private boolean a(java.lang.reflect.TypeVariable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 48, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [a/a/a/f/j.a Ljava/lang/reflect/TypeVariable;]
      [4] invokeinterface #16
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
      [9] aload_1 v1
      [10] invokeinterface #16
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
      [15] invokevirtual #13
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [18] ifeq +28 (target=46)
      [21] aload_0 v0
      [22] getfield #7
        + Fieldref [a/a/a/f/j.a Ljava/lang/reflect/TypeVariable;]
      [25] invokeinterface #17
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getName ()Ljava/lang/String;]
      [30] aload_1 v1
      [31] invokeinterface #17
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getName ()Ljava/lang/String;]
      [36] invokevirtual #15
        + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
      [39] ifeq +7 (target=46)
      [42] iconst_1
      [43] goto +4 (target=47)
      [46] iconst_0
      [47] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [46] Var: ..., Stack: (empty)
        - [47] Var: ..., Stack: [i]

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/k
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.k extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 116):
  + String [-of ? extends ]
  + String [capture#]
  + String [must have been one of the known types]
  + Class [[Ljava/lang/reflect/Type;]
  + Class [a/a/a/a/f]
  + Class [a/a/a/a/o]
  + Class [a/a/a/f/k]
  + Class [a/a/a/f/y]
  + Class [java/lang/AssertionError]
  + Class [java/lang/Class]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/reflect/GenericArrayType]
  + Class [java/lang/reflect/ParameterizedType]
  + Class [java/lang/reflect/Type]
  + Class [java/lang/reflect/TypeVariable]
  + Class [java/lang/reflect/WildcardType]
  + Class [java/util/concurrent/atomic/AtomicInteger]
  + Fieldref [a/a/a/f/k.a Ljava/util/concurrent/atomic/AtomicInteger;]
  + Methodref [a/a/a/a/f.a (C)La/a/a/a/f;]
  + Methodref [a/a/a/a/f.a ([Ljava/lang/Object;)Ljava/lang/String;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/f/k.<init> ()V]
  + Methodref [a/a/a/f/k.a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/k.a ([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/k.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;]
  + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;]
  + Methodref [java/lang/AssertionError.<init> (Ljava/lang/Object;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/concurrent/atomic/AtomicInteger.<init> ()V]
  + Methodref [java/util/concurrent/atomic/AtomicInteger.incrementAndGet ()I]
  + InterfaceMethodref [java/lang/reflect/GenericArrayType.getGenericComponentType ()Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getActualTypeArguments ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getOwnerType ()Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getRawType ()Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/WildcardType.getLowerBounds ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [a (C)La/a/a/a/f;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;]
  + NameAndType [a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + NameAndType [a (Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;]
  + NameAndType [a ([Ljava/lang/Object;)Ljava/lang/String;]
  + NameAndType [a ([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;]
  + NameAndType [a Ljava/util/concurrent/atomic/AtomicInteger;]
  + NameAndType [append (I)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + NameAndType [getActualTypeArguments ()[Ljava/lang/reflect/Type;]
  + NameAndType [getGenericComponentType ()Ljava/lang/reflect/Type;]
  + NameAndType [getLowerBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [getOwnerType ()Ljava/lang/reflect/Type;]
  + NameAndType [getRawType ()Ljava/lang/reflect/Type;]
  + NameAndType [getUpperBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [incrementAndGet ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/reflect/Type;]
  + Utf8 [()V]
  + Utf8 [()[Ljava/lang/reflect/Type;]
  + Utf8 [(C)La/a/a/a/f;]
  + Utf8 [(I)Ljava/lang/StringBuilder;]
  + Utf8 [(La/a/a/f/f;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;]
  + Utf8 [([Ljava/lang/Object;)Ljava/lang/String;]
  + Utf8 [([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;]
  + Utf8 [-of ? extends ]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/util/concurrent/atomic/AtomicInteger;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/reflect/Type;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/f]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/f/k]
  + Utf8 [a/a/a/f/y]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [capture#]
  + Utf8 [getActualTypeArguments]
  + Utf8 [getGenericComponentType]
  + Utf8 [getLowerBounds]
  + Utf8 [getOwnerType]
  + Utf8 [getRawType]
  + Utf8 [getUpperBounds]
  + Utf8 [incrementAndGet]
  + Utf8 [java/lang/AssertionError]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/reflect/GenericArrayType]
  + Utf8 [java/lang/reflect/ParameterizedType]
  + Utf8 [java/lang/reflect/Type]
  + Utf8 [java/lang/reflect/TypeVariable]
  + Utf8 [java/lang/reflect/WildcardType]
  + Utf8 [java/util/concurrent/atomic/AtomicInteger]
  + Utf8 [must have been one of the known types]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a Ljava/util/concurrent/atomic/AtomicInteger;
    Access flags: 0x12
      = private final java.util.concurrent.atomic.AtomicInteger a

Methods (count = 5):
  - Method:       <init>()V
    Access flags: 0x2
      = private k()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #31
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] new #18
        + Class [java/util/concurrent/atomic/AtomicInteger]
      [8] dup
      [9] invokespecial #36
        + Methodref [java/util/concurrent/atomic/AtomicInteger.<init> ()V]
      [12] putfield #19
        + Fieldref [a/a/a/f/k.a Ljava/util/concurrent/atomic/AtomicInteger;]
      [15] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
    Access flags: 0x0
      = java.lang.reflect.Type a(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 197, locals = 6, stack = 4):
      [0] aload_1 v1
      [1] invokestatic #22
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_1 v1
      [6] instanceof #10
        + Class [java/lang/Class]
      [9] ifeq +5 (target=14)
      [12] aload_1 v1
      [13] areturn
      [14] aload_1 v1
      [15] instanceof #16
        + Class [java/lang/reflect/TypeVariable]
      [18] ifeq +5 (target=23)
      [21] aload_1 v1
      [22] areturn
      [23] aload_1 v1
      [24] instanceof #13
        + Class [java/lang/reflect/GenericArrayType]
      [27] ifeq +22 (target=49)
      [30] aload_1 v1
      [31] checkcast #13
        + Class [java/lang/reflect/GenericArrayType]
      [34] astore_2 v2
      [35] aload_0 v0
      [36] aload_2 v2
      [37] invokeinterface #38
        + InterfaceMethodref [java/lang/reflect/GenericArrayType.getGenericComponentType ()Ljava/lang/reflect/Type;]
      [42] invokevirtual #24
        + Methodref [a/a/a/f/k.a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [45] invokestatic #28
        + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [48] areturn
      [49] aload_1 v1
      [50] instanceof #14
        + Class [java/lang/reflect/ParameterizedType]
      [53] ifeq +41 (target=94)
      [56] aload_1 v1
      [57] checkcast #14
        + Class [java/lang/reflect/ParameterizedType]
      [60] astore_2 v2
      [61] aload_0 v0
      [62] aload_2 v2
      [63] invokeinterface #40
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getOwnerType ()Ljava/lang/reflect/Type;]
      [68] invokespecial #26
        + Methodref [a/a/a/f/k.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [71] aload_2 v2
      [72] invokeinterface #41
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getRawType ()Ljava/lang/reflect/Type;]
      [77] checkcast #10
        + Class [java/lang/Class]
      [80] aload_0 v0
      [81] aload_2 v2
      [82] invokeinterface #39
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getActualTypeArguments ()[Ljava/lang/reflect/Type;]
      [87] invokespecial #25
        + Methodref [a/a/a/f/k.a ([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;]
      [90] invokestatic #29
        + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;]
      [93] areturn
      [94] aload_1 v1
      [95] instanceof #17
        + Class [java/lang/reflect/WildcardType]
      [98] ifeq +89 (target=187)
      [101] aload_1 v1
      [102] checkcast #17
        + Class [java/lang/reflect/WildcardType]
      [105] astore_2 v2
      [106] aload_2 v2
      [107] invokeinterface #42
        + InterfaceMethodref [java/lang/reflect/WildcardType.getLowerBounds ()[Ljava/lang/reflect/Type;]
      [112] astore_3 v3
      [113] aload_3 v3
      [114] arraylength
      [115] ifne +70 (target=185)
      [118] aload_2 v2
      [119] invokeinterface #43
        + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
      [124] astore v4
      [126] new #12
        + Class [java/lang/StringBuilder]
      [129] dup
      [130] invokespecial #32
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [133] ldc #2
        + String [capture#]
      [135] invokevirtual #34
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [138] aload_0 v0
      [139] getfield #19
        + Fieldref [a/a/a/f/k.a Ljava/util/concurrent/atomic/AtomicInteger;]
      [142] invokevirtual #37
        + Methodref [java/util/concurrent/atomic/AtomicInteger.incrementAndGet ()I]
      [145] invokevirtual #33
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [148] ldc #1
        + String [-of ? extends ]
      [150] invokevirtual #34
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [153] bipush 38
      [155] invokestatic #20
        + Methodref [a/a/a/a/f.a (C)La/a/a/a/f;]
      [158] aload v4
      [160] invokevirtual #21
        + Methodref [a/a/a/a/f.a ([Ljava/lang/Object;)Ljava/lang/String;]
      [163] invokevirtual #34
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [166] invokevirtual #35
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [169] astore v5
      [171] ldc #7
        + Class [a/a/a/f/k]
      [173] aload v5
      [175] aload_2 v2
      [176] invokeinterface #43
        + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
      [181] invokestatic #27
        + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;]
      [184] areturn
      [185] aload_1 v1
      [186] areturn
      [187] new #9
        + Class [java/lang/AssertionError]
      [190] dup
      [191] ldc #3
        + String [must have been one of the known types]
      [193] invokespecial #30
        + Methodref [java/lang/AssertionError.<init> (Ljava/lang/Object;)V]
      [196] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [14] Var: ..., Stack: (empty)
        - [23] Var: ..., Stack: (empty)
        - [49] Var: ..., Stack: (empty)
        - [94] Var: ..., Stack: (empty)
        - [185] Var: ...[a:java/lang/reflect/WildcardType][a:[Ljava/lang/reflect/Type;], Stack: (empty)
        - [187] Var: -2, Stack: (empty)
  + Method:       b(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
    Access flags: 0x2
      = private java.lang.reflect.Type b(java.lang.reflect.Type)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 12, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] ifnonnull +5 (target=6)
      [4] aconst_null
      [5] areturn
      [6] aload_0 v0
      [7] aload_1 v1
      [8] invokevirtual #24
        + Methodref [a/a/a/f/k.a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [6] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;
    Access flags: 0x2
      = private java.lang.reflect.Type[] a(java.lang.reflect.Type[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 32, locals = 4, stack = 5):
      [0] aload_1 v1
      [1] arraylength
      [2] anewarray #15
        + Class [java/lang/reflect/Type]
      [5] astore_2 v2
      [6] iconst_0
      [7] istore_3 v3
      [8] iload_3 v3
      [9] aload_1 v1
      [10] arraylength
      [11] ificmpge +19 (target=30)
      [14] aload_2 v2
      [15] iload_3 v3
      [16] aload_0 v0
      [17] aload_1 v1
      [18] iload_3 v3
      [19] aaload
      [20] invokevirtual #24
        + Methodref [a/a/a/f/k.a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [23] aastore
      [24] iinc v3, 1
      [27] goto -19 (target=8)
      [30] aload_2 v2
      [31] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [8] Var: ...[a:[Ljava/lang/reflect/Type;][i], Stack: (empty)
        - [30] Var: -1, Stack: (empty)
  - Method:       <init>(La/a/a/f/f;)V
    Access flags: 0x1000
      = synthetic k(a.a.a.f.f)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #23
        + Methodref [a/a/a/f/k.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/l
  Superclass:    a/a/a/f/d
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.f.l extends a.a.a.f.d

Interfaces (count = 1):
  + Class [java/io/Serializable]

Constant Pool (count = 174):
  + String [Cannot construct a TypeToken for a type variable.
You probably meant to call new TypeToken<%s>(getClass()) that can resolve the type variable for you.
If you do need to create a TypeToken of a type variable, please use TypeToken.of() instead.]
  + Class [[Ljava/lang/reflect/Type;]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/bq]
  + Class [a/a/a/c/cb]
  + Class [a/a/a/c/cc]
  + Class [a/a/a/c/ea]
  + Class [a/a/a/f/d]
  + Class [a/a/a/f/e]
  + Class [a/a/a/f/l]
  + Class [a/a/a/f/n]
  + Class [a/a/a/f/o]
  + Class [a/a/a/f/w]
  + Class [a/a/a/f/y]
  + Class [java/io/Serializable]
  + Class [java/lang/Class]
  + Class [java/lang/Object]
  + Class [java/lang/reflect/Type]
  + Class [java/lang/reflect/TypeVariable]
  + Class [java/lang/reflect/WildcardType]
  + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
  + Fieldref [a/a/a/f/l.b La/a/a/f/e;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/a/o.b (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Methodref [a/a/a/c/bo.h ()La/a/a/c/bq;]
  + Methodref [a/a/a/c/bq.a ()La/a/a/c/bo;]
  + Methodref [a/a/a/c/bq.c (Ljava/lang/Object;)La/a/a/c/bq;]
  + Methodref [a/a/a/c/cb.a ()La/a/a/c/ea;]
  + Methodref [a/a/a/c/cb.h ()La/a/a/c/cc;]
  + Methodref [a/a/a/c/cc.a ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/ea.next ()Ljava/lang/Object;]
  + Methodref [a/a/a/f/d.<init> ()V]
  + Methodref [a/a/a/f/e.a (Ljava/lang/reflect/Type;)La/a/a/f/e;]
  + Methodref [a/a/a/f/e.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/l.<init> (Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/l.a ()Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/l.a (Ljava/lang/reflect/Type;)La/a/a/f/l;]
  + Methodref [a/a/a/f/l.a ([Ljava/lang/reflect/Type;)La/a/a/c/bo;]
  + Methodref [a/a/a/f/l.b ()Ljava/lang/Class;]
  + Methodref [a/a/a/f/l.b (Ljava/lang/reflect/Type;)La/a/a/f/l;]
  + Methodref [a/a/a/f/l.c (Ljava/lang/reflect/Type;)Ljava/lang/Class;]
  + Methodref [a/a/a/f/l.d (Ljava/lang/reflect/Type;)La/a/a/c/cb;]
  + Methodref [a/a/a/f/l.e (Ljava/lang/reflect/Type;)La/a/a/f/l;]
  + Methodref [a/a/a/f/l.f ()La/a/a/c/cb;]
  + Methodref [a/a/a/f/l.f (Ljava/lang/reflect/Type;)La/a/a/f/l;]
  + Methodref [a/a/a/f/n.<init> (La/a/a/c/cc;)V]
  + Methodref [a/a/a/f/n.a ([Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/o.<init> (Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/w.<init> (La/a/a/f/l;)V]
  + Methodref [a/a/a/f/y.d (Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + Methodref [java/lang/Class.getGenericInterfaces ()[Ljava/lang/reflect/Type;]
  + Methodref [java/lang/Class.getGenericSuperclass ()Ljava/lang/reflect/Type;]
  + Methodref [java/lang/Class.isInterface ()Z]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.hashCode ()I]
  + InterfaceMethodref [java/lang/reflect/TypeVariable.getBounds ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/c/cc;)V]
  + NameAndType [<init> (La/a/a/f/l;)V]
  + NameAndType [<init> (Ljava/lang/reflect/Type;)V]
  + NameAndType [a ()La/a/a/c/bo;]
  + NameAndType [a ()La/a/a/c/cb;]
  + NameAndType [a ()La/a/a/c/ea;]
  + NameAndType [a ()Ljava/lang/reflect/Type;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/reflect/Type;)La/a/a/f/e;]
  + NameAndType [a (Ljava/lang/reflect/Type;)La/a/a/f/l;]
  + NameAndType [a ([Ljava/lang/reflect/Type;)La/a/a/c/bo;]
  + NameAndType [a ([Ljava/lang/reflect/Type;)V]
  + NameAndType [a Ljava/lang/reflect/Type;]
  + NameAndType [b ()Ljava/lang/Class;]
  + NameAndType [b (Ljava/lang/reflect/Type;)La/a/a/f/l;]
  + NameAndType [b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + NameAndType [b (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + NameAndType [b La/a/a/f/e;]
  + NameAndType [c (Ljava/lang/Object;)La/a/a/c/bq;]
  + NameAndType [c (Ljava/lang/reflect/Type;)Ljava/lang/Class;]
  + NameAndType [d (Ljava/lang/reflect/Type;)La/a/a/c/cb;]
  + NameAndType [d (Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + NameAndType [e (Ljava/lang/reflect/Type;)La/a/a/f/l;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [f ()La/a/a/c/cb;]
  + NameAndType [f (Ljava/lang/reflect/Type;)La/a/a/f/l;]
  + NameAndType [getBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [getGenericInterfaces ()[Ljava/lang/reflect/Type;]
  + NameAndType [getGenericSuperclass ()Ljava/lang/reflect/Type;]
  + NameAndType [getUpperBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [h ()La/a/a/c/bq;]
  + NameAndType [h ()La/a/a/c/cc;]
  + NameAndType [hashCode ()I]
  + NameAndType [isInterface ()Z]
  + NameAndType [next ()Ljava/lang/Object;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/bo;]
  + Utf8 [()La/a/a/c/bq;]
  + Utf8 [()La/a/a/c/cb;]
  + Utf8 [()La/a/a/c/cc;]
  + Utf8 [()La/a/a/c/ea;]
  + Utf8 [()La/a/a/f/l;]
  + Utf8 [()La/a/a/f/w;]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/reflect/Type;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [()[Ljava/lang/reflect/Type;]
  + Utf8 [(La/a/a/c/cc;)V]
  + Utf8 [(La/a/a/f/l;)La/a/a/c/cb;]
  + Utf8 [(La/a/a/f/l;)Ljava/lang/reflect/Type;]
  + Utf8 [(La/a/a/f/l;)V]
  + Utf8 [(Ljava/lang/Class;)La/a/a/f/l;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/bq;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/reflect/Type;)La/a/a/c/cb;]
  + Utf8 [(Ljava/lang/reflect/Type;)La/a/a/f/e;]
  + Utf8 [(Ljava/lang/reflect/Type;)La/a/a/f/l;]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/reflect/Type;)V]
  + Utf8 [(Ljava/lang/reflect/Type;La/a/a/f/m;)V]
  + Utf8 [(ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Utf8 [([Ljava/lang/reflect/Type;)La/a/a/c/bo;]
  + Utf8 [([Ljava/lang/reflect/Type;)V]
  + Utf8 [<init>]
  + Utf8 [Cannot construct a TypeToken for a type variable.
You probably meant to call new TypeToken<%s>(getClass()) that can resolve the type variable for you.
If you do need to create a TypeToken of a type variable, please use TypeToken.of() instead.]
  + Utf8 [Code]
  + Utf8 [La/a/a/f/e;]
  + Utf8 [Ljava/lang/reflect/Type;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/reflect/Type;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/bq]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [a/a/a/c/cc]
  + Utf8 [a/a/a/c/ea]
  + Utf8 [a/a/a/f/d]
  + Utf8 [a/a/a/f/e]
  + Utf8 [a/a/a/f/l]
  + Utf8 [a/a/a/f/n]
  + Utf8 [a/a/a/f/o]
  + Utf8 [a/a/a/f/w]
  + Utf8 [a/a/a/f/y]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [equals]
  + Utf8 [f]
  + Utf8 [getBounds]
  + Utf8 [getGenericInterfaces]
  + Utf8 [getGenericSuperclass]
  + Utf8 [getUpperBounds]
  + Utf8 [h]
  + Utf8 [hashCode]
  + Utf8 [isInterface]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/reflect/Type]
  + Utf8 [java/lang/reflect/TypeVariable]
  + Utf8 [java/lang/reflect/WildcardType]
  + Utf8 [next]
  + Utf8 [toString]

Fields (count = 2):
  + Field:        a Ljava/lang/reflect/Type;
    Access flags: 0x12
      = private final java.lang.reflect.Type a
  + Field:        b La/a/a/f/e;
    Access flags: 0x82
      = private transient a.a.a.f.e b

Methods (count = 21):
  - Method:       <init>()V
    Access flags: 0x4
      = protected l()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 44, locals = 1, stack = 6):
      [0] aload_0 v0
      [1] invokespecial #33
        + Methodref [a/a/a/f/d.<init> ()V]
      [4] aload_0 v0
      [5] aload_0 v0
      [6] invokevirtual #37
        + Methodref [a/a/a/f/l.a ()Ljava/lang/reflect/Type;]
      [9] putfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [12] aload_0 v0
      [13] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [16] instanceof #20
        + Class [java/lang/reflect/TypeVariable]
      [19] ifne +7 (target=26)
      [22] iconst_1
      [23] goto +4 (target=27)
      [26] iconst_0
      [27] ldc #1
        + String [Cannot construct a TypeToken for a type variable.
You probably meant to call new TypeToken<%s>(getClass()) that can resolve the type variable for you.
If you do need to create a TypeToken of a type variable, please use TypeToken.of() instead.]
      [29] iconst_1
      [30] anewarray #18
        + Class [java/lang/Object]
      [33] dup
      [34] iconst_0
      [35] aload_0 v0
      [36] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [39] aastore
      [40] invokestatic #25
        + Methodref [a/a/a/a/o.b (ZLjava/lang/String;[Ljava/lang/Object;)V]
      [43] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [26] Var: [a:a/a/a/f/l], Stack: 
        - [27] Var: ..., Stack: [i]
  - Method:       <init>(Ljava/lang/reflect/Type;)V
    Access flags: 0x2
      = private l(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #33
        + Methodref [a/a/a/f/d.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokestatic #24
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] checkcast #19
        + Class [java/lang/reflect/Type]
      [12] putfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [15] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Class;)La/a/a/f/l;
    Access flags: 0x9
      = public static a.a.a.f.l a(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #13
        + Class [a/a/a/f/o]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #49
        + Methodref [a/a/a/f/o.<init> (Ljava/lang/reflect/Type;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/Type;)La/a/a/f/l;
    Access flags: 0x9
      = public static a.a.a.f.l a(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #13
        + Class [a/a/a/f/o]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #49
        + Methodref [a/a/a/f/o.<init> (Ljava/lang/reflect/Type;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()Ljava/lang/Class;
    Access flags: 0x11
      = public final java.lang.Class b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 3, stack = 1):
      [0] aload_0 v0
      [1] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [4] invokestatic #42
        + Methodref [a/a/a/f/l.c (Ljava/lang/reflect/Type;)Ljava/lang/Class;]
      [7] astore_1 v1
      [8] aload_1 v1
      [9] astore_2 v2
      [10] aload_2 v2
      [11] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       f()La/a/a/c/cb;
    Access flags: 0x2
      = private a.a.a.c.cb f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 1):
      [0] aload_0 v0
      [1] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [4] invokestatic #43
        + Methodref [a/a/a/f/l.d (Ljava/lang/reflect/Type;)La/a/a/c/cb;]
      [7] astore_1 v1
      [8] aload_1 v1
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/reflect/Type;)La/a/a/f/l;
    Access flags: 0x11
      = public final a.a.a.f.l b(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 36, locals = 3, stack = 3):
      [0] aload_1 v1
      [1] invokestatic #24
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_0 v0
      [6] getfield #23
        + Fieldref [a/a/a/f/l.b La/a/a/f/e;]
      [9] astore_2 v2
      [10] aload_2 v2
      [11] ifnonnull +16 (target=27)
      [14] aload_0 v0
      [15] aload_0 v0
      [16] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [19] invokestatic #34
        + Methodref [a/a/a/f/e.a (Ljava/lang/reflect/Type;)La/a/a/f/e;]
      [22] dup_x1
      [23] putfield #23
        + Fieldref [a/a/a/f/l.b La/a/a/f/e;]
      [26] astore_2 v2
      [27] aload_2 v2
      [28] aload_1 v1
      [29] invokevirtual #35
        + Methodref [a/a/a/f/e.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [32] invokestatic #38
        + Methodref [a/a/a/f/l.a (Ljava/lang/reflect/Type;)La/a/a/f/l;]
      [35] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [27] Var: ...[a:a/a/a/f/e], Stack: (empty)
  + Method:       e(Ljava/lang/reflect/Type;)La/a/a/f/l;
    Access flags: 0x2
      = private a.a.a.f.l e(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #41
        + Methodref [a/a/a/f/l.b (Ljava/lang/reflect/Type;)La/a/a/f/l;]
      [5] astore_2 v2
      [6] aload_2 v2
      [7] aload_0 v0
      [8] getfield #23
        + Fieldref [a/a/a/f/l.b La/a/a/f/e;]
      [11] putfield #23
        + Fieldref [a/a/a/f/l.b La/a/a/f/e;]
      [14] aload_2 v2
      [15] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()La/a/a/f/l;
    Access flags: 0x10
      = final a.a.a.f.l c()
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 80, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [4] instanceof #20
        + Class [java/lang/reflect/TypeVariable]
      [7] ifeq +22 (target=29)
      [10] aload_0 v0
      [11] aload_0 v0
      [12] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [15] checkcast #20
        + Class [java/lang/reflect/TypeVariable]
      [18] invokeinterface #57
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getBounds ()[Ljava/lang/reflect/Type;]
      [23] iconst_0
      [24] aaload
      [25] invokespecial #46
        + Methodref [a/a/a/f/l.f (Ljava/lang/reflect/Type;)La/a/a/f/l;]
      [28] areturn
      [29] aload_0 v0
      [30] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [33] instanceof #21
        + Class [java/lang/reflect/WildcardType]
      [36] ifeq +22 (target=58)
      [39] aload_0 v0
      [40] aload_0 v0
      [41] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [44] checkcast #21
        + Class [java/lang/reflect/WildcardType]
      [47] invokeinterface #58
        + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
      [52] iconst_0
      [53] aaload
      [54] invokespecial #46
        + Methodref [a/a/a/f/l.f (Ljava/lang/reflect/Type;)La/a/a/f/l;]
      [57] areturn
      [58] aload_0 v0
      [59] invokevirtual #40
        + Methodref [a/a/a/f/l.b ()Ljava/lang/Class;]
      [62] invokevirtual #53
        + Methodref [java/lang/Class.getGenericSuperclass ()Ljava/lang/reflect/Type;]
      [65] astore_1 v1
      [66] aload_1 v1
      [67] ifnonnull +5 (target=72)
      [70] aconst_null
      [71] areturn
      [72] aload_0 v0
      [73] aload_1 v1
      [74] invokespecial #44
        + Methodref [a/a/a/f/l.e (Ljava/lang/reflect/Type;)La/a/a/f/l;]
      [77] astore_2 v2
      [78] aload_2 v2
      [79] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [29] Var: ..., Stack: (empty)
        - [58] Var: ..., Stack: (empty)
        - [72] Var: ...[a:java/lang/reflect/Type], Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       f(Ljava/lang/reflect/Type;)La/a/a/f/l;
    Access flags: 0x2
      = private a.a.a.f.l f(java.lang.reflect.Type)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 21, locals = 4, stack = 1):
      [0] aload_1 v1
      [1] invokestatic #38
        + Methodref [a/a/a/f/l.a (Ljava/lang/reflect/Type;)La/a/a/f/l;]
      [4] astore_2 v2
      [5] aload_2 v2
      [6] invokevirtual #40
        + Methodref [a/a/a/f/l.b ()Ljava/lang/Class;]
      [9] invokevirtual #54
        + Methodref [java/lang/Class.isInterface ()Z]
      [12] ifeq +5 (target=17)
      [15] aconst_null
      [16] areturn
      [17] aload_2 v2
      [18] astore_3 v3
      [19] aload_3 v3
      [20] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [17] Var: ...[a:a/a/a/f/l], Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       d()La/a/a/c/bo;
    Access flags: 0x10
      = final a.a.a.c.bo d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 110, locals = 7, stack = 2):
      [0] aload_0 v0
      [1] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [4] instanceof #20
        + Class [java/lang/reflect/TypeVariable]
      [7] ifeq +20 (target=27)
      [10] aload_0 v0
      [11] aload_0 v0
      [12] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [15] checkcast #20
        + Class [java/lang/reflect/TypeVariable]
      [18] invokeinterface #57
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getBounds ()[Ljava/lang/reflect/Type;]
      [23] invokespecial #39
        + Methodref [a/a/a/f/l.a ([Ljava/lang/reflect/Type;)La/a/a/c/bo;]
      [26] areturn
      [27] aload_0 v0
      [28] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [31] instanceof #21
        + Class [java/lang/reflect/WildcardType]
      [34] ifeq +20 (target=54)
      [37] aload_0 v0
      [38] aload_0 v0
      [39] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [42] checkcast #21
        + Class [java/lang/reflect/WildcardType]
      [45] invokeinterface #58
        + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
      [50] invokespecial #39
        + Methodref [a/a/a/f/l.a ([Ljava/lang/reflect/Type;)La/a/a/c/bo;]
      [53] areturn
      [54] invokestatic #26
        + Methodref [a/a/a/c/bo.h ()La/a/a/c/bq;]
      [57] astore_1 v1
      [58] aload_0 v0
      [59] invokevirtual #40
        + Methodref [a/a/a/f/l.b ()Ljava/lang/Class;]
      [62] invokevirtual #52
        + Methodref [java/lang/Class.getGenericInterfaces ()[Ljava/lang/reflect/Type;]
      [65] astore_2 v2
      [66] aload_2 v2
      [67] arraylength
      [68] istore_3 v3
      [69] iconst_0
      [70] istore v4
      [72] iload v4
      [74] iload_3 v3
      [75] ificmpge +30 (target=105)
      [78] aload_2 v2
      [79] iload v4
      [81] aaload
      [82] astore v5
      [84] aload_0 v0
      [85] aload v5
      [87] invokespecial #44
        + Methodref [a/a/a/f/l.e (Ljava/lang/reflect/Type;)La/a/a/f/l;]
      [90] astore v6
      [92] aload_1 v1
      [93] aload v6
      [95] invokevirtual #28
        + Methodref [a/a/a/c/bq.c (Ljava/lang/Object;)La/a/a/c/bq;]
      [98] pop
      [99] iinc v4, 1
      [102] goto -30 (target=72)
      [105] aload_1 v1
      [106] invokevirtual #27
        + Methodref [a/a/a/c/bq.a ()La/a/a/c/bo;]
      [109] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [27] Var: ..., Stack: (empty)
        - [54] Var: ..., Stack: (empty)
        - [72] Var: [a:a/a/a/f/l][a:a/a/a/c/bq][a:[Ljava/lang/reflect/Type;][i][i], Stack: 
        - [105] Var: -3, Stack: (empty)
  + Method:       a([Ljava/lang/reflect/Type;)La/a/a/c/bo;
    Access flags: 0x2
      = private a.a.a.c.bo a(java.lang.reflect.Type[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 62, locals = 8, stack = 2):
      [0] invokestatic #26
        + Methodref [a/a/a/c/bo.h ()La/a/a/c/bq;]
      [3] astore_2 v2
      [4] aload_1 v1
      [5] astore_3 v3
      [6] aload_3 v3
      [7] arraylength
      [8] istore v4
      [10] iconst_0
      [11] istore v5
      [13] iload v5
      [15] iload v4
      [17] ificmpge +40 (target=57)
      [20] aload_3 v3
      [21] iload v5
      [23] aaload
      [24] astore v6
      [26] aload v6
      [28] invokestatic #38
        + Methodref [a/a/a/f/l.a (Ljava/lang/reflect/Type;)La/a/a/f/l;]
      [31] astore v7
      [33] aload v7
      [35] invokevirtual #40
        + Methodref [a/a/a/f/l.b ()Ljava/lang/Class;]
      [38] invokevirtual #54
        + Methodref [java/lang/Class.isInterface ()Z]
      [41] ifeq +10 (target=51)
      [44] aload_2 v2
      [45] aload v7
      [47] invokevirtual #28
        + Methodref [a/a/a/c/bq.c (Ljava/lang/Object;)La/a/a/c/bq;]
      [50] pop
      [51] iinc v5, 1
      [54] goto -41 (target=13)
      [57] aload_2 v2
      [58] invokevirtual #27
        + Methodref [a/a/a/c/bq.a ()La/a/a/c/bo;]
      [61] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [13] Var: [a:a/a/a/f/l][a:[Ljava/lang/reflect/Type;][a:a/a/a/c/bq][a:[Ljava/lang/reflect/Type;][i][i], Stack: 
        - [51] Var: ..., Stack: (empty)
        - [57] Var: -3, Stack: (empty)
  + Method:       e()La/a/a/f/w;
    Access flags: 0x11
      = public final a.a.a.f.w e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #14
        + Class [a/a/a/f/w]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #50
        + Methodref [a/a/a/f/w.<init> (La/a/a/f/l;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 26, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] instanceof #11
        + Class [a/a/a/f/l]
      [4] ifeq +20 (target=24)
      [7] aload_1 v1
      [8] checkcast #11
        + Class [a/a/a/f/l]
      [11] astore_2 v2
      [12] aload_0 v0
      [13] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [16] aload_2 v2
      [17] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [20] invokevirtual #55
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [23] ireturn
      [24] iconst_0
      [25] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [24] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [4] invokevirtual #56
        + Methodref [java/lang/Object.hashCode ()I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [4] invokestatic #51
        + Methodref [a/a/a/f/y.d (Ljava/lang/reflect/Type;)Ljava/lang/String;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(Ljava/lang/reflect/Type;)Ljava/lang/Class;
    Access flags: 0x8
      = static java.lang.Class c(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokestatic #43
        + Methodref [a/a/a/f/l.d (Ljava/lang/reflect/Type;)La/a/a/c/cb;]
      [4] invokevirtual #29
        + Methodref [a/a/a/c/cb.a ()La/a/a/c/ea;]
      [7] invokevirtual #32
        + Methodref [a/a/a/c/ea.next ()Ljava/lang/Object;]
      [10] checkcast #17
        + Class [java/lang/Class]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d(Ljava/lang/reflect/Type;)La/a/a/c/cb;
    Access flags: 0x8
      = static a.a.a.c.cb d(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 33, locals = 2, stack = 5):
      [0] aload_0 v0
      [1] invokestatic #24
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] invokestatic #30
        + Methodref [a/a/a/c/cb.h ()La/a/a/c/cc;]
      [8] astore_1 v1
      [9] new #12
        + Class [a/a/a/f/n]
      [12] dup
      [13] aload_1 v1
      [14] invokespecial #47
        + Methodref [a/a/a/f/n.<init> (La/a/a/c/cc;)V]
      [17] iconst_1
      [18] anewarray #19
        + Class [java/lang/reflect/Type]
      [21] dup
      [22] iconst_0
      [23] aload_0 v0
      [24] aastore
      [25] invokevirtual #48
        + Methodref [a/a/a/f/n.a ([Ljava/lang/reflect/Type;)V]
      [28] aload_1 v1
      [29] invokevirtual #31
        + Methodref [a/a/a/c/cc.a ()La/a/a/c/cb;]
      [32] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/f/l;)La/a/a/c/cb;
    Access flags: 0x1008
      = static synthetic a.a.a.c.cb a(a.a.a.f.l)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #45
        + Methodref [a/a/a/f/l.f ()La/a/a/c/cb;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/f/l;)Ljava/lang/reflect/Type;
    Access flags: 0x1008
      = static synthetic java.lang.reflect.Type b(a.a.a.f.l)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #22
        + Fieldref [a/a/a/f/l.a Ljava/lang/reflect/Type;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/reflect/Type;La/a/a/f/m;)V
    Access flags: 0x1000
      = synthetic l(java.lang.reflect.Type,a.a.a.f.m)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #36
        + Methodref [a/a/a/f/l.<init> (Ljava/lang/reflect/Type;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/m
  Superclass:    a/a/a/f/c
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.f.m extends a.a.a.f.c

Interfaces (count = 0):

Constant Pool (count = 34):
  + String [.]
  + Class [a/a/a/f/c]
  + Class [a/a/a/f/m]
  + Class [java/lang/StringBuilder]
  + Fieldref [a/a/a/f/m.b La/a/a/f/l;]
  + Methodref [a/a/a/f/c.toString ()Ljava/lang/String;]
  + Methodref [a/a/a/f/m.a ()La/a/a/f/l;]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + NameAndType [<init> ()V]
  + NameAndType [a ()La/a/a/f/l;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b La/a/a/f/l;]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()La/a/a/f/l;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [.]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/f/l;]
  + Utf8 [a]
  + Utf8 [a/a/a/f/c]
  + Utf8 [a/a/a/f/m]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        b La/a/a/f/l;
    Access flags: 0x1010
      = final synthetic a.a.a.f.l b

Methods (count = 2):
  + Method:       a()La/a/a/f/l;
    Access flags: 0x1
      = public a.a.a.f.l a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/f/m.b La/a/a/f/l;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 30, locals = 1, stack = 2):
      [0] new #4
        + Class [java/lang/StringBuilder]
      [3] dup
      [4] invokespecial #8
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [7] aload_0 v0
      [8] invokevirtual #7
        + Methodref [a/a/a/f/m.a ()La/a/a/f/l;]
      [11] invokevirtual #9
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [14] ldc #1
        + String [.]
      [16] invokevirtual #10
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [19] aload_0 v0
      [20] invokespecial #6
        + Methodref [a/a/a/f/c.toString ()Ljava/lang/String;]
      [23] invokevirtual #10
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [26] invokevirtual #11
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [29] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/n
  Superclass:    a/a/a/f/x
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.n extends a.a.a.f.x

Interfaces (count = 0):

Constant Pool (count = 63):
  + Class [a/a/a/c/cc]
  + Class [a/a/a/f/l]
  + Class [a/a/a/f/n]
  + Class [a/a/a/f/x]
  + Class [a/a/a/f/y]
  + Class [java/lang/Class]
  + Class [java/lang/reflect/GenericArrayType]
  + Class [java/lang/reflect/ParameterizedType]
  + Class [java/lang/reflect/TypeVariable]
  + Class [java/lang/reflect/WildcardType]
  + Fieldref [a/a/a/f/n.a La/a/a/c/cc;]
  + Methodref [a/a/a/c/cc.c (Ljava/lang/Object;)La/a/a/c/cc;]
  + Methodref [a/a/a/f/l.c (Ljava/lang/reflect/Type;)Ljava/lang/Class;]
  + Methodref [a/a/a/f/n.a ([Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/x.<init> ()V]
  + Methodref [a/a/a/f/y.a (Ljava/lang/Class;)Ljava/lang/Class;]
  + InterfaceMethodref [java/lang/reflect/GenericArrayType.getGenericComponentType ()Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getRawType ()Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/TypeVariable.getBounds ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Class;)Ljava/lang/Class;]
  + NameAndType [a ([Ljava/lang/reflect/Type;)V]
  + NameAndType [a La/a/a/c/cc;]
  + NameAndType [c (Ljava/lang/Object;)La/a/a/c/cc;]
  + NameAndType [c (Ljava/lang/reflect/Type;)Ljava/lang/Class;]
  + NameAndType [getBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [getGenericComponentType ()Ljava/lang/reflect/Type;]
  + NameAndType [getRawType ()Ljava/lang/reflect/Type;]
  + NameAndType [getUpperBounds ()[Ljava/lang/reflect/Type;]
  + Utf8 [()Ljava/lang/reflect/Type;]
  + Utf8 [()V]
  + Utf8 [()[Ljava/lang/reflect/Type;]
  + Utf8 [(La/a/a/c/cc;)V]
  + Utf8 [(Ljava/lang/Class;)Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/Class;)V]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/cc;]
  + Utf8 [(Ljava/lang/reflect/GenericArrayType;)V]
  + Utf8 [(Ljava/lang/reflect/ParameterizedType;)V]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/reflect/TypeVariable;)V]
  + Utf8 [(Ljava/lang/reflect/WildcardType;)V]
  + Utf8 [([Ljava/lang/reflect/Type;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/cc;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/cc]
  + Utf8 [a/a/a/f/l]
  + Utf8 [a/a/a/f/n]
  + Utf8 [a/a/a/f/x]
  + Utf8 [a/a/a/f/y]
  + Utf8 [c]
  + Utf8 [getBounds]
  + Utf8 [getGenericComponentType]
  + Utf8 [getRawType]
  + Utf8 [getUpperBounds]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/reflect/GenericArrayType]
  + Utf8 [java/lang/reflect/ParameterizedType]
  + Utf8 [java/lang/reflect/TypeVariable]
  + Utf8 [java/lang/reflect/WildcardType]

Fields (count = 1):
  + Field:        a La/a/a/c/cc;
    Access flags: 0x1010
      = final synthetic a.a.a.c.cc a

Methods (count = 6):
  - Method:       <init>(La/a/a/c/cc;)V
    Access flags: 0x0
      = n(a.a.a.c.cc)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #11
        + Fieldref [a/a/a/f/n.a La/a/a/c/cc;]
      [5] aload_0 v0
      [6] invokespecial #15
        + Methodref [a/a/a/f/x.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/TypeVariable;)V
    Access flags: 0x0
      = void a(java.lang.reflect.TypeVariable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokeinterface #19
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getBounds ()[Ljava/lang/reflect/Type;]
      [7] invokevirtual #14
        + Methodref [a/a/a/f/n.a ([Ljava/lang/reflect/Type;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/WildcardType;)V
    Access flags: 0x0
      = void a(java.lang.reflect.WildcardType)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokeinterface #20
        + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
      [7] invokevirtual #14
        + Methodref [a/a/a/f/n.a ([Ljava/lang/reflect/Type;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/ParameterizedType;)V
    Access flags: 0x0
      = void a(java.lang.reflect.ParameterizedType)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/f/n.a La/a/a/c/cc;]
      [4] aload_1 v1
      [5] invokeinterface #18
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getRawType ()Ljava/lang/reflect/Type;]
      [10] checkcast #6
        + Class [java/lang/Class]
      [13] invokevirtual #12
        + Methodref [a/a/a/c/cc.c (Ljava/lang/Object;)La/a/a/c/cc;]
      [16] pop
      [17] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Class;)V
    Access flags: 0x0
      = void a(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/f/n.a La/a/a/c/cc;]
      [4] aload_1 v1
      [5] invokevirtual #12
        + Methodref [a/a/a/c/cc.c (Ljava/lang/Object;)La/a/a/c/cc;]
      [8] pop
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/GenericArrayType;)V
    Access flags: 0x0
      = void a(java.lang.reflect.GenericArrayType)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/f/n.a La/a/a/c/cc;]
      [4] aload_1 v1
      [5] invokeinterface #17
        + InterfaceMethodref [java/lang/reflect/GenericArrayType.getGenericComponentType ()Ljava/lang/reflect/Type;]
      [10] invokestatic #13
        + Methodref [a/a/a/f/l.c (Ljava/lang/reflect/Type;)Ljava/lang/Class;]
      [13] invokestatic #16
        + Methodref [a/a/a/f/y.a (Ljava/lang/Class;)Ljava/lang/Class;]
      [16] invokevirtual #12
        + Methodref [a/a/a/c/cc.c (Ljava/lang/Object;)La/a/a/c/cc;]
      [19] pop
      [20] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/o
  Superclass:    a/a/a/f/l
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.o extends a.a.a.f.l

Interfaces (count = 0):

Constant Pool (count = 11):
  + Class [a/a/a/f/l]
  + Class [a/a/a/f/o]
  + Methodref [a/a/a/f/l.<init> (Ljava/lang/reflect/Type;La/a/a/f/m;)V]
  + NameAndType [<init> (Ljava/lang/reflect/Type;La/a/a/f/m;)V]
  + Utf8 [(Ljava/lang/reflect/Type;)V]
  + Utf8 [(Ljava/lang/reflect/Type;La/a/a/f/m;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a/a/a/f/l]
  + Utf8 [a/a/a/f/o]

Fields (count = 0):

Methods (count = 1):
  - Method:       <init>(Ljava/lang/reflect/Type;)V
    Access flags: 0x0
      = o(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aconst_null
      [3] invokespecial #3
        + Methodref [a/a/a/f/l.<init> (Ljava/lang/reflect/Type;La/a/a/f/m;)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/p
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.f.p extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 122):
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/ct]
  + Class [a/a/a/c/dh]
  + Class [a/a/a/f/p]
  + Class [a/a/a/f/q]
  + Class [a/a/a/f/r]
  + Class [a/a/a/f/s]
  + Class [java/lang/Class]
  + Class [java/lang/Integer]
  + Class [java/lang/Iterable]
  + Class [java/lang/Math]
  + Class [java/lang/Object]
  + Class [java/util/Iterator]
  + Class [java/util/Map]
  + Fieldref [a/a/a/f/p.a La/a/a/f/p;]
  + Fieldref [a/a/a/f/p.b La/a/a/f/p;]
  + Methodref [a/a/a/c/bo.a (Ljava/lang/Object;)La/a/a/c/bo;]
  + Methodref [a/a/a/c/ct.c ()Ljava/util/HashMap;]
  + Methodref [a/a/a/c/dh.a ()La/a/a/c/dh;]
  + Methodref [a/a/a/c/dh.a (Ljava/lang/Iterable;)La/a/a/c/bo;]
  + Methodref [a/a/a/c/dh.b ()La/a/a/c/dh;]
  + Methodref [a/a/a/f/p.<init> ()V]
  + Methodref [a/a/a/f/p.a (Ljava/lang/Iterable;)La/a/a/c/bo;]
  + Methodref [a/a/a/f/p.a (Ljava/lang/Object;Ljava/util/Map;)I]
  + Methodref [a/a/a/f/p.a (Ljava/util/Map;Ljava/util/Comparator;)La/a/a/c/bo;]
  + Methodref [a/a/a/f/p.b (Ljava/lang/Object;)Ljava/lang/Class;]
  + Methodref [a/a/a/f/p.c (Ljava/lang/Object;)Ljava/lang/Iterable;]
  + Methodref [a/a/a/f/p.d (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/f/q.<init> ()V]
  + Methodref [a/a/a/f/r.<init> ()V]
  + Methodref [a/a/a/f/s.<init> (Ljava/util/Comparator;Ljava/util/Map;)V]
  + Methodref [java/lang/Class.isInterface ()Z]
  + Methodref [java/lang/Integer.intValue ()I]
  + Methodref [java/lang/Integer.valueOf (I)Ljava/lang/Integer;]
  + Methodref [java/lang/Math.max (II)I]
  + Methodref [java/lang/Object.<init> ()V]
  + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.keySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/util/Comparator;Ljava/util/Map;)V]
  + NameAndType [a ()La/a/a/c/dh;]
  + NameAndType [a (Ljava/lang/Iterable;)La/a/a/c/bo;]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/c/bo;]
  + NameAndType [a (Ljava/lang/Object;Ljava/util/Map;)I]
  + NameAndType [a (Ljava/util/Map;Ljava/util/Comparator;)La/a/a/c/bo;]
  + NameAndType [a La/a/a/f/p;]
  + NameAndType [b ()La/a/a/c/dh;]
  + NameAndType [b (Ljava/lang/Object;)Ljava/lang/Class;]
  + NameAndType [b La/a/a/f/p;]
  + NameAndType [c ()Ljava/util/HashMap;]
  + NameAndType [c (Ljava/lang/Object;)Ljava/lang/Iterable;]
  + NameAndType [d (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [hasNext ()Z]
  + NameAndType [intValue ()I]
  + NameAndType [isInterface ()Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [keySet ()Ljava/util/Set;]
  + NameAndType [max (II)I]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [valueOf (I)Ljava/lang/Integer;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/c/dh;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/HashMap;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)Ljava/lang/Integer;]
  + Utf8 [(II)I]
  + Utf8 [(La/a/a/f/m;)V]
  + Utf8 [(Ljava/lang/Iterable;)La/a/a/c/bo;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/bo;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Iterable;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/util/Map;)I]
  + Utf8 [(Ljava/util/Comparator;Ljava/util/Map;)V]
  + Utf8 [(Ljava/util/Map;Ljava/util/Comparator;)La/a/a/c/bo;]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/f/p;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/ct]
  + Utf8 [a/a/a/c/dh]
  + Utf8 [a/a/a/f/p]
  + Utf8 [a/a/a/f/q]
  + Utf8 [a/a/a/f/r]
  + Utf8 [a/a/a/f/s]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [get]
  + Utf8 [hasNext]
  + Utf8 [intValue]
  + Utf8 [isInterface]
  + Utf8 [iterator]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Integer]
  + Utf8 [java/lang/Iterable]
  + Utf8 [java/lang/Math]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Map]
  + Utf8 [keySet]
  + Utf8 [max]
  + Utf8 [next]
  + Utf8 [put]
  + Utf8 [valueOf]

Fields (count = 2):
  + Field:        a La/a/a/f/p;
    Access flags: 0x18
      = static final a.a.a.f.p a
  + Field:        b La/a/a/f/p;
    Access flags: 0x18
      = static final a.a.a.f.p b

Methods (count = 10):
  - Method:       <init>()V
    Access flags: 0x2
      = private p()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #36
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)La/a/a/c/bo;
    Access flags: 0x10
      = final a.a.a.c.bo a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #17
        + Methodref [a/a/a/c/bo.a (Ljava/lang/Object;)La/a/a/c/bo;]
      [5] invokevirtual #23
        + Methodref [a/a/a/f/p.a (Ljava/lang/Iterable;)La/a/a/c/bo;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Iterable;)La/a/a/c/bo;
    Access flags: 0x0
      = a.a.a.c.bo a(java.lang.Iterable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 50, locals = 5, stack = 3):
      [0] invokestatic #18
        + Methodref [a/a/a/c/ct.c ()Ljava/util/HashMap;]
      [3] astore_2 v2
      [4] aload_1 v1
      [5] invokeinterface #37
        + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
      [10] astore_3 v3
      [11] aload_3 v3
      [12] invokeinterface #38
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [17] ifeq +22 (target=39)
      [20] aload_3 v3
      [21] invokeinterface #39
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [26] astore v4
      [28] aload_0 v0
      [29] aload v4
      [31] aload_2 v2
      [32] invokespecial #24
        + Methodref [a/a/a/f/p.a (Ljava/lang/Object;Ljava/util/Map;)I]
      [35] pop
      [36] goto -25 (target=11)
      [39] aload_2 v2
      [40] invokestatic #21
        + Methodref [a/a/a/c/dh.b ()La/a/a/c/dh;]
      [43] invokevirtual #19
        + Methodref [a/a/a/c/dh.a ()La/a/a/c/dh;]
      [46] invokestatic #25
        + Methodref [a/a/a/f/p.a (Ljava/util/Map;Ljava/util/Comparator;)La/a/a/c/bo;]
      [49] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ...[a:java/util/Map][a:java/util/Iterator], Stack: (empty)
        - [39] Var: -1, Stack: (empty)
  + Method:       a(Ljava/lang/Object;Ljava/util/Map;)I
    Access flags: 0x2
      = private int a(java.lang.Object,java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 132, locals = 7, stack = 4):
      [0] aload_2 v2
      [1] aload_0 v0
      [2] invokeinterface #40
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [7] checkcast #9
        + Class [java/lang/Integer]
      [10] astore_3 v3
      [11] aload_3 v3
      [12] ifnull +8 (target=20)
      [15] aload_3 v3
      [16] invokevirtual #33
        + Methodref [java/lang/Integer.intValue ()I]
      [19] ireturn
      [20] aload_0 v0
      [21] aload_1 v1
      [22] invokevirtual #26
        + Methodref [a/a/a/f/p.b (Ljava/lang/Object;)Ljava/lang/Class;]
      [25] invokevirtual #32
        + Methodref [java/lang/Class.isInterface ()Z]
      [28] ifeq +7 (target=35)
      [31] iconst_1
      [32] goto +4 (target=36)
      [35] iconst_0
      [36] istore v4
      [38] aload_0 v0
      [39] aload_1 v1
      [40] invokevirtual #27
        + Methodref [a/a/a/f/p.c (Ljava/lang/Object;)Ljava/lang/Iterable;]
      [43] invokeinterface #37
        + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
      [48] astore v5
      [50] aload v5
      [52] invokeinterface #38
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [57] ifeq +29 (target=86)
      [60] aload v5
      [62] invokeinterface #39
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [67] astore v6
      [69] iload v4
      [71] aload_0 v0
      [72] aload v6
      [74] aload_2 v2
      [75] invokespecial #24
        + Methodref [a/a/a/f/p.a (Ljava/lang/Object;Ljava/util/Map;)I]
      [78] invokestatic #35
        + Methodref [java/lang/Math.max (II)I]
      [81] istore v4
      [83] goto -33 (target=50)
      [86] aload_0 v0
      [87] aload_1 v1
      [88] invokevirtual #28
        + Methodref [a/a/a/f/p.d (Ljava/lang/Object;)Ljava/lang/Object;]
      [91] astore v5
      [93] aload v5
      [95] ifnull +17 (target=112)
      [98] iload v4
      [100] aload_0 v0
      [101] aload v5
      [103] aload_2 v2
      [104] invokespecial #24
        + Methodref [a/a/a/f/p.a (Ljava/lang/Object;Ljava/util/Map;)I]
      [107] invokestatic #35
        + Methodref [java/lang/Math.max (II)I]
      [110] istore v4
      [112] aload_2 v2
      [113] aload_1 v1
      [114] iload v4
      [116] iconst_1
      [117] iadd
      [118] invokestatic #34
        + Methodref [java/lang/Integer.valueOf (I)Ljava/lang/Integer;]
      [121] invokeinterface #42
        + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [126] pop
      [127] iload v4
      [129] iconst_1
      [130] iadd
      [131] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [20] Var: ...[a:java/lang/Integer], Stack: (empty)
        - [35] Var: ..., Stack: (empty)
        - [36] Var: ..., Stack: [i]
        - [50] Var: ...[i][a:java/util/Iterator], Stack: (empty)
        - [86] Var: -1, Stack: (empty)
        - [112] Var: ...[a:java/lang/Object], Stack: (empty)
  + Method:       a(Ljava/util/Map;Ljava/util/Comparator;)La/a/a/c/bo;
    Access flags: 0xa
      = private static a.a.a.c.bo a(java.util.Map,java.util.Comparator)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 3, stack = 4):
      [0] new #7
        + Class [a/a/a/f/s]
      [3] dup
      [4] aload_1 v1
      [5] aload_0 v0
      [6] invokespecial #31
        + Methodref [a/a/a/f/s.<init> (Ljava/util/Comparator;Ljava/util/Map;)V]
      [9] astore_2 v2
      [10] aload_2 v2
      [11] aload_0 v0
      [12] invokeinterface #41
        + InterfaceMethodref [java/util/Map.keySet ()Ljava/util/Set;]
      [17] invokevirtual #20
        + Methodref [a/a/a/c/dh.a (Ljava/lang/Iterable;)La/a/a/c/bo;]
      [20] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;)Ljava/lang/Class;
    Access flags: 0x400
      = abstract java.lang.Class b(java.lang.Object)
  + Method:       c(Ljava/lang/Object;)Ljava/lang/Iterable;
    Access flags: 0x400
      = abstract java.lang.Iterable c(java.lang.Object)
  + Method:       d(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x400
      = abstract java.lang.Object d(java.lang.Object)
    Class member attributes (count = 1):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  - Method:       <init>(La/a/a/f/m;)V
    Access flags: 0x1000
      = synthetic p(a.a.a.f.m)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #22
        + Methodref [a/a/a/f/p.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 0, stack = 2):
      [0] new #5
        + Class [a/a/a/f/q]
      [3] dup
      [4] invokespecial #29
        + Methodref [a/a/a/f/q.<init> ()V]
      [7] putstatic #15
        + Fieldref [a/a/a/f/p.a La/a/a/f/p;]
      [10] new #6
        + Class [a/a/a/f/r]
      [13] dup
      [14] invokespecial #30
        + Methodref [a/a/a/f/r.<init> ()V]
      [17] putstatic #16
        + Fieldref [a/a/a/f/p.b La/a/a/f/p;]
      [20] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/q
  Superclass:    a/a/a/f/p
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.q extends a.a.a.f.p

Interfaces (count = 0):

Constant Pool (count = 40):
  + Class [a/a/a/f/l]
  + Class [a/a/a/f/p]
  + Class [a/a/a/f/q]
  + Methodref [a/a/a/f/l.b ()Ljava/lang/Class;]
  + Methodref [a/a/a/f/l.c ()La/a/a/f/l;]
  + Methodref [a/a/a/f/l.d ()La/a/a/c/bo;]
  + Methodref [a/a/a/f/p.<init> (La/a/a/f/m;)V]
  + Methodref [a/a/a/f/q.a (La/a/a/f/l;)Ljava/lang/Class;]
  + Methodref [a/a/a/f/q.b (La/a/a/f/l;)Ljava/lang/Iterable;]
  + Methodref [a/a/a/f/q.c (La/a/a/f/l;)La/a/a/f/l;]
  + NameAndType [<init> (La/a/a/f/m;)V]
  + NameAndType [a (La/a/a/f/l;)Ljava/lang/Class;]
  + NameAndType [b ()Ljava/lang/Class;]
  + NameAndType [b (La/a/a/f/l;)Ljava/lang/Iterable;]
  + NameAndType [c ()La/a/a/f/l;]
  + NameAndType [c (La/a/a/f/l;)La/a/a/f/l;]
  + NameAndType [d ()La/a/a/c/bo;]
  + Utf8 [()La/a/a/c/bo;]
  + Utf8 [()La/a/a/f/l;]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/f/l;)La/a/a/f/l;]
  + Utf8 [(La/a/a/f/l;)Ljava/lang/Class;]
  + Utf8 [(La/a/a/f/l;)Ljava/lang/Iterable;]
  + Utf8 [(La/a/a/f/m;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Iterable;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/f/l]
  + Utf8 [a/a/a/f/p]
  + Utf8 [a/a/a/f/q]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]

Fields (count = 0):

Methods (count = 7):
  - Method:       <init>()V
    Access flags: 0x0
      = q()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] aconst_null
      [2] invokespecial #7
        + Methodref [a/a/a/f/p.<init> (La/a/a/f/m;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/f/l;)Ljava/lang/Class;
    Access flags: 0x0
      = java.lang.Class a(a.a.a.f.l)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokevirtual #4
        + Methodref [a/a/a/f/l.b ()Ljava/lang/Class;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(La/a/a/f/l;)Ljava/lang/Iterable;
    Access flags: 0x0
      = java.lang.Iterable b(a.a.a.f.l)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokevirtual #6
        + Methodref [a/a/a/f/l.d ()La/a/a/c/bo;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(La/a/a/f/l;)La/a/a/f/l;
    Access flags: 0x0
      = a.a.a.f.l c(a.a.a.f.l)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokevirtual #5
        + Methodref [a/a/a/f/l.c ()La/a/a/f/l;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       d(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1000
      = synthetic java.lang.Object d(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #1
        + Class [a/a/a/f/l]
      [5] invokevirtual #10
        + Methodref [a/a/a/f/q.c (La/a/a/f/l;)La/a/a/f/l;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(Ljava/lang/Object;)Ljava/lang/Iterable;
    Access flags: 0x1000
      = synthetic java.lang.Iterable c(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #1
        + Class [a/a/a/f/l]
      [5] invokevirtual #9
        + Methodref [a/a/a/f/q.b (La/a/a/f/l;)Ljava/lang/Iterable;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;)Ljava/lang/Class;
    Access flags: 0x1000
      = synthetic java.lang.Class b(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #1
        + Class [a/a/a/f/l]
      [5] invokevirtual #8
        + Methodref [a/a/a/f/q.a (La/a/a/f/l;)Ljava/lang/Class;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/r
  Superclass:    a/a/a/f/p
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.r extends a.a.a.f.p

Interfaces (count = 0):

Constant Pool (count = 44):
  + Class [a/a/a/f/p]
  + Class [a/a/a/f/r]
  + Class [java/lang/Class]
  + Class [java/util/Arrays]
  + Methodref [a/a/a/f/p.<init> (La/a/a/f/m;)V]
  + Methodref [a/a/a/f/r.a (Ljava/lang/Class;)Ljava/lang/Class;]
  + Methodref [a/a/a/f/r.b (Ljava/lang/Class;)Ljava/lang/Iterable;]
  + Methodref [a/a/a/f/r.c (Ljava/lang/Class;)Ljava/lang/Class;]
  + Methodref [java/lang/Class.getInterfaces ()[Ljava/lang/Class;]
  + Methodref [java/lang/Class.getSuperclass ()Ljava/lang/Class;]
  + Methodref [java/util/Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;]
  + NameAndType [<init> (La/a/a/f/m;)V]
  + NameAndType [a (Ljava/lang/Class;)Ljava/lang/Class;]
  + NameAndType [asList ([Ljava/lang/Object;)Ljava/util/List;]
  + NameAndType [b (Ljava/lang/Class;)Ljava/lang/Iterable;]
  + NameAndType [c (Ljava/lang/Class;)Ljava/lang/Class;]
  + NameAndType [getInterfaces ()[Ljava/lang/Class;]
  + NameAndType [getSuperclass ()Ljava/lang/Class;]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [()V]
  + Utf8 [()[Ljava/lang/Class;]
  + Utf8 [(La/a/a/f/m;)V]
  + Utf8 [(Ljava/lang/Class;)Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/Class;)Ljava/lang/Iterable;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Iterable;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [([Ljava/lang/Object;)Ljava/util/List;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/f/p]
  + Utf8 [a/a/a/f/r]
  + Utf8 [asList]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [getInterfaces]
  + Utf8 [getSuperclass]
  + Utf8 [java/lang/Class]
  + Utf8 [java/util/Arrays]

Fields (count = 0):

Methods (count = 7):
  - Method:       <init>()V
    Access flags: 0x0
      = r()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] aconst_null
      [2] invokespecial #5
        + Methodref [a/a/a/f/p.<init> (La/a/a/f/m;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Class;)Ljava/lang/Class;
    Access flags: 0x0
      = java.lang.Class a(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Class;)Ljava/lang/Iterable;
    Access flags: 0x0
      = java.lang.Iterable b(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokevirtual #9
        + Methodref [java/lang/Class.getInterfaces ()[Ljava/lang/Class;]
      [4] invokestatic #11
        + Methodref [java/util/Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(Ljava/lang/Class;)Ljava/lang/Class;
    Access flags: 0x0
      = java.lang.Class c(java.lang.Class)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokevirtual #10
        + Methodref [java/lang/Class.getSuperclass ()Ljava/lang/Class;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       d(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1000
      = synthetic java.lang.Object d(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #3
        + Class [java/lang/Class]
      [5] invokevirtual #8
        + Methodref [a/a/a/f/r.c (Ljava/lang/Class;)Ljava/lang/Class;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(Ljava/lang/Object;)Ljava/lang/Iterable;
    Access flags: 0x1000
      = synthetic java.lang.Iterable c(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #3
        + Class [java/lang/Class]
      [5] invokevirtual #7
        + Methodref [a/a/a/f/r.b (Ljava/lang/Class;)Ljava/lang/Iterable;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Object;)Ljava/lang/Class;
    Access flags: 0x1000
      = synthetic java.lang.Class b(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #3
        + Class [java/lang/Class]
      [5] invokevirtual #6
        + Methodref [a/a/a/f/r.a (Ljava/lang/Class;)Ljava/lang/Class;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/s
  Superclass:    a/a/a/c/dh
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.s extends a.a.a.c.dh

Interfaces (count = 0):

Constant Pool (count = 31):
  + Class [a/a/a/c/dh]
  + Class [a/a/a/f/s]
  + Class [java/util/Comparator]
  + Class [java/util/Map]
  + Fieldref [a/a/a/f/s.a Ljava/util/Comparator;]
  + Fieldref [a/a/a/f/s.b Ljava/util/Map;]
  + Methodref [a/a/a/c/dh.<init> ()V]
  + InterfaceMethodref [java/util/Comparator.compare (Ljava/lang/Object;Ljava/lang/Object;)I]
  + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [a Ljava/util/Comparator;]
  + NameAndType [b Ljava/util/Map;]
  + NameAndType [compare (Ljava/lang/Object;Ljava/lang/Object;)I]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)I]
  + Utf8 [(Ljava/util/Comparator;Ljava/util/Map;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/util/Comparator;]
  + Utf8 [Ljava/util/Map;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/dh]
  + Utf8 [a/a/a/f/s]
  + Utf8 [b]
  + Utf8 [compare]
  + Utf8 [get]
  + Utf8 [java/util/Comparator]
  + Utf8 [java/util/Map]

Fields (count = 2):
  + Field:        a Ljava/util/Comparator;
    Access flags: 0x1010
      = final synthetic java.util.Comparator a
  + Field:        b Ljava/util/Map;
    Access flags: 0x1010
      = final synthetic java.util.Map b

Methods (count = 2):
  - Method:       <init>(Ljava/util/Comparator;Ljava/util/Map;)V
    Access flags: 0x0
      = s(java.util.Comparator,java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #5
        + Fieldref [a/a/a/f/s.a Ljava/util/Comparator;]
      [5] aload_0 v0
      [6] aload_2 v2
      [7] putfield #6
        + Fieldref [a/a/a/f/s.b Ljava/util/Map;]
      [10] aload_0 v0
      [11] invokespecial #7
        + Methodref [a/a/a/c/dh.<init> ()V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       compare(Ljava/lang/Object;Ljava/lang/Object;)I
    Access flags: 0x1
      = public int compare(java.lang.Object,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 30, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/f/s.a Ljava/util/Comparator;]
      [4] aload_0 v0
      [5] getfield #6
        + Fieldref [a/a/a/f/s.b Ljava/util/Map;]
      [8] aload_1 v1
      [9] invokeinterface #9
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [14] aload_0 v0
      [15] getfield #6
        + Fieldref [a/a/a/f/s.b Ljava/util/Map;]
      [18] aload_2 v2
      [19] invokeinterface #9
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [24] invokeinterface #8
        + InterfaceMethodref [java/util/Comparator.compare (Ljava/lang/Object;Ljava/lang/Object;)I]
      [29] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/t
  Superclass:    java/lang/Enum
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4420
    = enum enum a.a.a.f.t extends java.lang.Enum

Interfaces (count = 1):
  + Class [a/a/a/a/p]

Constant Pool (count = 49):
  + String [IGNORE_TYPE_VARIABLE_OR_WILDCARD]
  + String [INTERFACE_ONLY]
  + Class [[La/a/a/f/t;]
  + Class [a/a/a/a/p]
  + Class [a/a/a/f/t]
  + Class [a/a/a/f/u]
  + Class [a/a/a/f/v]
  + Class [java/lang/Enum]
  + Fieldref [a/a/a/f/t.a La/a/a/f/t;]
  + Fieldref [a/a/a/f/t.b La/a/a/f/t;]
  + Fieldref [a/a/a/f/t.c [La/a/a/f/t;]
  + Methodref [[La/a/a/f/t;.clone ()Ljava/lang/Object;]
  + Methodref [a/a/a/f/t.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/f/u.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/f/v.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + NameAndType [<init> (Ljava/lang/String;I)V]
  + NameAndType [a La/a/a/f/t;]
  + NameAndType [b La/a/a/f/t;]
  + NameAndType [c [La/a/a/f/t;]
  + NameAndType [clone ()Ljava/lang/Object;]
  + NameAndType [valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()[La/a/a/f/t;]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [(Ljava/lang/String;)La/a/a/f/t;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/f/m;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [IGNORE_TYPE_VARIABLE_OR_WILDCARD]
  + Utf8 [INTERFACE_ONLY]
  + Utf8 [La/a/a/f/t;]
  + Utf8 [[La/a/a/f/t;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/p]
  + Utf8 [a/a/a/f/t]
  + Utf8 [a/a/a/f/u]
  + Utf8 [a/a/a/f/v]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clone]
  + Utf8 [java/lang/Enum]
  + Utf8 [valueOf]
  + Utf8 [values]

Fields (count = 3):
  + Field:        a La/a/a/f/t;
    Access flags: 0x4019
      = public static final a.a.a.f.t a
  + Field:        b La/a/a/f/t;
    Access flags: 0x4019
      = public static final a.a.a.f.t b
  + Field:        c [La/a/a/f/t;
    Access flags: 0x101a
      = private static final synthetic a.a.a.f.t[] c

Methods (count = 5):
  + Method:       values()[La/a/a/f/t;
    Access flags: 0x9
      = public static a.a.a.f.t[] values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 0, stack = 1):
      [0] getstatic #11
        + Fieldref [a/a/a/f/t.c [La/a/a/f/t;]
      [3] invokevirtual #12
        + Methodref [[La/a/a/f/t;.clone ()Ljava/lang/Object;]
      [6] checkcast #3
        + Class [[La/a/a/f/t;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       valueOf(Ljava/lang/String;)La/a/a/f/t;
    Access flags: 0x9
      = public static a.a.a.f.t valueOf(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 1, stack = 2):
      [0] ldc_w #5
        + Class [a/a/a/f/t]
      [3] aload_0 v0
      [4] invokestatic #17
        + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
      [7] checkcast #5
        + Class [a/a/a/f/t]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x2
      = private t(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #16
        + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;ILa/a/a/f/m;)V
    Access flags: 0x1000
      = synthetic t(java.lang.String,int,a.a.a.f.m)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #13
        + Methodref [a/a/a/f/t.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 46, locals = 0, stack = 4):
      [0] new #6
        + Class [a/a/a/f/u]
      [3] dup
      [4] ldc #1
        + String [IGNORE_TYPE_VARIABLE_OR_WILDCARD]
      [6] iconst_0
      [7] invokespecial #14
        + Methodref [a/a/a/f/u.<init> (Ljava/lang/String;I)V]
      [10] putstatic #9
        + Fieldref [a/a/a/f/t.a La/a/a/f/t;]
      [13] new #7
        + Class [a/a/a/f/v]
      [16] dup
      [17] ldc #2
        + String [INTERFACE_ONLY]
      [19] iconst_1
      [20] invokespecial #15
        + Methodref [a/a/a/f/v.<init> (Ljava/lang/String;I)V]
      [23] putstatic #10
        + Fieldref [a/a/a/f/t.b La/a/a/f/t;]
      [26] iconst_2
      [27] anewarray #5
        + Class [a/a/a/f/t]
      [30] dup
      [31] iconst_0
      [32] getstatic #9
        + Fieldref [a/a/a/f/t.a La/a/a/f/t;]
      [35] aastore
      [36] dup
      [37] iconst_1
      [38] getstatic #10
        + Fieldref [a/a/a/f/t.b La/a/a/f/t;]
      [41] aastore
      [42] putstatic #11
        + Fieldref [a/a/a/f/t.c [La/a/a/f/t;]
      [45] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/u
  Superclass:    a/a/a/f/t
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.f.u extends a.a.a.f.t

Interfaces (count = 0):

Constant Pool (count = 27):
  + Class [a/a/a/f/l]
  + Class [a/a/a/f/t]
  + Class [a/a/a/f/u]
  + Class [java/lang/reflect/TypeVariable]
  + Class [java/lang/reflect/WildcardType]
  + Methodref [a/a/a/f/l.b (La/a/a/f/l;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/t.<init> (Ljava/lang/String;ILa/a/a/f/m;)V]
  + Methodref [a/a/a/f/u.a (La/a/a/f/l;)Z]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/f/m;)V]
  + NameAndType [a (La/a/a/f/l;)Z]
  + NameAndType [b (La/a/a/f/l;)Ljava/lang/reflect/Type;]
  + Utf8 [(La/a/a/f/l;)Ljava/lang/reflect/Type;]
  + Utf8 [(La/a/a/f/l;)Z]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/f/m;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/f/l]
  + Utf8 [a/a/a/f/t]
  + Utf8 [a/a/a/f/u]
  + Utf8 [b]
  + Utf8 [java/lang/reflect/TypeVariable]
  + Utf8 [java/lang/reflect/WildcardType]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = u(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #7
        + Methodref [a/a/a/f/t.<init> (Ljava/lang/String;ILa/a/a/f/m;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/f/l;)Z
    Access flags: 0x1
      = public boolean a(a.a.a.f.l)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 26, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokestatic #6
        + Methodref [a/a/a/f/l.b (La/a/a/f/l;)Ljava/lang/reflect/Type;]
      [4] instanceof #4
        + Class [java/lang/reflect/TypeVariable]
      [7] ifne +17 (target=24)
      [10] aload_1 v1
      [11] invokestatic #6
        + Methodref [a/a/a/f/l.b (La/a/a/f/l;)Ljava/lang/reflect/Type;]
      [14] instanceof #5
        + Class [java/lang/reflect/WildcardType]
      [17] ifne +7 (target=24)
      [20] iconst_1
      [21] goto +4 (target=25)
      [24] iconst_0
      [25] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [24] Var: ..., Stack: (empty)
        - [25] Var: ..., Stack: [i]
  + Method:       a(Ljava/lang/Object;)Z
    Access flags: 0x1041
      = public bridge synthetic boolean a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #1
        + Class [a/a/a/f/l]
      [5] invokevirtual #8
        + Methodref [a/a/a/f/u.a (La/a/a/f/l;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/v
  Superclass:    a/a/a/f/t
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.f.v extends a.a.a.f.t

Interfaces (count = 0):

Constant Pool (count = 28):
  + Class [a/a/a/f/l]
  + Class [a/a/a/f/t]
  + Class [a/a/a/f/v]
  + Class [java/lang/Class]
  + Methodref [a/a/a/f/l.b ()Ljava/lang/Class;]
  + Methodref [a/a/a/f/t.<init> (Ljava/lang/String;ILa/a/a/f/m;)V]
  + Methodref [a/a/a/f/v.a (La/a/a/f/l;)Z]
  + Methodref [java/lang/Class.isInterface ()Z]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/f/m;)V]
  + NameAndType [a (La/a/a/f/l;)Z]
  + NameAndType [b ()Ljava/lang/Class;]
  + NameAndType [isInterface ()Z]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [()Z]
  + Utf8 [(La/a/a/f/l;)Z]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/f/m;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/f/l]
  + Utf8 [a/a/a/f/t]
  + Utf8 [a/a/a/f/v]
  + Utf8 [b]
  + Utf8 [isInterface]
  + Utf8 [java/lang/Class]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = v(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #6
        + Methodref [a/a/a/f/t.<init> (Ljava/lang/String;ILa/a/a/f/m;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/f/l;)Z
    Access flags: 0x1
      = public boolean a(a.a.a.f.l)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokevirtual #5
        + Methodref [a/a/a/f/l.b ()Ljava/lang/Class;]
      [4] invokevirtual #8
        + Methodref [java/lang/Class.isInterface ()Z]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Z
    Access flags: 0x1041
      = public bridge synthetic boolean a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #1
        + Class [a/a/a/f/l]
      [5] invokevirtual #7
        + Methodref [a/a/a/f/v.a (La/a/a/f/l;)Z]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/w
  Superclass:    a/a/a/c/al
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class a.a.a.f.w extends a.a.a.c.al

Interfaces (count = 1):
  + Class [java/io/Serializable]

Constant Pool (count = 68):
  + Class [a/a/a/c/ah]
  + Class [a/a/a/c/al]
  + Class [a/a/a/c/cb]
  + Class [a/a/a/f/l]
  + Class [a/a/a/f/p]
  + Class [a/a/a/f/t]
  + Class [a/a/a/f/w]
  + Class [java/io/Serializable]
  + Fieldref [a/a/a/f/p.a La/a/a/f/p;]
  + Fieldref [a/a/a/f/p.b La/a/a/f/p;]
  + Fieldref [a/a/a/f/t.a La/a/a/f/t;]
  + Fieldref [a/a/a/f/w.a La/a/a/f/l;]
  + Fieldref [a/a/a/f/w.b La/a/a/c/cb;]
  + Methodref [a/a/a/c/ah.a ()La/a/a/c/cb;]
  + Methodref [a/a/a/c/ah.a (La/a/a/a/p;)La/a/a/c/ah;]
  + Methodref [a/a/a/c/ah.a (Ljava/lang/Iterable;)La/a/a/c/ah;]
  + Methodref [a/a/a/c/al.<init> ()V]
  + Methodref [a/a/a/c/cb.a (Ljava/util/Collection;)La/a/a/c/cb;]
  + Methodref [a/a/a/f/l.a (La/a/a/f/l;)La/a/a/c/cb;]
  + Methodref [a/a/a/f/p.a (Ljava/lang/Iterable;)La/a/a/c/bo;]
  + Methodref [a/a/a/f/p.a (Ljava/lang/Object;)La/a/a/c/bo;]
  + Methodref [a/a/a/f/w.c ()Ljava/util/Set;]
  + NameAndType [<init> ()V]
  + NameAndType [a ()La/a/a/c/cb;]
  + NameAndType [a (La/a/a/a/p;)La/a/a/c/ah;]
  + NameAndType [a (La/a/a/f/l;)La/a/a/c/cb;]
  + NameAndType [a (Ljava/lang/Iterable;)La/a/a/c/ah;]
  + NameAndType [a (Ljava/lang/Iterable;)La/a/a/c/bo;]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/c/bo;]
  + NameAndType [a (Ljava/util/Collection;)La/a/a/c/cb;]
  + NameAndType [a La/a/a/f/l;]
  + NameAndType [a La/a/a/f/p;]
  + NameAndType [a La/a/a/f/t;]
  + NameAndType [b La/a/a/c/cb;]
  + NameAndType [b La/a/a/f/p;]
  + NameAndType [c ()Ljava/util/Set;]
  + Utf8 [()La/a/a/c/cb;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Collection;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/a/p;)La/a/a/c/ah;]
  + Utf8 [(La/a/a/f/l;)La/a/a/c/cb;]
  + Utf8 [(La/a/a/f/l;)V]
  + Utf8 [(Ljava/lang/Iterable;)La/a/a/c/ah;]
  + Utf8 [(Ljava/lang/Iterable;)La/a/a/c/bo;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/bo;]
  + Utf8 [(Ljava/util/Collection;)La/a/a/c/cb;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/cb;]
  + Utf8 [La/a/a/f/l;]
  + Utf8 [La/a/a/f/p;]
  + Utf8 [La/a/a/f/t;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/ah]
  + Utf8 [a/a/a/c/al]
  + Utf8 [a/a/a/c/cb]
  + Utf8 [a/a/a/f/l]
  + Utf8 [a/a/a/f/p]
  + Utf8 [a/a/a/f/t]
  + Utf8 [a/a/a/f/w]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [java/io/Serializable]

Fields (count = 2):
  + Field:        b La/a/a/c/cb;
    Access flags: 0x82
      = private transient a.a.a.c.cb b
  + Field:        a La/a/a/f/l;
    Access flags: 0x1010
      = final synthetic a.a.a.f.l a

Methods (count = 5):
  - Method:       <init>(La/a/a/f/l;)V
    Access flags: 0x0
      = w(a.a.a.f.l)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #12
        + Fieldref [a/a/a/f/w.a La/a/a/f/l;]
      [5] aload_0 v0
      [6] invokespecial #17
        + Methodref [a/a/a/c/al.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c()Ljava/util/Set;
    Access flags: 0x4
      = protected java.util.Set c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 41, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #13
        + Fieldref [a/a/a/f/w.b La/a/a/c/cb;]
      [4] astore_1 v1
      [5] aload_1 v1
      [6] ifnonnull +33 (target=39)
      [9] getstatic #9
        + Fieldref [a/a/a/f/p.a La/a/a/f/p;]
      [12] aload_0 v0
      [13] getfield #12
        + Fieldref [a/a/a/f/w.a La/a/a/f/l;]
      [16] invokevirtual #21
        + Methodref [a/a/a/f/p.a (Ljava/lang/Object;)La/a/a/c/bo;]
      [19] astore_2 v2
      [20] aload_0 v0
      [21] aload_2 v2
      [22] invokestatic #16
        + Methodref [a/a/a/c/ah.a (Ljava/lang/Iterable;)La/a/a/c/ah;]
      [25] getstatic #11
        + Fieldref [a/a/a/f/t.a La/a/a/f/t;]
      [28] invokevirtual #15
        + Methodref [a/a/a/c/ah.a (La/a/a/a/p;)La/a/a/c/ah;]
      [31] invokevirtual #14
        + Methodref [a/a/a/c/ah.a ()La/a/a/c/cb;]
      [34] dup_x1
      [35] putfield #13
        + Fieldref [a/a/a/f/w.b La/a/a/c/cb;]
      [38] areturn
      [39] aload_1 v1
      [40] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [39] Var: ...[a:a/a/a/c/cb], Stack: (empty)
  + Method:       d()Ljava/util/Set;
    Access flags: 0x1
      = public java.util.Set d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 2, stack = 2):
      [0] getstatic #10
        + Fieldref [a/a/a/f/p.b La/a/a/f/p;]
      [3] aload_0 v0
      [4] getfield #12
        + Fieldref [a/a/a/f/w.a La/a/a/f/l;]
      [7] invokestatic #19
        + Methodref [a/a/a/f/l.a (La/a/a/f/l;)La/a/a/c/cb;]
      [10] invokevirtual #20
        + Methodref [a/a/a/f/p.a (Ljava/lang/Iterable;)La/a/a/c/bo;]
      [13] astore_1 v1
      [14] aload_1 v1
      [15] invokestatic #18
        + Methodref [a/a/a/c/cb.a (Ljava/util/Collection;)La/a/a/c/cb;]
      [18] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()Ljava/util/Collection;
    Access flags: 0x1004
      = protected synthetic java.util.Collection a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #22
        + Methodref [a/a/a/f/w.c ()Ljava/util/Set;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()Ljava/lang/Object;
    Access flags: 0x1004
      = protected synthetic java.lang.Object b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #22
        + Methodref [a/a/a/f/w.c ()Ljava/util/Set;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/x
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.f.x extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 84):
  + String [Unknown type: ]
  + Class [[Ljava/lang/reflect/Type;]
  + Class [a/a/a/c/dt]
  + Class [a/a/a/f/x]
  + Class [java/lang/AssertionError]
  + Class [java/lang/Class]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/Throwable]
  + Class [java/lang/reflect/GenericArrayType]
  + Class [java/lang/reflect/ParameterizedType]
  + Class [java/lang/reflect/Type]
  + Class [java/lang/reflect/TypeVariable]
  + Class [java/lang/reflect/WildcardType]
  + Class [java/util/Set]
  + Fieldref [a/a/a/f/x.a Ljava/util/Set;]
  + Methodref [a/a/a/c/dt.a ()Ljava/util/HashSet;]
  + Methodref [a/a/a/f/x.a (Ljava/lang/Class;)V]
  + Methodref [a/a/a/f/x.a (Ljava/lang/reflect/GenericArrayType;)V]
  + Methodref [a/a/a/f/x.a (Ljava/lang/reflect/ParameterizedType;)V]
  + Methodref [a/a/a/f/x.a (Ljava/lang/reflect/TypeVariable;)V]
  + Methodref [a/a/a/f/x.a (Ljava/lang/reflect/WildcardType;)V]
  + Methodref [java/lang/AssertionError.<init> (Ljava/lang/Object;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + InterfaceMethodref [java/util/Set.add (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Set.remove (Ljava/lang/Object;)Z]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [a ()Ljava/util/HashSet;]
  + NameAndType [a (Ljava/lang/Class;)V]
  + NameAndType [a (Ljava/lang/reflect/GenericArrayType;)V]
  + NameAndType [a (Ljava/lang/reflect/ParameterizedType;)V]
  + NameAndType [a (Ljava/lang/reflect/TypeVariable;)V]
  + NameAndType [a (Ljava/lang/reflect/WildcardType;)V]
  + NameAndType [a Ljava/util/Set;]
  + NameAndType [add (Ljava/lang/Object;)Z]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [remove (Ljava/lang/Object;)Z]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/HashSet;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Class;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/reflect/GenericArrayType;)V]
  + Utf8 [(Ljava/lang/reflect/ParameterizedType;)V]
  + Utf8 [(Ljava/lang/reflect/TypeVariable;)V]
  + Utf8 [(Ljava/lang/reflect/WildcardType;)V]
  + Utf8 [([Ljava/lang/reflect/Type;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/util/Set;]
  + Utf8 [Ljavax/annotation/concurrent/NotThreadSafe;]
  + Utf8 [RuntimeInvisibleAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [Unknown type: ]
  + Utf8 [[Ljava/lang/reflect/Type;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/dt]
  + Utf8 [a/a/a/f/x]
  + Utf8 [add]
  + Utf8 [append]
  + Utf8 [java/lang/AssertionError]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/Throwable]
  + Utf8 [java/lang/reflect/GenericArrayType]
  + Utf8 [java/lang/reflect/ParameterizedType]
  + Utf8 [java/lang/reflect/Type]
  + Utf8 [java/lang/reflect/TypeVariable]
  + Utf8 [java/lang/reflect/WildcardType]
  + Utf8 [java/util/Set]
  + Utf8 [remove]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a Ljava/util/Set;
    Access flags: 0x12
      = private final java.util.Set a

Methods (count = 7):
  - Method:       <init>()V
    Access flags: 0x0
      = x()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #24
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] invokestatic #17
        + Methodref [a/a/a/c/dt.a ()Ljava/util/HashSet;]
      [8] putfield #16
        + Fieldref [a/a/a/f/x.a Ljava/util/Set;]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a([Ljava/lang/reflect/Type;)V
    Access flags: 0x91
      = public final varargs void a(java.lang.reflect.Type[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 225, locals = 8, stack = 4):
      [0] aload_1 v1
      [1] astore_2 v2
      [2] aload_2 v2
      [3] arraylength
      [4] istore_3 v3
      [5] iconst_0
      [6] istore v4
      [8] iload v4
      [10] iload_3 v3
      [11] ificmpge +213 (target=224)
      [14] aload_2 v2
      [15] iload v4
      [17] aaload
      [18] astore v5
      [20] aload v5
      [22] ifnull +196 (target=218)
      [25] aload_0 v0
      [26] getfield #16
        + Fieldref [a/a/a/f/x.a Ljava/util/Set;]
      [29] aload v5
      [31] invokeinterface #29
        + InterfaceMethodref [java/util/Set.add (Ljava/lang/Object;)Z]
      [36] ifne +6 (target=42)
      [39] goto +179 (target=218)
      [42] iconst_0
      [43] istore v6
      [45] aload v5
      [47] instanceof #13
        + Class [java/lang/reflect/TypeVariable]
      [50] ifeq +15 (target=65)
      [53] aload_0 v0
      [54] aload v5
      [56] checkcast #13
        + Class [java/lang/reflect/TypeVariable]
      [59] invokevirtual #21
        + Methodref [a/a/a/f/x.a (Ljava/lang/reflect/TypeVariable;)V]
      [62] goto +111 (target=173)
      [65] aload v5
      [67] instanceof #14
        + Class [java/lang/reflect/WildcardType]
      [70] ifeq +15 (target=85)
      [73] aload_0 v0
      [74] aload v5
      [76] checkcast #14
        + Class [java/lang/reflect/WildcardType]
      [79] invokevirtual #22
        + Methodref [a/a/a/f/x.a (Ljava/lang/reflect/WildcardType;)V]
      [82] goto +91 (target=173)
      [85] aload v5
      [87] instanceof #11
        + Class [java/lang/reflect/ParameterizedType]
      [90] ifeq +15 (target=105)
      [93] aload_0 v0
      [94] aload v5
      [96] checkcast #11
        + Class [java/lang/reflect/ParameterizedType]
      [99] invokevirtual #20
        + Methodref [a/a/a/f/x.a (Ljava/lang/reflect/ParameterizedType;)V]
      [102] goto +71 (target=173)
      [105] aload v5
      [107] instanceof #6
        + Class [java/lang/Class]
      [110] ifeq +15 (target=125)
      [113] aload_0 v0
      [114] aload v5
      [116] checkcast #6
        + Class [java/lang/Class]
      [119] invokevirtual #18
        + Methodref [a/a/a/f/x.a (Ljava/lang/Class;)V]
      [122] goto +51 (target=173)
      [125] aload v5
      [127] instanceof #10
        + Class [java/lang/reflect/GenericArrayType]
      [130] ifeq +15 (target=145)
      [133] aload_0 v0
      [134] aload v5
      [136] checkcast #10
        + Class [java/lang/reflect/GenericArrayType]
      [139] invokevirtual #19
        + Methodref [a/a/a/f/x.a (Ljava/lang/reflect/GenericArrayType;)V]
      [142] goto +31 (target=173)
      [145] new #5
        + Class [java/lang/AssertionError]
      [148] dup
      [149] new #8
        + Class [java/lang/StringBuilder]
      [152] dup
      [153] invokespecial #25
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [156] ldc #1
        + String [Unknown type: ]
      [158] invokevirtual #27
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [161] aload v5
      [163] invokevirtual #26
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [166] invokevirtual #28
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [169] invokespecial #23
        + Methodref [java/lang/AssertionError.<init> (Ljava/lang/Object;)V]
      [172] athrow
      [173] iconst_1
      [174] istore v6
      [176] iload v6
      [178] ifne +40 (target=218)
      [181] aload_0 v0
      [182] getfield #16
        + Fieldref [a/a/a/f/x.a Ljava/util/Set;]
      [185] aload v5
      [187] invokeinterface #30
        + InterfaceMethodref [java/util/Set.remove (Ljava/lang/Object;)Z]
      [192] pop
      [193] goto +25 (target=218)
      [196] astore v7
      [198] iload v6
      [200] ifne +15 (target=215)
      [203] aload_0 v0
      [204] getfield #16
        + Fieldref [a/a/a/f/x.a Ljava/util/Set;]
      [207] aload v5
      [209] invokeinterface #30
        + InterfaceMethodref [java/util/Set.remove (Ljava/lang/Object;)Z]
      [214] pop
      [215] aload v7
      [217] athrow
      [218] iinc v4, 1
      [221] goto -213 (target=8)
      [224] return
      Code attribute exceptions (count = 2):
      - ExceptionInfo (45 -> 176: 196):
      - ExceptionInfo (196 -> 198: 196):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 12):
        - [8] Var: ...[a:[Ljava/lang/reflect/Type;][i][i], Stack: (empty)
        - [42] Var: ...[a:java/lang/reflect/Type], Stack: (empty)
        - [65] Var: ...[i], Stack: (empty)
        - [85] Var: ..., Stack: (empty)
        - [105] Var: ..., Stack: (empty)
        - [125] Var: ..., Stack: (empty)
        - [145] Var: ..., Stack: (empty)
        - [173] Var: ..., Stack: (empty)
        - [196] Var: ..., Stack: [a:java/lang/Throwable]
        - [215] Var: ...[a:java/lang/Throwable], Stack: (empty)
        - [218] Var: -3, Stack: (empty)
        - [224] Var: -3, Stack: (empty)
  + Method:       a(Ljava/lang/Class;)V
    Access flags: 0x0
      = void a(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/GenericArrayType;)V
    Access flags: 0x0
      = void a(java.lang.reflect.GenericArrayType)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/ParameterizedType;)V
    Access flags: 0x0
      = void a(java.lang.reflect.ParameterizedType)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/TypeVariable;)V
    Access flags: 0x0
      = void a(java.lang.reflect.TypeVariable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/WildcardType;)V
    Access flags: 0x0
      = void a(java.lang.reflect.WildcardType)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 1):
  + Runtime invisible annotations attribute:
    - Annotation [Ljavax/annotation/concurrent/NotThreadSafe;]:

_____________________________________________________________________
+ Program class: a/a/a/f/y
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.y extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 198):
  + String [, ]
  + String [Owner type for unenclosed %s]
  + String [Primitive type '%s' used as %s]
  + String [Wildcard cannot have more than one lower bounds.]
  + String [Wildcard should have only one upper bound.]
  + String [null]
  + Class [[Ljava/lang/reflect/Type;]
  + Class [a/a/a/a/f]
  + Class [a/a/a/a/o]
  + Class [a/a/a/a/q]
  + Class [a/a/a/c/ch]
  + Class [a/a/a/f/aa]
  + Class [a/a/a/f/ab]
  + Class [a/a/a/f/ah]
  + Class [a/a/a/f/am]
  + Class [a/a/a/f/an]
  + Class [a/a/a/f/ao]
  + Class [a/a/a/f/y]
  + Class [a/a/a/f/z]
  + Class [java/lang/Class]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/reflect/Array]
  + Class [java/lang/reflect/GenericDeclaration]
  + Class [java/lang/reflect/Type]
  + Class [java/lang/reflect/WildcardType]
  + Class [java/util/Collection]
  + Class [java/util/concurrent/atomic/AtomicReference]
  + Fieldref [a/a/a/f/ab.c La/a/a/f/ab;]
  + Fieldref [a/a/a/f/ah.c La/a/a/f/ah;]
  + Fieldref [a/a/a/f/y.a La/a/a/a/e;]
  + Fieldref [a/a/a/f/y.b La/a/a/a/f;]
  + Methodref [a/a/a/a/f.a (Ljava/lang/String;)La/a/a/a/f;]
  + Methodref [a/a/a/a/f.b (Ljava/lang/String;)La/a/a/a/f;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/a/o.a (ZLjava/lang/Object;)V]
  + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Methodref [a/a/a/a/q.a (La/a/a/a/p;)La/a/a/a/p;]
  + Methodref [a/a/a/a/q.a (Ljava/lang/Object;)La/a/a/a/p;]
  + Methodref [a/a/a/c/ch.a (Ljava/lang/Iterable;La/a/a/a/p;)Ljava/lang/Iterable;]
  + Methodref [a/a/a/f/aa.<init> (Ljava/util/concurrent/atomic/AtomicReference;)V]
  + Methodref [a/a/a/f/aa.a ([Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/ab.a (Ljava/lang/Class;)Ljava/lang/Class;]
  + Methodref [a/a/a/f/ah.a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/am.<init> (Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/an.<init> (Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/ao.<init> ([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/y.a (Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;]
  + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/y.b (Ljava/lang/Iterable;)Ljava/lang/Iterable;]
  + Methodref [a/a/a/f/y.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;]
  + Methodref [a/a/a/f/y.b (Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/y.b ([Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/y.b ([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
  + Methodref [a/a/a/f/y.c (Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;]
  + Methodref [a/a/a/f/y.e (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/z.<init> ()V]
  + Methodref [java/lang/Class.getEnclosingClass ()Ljava/lang/Class;]
  + Methodref [java/lang/Class.getName ()Ljava/lang/String;]
  + Methodref [java/lang/Class.isPrimitive ()Z]
  + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
  + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
  + Methodref [java/lang/reflect/Array.newInstance (Ljava/lang/Class;I)Ljava/lang/Object;]
  + Methodref [java/util/concurrent/atomic/AtomicReference.<init> ()V]
  + Methodref [java/util/concurrent/atomic/AtomicReference.get ()Ljava/lang/Object;]
  + InterfaceMethodref [java/lang/reflect/WildcardType.getLowerBounds ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/util/Collection.size ()I]
  + InterfaceMethodref [java/util/Collection.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)V]
  + NameAndType [<init> (Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)V]
  + NameAndType [<init> (Ljava/util/concurrent/atomic/AtomicReference;)V]
  + NameAndType [<init> ([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V]
  + NameAndType [a (La/a/a/a/p;)La/a/a/a/p;]
  + NameAndType [a (Ljava/lang/Class;)Ljava/lang/Class;]
  + NameAndType [a (Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;]
  + NameAndType [a (Ljava/lang/Iterable;La/a/a/a/p;)Ljava/lang/Iterable;]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/a/p;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/String;)La/a/a/a/f;]
  + NameAndType [a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + NameAndType [a (ZLjava/lang/Object;)V]
  + NameAndType [a (ZLjava/lang/String;[Ljava/lang/Object;)V]
  + NameAndType [a ([Ljava/lang/reflect/Type;)V]
  + NameAndType [a La/a/a/a/e;]
  + NameAndType [b (Ljava/lang/Iterable;)Ljava/lang/Iterable;]
  + NameAndType [b (Ljava/lang/String;)La/a/a/a/f;]
  + NameAndType [b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;]
  + NameAndType [b (Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
  + NameAndType [b ([Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + NameAndType [b ([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
  + NameAndType [b La/a/a/a/f;]
  + NameAndType [c (Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;]
  + NameAndType [c La/a/a/f/ab;]
  + NameAndType [c La/a/a/f/ah;]
  + NameAndType [e (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + NameAndType [get ()Ljava/lang/Object;]
  + NameAndType [getClass ()Ljava/lang/Class;]
  + NameAndType [getEnclosingClass ()Ljava/lang/Class;]
  + NameAndType [getLowerBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [getName ()Ljava/lang/String;]
  + NameAndType [getUpperBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [isPrimitive ()Z]
  + NameAndType [newInstance (Ljava/lang/Class;I)Ljava/lang/Object;]
  + NameAndType [size ()I]
  + NameAndType [toArray ([Ljava/lang/Object;)[Ljava/lang/Object;]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/a/e;]
  + Utf8 [()La/a/a/a/f;]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [()[Ljava/lang/reflect/Type;]
  + Utf8 [(La/a/a/a/p;)La/a/a/a/p;]
  + Utf8 [(Ljava/lang/Class;)Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/Class;I)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;]
  + Utf8 [(Ljava/lang/Iterable;)Ljava/lang/Iterable;]
  + Utf8 [(Ljava/lang/Iterable;La/a/a/a/p;)Ljava/lang/Iterable;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/a/p;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;)La/a/a/a/f;]
  + Utf8 [(Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;]
  + Utf8 [(Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)V]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;]
  + Utf8 [(Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;]
  + Utf8 [(Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)V]
  + Utf8 [(Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/util/concurrent/atomic/AtomicReference;)V]
  + Utf8 [(ZLjava/lang/Object;)V]
  + Utf8 [(ZLjava/lang/String;[Ljava/lang/Object;)V]
  + Utf8 [([Ljava/lang/Object;)[Ljava/lang/Object;]
  + Utf8 [([Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Utf8 [([Ljava/lang/reflect/Type;)V]
  + Utf8 [([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
  + Utf8 [([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V]
  + Utf8 [, ]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/e;]
  + Utf8 [La/a/a/a/f;]
  + Utf8 [La/a/a/f/ab;]
  + Utf8 [La/a/a/f/ah;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [Owner type for unenclosed %s]
  + Utf8 [Primitive type '%s' used as %s]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [Wildcard cannot have more than one lower bounds.]
  + Utf8 [Wildcard should have only one upper bound.]
  + Utf8 [[Ljava/lang/reflect/Type;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/f]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/a/q]
  + Utf8 [a/a/a/c/ch]
  + Utf8 [a/a/a/f/aa]
  + Utf8 [a/a/a/f/ab]
  + Utf8 [a/a/a/f/ah]
  + Utf8 [a/a/a/f/am]
  + Utf8 [a/a/a/f/an]
  + Utf8 [a/a/a/f/ao]
  + Utf8 [a/a/a/f/y]
  + Utf8 [a/a/a/f/z]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [get]
  + Utf8 [getClass]
  + Utf8 [getEnclosingClass]
  + Utf8 [getLowerBounds]
  + Utf8 [getName]
  + Utf8 [getUpperBounds]
  + Utf8 [isPrimitive]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/reflect/Array]
  + Utf8 [java/lang/reflect/GenericDeclaration]
  + Utf8 [java/lang/reflect/Type]
  + Utf8 [java/lang/reflect/WildcardType]
  + Utf8 [java/util/Collection]
  + Utf8 [java/util/concurrent/atomic/AtomicReference]
  + Utf8 [newInstance]
  + Utf8 [null]
  + Utf8 [size]
  + Utf8 [toArray]
  + Utf8 [toString]

Fields (count = 2):
  + Field:        a La/a/a/a/e;
    Access flags: 0x1a
      = private static final a.a.a.a.e a
  + Field:        b La/a/a/a/f;
    Access flags: 0x1a
      = private static final a.a.a.a.f b

Methods (count = 20):
  + Method:       a(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
    Access flags: 0x8
      = static java.lang.reflect.Type a(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 92, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] instanceof #26
        + Class [java/lang/reflect/WildcardType]
      [4] ifeq +80 (target=84)
      [7] aload_0 v0
      [8] checkcast #26
        + Class [java/lang/reflect/WildcardType]
      [11] astore_1 v1
      [12] aload_1 v1
      [13] invokeinterface #66
        + InterfaceMethodref [java/lang/reflect/WildcardType.getLowerBounds ()[Ljava/lang/reflect/Type;]
      [18] astore_2 v2
      [19] aload_2 v2
      [20] arraylength
      [21] iconst_1
      [22] ificmpgt +7 (target=29)
      [25] iconst_1
      [26] goto +4 (target=30)
      [29] iconst_0
      [30] ldc #4
        + String [Wildcard cannot have more than one lower bounds.]
      [32] invokestatic #36
        + Methodref [a/a/a/a/o.a (ZLjava/lang/Object;)V]
      [35] aload_2 v2
      [36] arraylength
      [37] iconst_1
      [38] ificmpne +13 (target=51)
      [41] aload_2 v2
      [42] iconst_0
      [43] aaload
      [44] invokestatic #49
        + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [47] invokestatic #55
        + Methodref [a/a/a/f/y.c (Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;]
      [50] areturn
      [51] aload_1 v1
      [52] invokeinterface #67
        + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
      [57] astore_3 v3
      [58] aload_3 v3
      [59] arraylength
      [60] iconst_1
      [61] ificmpne +7 (target=68)
      [64] iconst_1
      [65] goto +4 (target=69)
      [68] iconst_0
      [69] ldc #5
        + String [Wildcard should have only one upper bound.]
      [71] invokestatic #36
        + Methodref [a/a/a/a/o.a (ZLjava/lang/Object;)V]
      [74] aload_3 v3
      [75] iconst_0
      [76] aaload
      [77] invokestatic #49
        + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [80] invokestatic #51
        + Methodref [a/a/a/f/y.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;]
      [83] areturn
      [84] getstatic #30
        + Fieldref [a/a/a/f/ah.c La/a/a/f/ah;]
      [87] aload_0 v0
      [88] invokevirtual #44
        + Methodref [a/a/a/f/ah.a (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [91] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [29] Var: ...[a:java/lang/reflect/WildcardType][a:[Ljava/lang/reflect/Type;], Stack: (empty)
        - [30] Var: ..., Stack: [i]
        - [51] Var: ..., Stack: (empty)
        - [68] Var: ...[a:[Ljava/lang/reflect/Type;], Stack: (empty)
        - [69] Var: ..., Stack: [i]
        - [84] Var: -3, Stack: (empty)
  + Method:       a(Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;
    Access flags: 0x88
      = static varargs java.lang.reflect.ParameterizedType a(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[])
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 51, locals = 3, stack = 6):
      [0] aload_0 v0
      [1] ifnonnull +9 (target=10)
      [4] aload_1 v1
      [5] aload_2 v2
      [6] invokestatic #48
        + Methodref [a/a/a/f/y.a (Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;]
      [9] areturn
      [10] aload_2 v2
      [11] invokestatic #35
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [14] pop
      [15] aload_1 v1
      [16] invokevirtual #58
        + Methodref [java/lang/Class.getEnclosingClass ()Ljava/lang/Class;]
      [19] ifnull +7 (target=26)
      [22] iconst_1
      [23] goto +4 (target=27)
      [26] iconst_0
      [27] ldc #2
        + String [Owner type for unenclosed %s]
      [29] iconst_1
      [30] anewarray #21
        + Class [java/lang/Object]
      [33] dup
      [34] iconst_0
      [35] aload_1 v1
      [36] aastore
      [37] invokestatic #37
        + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
      [40] new #15
        + Class [a/a/a/f/am]
      [43] dup
      [44] aload_0 v0
      [45] aload_1 v1
      [46] aload_2 v2
      [47] invokespecial #45
        + Methodref [a/a/a/f/am.<init> (Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)V]
      [50] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [10] Var: ..., Stack: (empty)
        - [26] Var: ..., Stack: (empty)
        - [27] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;
    Access flags: 0x88
      = static varargs java.lang.reflect.ParameterizedType a(java.lang.Class,java.lang.reflect.Type[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 2, stack = 5):
      [0] new #15
        + Class [a/a/a/f/am]
      [3] dup
      [4] getstatic #29
        + Fieldref [a/a/a/f/ab.c La/a/a/f/ab;]
      [7] aload_0 v0
      [8] invokevirtual #43
        + Methodref [a/a/a/f/ab.a (Ljava/lang/Class;)Ljava/lang/Class;]
      [11] aload_0 v0
      [12] aload_1 v1
      [13] invokespecial #45
        + Methodref [a/a/a/f/am.<init> (Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)V]
      [16] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;
    Access flags: 0x88
      = static varargs java.lang.reflect.TypeVariable a(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.reflect.Type[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 3, stack = 8):
      [0] new #16
        + Class [a/a/a/f/an]
      [3] dup
      [4] aload_0 v0
      [5] aload_1 v1
      [6] aload_2 v2
      [7] arraylength
      [8] ifne +15 (target=23)
      [11] iconst_1
      [12] anewarray #25
        + Class [java/lang/reflect/Type]
      [15] dup
      [16] iconst_0
      [17] ldc #21
        + Class [java/lang/Object]
      [19] aastore
      [20] goto +4 (target=24)
      [23] aload_2 v2
      [24] invokespecial #46
        + Methodref [a/a/a/f/an.<init> (Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)V]
      [27] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [23] Var: [a:java/lang/reflect/GenericDeclaration][a:java/lang/String][a:[Ljava/lang/reflect/Type;], Stack: [u:0][u:0][a:java/lang/reflect/GenericDeclaration][a:java/lang/String]
        - [24] Var: [a:java/lang/reflect/GenericDeclaration][a:java/lang/String][a:[Ljava/lang/reflect/Type;], Stack: [u:0][u:0][a:java/lang/reflect/GenericDeclaration][a:java/lang/String][a:[Ljava/lang/reflect/Type;]
  + Method:       b(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;
    Access flags: 0x8
      = static java.lang.reflect.WildcardType b(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 1, stack = 7):
      [0] new #17
        + Class [a/a/a/f/ao]
      [3] dup
      [4] iconst_0
      [5] anewarray #25
        + Class [java/lang/reflect/Type]
      [8] iconst_1
      [9] anewarray #25
        + Class [java/lang/reflect/Type]
      [12] dup
      [13] iconst_0
      [14] aload_0 v0
      [15] aastore
      [16] invokespecial #47
        + Methodref [a/a/a/f/ao.<init> ([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V]
      [19] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;
    Access flags: 0x8
      = static java.lang.reflect.WildcardType c(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 25, locals = 1, stack = 7):
      [0] new #17
        + Class [a/a/a/f/ao]
      [3] dup
      [4] iconst_1
      [5] anewarray #25
        + Class [java/lang/reflect/Type]
      [8] dup
      [9] iconst_0
      [10] aload_0 v0
      [11] aastore
      [12] iconst_1
      [13] anewarray #25
        + Class [java/lang/reflect/Type]
      [16] dup
      [17] iconst_0
      [18] ldc #21
        + Class [java/lang/Object]
      [20] aastore
      [21] invokespecial #47
        + Methodref [a/a/a/f/ao.<init> ([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V]
      [24] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       d(Ljava/lang/reflect/Type;)Ljava/lang/String;
    Access flags: 0x8
      = static java.lang.String d(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] instanceof #20
        + Class [java/lang/Class]
      [4] ifeq +13 (target=17)
      [7] aload_0 v0
      [8] checkcast #20
        + Class [java/lang/Class]
      [11] invokevirtual #59
        + Methodref [java/lang/Class.getName ()Ljava/lang/String;]
      [14] goto +7 (target=21)
      [17] aload_0 v0
      [18] invokevirtual #62
        + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
      [21] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [17] Var: ..., Stack: (empty)
        - [21] Var: ..., Stack: [a:java/lang/String]
  + Method:       e(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
    Access flags: 0x8
      = static java.lang.reflect.Type e(java.lang.reflect.Type)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 40, locals = 2, stack = 5):
      [0] aload_0 v0
      [1] invokestatic #35
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] new #28
        + Class [java/util/concurrent/atomic/AtomicReference]
      [8] dup
      [9] invokespecial #64
        + Methodref [java/util/concurrent/atomic/AtomicReference.<init> ()V]
      [12] astore_1 v1
      [13] new #12
        + Class [a/a/a/f/aa]
      [16] dup
      [17] aload_1 v1
      [18] invokespecial #41
        + Methodref [a/a/a/f/aa.<init> (Ljava/util/concurrent/atomic/AtomicReference;)V]
      [21] iconst_1
      [22] anewarray #25
        + Class [java/lang/reflect/Type]
      [25] dup
      [26] iconst_0
      [27] aload_0 v0
      [28] aastore
      [29] invokevirtual #42
        + Methodref [a/a/a/f/aa.a ([Ljava/lang/reflect/Type;)V]
      [32] aload_1 v1
      [33] invokevirtual #65
        + Methodref [java/util/concurrent/atomic/AtomicReference.get ()Ljava/lang/Object;]
      [36] checkcast #25
        + Class [java/lang/reflect/Type]
      [39] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b([Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
    Access flags: 0xa
      = private static java.lang.reflect.Type b(java.lang.reflect.Type[])
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 69, locals = 7, stack = 2):
      [0] aload_0 v0
      [1] astore_1 v1
      [2] aload_1 v1
      [3] arraylength
      [4] istore_2 v2
      [5] iconst_0
      [6] istore_3 v3
      [7] iload_3 v3
      [8] iload_2 v2
      [9] ificmpge +58 (target=67)
      [12] aload_1 v1
      [13] iload_3 v3
      [14] aaload
      [15] astore v4
      [17] aload v4
      [19] invokestatic #56
        + Methodref [a/a/a/f/y.e (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [22] astore v5
      [24] aload v5
      [26] ifnull +35 (target=61)
      [29] aload v5
      [31] instanceof #20
        + Class [java/lang/Class]
      [34] ifeq +21 (target=55)
      [37] aload v5
      [39] checkcast #20
        + Class [java/lang/Class]
      [42] astore v6
      [44] aload v6
      [46] invokevirtual #60
        + Methodref [java/lang/Class.isPrimitive ()Z]
      [49] ifeq +6 (target=55)
      [52] aload v6
      [54] areturn
      [55] aload v5
      [57] invokestatic #51
        + Methodref [a/a/a/f/y.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;]
      [60] areturn
      [61] iinc v3, 1
      [64] goto -57 (target=7)
      [67] aconst_null
      [68] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [7] Var: ...[a:[Ljava/lang/reflect/Type;][i][i], Stack: (empty)
        - [55] Var: ...[a:java/lang/reflect/Type][a:java/lang/reflect/Type], Stack: (empty)
        - [61] Var: -2, Stack: (empty)
        - [67] Var: -3, Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b(Ljava/util/Collection;)[Ljava/lang/reflect/Type;
    Access flags: 0xa
      = private static java.lang.reflect.Type[] b(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] aload_0 v0
      [2] invokeinterface #68
        + InterfaceMethodref [java/util/Collection.size ()I]
      [7] anewarray #25
        + Class [java/lang/reflect/Type]
      [10] invokeinterface #69
        + InterfaceMethodref [java/util/Collection.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;]
      [15] checkcast #7
        + Class [[Ljava/lang/reflect/Type;]
      [18] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Iterable;)Ljava/lang/Iterable;
    Access flags: 0xa
      = private static java.lang.Iterable b(java.lang.Iterable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] ldc #21
        + Class [java/lang/Object]
      [3] invokestatic #39
        + Methodref [a/a/a/a/q.a (Ljava/lang/Object;)La/a/a/a/p;]
      [6] invokestatic #38
        + Methodref [a/a/a/a/q.a (La/a/a/a/p;)La/a/a/a/p;]
      [9] invokestatic #40
        + Methodref [a/a/a/c/ch.a (Ljava/lang/Iterable;La/a/a/a/p;)Ljava/lang/Iterable;]
      [12] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b([Ljava/lang/reflect/Type;Ljava/lang/String;)V
    Access flags: 0xa
      = private static void b(java.lang.reflect.Type[],java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 73, locals = 7, stack = 6):
      [0] aload_0 v0
      [1] astore_2 v2
      [2] aload_2 v2
      [3] arraylength
      [4] istore_3 v3
      [5] iconst_0
      [6] istore v4
      [8] iload v4
      [10] iload_3 v3
      [11] ificmpge +61 (target=72)
      [14] aload_2 v2
      [15] iload v4
      [17] aaload
      [18] astore v5
      [20] aload v5
      [22] instanceof #20
        + Class [java/lang/Class]
      [25] ifeq +41 (target=66)
      [28] aload v5
      [30] checkcast #20
        + Class [java/lang/Class]
      [33] astore v6
      [35] aload v6
      [37] invokevirtual #60
        + Methodref [java/lang/Class.isPrimitive ()Z]
      [40] ifne +7 (target=47)
      [43] iconst_1
      [44] goto +4 (target=48)
      [47] iconst_0
      [48] ldc #3
        + String [Primitive type '%s' used as %s]
      [50] iconst_2
      [51] anewarray #21
        + Class [java/lang/Object]
      [54] dup
      [55] iconst_0
      [56] aload v6
      [58] aastore
      [59] dup
      [60] iconst_1
      [61] aload_1 v1
      [62] aastore
      [63] invokestatic #37
        + Methodref [a/a/a/a/o.a (ZLjava/lang/String;[Ljava/lang/Object;)V]
      [66] iinc v4, 1
      [69] goto -61 (target=8)
      [72] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 5):
        - [8] Var: ...[a:[Ljava/lang/reflect/Type;][i][i], Stack: (empty)
        - [47] Var: ...[a:java/lang/reflect/Type][a:java/lang/Class], Stack: (empty)
        - [48] Var: ..., Stack: [i]
        - [66] Var: -2, Stack: (empty)
        - [72] Var: -3, Stack: (empty)
  + Method:       a(Ljava/lang/Class;)Ljava/lang/Class;
    Access flags: 0x8
      = static java.lang.Class a(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] iconst_0
      [2] invokestatic #63
        + Methodref [java/lang/reflect/Array.newInstance (Ljava/lang/Class;I)Ljava/lang/Object;]
      [5] invokevirtual #61
        + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a([Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
    Access flags: 0x1008
      = static synthetic java.lang.reflect.Type a(java.lang.reflect.Type[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokestatic #53
        + Methodref [a/a/a/f/y.b ([Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a([Ljava/lang/reflect/Type;Ljava/lang/String;)V
    Access flags: 0x1008
      = static synthetic void a(java.lang.reflect.Type[],java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #54
        + Methodref [a/a/a/f/y.b ([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/Collection;)[Ljava/lang/reflect/Type;
    Access flags: 0x1008
      = static synthetic java.lang.reflect.Type[] a(java.util.Collection)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokestatic #52
        + Methodref [a/a/a/f/y.b (Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a()La/a/a/a/e;
    Access flags: 0x1008
      = static synthetic a.a.a.a.e a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] getstatic #31
        + Fieldref [a/a/a/f/y.a La/a/a/a/e;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()La/a/a/a/f;
    Access flags: 0x1008
      = static synthetic a.a.a.a.f b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 0, stack = 1):
      [0] getstatic #32
        + Fieldref [a/a/a/f/y.b La/a/a/a/f;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Iterable;)Ljava/lang/Iterable;
    Access flags: 0x1008
      = static synthetic java.lang.Iterable a(java.lang.Iterable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokestatic #50
        + Methodref [a/a/a/f/y.b (Ljava/lang/Iterable;)Ljava/lang/Iterable;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 0, stack = 2):
      [0] new #19
        + Class [a/a/a/f/z]
      [3] dup
      [4] invokespecial #57
        + Methodref [a/a/a/f/z.<init> ()V]
      [7] putstatic #31
        + Fieldref [a/a/a/f/y.a La/a/a/a/e;]
      [10] ldc #1
        + String [, ]
      [12] invokestatic #33
        + Methodref [a/a/a/a/f.a (Ljava/lang/String;)La/a/a/a/f;]
      [15] ldc #6
        + String [null]
      [17] invokevirtual #34
        + Methodref [a/a/a/a/f.b (Ljava/lang/String;)La/a/a/a/f;]
      [20] putstatic #32
        + Fieldref [a/a/a/f/y.b La/a/a/a/f;]
      [23] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/z
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.z extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/a/e]

Constant Pool (count = 24):
  + Class [a/a/a/a/e]
  + Class [a/a/a/f/y]
  + Class [a/a/a/f/z]
  + Class [java/lang/Object]
  + Class [java/lang/reflect/Type]
  + Methodref [a/a/a/f/y.d (Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + Methodref [a/a/a/f/z.a (Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + NameAndType [d (Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/a/e]
  + Utf8 [a/a/a/f/y]
  + Utf8 [a/a/a/f/z]
  + Utf8 [d]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/reflect/Type]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x0
      = z()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #8
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/Type;)Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String a(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokestatic #6
        + Methodref [a/a/a/f/y.d (Ljava/lang/reflect/Type;)Ljava/lang/String;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1041
      = public bridge synthetic java.lang.Object a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #5
        + Class [java/lang/reflect/Type]
      [5] invokevirtual #7
        + Methodref [a/a/a/f/z.a (Ljava/lang/reflect/Type;)Ljava/lang/String;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/aa
  Superclass:    a/a/a/f/x
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.aa extends a.a.a.f.x

Interfaces (count = 0):

Constant Pool (count = 53):
  + Class [a/a/a/f/aa]
  + Class [a/a/a/f/x]
  + Class [a/a/a/f/y]
  + Class [java/lang/Class]
  + Class [java/lang/reflect/GenericArrayType]
  + Class [java/lang/reflect/TypeVariable]
  + Class [java/lang/reflect/WildcardType]
  + Class [java/util/concurrent/atomic/AtomicReference]
  + Fieldref [a/a/a/f/aa.a Ljava/util/concurrent/atomic/AtomicReference;]
  + Methodref [a/a/a/f/x.<init> ()V]
  + Methodref [a/a/a/f/y.a ([Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Methodref [java/lang/Class.getComponentType ()Ljava/lang/Class;]
  + Methodref [java/util/concurrent/atomic/AtomicReference.set (Ljava/lang/Object;)V]
  + InterfaceMethodref [java/lang/reflect/GenericArrayType.getGenericComponentType ()Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/TypeVariable.getBounds ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [<init> ()V]
  + NameAndType [a ([Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + NameAndType [a Ljava/util/concurrent/atomic/AtomicReference;]
  + NameAndType [getBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [getComponentType ()Ljava/lang/Class;]
  + NameAndType [getGenericComponentType ()Ljava/lang/reflect/Type;]
  + NameAndType [getUpperBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [set (Ljava/lang/Object;)V]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [()Ljava/lang/reflect/Type;]
  + Utf8 [()V]
  + Utf8 [()[Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/Class;)V]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/reflect/GenericArrayType;)V]
  + Utf8 [(Ljava/lang/reflect/TypeVariable;)V]
  + Utf8 [(Ljava/lang/reflect/WildcardType;)V]
  + Utf8 [(Ljava/util/concurrent/atomic/AtomicReference;)V]
  + Utf8 [([Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/util/concurrent/atomic/AtomicReference;]
  + Utf8 [a]
  + Utf8 [a/a/a/f/aa]
  + Utf8 [a/a/a/f/x]
  + Utf8 [a/a/a/f/y]
  + Utf8 [getBounds]
  + Utf8 [getComponentType]
  + Utf8 [getGenericComponentType]
  + Utf8 [getUpperBounds]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/reflect/GenericArrayType]
  + Utf8 [java/lang/reflect/TypeVariable]
  + Utf8 [java/lang/reflect/WildcardType]
  + Utf8 [java/util/concurrent/atomic/AtomicReference]
  + Utf8 [set]

Fields (count = 1):
  + Field:        a Ljava/util/concurrent/atomic/AtomicReference;
    Access flags: 0x1010
      = final synthetic java.util.concurrent.atomic.AtomicReference a

Methods (count = 5):
  - Method:       <init>(Ljava/util/concurrent/atomic/AtomicReference;)V
    Access flags: 0x0
      = aa(java.util.concurrent.atomic.AtomicReference)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #9
        + Fieldref [a/a/a/f/aa.a Ljava/util/concurrent/atomic/AtomicReference;]
      [5] aload_0 v0
      [6] invokespecial #10
        + Methodref [a/a/a/f/x.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/TypeVariable;)V
    Access flags: 0x0
      = void a(java.lang.reflect.TypeVariable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/f/aa.a Ljava/util/concurrent/atomic/AtomicReference;]
      [4] aload_1 v1
      [5] invokeinterface #15
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getBounds ()[Ljava/lang/reflect/Type;]
      [10] invokestatic #11
        + Methodref [a/a/a/f/y.a ([Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [13] invokevirtual #13
        + Methodref [java/util/concurrent/atomic/AtomicReference.set (Ljava/lang/Object;)V]
      [16] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/WildcardType;)V
    Access flags: 0x0
      = void a(java.lang.reflect.WildcardType)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/f/aa.a Ljava/util/concurrent/atomic/AtomicReference;]
      [4] aload_1 v1
      [5] invokeinterface #16
        + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
      [10] invokestatic #11
        + Methodref [a/a/a/f/y.a ([Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [13] invokevirtual #13
        + Methodref [java/util/concurrent/atomic/AtomicReference.set (Ljava/lang/Object;)V]
      [16] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/GenericArrayType;)V
    Access flags: 0x0
      = void a(java.lang.reflect.GenericArrayType)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/f/aa.a Ljava/util/concurrent/atomic/AtomicReference;]
      [4] aload_1 v1
      [5] invokeinterface #14
        + InterfaceMethodref [java/lang/reflect/GenericArrayType.getGenericComponentType ()Ljava/lang/reflect/Type;]
      [10] invokevirtual #13
        + Methodref [java/util/concurrent/atomic/AtomicReference.set (Ljava/lang/Object;)V]
      [13] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Class;)V
    Access flags: 0x0
      = void a(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #9
        + Fieldref [a/a/a/f/aa.a Ljava/util/concurrent/atomic/AtomicReference;]
      [4] aload_1 v1
      [5] invokevirtual #12
        + Methodref [java/lang/Class.getComponentType ()Ljava/lang/Class;]
      [8] invokevirtual #13
        + Methodref [java/util/concurrent/atomic/AtomicReference.set (Ljava/lang/Object;)V]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/ab
  Superclass:    java/lang/Enum
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4420
    = enum enum a.a.a.f.ab extends java.lang.Enum

Interfaces (count = 0):

Constant Pool (count = 87):
  + String [LOCAL_CLASS_HAS_NO_OWNER]
  + String [OWNED_BY_ENCLOSING_CLASS]
  + Class [[La/a/a/f/ab;]
  + Class [a/a/a/f/ab]
  + Class [a/a/a/f/ac]
  + Class [a/a/a/f/ad]
  + Class [a/a/a/f/ae]
  + Class [a/a/a/f/af]
  + Class [java/lang/AssertionError]
  + Class [java/lang/Class]
  + Class [java/lang/Enum]
  + Class [java/lang/Object]
  + Class [java/lang/reflect/ParameterizedType]
  + Fieldref [a/a/a/f/ab.a La/a/a/f/ab;]
  + Fieldref [a/a/a/f/ab.b La/a/a/f/ab;]
  + Fieldref [a/a/a/f/ab.c La/a/a/f/ab;]
  + Fieldref [a/a/a/f/ab.d [La/a/a/f/ab;]
  + Methodref [[La/a/a/f/ab;.clone ()Ljava/lang/Object;]
  + Methodref [a/a/a/f/ab.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/f/ab.a ()La/a/a/f/ab;]
  + Methodref [a/a/a/f/ab.a (Ljava/lang/Class;)Ljava/lang/Class;]
  + Methodref [a/a/a/f/ab.values ()[La/a/a/f/ab;]
  + Methodref [a/a/a/f/ac.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/f/ae.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/f/af.<init> ()V]
  + Methodref [java/lang/AssertionError.<init> ()V]
  + Methodref [java/lang/Class.getGenericSuperclass ()Ljava/lang/reflect/Type;]
  + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getOwnerType ()Ljava/lang/reflect/Type;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;I)V]
  + NameAndType [a ()La/a/a/f/ab;]
  + NameAndType [a (Ljava/lang/Class;)Ljava/lang/Class;]
  + NameAndType [a La/a/a/f/ab;]
  + NameAndType [b La/a/a/f/ab;]
  + NameAndType [c La/a/a/f/ab;]
  + NameAndType [clone ()Ljava/lang/Object;]
  + NameAndType [d [La/a/a/f/ab;]
  + NameAndType [getClass ()Ljava/lang/Class;]
  + NameAndType [getGenericSuperclass ()Ljava/lang/reflect/Type;]
  + NameAndType [getOwnerType ()Ljava/lang/reflect/Type;]
  + NameAndType [valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + NameAndType [values ()[La/a/a/f/ab;]
  + Utf8 [()La/a/a/f/ab;]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/reflect/Type;]
  + Utf8 [()V]
  + Utf8 [()[La/a/a/f/ab;]
  + Utf8 [(Ljava/lang/Class;)Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [(Ljava/lang/String;)La/a/a/f/ab;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/f/z;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [LOCAL_CLASS_HAS_NO_OWNER]
  + Utf8 [La/a/a/f/ab;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [OWNED_BY_ENCLOSING_CLASS]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [[La/a/a/f/ab;]
  + Utf8 [a]
  + Utf8 [a/a/a/f/ab]
  + Utf8 [a/a/a/f/ac]
  + Utf8 [a/a/a/f/ad]
  + Utf8 [a/a/a/f/ae]
  + Utf8 [a/a/a/f/af]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clone]
  + Utf8 [d]
  + Utf8 [getClass]
  + Utf8 [getGenericSuperclass]
  + Utf8 [getOwnerType]
  + Utf8 [java/lang/AssertionError]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Enum]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/reflect/ParameterizedType]
  + Utf8 [valueOf]
  + Utf8 [values]

Fields (count = 4):
  + Field:        a La/a/a/f/ab;
    Access flags: 0x4019
      = public static final a.a.a.f.ab a
  + Field:        b La/a/a/f/ab;
    Access flags: 0x4019
      = public static final a.a.a.f.ab b
  + Field:        c La/a/a/f/ab;
    Access flags: 0x18
      = static final a.a.a.f.ab c
  + Field:        d [La/a/a/f/ab;
    Access flags: 0x101a
      = private static final synthetic a.a.a.f.ab[] d

Methods (count = 7):
  + Method:       values()[La/a/a/f/ab;
    Access flags: 0x9
      = public static a.a.a.f.ab[] values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 0, stack = 1):
      [0] getstatic #17
        + Fieldref [a/a/a/f/ab.d [La/a/a/f/ab;]
      [3] invokevirtual #18
        + Methodref [[La/a/a/f/ab;.clone ()Ljava/lang/Object;]
      [6] checkcast #3
        + Class [[La/a/a/f/ab;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       valueOf(Ljava/lang/String;)La/a/a/f/ab;
    Access flags: 0x9
      = public static a.a.a.f.ab valueOf(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 2):
      [0] ldc #4
        + Class [a/a/a/f/ab]
      [2] aload_0 v0
      [3] invokestatic #29
        + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
      [6] checkcast #4
        + Class [a/a/a/f/ab]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x2
      = private ab(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #28
        + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Class;)Ljava/lang/Class;
    Access flags: 0x400
      = abstract java.lang.Class a(java.lang.Class)
    Class member attributes (count = 1):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a()La/a/a/f/ab;
    Access flags: 0xa
      = private static a.a.a.f.ab a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 74, locals = 6, stack = 2):
      [0] new #8
        + Class [a/a/a/f/af]
      [3] dup
      [4] invokespecial #25
        + Methodref [a/a/a/f/af.<init> ()V]
      [7] invokevirtual #30
        + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
      [10] astore_0 v0
      [11] aload_0 v0
      [12] invokevirtual #27
        + Methodref [java/lang/Class.getGenericSuperclass ()Ljava/lang/reflect/Type;]
      [15] checkcast #13
        + Class [java/lang/reflect/ParameterizedType]
      [18] astore_1 v1
      [19] invokestatic #22
        + Methodref [a/a/a/f/ab.values ()[La/a/a/f/ab;]
      [22] astore_2 v2
      [23] aload_2 v2
      [24] arraylength
      [25] istore_3 v3
      [26] iconst_0
      [27] istore v4
      [29] iload v4
      [31] iload_3 v3
      [32] ificmpge +34 (target=66)
      [35] aload_2 v2
      [36] iload v4
      [38] aaload
      [39] astore v5
      [41] aload v5
      [43] ldc #6
        + Class [a/a/a/f/ad]
      [45] invokevirtual #21
        + Methodref [a/a/a/f/ab.a (Ljava/lang/Class;)Ljava/lang/Class;]
      [48] aload_1 v1
      [49] invokeinterface #31
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getOwnerType ()Ljava/lang/reflect/Type;]
      [54] ifacmpne +6 (target=60)
      [57] aload v5
      [59] areturn
      [60] iinc v4, 1
      [63] goto -34 (target=29)
      [66] new #9
        + Class [java/lang/AssertionError]
      [69] dup
      [70] invokespecial #26
        + Methodref [java/lang/AssertionError.<init> ()V]
      [73] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [29] Var: [a:java/lang/Class][a:java/lang/reflect/ParameterizedType][a:[La/a/a/f/ab;][i][i], Stack: 
        - [60] Var: ..., Stack: (empty)
        - [66] Var: -3, Stack: (empty)
  - Method:       <init>(Ljava/lang/String;ILa/a/a/f/z;)V
    Access flags: 0x1000
      = synthetic ab(java.lang.String,int,a.a.a.f.z)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #19
        + Methodref [a/a/a/f/ab.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 52, locals = 0, stack = 4):
      [0] new #5
        + Class [a/a/a/f/ac]
      [3] dup
      [4] ldc #2
        + String [OWNED_BY_ENCLOSING_CLASS]
      [6] iconst_0
      [7] invokespecial #23
        + Methodref [a/a/a/f/ac.<init> (Ljava/lang/String;I)V]
      [10] putstatic #14
        + Fieldref [a/a/a/f/ab.a La/a/a/f/ab;]
      [13] new #7
        + Class [a/a/a/f/ae]
      [16] dup
      [17] ldc #1
        + String [LOCAL_CLASS_HAS_NO_OWNER]
      [19] iconst_1
      [20] invokespecial #24
        + Methodref [a/a/a/f/ae.<init> (Ljava/lang/String;I)V]
      [23] putstatic #15
        + Fieldref [a/a/a/f/ab.b La/a/a/f/ab;]
      [26] iconst_2
      [27] anewarray #4
        + Class [a/a/a/f/ab]
      [30] dup
      [31] iconst_0
      [32] getstatic #14
        + Fieldref [a/a/a/f/ab.a La/a/a/f/ab;]
      [35] aastore
      [36] dup
      [37] iconst_1
      [38] getstatic #15
        + Fieldref [a/a/a/f/ab.b La/a/a/f/ab;]
      [41] aastore
      [42] putstatic #17
        + Fieldref [a/a/a/f/ab.d [La/a/a/f/ab;]
      [45] invokestatic #20
        + Methodref [a/a/a/f/ab.a ()La/a/a/f/ab;]
      [48] putstatic #16
        + Fieldref [a/a/a/f/ab.c La/a/a/f/ab;]
      [51] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/ac
  Superclass:    a/a/a/f/ab
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.f.ac extends a.a.a.f.ab

Interfaces (count = 0):

Constant Pool (count = 21):
  + Class [a/a/a/f/ab]
  + Class [a/a/a/f/ac]
  + Class [java/lang/Class]
  + Methodref [a/a/a/f/ab.<init> (Ljava/lang/String;ILa/a/a/f/z;)V]
  + Methodref [java/lang/Class.getEnclosingClass ()Ljava/lang/Class;]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/f/z;)V]
  + NameAndType [getEnclosingClass ()Ljava/lang/Class;]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/Class;)Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/f/z;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/f/ab]
  + Utf8 [a/a/a/f/ac]
  + Utf8 [getEnclosingClass]
  + Utf8 [java/lang/Class]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = ac(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #4
        + Methodref [a/a/a/f/ab.<init> (Ljava/lang/String;ILa/a/a/f/z;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Class;)Ljava/lang/Class;
    Access flags: 0x0
      = java.lang.Class a(java.lang.Class)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokevirtual #5
        + Methodref [java/lang/Class.getEnclosingClass ()Ljava/lang/Class;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/ad
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.f.ad extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 10):
  + Class [a/a/a/f/ad]
  + Class [java/lang/Object]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a/a/a/f/ad]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x0
      = ad()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #3
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/ae
  Superclass:    a/a/a/f/ab
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.f.ae extends a.a.a.f.ab

Interfaces (count = 0):

Constant Pool (count = 26):
  + Class [a/a/a/f/ab]
  + Class [a/a/a/f/ae]
  + Class [java/lang/Class]
  + Methodref [a/a/a/f/ab.<init> (Ljava/lang/String;ILa/a/a/f/z;)V]
  + Methodref [java/lang/Class.getEnclosingClass ()Ljava/lang/Class;]
  + Methodref [java/lang/Class.isLocalClass ()Z]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/f/z;)V]
  + NameAndType [getEnclosingClass ()Ljava/lang/Class;]
  + NameAndType [isLocalClass ()Z]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Class;)Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/f/z;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/f/ab]
  + Utf8 [a/a/a/f/ae]
  + Utf8 [getEnclosingClass]
  + Utf8 [isLocalClass]
  + Utf8 [java/lang/Class]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = ae(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #4
        + Methodref [a/a/a/f/ab.<init> (Ljava/lang/String;ILa/a/a/f/z;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Class;)Ljava/lang/Class;
    Access flags: 0x0
      = java.lang.Class a(java.lang.Class)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 14, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokevirtual #6
        + Methodref [java/lang/Class.isLocalClass ()Z]
      [4] ifeq +5 (target=9)
      [7] aconst_null
      [8] areturn
      [9] aload_1 v1
      [10] invokevirtual #5
        + Methodref [java/lang/Class.getEnclosingClass ()Ljava/lang/Class;]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [9] Var: ..., Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/af
  Superclass:    a/a/a/f/ad
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.af extends a.a.a.f.ad

Interfaces (count = 0):

Constant Pool (count = 10):
  + Class [a/a/a/f/ad]
  + Class [a/a/a/f/af]
  + Methodref [a/a/a/f/ad.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a/a/a/f/ad]
  + Utf8 [a/a/a/f/af]

Fields (count = 0):

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x0
      = af()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #3
        + Methodref [a/a/a/f/ad.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/ag
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.ag extends java.lang.Object

Interfaces (count = 2):
  + Class [java/io/Serializable]
  + Class [java/lang/reflect/GenericArrayType]

Constant Pool (count = 65):
  + String [[]]
  + Class [a/a/a/a/i]
  + Class [a/a/a/f/ag]
  + Class [a/a/a/f/ah]
  + Class [a/a/a/f/y]
  + Class [java/io/Serializable]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/reflect/GenericArrayType]
  + Fieldref [a/a/a/f/ag.a Ljava/lang/reflect/Type;]
  + Fieldref [a/a/a/f/ah.c La/a/a/f/ah;]
  + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/f/ag.getGenericComponentType ()Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/ah.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/y.d (Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + InterfaceMethodref [java/lang/reflect/GenericArrayType.getGenericComponentType ()Ljava/lang/reflect/Type;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [a Ljava/lang/reflect/Type;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + NameAndType [c La/a/a/f/ah;]
  + NameAndType [d (Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + NameAndType [getGenericComponentType ()Ljava/lang/reflect/Type;]
  + NameAndType [hashCode ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/reflect/Type;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/reflect/Type;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/f/ah;]
  + Utf8 [Ljava/lang/reflect/Type;]
  + Utf8 [StackMapTable]
  + Utf8 [[]]
  + Utf8 [a]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/f/ag]
  + Utf8 [a/a/a/f/ah]
  + Utf8 [a/a/a/f/y]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [equals]
  + Utf8 [getGenericComponentType]
  + Utf8 [hashCode]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/reflect/GenericArrayType]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a Ljava/lang/reflect/Type;
    Access flags: 0x12
      = private final java.lang.reflect.Type a

Methods (count = 5):
  - Method:       <init>(Ljava/lang/reflect/Type;)V
    Access flags: 0x0
      = ag(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #16
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] getstatic #11
        + Fieldref [a/a/a/f/ah.c La/a/a/f/ah;]
      [8] aload_1 v1
      [9] invokevirtual #14
        + Methodref [a/a/a/f/ah.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [12] putfield #10
        + Fieldref [a/a/a/f/ag.a Ljava/lang/reflect/Type;]
      [15] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getGenericComponentType()Ljava/lang/reflect/Type;
    Access flags: 0x1
      = public java.lang.reflect.Type getGenericComponentType()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/f/ag.a Ljava/lang/reflect/Type;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 26, locals = 1, stack = 2):
      [0] new #8
        + Class [java/lang/StringBuilder]
      [3] dup
      [4] invokespecial #18
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [7] aload_0 v0
      [8] getfield #10
        + Fieldref [a/a/a/f/ag.a Ljava/lang/reflect/Type;]
      [11] invokestatic #15
        + Methodref [a/a/a/f/y.d (Ljava/lang/reflect/Type;)Ljava/lang/String;]
      [14] invokevirtual #19
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [17] ldc #1
        + String [[]]
      [19] invokevirtual #19
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [22] invokevirtual #20
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [25] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/f/ag.a Ljava/lang/reflect/Type;]
      [4] invokevirtual #17
        + Methodref [java/lang/Object.hashCode ()I]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] instanceof #9
        + Class [java/lang/reflect/GenericArrayType]
      [4] ifeq +22 (target=26)
      [7] aload_1 v1
      [8] checkcast #9
        + Class [java/lang/reflect/GenericArrayType]
      [11] astore_2 v2
      [12] aload_0 v0
      [13] invokevirtual #13
        + Methodref [a/a/a/f/ag.getGenericComponentType ()Ljava/lang/reflect/Type;]
      [16] aload_2 v2
      [17] invokeinterface #21
        + InterfaceMethodref [java/lang/reflect/GenericArrayType.getGenericComponentType ()Ljava/lang/reflect/Type;]
      [22] invokestatic #12
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [25] ireturn
      [26] iconst_0
      [27] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [26] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/ah
  Superclass:    java/lang/Enum
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4420
    = enum enum a.a.a.f.ah extends java.lang.Enum

Interfaces (count = 0):

Constant Pool (count = 80):
  + String [JAVA6]
  + String [JAVA7]
  + Class [[La/a/a/f/ah;]
  + Class [[Ljava/lang/reflect/Type;]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/bq]
  + Class [a/a/a/f/ah]
  + Class [a/a/a/f/ai]
  + Class [a/a/a/f/aj]
  + Class [a/a/a/f/ak]
  + Class [java/lang/Class]
  + Class [java/lang/Enum]
  + Fieldref [a/a/a/f/ah.a La/a/a/f/ah;]
  + Fieldref [a/a/a/f/ah.b La/a/a/f/ah;]
  + Fieldref [a/a/a/f/ah.c La/a/a/f/ah;]
  + Fieldref [a/a/a/f/ah.d [La/a/a/f/ah;]
  + Methodref [[La/a/a/f/ah;.clone ()Ljava/lang/Object;]
  + Methodref [a/a/a/c/bo.h ()La/a/a/c/bq;]
  + Methodref [a/a/a/c/bq.a ()La/a/a/c/bo;]
  + Methodref [a/a/a/c/bq.c (Ljava/lang/Object;)La/a/a/c/bq;]
  + Methodref [a/a/a/f/ah.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/f/ah.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/ai.<init> ()V]
  + Methodref [a/a/a/f/ai.a ()Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/aj.<init> (Ljava/lang/String;I)V]
  + Methodref [a/a/a/f/ak.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;I)V]
  + NameAndType [a ()La/a/a/c/bo;]
  + NameAndType [a ()Ljava/lang/reflect/Type;]
  + NameAndType [a La/a/a/f/ah;]
  + NameAndType [b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + NameAndType [b La/a/a/f/ah;]
  + NameAndType [c (Ljava/lang/Object;)La/a/a/c/bq;]
  + NameAndType [c La/a/a/f/ah;]
  + NameAndType [clone ()Ljava/lang/Object;]
  + NameAndType [d [La/a/a/f/ah;]
  + NameAndType [h ()La/a/a/c/bq;]
  + NameAndType [valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [()La/a/a/c/bo;]
  + Utf8 [()La/a/a/c/bq;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/reflect/Type;]
  + Utf8 [()V]
  + Utf8 [()[La/a/a/f/ah;]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/c/bq;]
  + Utf8 [(Ljava/lang/String;)La/a/a/f/ah;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/f/z;)V]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Utf8 [([Ljava/lang/reflect/Type;)La/a/a/c/bo;]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [JAVA6]
  + Utf8 [JAVA7]
  + Utf8 [La/a/a/f/ah;]
  + Utf8 [StackMapTable]
  + Utf8 [[La/a/a/f/ah;]
  + Utf8 [[Ljava/lang/reflect/Type;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/bq]
  + Utf8 [a/a/a/f/ah]
  + Utf8 [a/a/a/f/ai]
  + Utf8 [a/a/a/f/aj]
  + Utf8 [a/a/a/f/ak]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [clone]
  + Utf8 [d]
  + Utf8 [h]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Enum]
  + Utf8 [valueOf]
  + Utf8 [values]

Fields (count = 4):
  + Field:        a La/a/a/f/ah;
    Access flags: 0x4019
      = public static final a.a.a.f.ah a
  + Field:        b La/a/a/f/ah;
    Access flags: 0x4019
      = public static final a.a.a.f.ah b
  + Field:        c La/a/a/f/ah;
    Access flags: 0x18
      = static final a.a.a.f.ah c
  + Field:        d [La/a/a/f/ah;
    Access flags: 0x101a
      = private static final synthetic a.a.a.f.ah[] d

Methods (count = 8):
  + Method:       values()[La/a/a/f/ah;
    Access flags: 0x9
      = public static a.a.a.f.ah[] values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 0, stack = 1):
      [0] getstatic #16
        + Fieldref [a/a/a/f/ah.d [La/a/a/f/ah;]
      [3] invokevirtual #17
        + Methodref [[La/a/a/f/ah;.clone ()Ljava/lang/Object;]
      [6] checkcast #3
        + Class [[La/a/a/f/ah;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       valueOf(Ljava/lang/String;)La/a/a/f/ah;
    Access flags: 0x9
      = public static a.a.a.f.ah valueOf(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 2):
      [0] ldc #7
        + Class [a/a/a/f/ah]
      [2] aload_0 v0
      [3] invokestatic #28
        + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
      [6] checkcast #7
        + Class [a/a/a/f/ah]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x2
      = private ah(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #27
        + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
    Access flags: 0x400
      = abstract java.lang.reflect.Type a(java.lang.reflect.Type)
  + Method:       b(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
    Access flags: 0x400
      = abstract java.lang.reflect.Type b(java.lang.reflect.Type)
  + Method:       a([Ljava/lang/reflect/Type;)La/a/a/c/bo;
    Access flags: 0x10
      = final a.a.a.c.bo a(java.lang.reflect.Type[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 48, locals = 7, stack = 3):
      [0] invokestatic #18
        + Methodref [a/a/a/c/bo.h ()La/a/a/c/bq;]
      [3] astore_2 v2
      [4] aload_1 v1
      [5] astore_3 v3
      [6] aload_3 v3
      [7] arraylength
      [8] istore v4
      [10] iconst_0
      [11] istore v5
      [13] iload v5
      [15] iload v4
      [17] ificmpge +26 (target=43)
      [20] aload_3 v3
      [21] iload v5
      [23] aaload
      [24] astore v6
      [26] aload_2 v2
      [27] aload_0 v0
      [28] aload v6
      [30] invokevirtual #22
        + Methodref [a/a/a/f/ah.b (Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
      [33] invokevirtual #20
        + Methodref [a/a/a/c/bq.c (Ljava/lang/Object;)La/a/a/c/bq;]
      [36] pop
      [37] iinc v5, 1
      [40] goto -27 (target=13)
      [43] aload_2 v2
      [44] invokevirtual #19
        + Methodref [a/a/a/c/bq.a ()La/a/a/c/bo;]
      [47] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: [a:a/a/a/f/ah][a:[Ljava/lang/reflect/Type;][a:a/a/a/c/bq][a:[Ljava/lang/reflect/Type;][i][i], Stack: 
        - [43] Var: -3, Stack: (empty)
  - Method:       <init>(Ljava/lang/String;ILa/a/a/f/z;)V
    Access flags: 0x1000
      = synthetic ah(java.lang.String,int,a.a.a.f.z)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #21
        + Methodref [a/a/a/f/ah.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 74, locals = 0, stack = 4):
      [0] new #9
        + Class [a/a/a/f/aj]
      [3] dup
      [4] ldc #1
        + String [JAVA6]
      [6] iconst_0
      [7] invokespecial #25
        + Methodref [a/a/a/f/aj.<init> (Ljava/lang/String;I)V]
      [10] putstatic #13
        + Fieldref [a/a/a/f/ah.a La/a/a/f/ah;]
      [13] new #10
        + Class [a/a/a/f/ak]
      [16] dup
      [17] ldc #2
        + String [JAVA7]
      [19] iconst_1
      [20] invokespecial #26
        + Methodref [a/a/a/f/ak.<init> (Ljava/lang/String;I)V]
      [23] putstatic #14
        + Fieldref [a/a/a/f/ah.b La/a/a/f/ah;]
      [26] iconst_2
      [27] anewarray #7
        + Class [a/a/a/f/ah]
      [30] dup
      [31] iconst_0
      [32] getstatic #13
        + Fieldref [a/a/a/f/ah.a La/a/a/f/ah;]
      [35] aastore
      [36] dup
      [37] iconst_1
      [38] getstatic #14
        + Fieldref [a/a/a/f/ah.b La/a/a/f/ah;]
      [41] aastore
      [42] putstatic #16
        + Fieldref [a/a/a/f/ah.d [La/a/a/f/ah;]
      [45] new #8
        + Class [a/a/a/f/ai]
      [48] dup
      [49] invokespecial #23
        + Methodref [a/a/a/f/ai.<init> ()V]
      [52] invokevirtual #24
        + Methodref [a/a/a/f/ai.a ()Ljava/lang/reflect/Type;]
      [55] instanceof #11
        + Class [java/lang/Class]
      [58] ifeq +9 (target=67)
      [61] getstatic #14
        + Fieldref [a/a/a/f/ah.b La/a/a/f/ah;]
      [64] goto +6 (target=70)
      [67] getstatic #13
        + Fieldref [a/a/a/f/ah.a La/a/a/f/ah;]
      [70] putstatic #15
        + Fieldref [a/a/a/f/ah.c La/a/a/f/ah;]
      [73] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [67] Var: ..., Stack: (empty)
        - [70] Var: ..., Stack: [a:a/a/a/f/ah]

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/ai
  Superclass:    a/a/a/f/d
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.ai extends a.a.a.f.d

Interfaces (count = 0):

Constant Pool (count = 10):
  + Class [a/a/a/f/ai]
  + Class [a/a/a/f/d]
  + Methodref [a/a/a/f/d.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a/a/a/f/ai]
  + Utf8 [a/a/a/f/d]

Fields (count = 0):

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x0
      = ai()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #3
        + Methodref [a/a/a/f/d.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/aj
  Superclass:    a/a/a/f/ah
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.f.aj extends a.a.a.f.ah

Interfaces (count = 0):

Constant Pool (count = 39):
  + Class [a/a/a/a/o]
  + Class [a/a/a/f/ag]
  + Class [a/a/a/f/ah]
  + Class [a/a/a/f/aj]
  + Class [java/lang/Class]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/f/ag.<init> (Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/ah.<init> (Ljava/lang/String;ILa/a/a/f/z;)V]
  + Methodref [a/a/a/f/aj.c (Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;]
  + Methodref [java/lang/Class.getComponentType ()Ljava/lang/Class;]
  + Methodref [java/lang/Class.isArray ()Z]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/f/z;)V]
  + NameAndType [<init> (Ljava/lang/reflect/Type;)V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [c (Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;]
  + NameAndType [getComponentType ()Ljava/lang/Class;]
  + NameAndType [isArray ()Z]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [()Z]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/f/z;)V]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/reflect/Type;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/f/ag]
  + Utf8 [a/a/a/f/ah]
  + Utf8 [a/a/a/f/aj]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [getComponentType]
  + Utf8 [isArray]
  + Utf8 [java/lang/Class]

Fields (count = 0):

Methods (count = 4):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = aj(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #8
        + Methodref [a/a/a/f/ah.<init> (Ljava/lang/String;ILa/a/a/f/z;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       c(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;
    Access flags: 0x0
      = java.lang.reflect.GenericArrayType c(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 3):
      [0] new #2
        + Class [a/a/a/f/ag]
      [3] dup
      [4] aload_1 v1
      [5] invokespecial #7
        + Methodref [a/a/a/f/ag.<init> (Ljava/lang/reflect/Type;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
    Access flags: 0x0
      = java.lang.reflect.Type b(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 38, locals = 3, stack = 3):
      [0] aload_1 v1
      [1] invokestatic #6
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_1 v1
      [6] instanceof #5
        + Class [java/lang/Class]
      [9] ifeq +27 (target=36)
      [12] aload_1 v1
      [13] checkcast #5
        + Class [java/lang/Class]
      [16] astore_2 v2
      [17] aload_2 v2
      [18] invokevirtual #11
        + Methodref [java/lang/Class.isArray ()Z]
      [21] ifeq +15 (target=36)
      [24] new #2
        + Class [a/a/a/f/ag]
      [27] dup
      [28] aload_2 v2
      [29] invokevirtual #10
        + Methodref [java/lang/Class.getComponentType ()Ljava/lang/Class;]
      [32] invokespecial #7
        + Methodref [a/a/a/f/ag.<init> (Ljava/lang/reflect/Type;)V]
      [35] areturn
      [36] aload_1 v1
      [37] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [36] Var: ..., Stack: (empty)
  + Method:       a(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
    Access flags: 0x1000
      = synthetic java.lang.reflect.Type a(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #9
        + Methodref [a/a/a/f/aj.c (Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/ak
  Superclass:    a/a/a/f/ah
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4030
    = final enum enum a.a.a.f.ak extends a.a.a.f.ah

Interfaces (count = 0):

Constant Pool (count = 34):
  + Class [a/a/a/a/o]
  + Class [a/a/a/f/ag]
  + Class [a/a/a/f/ah]
  + Class [a/a/a/f/ak]
  + Class [a/a/a/f/y]
  + Class [java/lang/Class]
  + Class [java/lang/reflect/Type]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/f/ag.<init> (Ljava/lang/reflect/Type;)V]
  + Methodref [a/a/a/f/ah.<init> (Ljava/lang/String;ILa/a/a/f/z;)V]
  + Methodref [a/a/a/f/y.a (Ljava/lang/Class;)Ljava/lang/Class;]
  + NameAndType [<init> (Ljava/lang/String;ILa/a/a/f/z;)V]
  + NameAndType [<init> (Ljava/lang/reflect/Type;)V]
  + NameAndType [a (Ljava/lang/Class;)Ljava/lang/Class;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Class;)Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Ljava/lang/String;ILa/a/a/f/z;)V]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/reflect/Type;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/f/ag]
  + Utf8 [a/a/a/f/ah]
  + Utf8 [a/a/a/f/ak]
  + Utf8 [a/a/a/f/y]
  + Utf8 [b]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/reflect/Type]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x0
      = ak(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] aconst_null
      [4] invokespecial #10
        + Methodref [a/a/a/f/ah.<init> (Ljava/lang/String;ILa/a/a/f/z;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
    Access flags: 0x0
      = java.lang.reflect.Type a(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 2, stack = 3):
      [0] aload_1 v1
      [1] instanceof #6
        + Class [java/lang/Class]
      [4] ifeq +11 (target=15)
      [7] aload_1 v1
      [8] checkcast #6
        + Class [java/lang/Class]
      [11] invokestatic #11
        + Methodref [a/a/a/f/y.a (Ljava/lang/Class;)Ljava/lang/Class;]
      [14] areturn
      [15] new #2
        + Class [a/a/a/f/ag]
      [18] dup
      [19] aload_1 v1
      [20] invokespecial #9
        + Methodref [a/a/a/f/ag.<init> (Ljava/lang/reflect/Type;)V]
      [23] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [15] Var: ..., Stack: (empty)
  + Method:       b(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
    Access flags: 0x0
      = java.lang.reflect.Type b(java.lang.reflect.Type)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokestatic #8
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] checkcast #7
        + Class [java/lang/reflect/Type]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/al
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.al extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 35):
  + String [X]
  + Class [a/a/a/f/al]
  + Class [a/a/a/f/y]
  + Class [java/lang/Class]
  + Class [java/lang/Object]
  + Class [java/lang/reflect/Type]
  + Fieldref [a/a/a/f/al.a Z]
  + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;]
  + Methodref [java/lang/Class.getTypeParameters ()[Ljava/lang/reflect/TypeVariable;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;]
  + NameAndType [a Z]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [getTypeParameters ()[Ljava/lang/reflect/TypeVariable;]
  + Utf8 [()V]
  + Utf8 [()[Ljava/lang/reflect/TypeVariable;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [StackMapTable]
  + Utf8 [X]
  + Utf8 [Z]
  + Utf8 [a]
  + Utf8 [a/a/a/f/al]
  + Utf8 [a/a/a/f/y]
  + Utf8 [equals]
  + Utf8 [getTypeParameters]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/reflect/Type]

Fields (count = 1):
  + Field:        a Z
    Access flags: 0x18
      = static final boolean a

Methods (count = 2):
  - Method:       <init>()V
    Access flags: 0x0
      = al()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #10
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 35, locals = 0, stack = 4):
      [0] ldc_w #2
        + Class [a/a/a/f/al]
      [3] invokevirtual #9
        + Methodref [java/lang/Class.getTypeParameters ()[Ljava/lang/reflect/TypeVariable;]
      [6] iconst_0
      [7] aaload
      [8] ldc_w #2
        + Class [a/a/a/f/al]
      [11] ldc #1
        + String [X]
      [13] iconst_0
      [14] anewarray #6
        + Class [java/lang/reflect/Type]
      [17] invokestatic #8
        + Methodref [a/a/a/f/y.a (Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;]
      [20] invokevirtual #11
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [23] ifne +7 (target=30)
      [26] iconst_1
      [27] goto +4 (target=31)
      [30] iconst_0
      [31] putstatic #7
        + Fieldref [a/a/a/f/al.a Z]
      [34] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [30] Var: ..., Stack: (empty)
        - [31] Var: ..., Stack: [i]

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/am
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.am extends java.lang.Object

Interfaces (count = 2):
  + Class [java/io/Serializable]
  + Class [java/lang/reflect/ParameterizedType]

Constant Pool (count = 138):
  + String [type parameter]
  + Class [[Ljava/lang/reflect/Type;]
  + Class [a/a/a/a/f]
  + Class [a/a/a/a/i]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/c/ch]
  + Class [a/a/a/f/ah]
  + Class [a/a/a/f/am]
  + Class [a/a/a/f/y]
  + Class [java/io/Serializable]
  + Class [java/lang/Class]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/reflect/ParameterizedType]
  + Class [java/lang/reflect/Type]
  + Class [java/util/Arrays]
  + Fieldref [a/a/a/f/ah.c La/a/a/f/ah;]
  + Fieldref [a/a/a/f/am.a Ljava/lang/reflect/Type;]
  + Fieldref [a/a/a/f/am.b La/a/a/c/bo;]
  + Fieldref [a/a/a/f/am.c Ljava/lang/Class;]
  + Methodref [a/a/a/a/f.a (Ljava/lang/Iterable;)Ljava/lang/String;]
  + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/a/o.a (Z)V]
  + Methodref [a/a/a/c/bo.hashCode ()I]
  + Methodref [a/a/a/c/ch.a (Ljava/lang/Iterable;La/a/a/a/e;)Ljava/lang/Iterable;]
  + Methodref [a/a/a/f/ah.a ([Ljava/lang/reflect/Type;)La/a/a/c/bo;]
  + Methodref [a/a/a/f/am.getActualTypeArguments ()[Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/am.getOwnerType ()Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/am.getRawType ()Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/y.a ()La/a/a/a/e;]
  + Methodref [a/a/a/f/y.a (Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/y.a ([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
  + Methodref [a/a/a/f/y.b ()La/a/a/a/f;]
  + Methodref [a/a/a/f/y.d (Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + Methodref [java/lang/Class.getName ()Ljava/lang/String;]
  + Methodref [java/lang/Class.getTypeParameters ()[Ljava/lang/reflect/TypeVariable;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/Arrays.equals ([Ljava/lang/Object;[Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getActualTypeArguments ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getOwnerType ()Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/ParameterizedType.getRawType ()Ljava/lang/reflect/Type;]
  + NameAndType [<init> ()V]
  + NameAndType [a ()La/a/a/a/e;]
  + NameAndType [a (Ljava/lang/Iterable;)Ljava/lang/String;]
  + NameAndType [a (Ljava/lang/Iterable;La/a/a/a/e;)Ljava/lang/Iterable;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [a (Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
  + NameAndType [a (Z)V]
  + NameAndType [a ([Ljava/lang/reflect/Type;)La/a/a/c/bo;]
  + NameAndType [a ([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
  + NameAndType [a Ljava/lang/reflect/Type;]
  + NameAndType [append (C)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b ()La/a/a/a/f;]
  + NameAndType [b La/a/a/c/bo;]
  + NameAndType [c La/a/a/f/ah;]
  + NameAndType [c Ljava/lang/Class;]
  + NameAndType [d (Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [equals ([Ljava/lang/Object;[Ljava/lang/Object;)Z]
  + NameAndType [getActualTypeArguments ()[Ljava/lang/reflect/Type;]
  + NameAndType [getName ()Ljava/lang/String;]
  + NameAndType [getOwnerType ()Ljava/lang/reflect/Type;]
  + NameAndType [getRawType ()Ljava/lang/reflect/Type;]
  + NameAndType [getTypeParameters ()[Ljava/lang/reflect/TypeVariable;]
  + NameAndType [hashCode ()I]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()I]
  + Utf8 [()La/a/a/a/e;]
  + Utf8 [()La/a/a/a/f;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/reflect/Type;]
  + Utf8 [()V]
  + Utf8 [()[Ljava/lang/reflect/Type;]
  + Utf8 [()[Ljava/lang/reflect/TypeVariable;]
  + Utf8 [(C)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Iterable;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/Iterable;La/a/a/a/e;)Ljava/lang/Iterable;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)V]
  + Utf8 [(Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
  + Utf8 [(Z)V]
  + Utf8 [([Ljava/lang/Object;[Ljava/lang/Object;)Z]
  + Utf8 [([Ljava/lang/reflect/Type;)La/a/a/c/bo;]
  + Utf8 [([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bo;]
  + Utf8 [La/a/a/f/ah;]
  + Utf8 [Ljava/lang/Class;]
  + Utf8 [Ljava/lang/reflect/Type;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/reflect/Type;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/f]
  + Utf8 [a/a/a/a/i]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/c/ch]
  + Utf8 [a/a/a/f/ah]
  + Utf8 [a/a/a/f/am]
  + Utf8 [a/a/a/f/y]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [equals]
  + Utf8 [getActualTypeArguments]
  + Utf8 [getName]
  + Utf8 [getOwnerType]
  + Utf8 [getRawType]
  + Utf8 [getTypeParameters]
  + Utf8 [hashCode]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/reflect/ParameterizedType]
  + Utf8 [java/lang/reflect/Type]
  + Utf8 [java/util/Arrays]
  + Utf8 [toString]
  + Utf8 [type parameter]

Fields (count = 3):
  + Field:        a Ljava/lang/reflect/Type;
    Access flags: 0x12
      = private final java.lang.reflect.Type a
  + Field:        b La/a/a/c/bo;
    Access flags: 0x12
      = private final a.a.a.c.bo b
  + Field:        c Ljava/lang/Class;
    Access flags: 0x12
      = private final java.lang.Class c

Methods (count = 7):
  - Method:       <init>(Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)V
    Access flags: 0x0
      = am(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[])
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 55, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #39
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_2 v2
      [5] invokestatic #24
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [8] pop
      [9] aload_3 v3
      [10] arraylength
      [11] aload_2 v2
      [12] invokevirtual #38
        + Methodref [java/lang/Class.getTypeParameters ()[Ljava/lang/reflect/TypeVariable;]
      [15] arraylength
      [16] ificmpne +7 (target=23)
      [19] iconst_1
      [20] goto +4 (target=24)
      [23] iconst_0
      [24] invokestatic #25
        + Methodref [a/a/a/a/o.a (Z)V]
      [27] aload_3 v3
      [28] ldc #1
        + String [type parameter]
      [30] invokestatic #34
        + Methodref [a/a/a/f/y.a ([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
      [33] aload_0 v0
      [34] aload_1 v1
      [35] putfield #19
        + Fieldref [a/a/a/f/am.a Ljava/lang/reflect/Type;]
      [38] aload_0 v0
      [39] aload_2 v2
      [40] putfield #21
        + Fieldref [a/a/a/f/am.c Ljava/lang/Class;]
      [43] aload_0 v0
      [44] getstatic #18
        + Fieldref [a/a/a/f/ah.c La/a/a/f/ah;]
      [47] aload_3 v3
      [48] invokevirtual #28
        + Methodref [a/a/a/f/ah.a ([Ljava/lang/reflect/Type;)La/a/a/c/bo;]
      [51] putfield #20
        + Fieldref [a/a/a/f/am.b La/a/a/c/bo;]
      [54] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [23] Var: [a:a/a/a/f/am][a:java/lang/reflect/Type][a:java/lang/Class][a:[Ljava/lang/reflect/Type;], Stack: 
        - [24] Var: ..., Stack: [i]
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       getActualTypeArguments()[Ljava/lang/reflect/Type;
    Access flags: 0x1
      = public java.lang.reflect.Type[] getActualTypeArguments()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #20
        + Fieldref [a/a/a/f/am.b La/a/a/c/bo;]
      [4] invokestatic #33
        + Methodref [a/a/a/f/y.a (Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getRawType()Ljava/lang/reflect/Type;
    Access flags: 0x1
      = public java.lang.reflect.Type getRawType()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #21
        + Fieldref [a/a/a/f/am.c Ljava/lang/Class;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getOwnerType()Ljava/lang/reflect/Type;
    Access flags: 0x1
      = public java.lang.reflect.Type getOwnerType()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #19
        + Fieldref [a/a/a/f/am.a Ljava/lang/reflect/Type;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 78, locals = 2, stack = 4):
      [0] new #14
        + Class [java/lang/StringBuilder]
      [3] dup
      [4] invokespecial #42
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [7] astore_1 v1
      [8] aload_0 v0
      [9] getfield #19
        + Fieldref [a/a/a/f/am.a Ljava/lang/reflect/Type;]
      [12] ifnull +20 (target=32)
      [15] aload_1 v1
      [16] aload_0 v0
      [17] getfield #19
        + Fieldref [a/a/a/f/am.a Ljava/lang/reflect/Type;]
      [20] invokestatic #36
        + Methodref [a/a/a/f/y.d (Ljava/lang/reflect/Type;)Ljava/lang/String;]
      [23] invokevirtual #44
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [26] bipush 46
      [28] invokevirtual #43
        + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
      [31] pop
      [32] aload_1 v1
      [33] aload_0 v0
      [34] getfield #21
        + Fieldref [a/a/a/f/am.c Ljava/lang/Class;]
      [37] invokevirtual #37
        + Methodref [java/lang/Class.getName ()Ljava/lang/String;]
      [40] invokevirtual #44
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [43] bipush 60
      [45] invokevirtual #43
        + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
      [48] invokestatic #35
        + Methodref [a/a/a/f/y.b ()La/a/a/a/f;]
      [51] aload_0 v0
      [52] getfield #20
        + Fieldref [a/a/a/f/am.b La/a/a/c/bo;]
      [55] invokestatic #32
        + Methodref [a/a/a/f/y.a ()La/a/a/a/e;]
      [58] invokestatic #27
        + Methodref [a/a/a/c/ch.a (Ljava/lang/Iterable;La/a/a/a/e;)Ljava/lang/Iterable;]
      [61] invokevirtual #22
        + Methodref [a/a/a/a/f.a (Ljava/lang/Iterable;)Ljava/lang/String;]
      [64] invokevirtual #44
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [67] bipush 62
      [69] invokevirtual #43
        + Methodref [java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;]
      [72] pop
      [73] aload_1 v1
      [74] invokevirtual #45
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [77] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [32] Var: ...[a:java/lang/StringBuilder], Stack: (empty)
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 35, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #19
        + Fieldref [a/a/a/f/am.a Ljava/lang/reflect/Type;]
      [4] ifnonnull +7 (target=11)
      [7] iconst_0
      [8] goto +10 (target=18)
      [11] aload_0 v0
      [12] getfield #19
        + Fieldref [a/a/a/f/am.a Ljava/lang/reflect/Type;]
      [15] invokevirtual #41
        + Methodref [java/lang/Object.hashCode ()I]
      [18] aload_0 v0
      [19] getfield #20
        + Fieldref [a/a/a/f/am.b La/a/a/c/bo;]
      [22] invokevirtual #26
        + Methodref [a/a/a/c/bo.hashCode ()I]
      [25] ixor
      [26] aload_0 v0
      [27] getfield #21
        + Fieldref [a/a/a/f/am.c Ljava/lang/Class;]
      [30] invokevirtual #41
        + Methodref [java/lang/Object.hashCode ()I]
      [33] ixor
      [34] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [11] Var: ..., Stack: (empty)
        - [18] Var: ..., Stack: [i]
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 68, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] instanceof #15
        + Class [java/lang/reflect/ParameterizedType]
      [4] ifne +5 (target=9)
      [7] iconst_0
      [8] ireturn
      [9] aload_1 v1
      [10] checkcast #15
        + Class [java/lang/reflect/ParameterizedType]
      [13] astore_2 v2
      [14] aload_0 v0
      [15] invokevirtual #31
        + Methodref [a/a/a/f/am.getRawType ()Ljava/lang/reflect/Type;]
      [18] aload_2 v2
      [19] invokeinterface #49
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getRawType ()Ljava/lang/reflect/Type;]
      [24] invokevirtual #40
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [27] ifeq +39 (target=66)
      [30] aload_0 v0
      [31] invokevirtual #30
        + Methodref [a/a/a/f/am.getOwnerType ()Ljava/lang/reflect/Type;]
      [34] aload_2 v2
      [35] invokeinterface #48
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getOwnerType ()Ljava/lang/reflect/Type;]
      [40] invokestatic #23
        + Methodref [a/a/a/a/i.a (Ljava/lang/Object;Ljava/lang/Object;)Z]
      [43] ifeq +23 (target=66)
      [46] aload_0 v0
      [47] invokevirtual #29
        + Methodref [a/a/a/f/am.getActualTypeArguments ()[Ljava/lang/reflect/Type;]
      [50] aload_2 v2
      [51] invokeinterface #47
        + InterfaceMethodref [java/lang/reflect/ParameterizedType.getActualTypeArguments ()[Ljava/lang/reflect/Type;]
      [56] invokestatic #46
        + Methodref [java/util/Arrays.equals ([Ljava/lang/Object;[Ljava/lang/Object;)Z]
      [59] ifeq +7 (target=66)
      [62] iconst_1
      [63] goto +4 (target=67)
      [66] iconst_0
      [67] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [9] Var: ..., Stack: (empty)
        - [66] Var: ...[a:java/lang/reflect/ParameterizedType], Stack: (empty)
        - [67] Var: ..., Stack: [i]

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/an
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.an extends java.lang.Object

Interfaces (count = 1):
  + Class [java/lang/reflect/TypeVariable]

Constant Pool (count = 79):
  + String [bound for type variable]
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/f/al]
  + Class [a/a/a/f/an]
  + Class [a/a/a/f/y]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/reflect/GenericDeclaration]
  + Class [java/lang/reflect/TypeVariable]
  + Fieldref [a/a/a/f/al.a Z]
  + Fieldref [a/a/a/f/an.a Ljava/lang/reflect/GenericDeclaration;]
  + Fieldref [a/a/a/f/an.b Ljava/lang/String;]
  + Fieldref [a/a/a/f/an.c La/a/a/c/bo;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/bo.a ([Ljava/lang/Object;)La/a/a/c/bo;]
  + Methodref [a/a/a/c/bo.equals (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/f/an.getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
  + Methodref [a/a/a/f/an.getName ()Ljava/lang/String;]
  + Methodref [a/a/a/f/y.a (Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/y.a ([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/Object.hashCode ()I]
  + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/String.hashCode ()I]
  + InterfaceMethodref [java/lang/reflect/TypeVariable.getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
  + InterfaceMethodref [java/lang/reflect/TypeVariable.getName ()Ljava/lang/String;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
  + NameAndType [a ([Ljava/lang/Object;)La/a/a/c/bo;]
  + NameAndType [a ([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
  + NameAndType [a Ljava/lang/reflect/GenericDeclaration;]
  + NameAndType [a Z]
  + NameAndType [b Ljava/lang/String;]
  + NameAndType [c La/a/a/c/bo;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
  + NameAndType [getName ()Ljava/lang/String;]
  + NameAndType [hashCode ()I]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/reflect/GenericDeclaration;]
  + Utf8 [()V]
  + Utf8 [()[Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)V]
  + Utf8 [(Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
  + Utf8 [([Ljava/lang/Object;)La/a/a/c/bo;]
  + Utf8 [([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bo;]
  + Utf8 [Ljava/lang/String;]
  + Utf8 [Ljava/lang/reflect/GenericDeclaration;]
  + Utf8 [StackMapTable]
  + Utf8 [Z]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/f/al]
  + Utf8 [a/a/a/f/an]
  + Utf8 [a/a/a/f/y]
  + Utf8 [b]
  + Utf8 [bound for type variable]
  + Utf8 [c]
  + Utf8 [equals]
  + Utf8 [getBounds]
  + Utf8 [getGenericDeclaration]
  + Utf8 [getName]
  + Utf8 [hashCode]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/reflect/GenericDeclaration]
  + Utf8 [java/lang/reflect/TypeVariable]
  + Utf8 [toString]

Fields (count = 3):
  + Field:        a Ljava/lang/reflect/GenericDeclaration;
    Access flags: 0x12
      = private final java.lang.reflect.GenericDeclaration a
  + Field:        b Ljava/lang/String;
    Access flags: 0x12
      = private final java.lang.String b
  + Field:        c La/a/a/c/bo;
    Access flags: 0x12
      = private final a.a.a.c.bo c

Methods (count = 7):
  - Method:       <init>(Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)V
    Access flags: 0x0
      = an(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.reflect.Type[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 41, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #22
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_3 v3
      [5] ldc #1
        + String [bound for type variable]
      [7] invokestatic #21
        + Methodref [a/a/a/f/y.a ([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
      [10] aload_0 v0
      [11] aload_1 v1
      [12] invokestatic #15
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [15] checkcast #9
        + Class [java/lang/reflect/GenericDeclaration]
      [18] putfield #12
        + Fieldref [a/a/a/f/an.a Ljava/lang/reflect/GenericDeclaration;]
      [21] aload_0 v0
      [22] aload_2 v2
      [23] invokestatic #15
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [26] checkcast #8
        + Class [java/lang/String]
      [29] putfield #13
        + Fieldref [a/a/a/f/an.b Ljava/lang/String;]
      [32] aload_0 v0
      [33] aload_3 v3
      [34] invokestatic #16
        + Methodref [a/a/a/c/bo.a ([Ljava/lang/Object;)La/a/a/c/bo;]
      [37] putfield #14
        + Fieldref [a/a/a/f/an.c La/a/a/c/bo;]
      [40] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getBounds()[Ljava/lang/reflect/Type;
    Access flags: 0x1
      = public java.lang.reflect.Type[] getBounds()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #14
        + Fieldref [a/a/a/f/an.c La/a/a/c/bo;]
      [4] invokestatic #20
        + Methodref [a/a/a/f/y.a (Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getGenericDeclaration()Ljava/lang/reflect/GenericDeclaration;
    Access flags: 0x1
      = public java.lang.reflect.GenericDeclaration getGenericDeclaration()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/f/an.a Ljava/lang/reflect/GenericDeclaration;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getName()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String getName()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #13
        + Fieldref [a/a/a/f/an.b Ljava/lang/String;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #13
        + Fieldref [a/a/a/f/an.b Ljava/lang/String;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/f/an.a Ljava/lang/reflect/GenericDeclaration;]
      [4] invokevirtual #24
        + Methodref [java/lang/Object.hashCode ()I]
      [7] aload_0 v0
      [8] getfield #13
        + Fieldref [a/a/a/f/an.b Ljava/lang/String;]
      [11] invokevirtual #26
        + Methodref [java/lang/String.hashCode ()I]
      [14] ixor
      [15] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 120, locals = 3, stack = 2):
      [0] getstatic #11
        + Fieldref [a/a/a/f/al.a Z]
      [3] ifeq +65 (target=68)
      [6] aload_1 v1
      [7] instanceof #5
        + Class [a/a/a/f/an]
      [10] ifeq +56 (target=66)
      [13] aload_1 v1
      [14] checkcast #5
        + Class [a/a/a/f/an]
      [17] astore_2 v2
      [18] aload_0 v0
      [19] getfield #13
        + Fieldref [a/a/a/f/an.b Ljava/lang/String;]
      [22] aload_2 v2
      [23] invokevirtual #19
        + Methodref [a/a/a/f/an.getName ()Ljava/lang/String;]
      [26] invokevirtual #25
        + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
      [29] ifeq +35 (target=64)
      [32] aload_0 v0
      [33] getfield #12
        + Fieldref [a/a/a/f/an.a Ljava/lang/reflect/GenericDeclaration;]
      [36] aload_2 v2
      [37] invokevirtual #18
        + Methodref [a/a/a/f/an.getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
      [40] invokevirtual #23
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [43] ifeq +21 (target=64)
      [46] aload_0 v0
      [47] getfield #14
        + Fieldref [a/a/a/f/an.c La/a/a/c/bo;]
      [50] aload_2 v2
      [51] getfield #14
        + Fieldref [a/a/a/f/an.c La/a/a/c/bo;]
      [54] invokevirtual #17
        + Methodref [a/a/a/c/bo.equals (Ljava/lang/Object;)Z]
      [57] ifeq +7 (target=64)
      [60] iconst_1
      [61] goto +4 (target=65)
      [64] iconst_0
      [65] ireturn
      [66] iconst_0
      [67] ireturn
      [68] aload_1 v1
      [69] instanceof #10
        + Class [java/lang/reflect/TypeVariable]
      [72] ifeq +46 (target=118)
      [75] aload_1 v1
      [76] checkcast #10
        + Class [java/lang/reflect/TypeVariable]
      [79] astore_2 v2
      [80] aload_0 v0
      [81] getfield #13
        + Fieldref [a/a/a/f/an.b Ljava/lang/String;]
      [84] aload_2 v2
      [85] invokeinterface #28
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getName ()Ljava/lang/String;]
      [90] invokevirtual #25
        + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
      [93] ifeq +23 (target=116)
      [96] aload_0 v0
      [97] getfield #12
        + Fieldref [a/a/a/f/an.a Ljava/lang/reflect/GenericDeclaration;]
      [100] aload_2 v2
      [101] invokeinterface #27
        + InterfaceMethodref [java/lang/reflect/TypeVariable.getGenericDeclaration ()Ljava/lang/reflect/GenericDeclaration;]
      [106] invokevirtual #23
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [109] ifeq +7 (target=116)
      [112] iconst_1
      [113] goto +4 (target=117)
      [116] iconst_0
      [117] ireturn
      [118] iconst_0
      [119] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 7):
        - [64] Var: ...[a:a/a/a/f/an], Stack: (empty)
        - [65] Var: ..., Stack: [i]
        - [66] Var: -1, Stack: (empty)
        - [68] Var: ..., Stack: (empty)
        - [116] Var: ...[a:java/lang/reflect/TypeVariable], Stack: (empty)
        - [117] Var: ..., Stack: [i]
        - [118] Var: -1, Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/f/ao
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.f.ao extends java.lang.Object

Interfaces (count = 2):
  + Class [java/io/Serializable]
  + Class [java/lang/reflect/WildcardType]

Constant Pool (count = 112):
  + String [ extends ]
  + String [ super ]
  + String [?]
  + String [lower bound for wildcard]
  + String [upper bound for wildcard]
  + Class [a/a/a/c/bo]
  + Class [a/a/a/f/ah]
  + Class [a/a/a/f/ao]
  + Class [a/a/a/f/y]
  + Class [java/io/Serializable]
  + Class [java/lang/Iterable]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/reflect/Type]
  + Class [java/lang/reflect/WildcardType]
  + Class [java/util/Arrays]
  + Class [java/util/Iterator]
  + Fieldref [a/a/a/f/ah.c La/a/a/f/ah;]
  + Fieldref [a/a/a/f/ao.a La/a/a/c/bo;]
  + Fieldref [a/a/a/f/ao.b La/a/a/c/bo;]
  + Methodref [a/a/a/c/bo.equals (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/c/bo.hashCode ()I]
  + Methodref [a/a/a/c/bo.iterator ()Ljava/util/Iterator;]
  + Methodref [a/a/a/f/ah.a ([Ljava/lang/reflect/Type;)La/a/a/c/bo;]
  + Methodref [a/a/a/f/y.a (Ljava/lang/Iterable;)Ljava/lang/Iterable;]
  + Methodref [a/a/a/f/y.a (Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
  + Methodref [a/a/a/f/y.a ([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
  + Methodref [a/a/a/f/y.d (Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;]
  + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [java/lang/reflect/WildcardType.getLowerBounds ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [a (Ljava/lang/Iterable;)Ljava/lang/Iterable;]
  + NameAndType [a (Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
  + NameAndType [a ([Ljava/lang/reflect/Type;)La/a/a/c/bo;]
  + NameAndType [a ([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
  + NameAndType [a La/a/a/c/bo;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [asList ([Ljava/lang/Object;)Ljava/util/List;]
  + NameAndType [b La/a/a/c/bo;]
  + NameAndType [c La/a/a/f/ah;]
  + NameAndType [d (Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [getLowerBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [getUpperBounds ()[Ljava/lang/reflect/Type;]
  + NameAndType [hasNext ()Z]
  + NameAndType [hashCode ()I]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [ extends ]
  + Utf8 [ super ]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [()[Ljava/lang/reflect/Type;]
  + Utf8 [(Ljava/lang/Iterable;)Ljava/lang/Iterable;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/reflect/Type;)Ljava/lang/String;]
  + Utf8 [(Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
  + Utf8 [([Ljava/lang/Object;)Ljava/util/List;]
  + Utf8 [([Ljava/lang/reflect/Type;)La/a/a/c/bo;]
  + Utf8 [([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
  + Utf8 [([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V]
  + Utf8 [<init>]
  + Utf8 [?]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/bo;]
  + Utf8 [La/a/a/f/ah;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/c/bo]
  + Utf8 [a/a/a/f/ah]
  + Utf8 [a/a/a/f/ao]
  + Utf8 [a/a/a/f/y]
  + Utf8 [append]
  + Utf8 [asList]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [equals]
  + Utf8 [getLowerBounds]
  + Utf8 [getUpperBounds]
  + Utf8 [hasNext]
  + Utf8 [hashCode]
  + Utf8 [iterator]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Iterable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/reflect/Type]
  + Utf8 [java/lang/reflect/WildcardType]
  + Utf8 [java/util/Arrays]
  + Utf8 [java/util/Iterator]
  + Utf8 [lower bound for wildcard]
  + Utf8 [next]
  + Utf8 [toString]
  + Utf8 [upper bound for wildcard]

Fields (count = 2):
  + Field:        a La/a/a/c/bo;
    Access flags: 0x12
      = private final a.a.a.c.bo a
  + Field:        b La/a/a/c/bo;
    Access flags: 0x12
      = private final a.a.a.c.bo b

Methods (count = 6):
  - Method:       <init>([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V
    Access flags: 0x0
      = ao(java.lang.reflect.Type[],java.lang.reflect.Type[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 39, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #29
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_1 v1
      [5] ldc #4
        + String [lower bound for wildcard]
      [7] invokestatic #27
        + Methodref [a/a/a/f/y.a ([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
      [10] aload_2 v2
      [11] ldc #5
        + String [upper bound for wildcard]
      [13] invokestatic #27
        + Methodref [a/a/a/f/y.a ([Ljava/lang/reflect/Type;Ljava/lang/String;)V]
      [16] aload_0 v0
      [17] getstatic #18
        + Fieldref [a/a/a/f/ah.c La/a/a/f/ah;]
      [20] aload_1 v1
      [21] invokevirtual #24
        + Methodref [a/a/a/f/ah.a ([Ljava/lang/reflect/Type;)La/a/a/c/bo;]
      [24] putfield #19
        + Fieldref [a/a/a/f/ao.a La/a/a/c/bo;]
      [27] aload_0 v0
      [28] getstatic #18
        + Fieldref [a/a/a/f/ah.c La/a/a/f/ah;]
      [31] aload_2 v2
      [32] invokevirtual #24
        + Methodref [a/a/a/f/ah.a ([Ljava/lang/reflect/Type;)La/a/a/c/bo;]
      [35] putfield #20
        + Fieldref [a/a/a/f/ao.b La/a/a/c/bo;]
      [38] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getLowerBounds()[Ljava/lang/reflect/Type;
    Access flags: 0x1
      = public java.lang.reflect.Type[] getLowerBounds()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #19
        + Fieldref [a/a/a/f/ao.a La/a/a/c/bo;]
      [4] invokestatic #26
        + Methodref [a/a/a/f/y.a (Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getUpperBounds()[Ljava/lang/reflect/Type;
    Access flags: 0x1
      = public java.lang.reflect.Type[] getUpperBounds()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #20
        + Fieldref [a/a/a/f/ao.b La/a/a/c/bo;]
      [4] invokestatic #26
        + Methodref [a/a/a/f/y.a (Ljava/util/Collection;)[Ljava/lang/reflect/Type;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       equals(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean equals(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 58, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] instanceof #15
        + Class [java/lang/reflect/WildcardType]
      [4] ifeq +52 (target=56)
      [7] aload_1 v1
      [8] checkcast #15
        + Class [java/lang/reflect/WildcardType]
      [11] astore_2 v2
      [12] aload_0 v0
      [13] getfield #19
        + Fieldref [a/a/a/f/ao.a La/a/a/c/bo;]
      [16] aload_2 v2
      [17] invokeinterface #35
        + InterfaceMethodref [java/lang/reflect/WildcardType.getLowerBounds ()[Ljava/lang/reflect/Type;]
      [22] invokestatic #33
        + Methodref [java/util/Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;]
      [25] invokevirtual #21
        + Methodref [a/a/a/c/bo.equals (Ljava/lang/Object;)Z]
      [28] ifeq +26 (target=54)
      [31] aload_0 v0
      [32] getfield #20
        + Fieldref [a/a/a/f/ao.b La/a/a/c/bo;]
      [35] aload_2 v2
      [36] invokeinterface #36
        + InterfaceMethodref [java/lang/reflect/WildcardType.getUpperBounds ()[Ljava/lang/reflect/Type;]
      [41] invokestatic #33
        + Methodref [java/util/Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;]
      [44] invokevirtual #21
        + Methodref [a/a/a/c/bo.equals (Ljava/lang/Object;)Z]
      [47] ifeq +7 (target=54)
      [50] iconst_1
      [51] goto +4 (target=55)
      [54] iconst_0
      [55] ireturn
      [56] iconst_0
      [57] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [54] Var: ...[a:java/lang/reflect/WildcardType], Stack: (empty)
        - [55] Var: ..., Stack: [i]
        - [56] Var: -1, Stack: (empty)
  + Method:       hashCode()I
    Access flags: 0x1
      = public int hashCode()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #19
        + Fieldref [a/a/a/f/ao.a La/a/a/c/bo;]
      [4] invokevirtual #22
        + Methodref [a/a/a/c/bo.hashCode ()I]
      [7] aload_0 v0
      [8] getfield #20
        + Fieldref [a/a/a/f/ao.b La/a/a/c/bo;]
      [11] invokevirtual #22
        + Methodref [a/a/a/c/bo.hashCode ()I]
      [14] ixor
      [15] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 108, locals = 4, stack = 3):
      [0] new #13
        + Class [java/lang/StringBuilder]
      [3] dup
      [4] ldc #3
        + String [?]
      [6] invokespecial #30
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [9] astore_1 v1
      [10] aload_0 v0
      [11] getfield #19
        + Fieldref [a/a/a/f/ao.a La/a/a/c/bo;]
      [14] invokevirtual #23
        + Methodref [a/a/a/c/bo.iterator ()Ljava/util/Iterator;]
      [17] astore_2 v2
      [18] aload_2 v2
      [19] invokeinterface #37
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [24] ifeq +30 (target=54)
      [27] aload_2 v2
      [28] invokeinterface #38
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [33] checkcast #14
        + Class [java/lang/reflect/Type]
      [36] astore_3 v3
      [37] aload_1 v1
      [38] ldc #2
        + String [ super ]
      [40] invokevirtual #31
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [43] aload_3 v3
      [44] invokestatic #28
        + Methodref [a/a/a/f/y.d (Ljava/lang/reflect/Type;)Ljava/lang/String;]
      [47] invokevirtual #31
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [50] pop
      [51] goto -33 (target=18)
      [54] aload_0 v0
      [55] getfield #20
        + Fieldref [a/a/a/f/ao.b La/a/a/c/bo;]
      [58] invokestatic #25
        + Methodref [a/a/a/f/y.a (Ljava/lang/Iterable;)Ljava/lang/Iterable;]
      [61] invokeinterface #34
        + InterfaceMethodref [java/lang/Iterable.iterator ()Ljava/util/Iterator;]
      [66] astore_2 v2
      [67] aload_2 v2
      [68] invokeinterface #37
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [73] ifeq +30 (target=103)
      [76] aload_2 v2
      [77] invokeinterface #38
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [82] checkcast #14
        + Class [java/lang/reflect/Type]
      [85] astore_3 v3
      [86] aload_1 v1
      [87] ldc #1
        + String [ extends ]
      [89] invokevirtual #31
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [92] aload_3 v3
      [93] invokestatic #28
        + Methodref [a/a/a/f/y.d (Ljava/lang/reflect/Type;)Ljava/lang/String;]
      [96] invokevirtual #31
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [99] pop
      [100] goto -33 (target=67)
      [103] aload_1 v1
      [104] invokevirtual #32
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [107] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [18] Var: ...[a:java/lang/StringBuilder][a:java/util/Iterator], Stack: (empty)
        - [54] Var: -1, Stack: (empty)
        - [67] Var: ...[a:java/util/Iterator], Stack: (empty)
        - [103] Var: -1, Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/a
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.g.a.a extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/g/a/q]

Constant Pool (count = 87):
  + Class [a/a/a/a/o]
  + Class [a/a/a/g/a/a]
  + Class [a/a/a/g/a/b]
  + Class [a/a/a/g/a/f]
  + Class [a/a/a/g/a/q]
  + Class [java/lang/Object]
  + Class [java/lang/Throwable]
  + Class [java/util/concurrent/CancellationException]
  + Class [java/util/concurrent/TimeUnit]
  + Fieldref [a/a/a/g/a/a.a La/a/a/g/a/b;]
  + Fieldref [a/a/a/g/a/a.b La/a/a/g/a/f;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/g/a/a.a ()V]
  + Methodref [a/a/a/g/a/b.<init> ()V]
  + Methodref [a/a/a/g/a/b.a ()Ljava/lang/Object;]
  + Methodref [a/a/a/g/a/b.a (J)Ljava/lang/Object;]
  + Methodref [a/a/a/g/a/b.a (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/g/a/b.a (Ljava/lang/Throwable;)Z]
  + Methodref [a/a/a/g/a/b.a (Z)Z]
  + Methodref [a/a/a/g/a/b.b ()Z]
  + Methodref [a/a/a/g/a/b.c ()Z]
  + Methodref [a/a/a/g/a/b.d ()Z]
  + Methodref [a/a/a/g/a/f.<init> ()V]
  + Methodref [a/a/a/g/a/f.a ()V]
  + Methodref [a/a/a/g/a/f.a (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/util/concurrent/CancellationException.<init> (Ljava/lang/String;)V]
  + Methodref [java/util/concurrent/CancellationException.initCause (Ljava/lang/Throwable;)Ljava/lang/Throwable;]
  + Methodref [java/util/concurrent/TimeUnit.toNanos (J)J]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [a ()Ljava/lang/Object;]
  + NameAndType [a ()V]
  + NameAndType [a (J)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;)Z]
  + NameAndType [a (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + NameAndType [a (Ljava/lang/Throwable;)Z]
  + NameAndType [a (Z)Z]
  + NameAndType [a La/a/a/g/a/b;]
  + NameAndType [b ()Z]
  + NameAndType [b La/a/a/g/a/f;]
  + NameAndType [c ()Z]
  + NameAndType [d ()Z]
  + NameAndType [initCause (Ljava/lang/Throwable;)Ljava/lang/Throwable;]
  + NameAndType [toNanos (J)J]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(J)J]
  + Utf8 [(J)Ljava/lang/Object;]
  + Utf8 [(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;]
  + Utf8 [(Ljava/lang/Throwable;)Ljava/lang/Throwable;]
  + Utf8 [(Ljava/lang/Throwable;)Z]
  + Utf8 [(Z)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/g/a/b;]
  + Utf8 [La/a/a/g/a/f;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/g/a/a]
  + Utf8 [a/a/a/g/a/b]
  + Utf8 [a/a/a/g/a/f]
  + Utf8 [a/a/a/g/a/q]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [cancel]
  + Utf8 [d]
  + Utf8 [get]
  + Utf8 [initCause]
  + Utf8 [isCancelled]
  + Utf8 [isDone]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/Throwable]
  + Utf8 [java/util/concurrent/CancellationException]
  + Utf8 [java/util/concurrent/TimeUnit]
  + Utf8 [toNanos]

Fields (count = 2):
  + Field:        a La/a/a/g/a/b;
    Access flags: 0x12
      = private final a.a.a.g.a.b a
  + Field:        b La/a/a/g/a/f;
    Access flags: 0x12
      = private final a.a.a.g.a.f b

Methods (count = 12):
  - Method:       <init>()V
    Access flags: 0x4
      = protected a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 27, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #26
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] new #3
        + Class [a/a/a/g/a/b]
      [8] dup
      [9] invokespecial #14
        + Methodref [a/a/a/g/a/b.<init> ()V]
      [12] putfield #10
        + Fieldref [a/a/a/g/a/a.a La/a/a/g/a/b;]
      [15] aload_0 v0
      [16] new #4
        + Class [a/a/a/g/a/f]
      [19] dup
      [20] invokespecial #23
        + Methodref [a/a/a/g/a/f.<init> ()V]
      [23] putfield #11
        + Fieldref [a/a/a/g/a/a.b La/a/a/g/a/f;]
      [26] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(long,java.util.concurrent.TimeUnit)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 4, stack = 4):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/g/a/a.a La/a/a/g/a/b;]
      [4] aload_3 v3
      [5] lload_1 v1
      [6] invokevirtual #29
        + Methodref [java/util/concurrent/TimeUnit.toNanos (J)J]
      [9] invokevirtual #16
        + Methodref [a/a/a/g/a/b.a (J)Ljava/lang/Object;]
      [12] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/g/a/a.a La/a/a/g/a/b;]
      [4] invokevirtual #15
        + Methodref [a/a/a/g/a/b.a ()Ljava/lang/Object;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isDone()Z
    Access flags: 0x1
      = public boolean isDone()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/g/a/a.a La/a/a/g/a/b;]
      [4] invokevirtual #20
        + Methodref [a/a/a/g/a/b.b ()Z]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isCancelled()Z
    Access flags: 0x1
      = public boolean isCancelled()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/g/a/a.a La/a/a/g/a/b;]
      [4] invokevirtual #21
        + Methodref [a/a/a/g/a/b.c ()Z]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       cancel(Z)Z
    Access flags: 0x1
      = public boolean cancel(boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 30, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/g/a/a.a La/a/a/g/a/b;]
      [4] iload_1 v1
      [5] invokevirtual #19
        + Methodref [a/a/a/g/a/b.a (Z)Z]
      [8] ifne +5 (target=13)
      [11] iconst_0
      [12] ireturn
      [13] aload_0 v0
      [14] getfield #11
        + Fieldref [a/a/a/g/a/a.b La/a/a/g/a/f;]
      [17] invokevirtual #24
        + Methodref [a/a/a/g/a/f.a ()V]
      [20] iload_1 v1
      [21] ifeq +7 (target=28)
      [24] aload_0 v0
      [25] invokevirtual #13
        + Methodref [a/a/a/g/a/a.a ()V]
      [28] iconst_1
      [29] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ..., Stack: (empty)
        - [28] Var: ..., Stack: (empty)
  + Method:       a()V
    Access flags: 0x4
      = protected void a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 1, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b()Z
    Access flags: 0x14
      = protected final boolean b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/g/a/a.a La/a/a/g/a/b;]
      [4] invokevirtual #22
        + Methodref [a/a/a/g/a/b.d ()Z]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
    Access flags: 0x1
      = public void a(java.lang.Runnable,java.util.concurrent.Executor)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #11
        + Fieldref [a/a/a/g/a/a.b La/a/a/g/a/f;]
      [4] aload_1 v1
      [5] aload_2 v2
      [6] invokevirtual #25
        + Methodref [a/a/a/g/a/f.a (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Z
    Access flags: 0x4
      = protected boolean a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 22, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/g/a/a.a La/a/a/g/a/b;]
      [4] aload_1 v1
      [5] invokevirtual #17
        + Methodref [a/a/a/g/a/b.a (Ljava/lang/Object;)Z]
      [8] istore_2 v2
      [9] iload_2 v2
      [10] ifeq +10 (target=20)
      [13] aload_0 v0
      [14] getfield #11
        + Fieldref [a/a/a/g/a/a.b La/a/a/g/a/f;]
      [17] invokevirtual #24
        + Methodref [a/a/a/g/a/f.a ()V]
      [20] iload_2 v2
      [21] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [20] Var: ...[i], Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Throwable;)Z
    Access flags: 0x4
      = protected boolean a(java.lang.Throwable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/g/a/a.a La/a/a/g/a/b;]
      [4] aload_1 v1
      [5] invokestatic #12
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [8] checkcast #7
        + Class [java/lang/Throwable]
      [11] invokevirtual #18
        + Methodref [a/a/a/g/a/b.a (Ljava/lang/Throwable;)Z]
      [14] istore_2 v2
      [15] iload_2 v2
      [16] ifeq +10 (target=26)
      [19] aload_0 v0
      [20] getfield #11
        + Fieldref [a/a/a/g/a/a.b La/a/a/g/a/f;]
      [23] invokevirtual #24
        + Methodref [a/a/a/g/a/f.a ()V]
      [26] iload_2 v2
      [27] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [26] Var: ...[i], Stack: (empty)
  + Method:       a(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;
    Access flags: 0x18
      = static final java.util.concurrent.CancellationException a(java.lang.String,java.lang.Throwable)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 17, locals = 3, stack = 3):
      [0] new #8
        + Class [java/util/concurrent/CancellationException]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #27
        + Methodref [java/util/concurrent/CancellationException.<init> (Ljava/lang/String;)V]
      [8] astore_2 v2
      [9] aload_2 v2
      [10] aload_1 v1
      [11] invokevirtual #28
        + Methodref [java/util/concurrent/CancellationException.initCause (Ljava/lang/Throwable;)Ljava/lang/Throwable;]
      [14] pop
      [15] aload_2 v2
      [16] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/b
  Superclass:    java/util/concurrent/locks/AbstractQueuedSynchronizer
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.g.a.b extends java.util.concurrent.locks.AbstractQueuedSynchronizer

Interfaces (count = 0):

Constant Pool (count = 113):
  + String [Error, synchronizer in invalid state: ]
  + String [Future.cancel() was called.]
  + String [Task was cancelled.]
  + String [Timeout waiting for task.]
  + Class [a/a/a/g/a/a]
  + Class [a/a/a/g/a/b]
  + Class [java/lang/IllegalStateException]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/Throwable]
  + Class [java/util/concurrent/CancellationException]
  + Class [java/util/concurrent/ExecutionException]
  + Class [java/util/concurrent/TimeoutException]
  + Class [java/util/concurrent/locks/AbstractQueuedSynchronizer]
  + Fieldref [a/a/a/g/a/b.a Ljava/lang/Object;]
  + Fieldref [a/a/a/g/a/b.b Ljava/lang/Throwable;]
  + Methodref [a/a/a/g/a/a.a (Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;]
  + Methodref [a/a/a/g/a/b.a (Ljava/lang/Object;Ljava/lang/Throwable;I)Z]
  + Methodref [a/a/a/g/a/b.acquireShared (I)V]
  + Methodref [a/a/a/g/a/b.acquireSharedInterruptibly (I)V]
  + Methodref [a/a/a/g/a/b.b ()Z]
  + Methodref [a/a/a/g/a/b.compareAndSetState (II)Z]
  + Methodref [a/a/a/g/a/b.e ()Ljava/lang/Object;]
  + Methodref [a/a/a/g/a/b.getState ()I]
  + Methodref [a/a/a/g/a/b.releaseShared (I)Z]
  + Methodref [a/a/a/g/a/b.setState (I)V]
  + Methodref [a/a/a/g/a/b.tryAcquireSharedNanos (IJ)Z]
  + Methodref [java/lang/IllegalStateException.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/concurrent/CancellationException.<init> (Ljava/lang/String;)V]
  + Methodref [java/util/concurrent/ExecutionException.<init> (Ljava/lang/Throwable;)V]
  + Methodref [java/util/concurrent/TimeoutException.<init> (Ljava/lang/String;)V]
  + Methodref [java/util/concurrent/locks/AbstractQueuedSynchronizer.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (Ljava/lang/Throwable;)V]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Throwable;I)Z]
  + NameAndType [a (Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;]
  + NameAndType [a Ljava/lang/Object;]
  + NameAndType [acquireShared (I)V]
  + NameAndType [acquireSharedInterruptibly (I)V]
  + NameAndType [append (I)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b ()Z]
  + NameAndType [b Ljava/lang/Throwable;]
  + NameAndType [compareAndSetState (II)Z]
  + NameAndType [e ()Ljava/lang/Object;]
  + NameAndType [getState ()I]
  + NameAndType [releaseShared (I)Z]
  + NameAndType [setState (I)V]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [tryAcquireSharedNanos (IJ)Z]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)I]
  + Utf8 [(I)Ljava/lang/StringBuilder;]
  + Utf8 [(I)V]
  + Utf8 [(I)Z]
  + Utf8 [(II)Z]
  + Utf8 [(IJ)Z]
  + Utf8 [(J)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Throwable;I)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;]
  + Utf8 [(Ljava/lang/Throwable;)V]
  + Utf8 [(Ljava/lang/Throwable;)Z]
  + Utf8 [(Z)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Error, synchronizer in invalid state: ]
  + Utf8 [Future.cancel() was called.]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljava/lang/Throwable;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [Task was cancelled.]
  + Utf8 [Timeout waiting for task.]
  + Utf8 [a]
  + Utf8 [a/a/a/g/a/a]
  + Utf8 [a/a/a/g/a/b]
  + Utf8 [acquireShared]
  + Utf8 [acquireSharedInterruptibly]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [compareAndSetState]
  + Utf8 [d]
  + Utf8 [e]
  + Utf8 [getState]
  + Utf8 [java/lang/IllegalStateException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/Throwable]
  + Utf8 [java/util/concurrent/CancellationException]
  + Utf8 [java/util/concurrent/ExecutionException]
  + Utf8 [java/util/concurrent/TimeoutException]
  + Utf8 [java/util/concurrent/locks/AbstractQueuedSynchronizer]
  + Utf8 [releaseShared]
  + Utf8 [setState]
  + Utf8 [toString]
  + Utf8 [tryAcquireShared]
  + Utf8 [tryAcquireSharedNanos]
  + Utf8 [tryReleaseShared]

Fields (count = 2):
  + Field:        a Ljava/lang/Object;
    Access flags: 0x2
      = private java.lang.Object a
  + Field:        b Ljava/lang/Throwable;
    Access flags: 0x2
      = private java.lang.Throwable b

Methods (count = 13):
  - Method:       <init>()V
    Access flags: 0x0
      = b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #36
        + Methodref [java/util/concurrent/locks/AbstractQueuedSynchronizer.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       tryAcquireShared(I)I
    Access flags: 0x4
      = protected int tryAcquireShared(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #21
        + Methodref [a/a/a/g/a/b.b ()Z]
      [4] ifeq +5 (target=9)
      [7] iconst_1
      [8] ireturn
      [9] iconst_m1
      [10] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [9] Var: ..., Stack: (empty)
  + Method:       tryReleaseShared(I)Z
    Access flags: 0x4
      = protected boolean tryReleaseShared(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] invokevirtual #26
        + Methodref [a/a/a/g/a/b.setState (I)V]
      [5] iconst_1
      [6] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(J)Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object a(long)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] iconst_m1
      [2] lload_1 v1
      [3] invokevirtual #27
        + Methodref [a/a/a/g/a/b.tryAcquireSharedNanos (IJ)Z]
      [6] ifne +13 (target=19)
      [9] new #13
        + Class [java/util/concurrent/TimeoutException]
      [12] dup
      [13] ldc #4
        + String [Timeout waiting for task.]
      [15] invokespecial #35
        + Methodref [java/util/concurrent/TimeoutException.<init> (Ljava/lang/String;)V]
      [18] athrow
      [19] aload_0 v0
      [20] invokespecial #23
        + Methodref [a/a/a/g/a/b.e ()Ljava/lang/Object;]
      [23] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [19] Var: ..., Stack: (empty)
  + Method:       a()Ljava/lang/Object;
    Access flags: 0x0
      = java.lang.Object a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] iconst_m1
      [2] invokevirtual #20
        + Methodref [a/a/a/g/a/b.acquireSharedInterruptibly (I)V]
      [5] aload_0 v0
      [6] invokespecial #23
        + Methodref [a/a/a/g/a/b.e ()Ljava/lang/Object;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       e()Ljava/lang/Object;
    Access flags: 0x2
      = private java.lang.Object e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 101, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] invokevirtual #24
        + Methodref [a/a/a/g/a/b.getState ()I]
      [4] istore_1 v1
      [5] iload_1 v1
      [6] lookupswitch (3 offsets, default=68) (target=74)
        2: offset = 34, target = 40
        4: offset = 58, target = 64
        8: offset = 58, target = 64
        default: offset = 68, target = 74
      [40] aload_0 v0
      [41] getfield #16
        + Fieldref [a/a/a/g/a/b.b Ljava/lang/Throwable;]
      [44] ifnull +15 (target=59)
      [47] new #12
        + Class [java/util/concurrent/ExecutionException]
      [50] dup
      [51] aload_0 v0
      [52] getfield #16
        + Fieldref [a/a/a/g/a/b.b Ljava/lang/Throwable;]
      [55] invokespecial #34
        + Methodref [java/util/concurrent/ExecutionException.<init> (Ljava/lang/Throwable;)V]
      [58] athrow
      [59] aload_0 v0
      [60] getfield #15
        + Fieldref [a/a/a/g/a/b.a Ljava/lang/Object;]
      [63] areturn
      [64] ldc #3
        + String [Task was cancelled.]
      [66] aload_0 v0
      [67] getfield #16
        + Fieldref [a/a/a/g/a/b.b Ljava/lang/Throwable;]
      [70] invokestatic #17
        + Methodref [a/a/a/g/a/a.a (Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;]
      [73] athrow
      [74] new #7
        + Class [java/lang/IllegalStateException]
      [77] dup
      [78] new #9
        + Class [java/lang/StringBuilder]
      [81] dup
      [82] invokespecial #29
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [85] ldc #1
        + String [Error, synchronizer in invalid state: ]
      [87] invokevirtual #31
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [90] iload_1 v1
      [91] invokevirtual #30
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [94] invokevirtual #32
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [97] invokespecial #28
        + Methodref [java/lang/IllegalStateException.<init> (Ljava/lang/String;)V]
      [100] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [40] Var: ...[i], Stack: (empty)
        - [59] Var: ..., Stack: (empty)
        - [64] Var: ..., Stack: (empty)
        - [74] Var: ..., Stack: (empty)
  + Method:       b()Z
    Access flags: 0x0
      = boolean b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #24
        + Methodref [a/a/a/g/a/b.getState ()I]
      [4] bipush 14
      [6] iand
      [7] ifeq +7 (target=14)
      [10] iconst_1
      [11] goto +4 (target=15)
      [14] iconst_0
      [15] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [14] Var: ..., Stack: (empty)
        - [15] Var: ..., Stack: [i]
  + Method:       c()Z
    Access flags: 0x0
      = boolean c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #24
        + Methodref [a/a/a/g/a/b.getState ()I]
      [4] bipush 12
      [6] iand
      [7] ifeq +7 (target=14)
      [10] iconst_1
      [11] goto +4 (target=15)
      [14] iconst_0
      [15] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [14] Var: ..., Stack: (empty)
        - [15] Var: ..., Stack: [i]
  + Method:       d()Z
    Access flags: 0x0
      = boolean d()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] invokevirtual #24
        + Methodref [a/a/a/g/a/b.getState ()I]
      [4] bipush 8
      [6] ificmpne +7 (target=13)
      [9] iconst_1
      [10] goto +4 (target=14)
      [13] iconst_0
      [14] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ..., Stack: (empty)
        - [14] Var: ..., Stack: [i]
  + Method:       a(Ljava/lang/Object;)Z
    Access flags: 0x0
      = boolean a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aconst_null
      [3] iconst_2
      [4] invokespecial #18
        + Methodref [a/a/a/g/a/b.a (Ljava/lang/Object;Ljava/lang/Throwable;I)Z]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Throwable;)Z
    Access flags: 0x0
      = boolean a(java.lang.Throwable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] aconst_null
      [2] aload_1 v1
      [3] iconst_2
      [4] invokespecial #18
        + Methodref [a/a/a/g/a/b.a (Ljava/lang/Object;Ljava/lang/Throwable;I)Z]
      [7] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Z)Z
    Access flags: 0x0
      = boolean a(boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] aconst_null
      [2] aconst_null
      [3] iload_1 v1
      [4] ifeq +8 (target=12)
      [7] bipush 8
      [9] goto +4 (target=13)
      [12] iconst_4
      [13] invokespecial #18
        + Methodref [a/a/a/g/a/b.a (Ljava/lang/Object;Ljava/lang/Throwable;I)Z]
      [16] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [12] Var: [a:a/a/a/g/a/b][i], Stack: [a:a/a/a/g/a/b][n][n]
        - [13] Var: [a:a/a/a/g/a/b][i], Stack: [a:a/a/a/g/a/b][n][n][i]
  + Method:       a(Ljava/lang/Object;Ljava/lang/Throwable;I)Z
    Access flags: 0x2
      = private boolean a(java.lang.Object,java.lang.Throwable,int)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 67, locals = 5, stack = 4):
      [0] aload_0 v0
      [1] iconst_0
      [2] iconst_1
      [3] invokevirtual #22
        + Methodref [a/a/a/g/a/b.compareAndSetState (II)Z]
      [6] istore v4
      [8] iload v4
      [10] ifeq +41 (target=51)
      [13] aload_0 v0
      [14] aload_1 v1
      [15] putfield #15
        + Fieldref [a/a/a/g/a/b.a Ljava/lang/Object;]
      [18] aload_0 v0
      [19] iload_3 v3
      [20] bipush 12
      [22] iand
      [23] ifeq +15 (target=38)
      [26] new #11
        + Class [java/util/concurrent/CancellationException]
      [29] dup
      [30] ldc #2
        + String [Future.cancel() was called.]
      [32] invokespecial #33
        + Methodref [java/util/concurrent/CancellationException.<init> (Ljava/lang/String;)V]
      [35] goto +4 (target=39)
      [38] aload_2 v2
      [39] putfield #16
        + Fieldref [a/a/a/g/a/b.b Ljava/lang/Throwable;]
      [42] aload_0 v0
      [43] iload_3 v3
      [44] invokevirtual #25
        + Methodref [a/a/a/g/a/b.releaseShared (I)Z]
      [47] pop
      [48] goto +16 (target=64)
      [51] aload_0 v0
      [52] invokevirtual #24
        + Methodref [a/a/a/g/a/b.getState ()I]
      [55] iconst_1
      [56] ificmpne +8 (target=64)
      [59] aload_0 v0
      [60] iconst_m1
      [61] invokevirtual #19
        + Methodref [a/a/a/g/a/b.acquireShared (I)V]
      [64] iload v4
      [66] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [38] Var: [a:a/a/a/g/a/b][a:java/lang/Object][a:java/lang/Throwable][i][i], Stack: [a:a/a/a/g/a/b]
        - [39] Var: [a:a/a/a/g/a/b][a:java/lang/Object][a:java/lang/Throwable][i][i], Stack: [a:a/a/a/g/a/b][a:java/lang/Throwable]
        - [51] Var: ..., Stack: (empty)
        - [64] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 3):
      - Annotation [Ljavax/annotation/Nullable;]:
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/c
  Superclass:    java/util/concurrent/AbstractExecutorService
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class a.a.a.g.a.c extends java.util.concurrent.AbstractExecutorService

Interfaces (count = 1):
  + Class [a/a/a/g/a/s]

Constant Pool (count = 50):
  + Class [a/a/a/g/a/c]
  + Class [a/a/a/g/a/q]
  + Class [a/a/a/g/a/r]
  + Class [a/a/a/g/a/s]
  + Class [java/util/concurrent/AbstractExecutorService]
  + Methodref [a/a/a/g/a/c.a (Ljava/lang/Runnable;)La/a/a/g/a/q;]
  + Methodref [a/a/a/g/a/c.a (Ljava/lang/Runnable;Ljava/lang/Object;)La/a/a/g/a/r;]
  + Methodref [a/a/a/g/a/c.a (Ljava/util/concurrent/Callable;)La/a/a/g/a/r;]
  + Methodref [a/a/a/g/a/c.b (Ljava/lang/Runnable;Ljava/lang/Object;)La/a/a/g/a/q;]
  + Methodref [a/a/a/g/a/c.b (Ljava/util/concurrent/Callable;)La/a/a/g/a/q;]
  + Methodref [a/a/a/g/a/r.a (Ljava/lang/Runnable;Ljava/lang/Object;)La/a/a/g/a/r;]
  + Methodref [a/a/a/g/a/r.a (Ljava/util/concurrent/Callable;)La/a/a/g/a/r;]
  + Methodref [java/util/concurrent/AbstractExecutorService.<init> ()V]
  + Methodref [java/util/concurrent/AbstractExecutorService.submit (Ljava/lang/Runnable;)Ljava/util/concurrent/Future;]
  + Methodref [java/util/concurrent/AbstractExecutorService.submit (Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;]
  + Methodref [java/util/concurrent/AbstractExecutorService.submit (Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Runnable;)La/a/a/g/a/q;]
  + NameAndType [a (Ljava/lang/Runnable;Ljava/lang/Object;)La/a/a/g/a/r;]
  + NameAndType [a (Ljava/util/concurrent/Callable;)La/a/a/g/a/r;]
  + NameAndType [b (Ljava/lang/Runnable;Ljava/lang/Object;)La/a/a/g/a/q;]
  + NameAndType [b (Ljava/util/concurrent/Callable;)La/a/a/g/a/q;]
  + NameAndType [submit (Ljava/lang/Runnable;)Ljava/util/concurrent/Future;]
  + NameAndType [submit (Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;]
  + NameAndType [submit (Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Runnable;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;]
  + Utf8 [(Ljava/lang/Runnable;Ljava/lang/Object;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/lang/Runnable;Ljava/lang/Object;)La/a/a/g/a/r;]
  + Utf8 [(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;]
  + Utf8 [(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/RunnableFuture;]
  + Utf8 [(Ljava/util/concurrent/Callable;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/util/concurrent/Callable;)La/a/a/g/a/r;]
  + Utf8 [(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;]
  + Utf8 [(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/RunnableFuture;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/g/a/c]
  + Utf8 [a/a/a/g/a/q]
  + Utf8 [a/a/a/g/a/r]
  + Utf8 [a/a/a/g/a/s]
  + Utf8 [b]
  + Utf8 [java/util/concurrent/AbstractExecutorService]
  + Utf8 [newTaskFor]
  + Utf8 [submit]

Fields (count = 0):

Methods (count = 11):
  - Method:       <init>()V
    Access flags: 0x1
      = public c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #13
        + Methodref [java/util/concurrent/AbstractExecutorService.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Runnable;Ljava/lang/Object;)La/a/a/g/a/r;
    Access flags: 0x14
      = protected final a.a.a.g.a.r a(java.lang.Runnable,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] aload_2 v2
      [2] invokestatic #11
        + Methodref [a/a/a/g/a/r.a (Ljava/lang/Runnable;Ljava/lang/Object;)La/a/a/g/a/r;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/util/concurrent/Callable;)La/a/a/g/a/r;
    Access flags: 0x14
      = protected final a.a.a.g.a.r a(java.util.concurrent.Callable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] invokestatic #12
        + Methodref [a/a/a/g/a/r.a (Ljava/util/concurrent/Callable;)La/a/a/g/a/r;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Runnable;)La/a/a/g/a/q;
    Access flags: 0x1
      = public a.a.a.g.a.q a(java.lang.Runnable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #14
        + Methodref [java/util/concurrent/AbstractExecutorService.submit (Ljava/lang/Runnable;)Ljava/util/concurrent/Future;]
      [5] checkcast #2
        + Class [a/a/a/g/a/q]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       b(Ljava/lang/Runnable;Ljava/lang/Object;)La/a/a/g/a/q;
    Access flags: 0x1
      = public a.a.a.g.a.q b(java.lang.Runnable,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 10, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokespecial #15
        + Methodref [java/util/concurrent/AbstractExecutorService.submit (Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;]
      [6] checkcast #2
        + Class [a/a/a/g/a/q]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       b(Ljava/util/concurrent/Callable;)La/a/a/g/a/q;
    Access flags: 0x1
      = public a.a.a.g.a.q b(java.util.concurrent.Callable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #16
        + Methodref [java/util/concurrent/AbstractExecutorService.submit (Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;]
      [5] checkcast #2
        + Class [a/a/a/g/a/q]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
    Access flags: 0x1001
      = public synthetic java.util.concurrent.Future submit(java.util.concurrent.Callable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #10
        + Methodref [a/a/a/g/a/c.b (Ljava/util/concurrent/Callable;)La/a/a/g/a/q;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
    Access flags: 0x1001
      = public synthetic java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokevirtual #9
        + Methodref [a/a/a/g/a/c.b (Ljava/lang/Runnable;Ljava/lang/Object;)La/a/a/g/a/q;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
    Access flags: 0x1001
      = public synthetic java.util.concurrent.Future submit(java.lang.Runnable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #6
        + Methodref [a/a/a/g/a/c.a (Ljava/lang/Runnable;)La/a/a/g/a/q;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       newTaskFor(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/RunnableFuture;
    Access flags: 0x1004
      = protected synthetic java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #8
        + Methodref [a/a/a/g/a/c.a (Ljava/util/concurrent/Callable;)La/a/a/g/a/r;]
      [5] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       newTaskFor(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/RunnableFuture;
    Access flags: 0x1004
      = protected synthetic java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokevirtual #7
        + Methodref [a/a/a/g/a/c.a (Ljava/lang/Runnable;Ljava/lang/Object;)La/a/a/g/a/r;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/d
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface a.a.a.g.a.d extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 7):
  + Class [a/a/a/g/a/d]
  + Class [java/lang/Object]
  + Utf8 [(Ljava/lang/Object;)La/a/a/g/a/q;]
  + Utf8 [a]
  + Utf8 [a/a/a/g/a/d]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 1):
  + Method:       a(Ljava/lang/Object;)La/a/a/g/a/q;
    Access flags: 0x401
      = public abstract a.a.a.g.a.q a(java.lang.Object)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/e
  Superclass:    java/lang/Error
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class a.a.a.g.a.e extends java.lang.Error

Interfaces (count = 0):

Constant Pool (count = 16):
  + Class [a/a/a/g/a/e]
  + Class [java/lang/Error]
  + Methodref [java/lang/Error.<init> ()V]
  + Methodref [java/lang/Error.<init> (Ljava/lang/Throwable;)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Throwable;)V]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Error;)V]
  + Utf8 [(Ljava/lang/Throwable;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a/a/a/g/a/e]
  + Utf8 [java/lang/Error]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>()V
    Access flags: 0x4
      = protected e()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #3
        + Methodref [java/lang/Error.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/Error;)V
    Access flags: 0x1
      = public e(java.lang.Error)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #4
        + Methodref [java/lang/Error.<init> (Ljava/lang/Throwable;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/f
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.g.a.f extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 102):
  + String [ with executor ]
  + String [Executor was null.]
  + String [Runnable was null.]
  + String [RuntimeException while executing runnable ]
  + Class [a/a/a/a/o]
  + Class [a/a/a/g/a/f]
  + Class [a/a/a/g/a/g]
  + Class [java/lang/Class]
  + Class [java/lang/Object]
  + Class [java/lang/RuntimeException]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/Throwable]
  + Class [java/util/concurrent/Executor]
  + Class [java/util/logging/Level]
  + Class [java/util/logging/Logger]
  + Fieldref [a/a/a/g/a/f.a Ljava/util/logging/Logger;]
  + Fieldref [a/a/a/g/a/f.b La/a/a/g/a/g;]
  + Fieldref [a/a/a/g/a/f.c Z]
  + Fieldref [a/a/a/g/a/g.a Ljava/lang/Runnable;]
  + Fieldref [a/a/a/g/a/g.b Ljava/util/concurrent/Executor;]
  + Fieldref [a/a/a/g/a/g.c La/a/a/g/a/g;]
  + Fieldref [java/util/logging/Level.SEVERE Ljava/util/logging/Level;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/g/a/f.b (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + Methodref [a/a/a/g/a/g.<init> (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;La/a/a/g/a/g;)V]
  + Methodref [java/lang/Class.getName ()Ljava/lang/String;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/logging/Logger.getLogger (Ljava/lang/String;)Ljava/util/logging/Logger;]
  + Methodref [java/util/logging/Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V]
  + InterfaceMethodref [java/util/concurrent/Executor.execute (Ljava/lang/Runnable;)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;La/a/a/g/a/g;)V]
  + NameAndType [SEVERE Ljava/util/logging/Level;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a Ljava/lang/Runnable;]
  + NameAndType [a Ljava/util/logging/Logger;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [b (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + NameAndType [b La/a/a/g/a/g;]
  + NameAndType [b Ljava/util/concurrent/Executor;]
  + NameAndType [c La/a/a/g/a/g;]
  + NameAndType [c Z]
  + NameAndType [execute (Ljava/lang/Runnable;)V]
  + NameAndType [getLogger (Ljava/lang/String;)Ljava/util/logging/Logger;]
  + NameAndType [getName ()Ljava/lang/String;]
  + NameAndType [log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [ with executor ]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Runnable;)V]
  + Utf8 [(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + Utf8 [(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;La/a/a/g/a/g;)V]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)Ljava/util/logging/Logger;]
  + Utf8 [(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Executor was null.]
  + Utf8 [La/a/a/g/a/g;]
  + Utf8 [Ljava/lang/Runnable;]
  + Utf8 [Ljava/util/concurrent/Executor;]
  + Utf8 [Ljava/util/logging/Level;]
  + Utf8 [Ljava/util/logging/Logger;]
  + Utf8 [Ljavax/annotation/concurrent/GuardedBy;]
  + Utf8 [Runnable was null.]
  + Utf8 [RuntimeException while executing runnable ]
  + Utf8 [RuntimeInvisibleAnnotations]
  + Utf8 [SEVERE]
  + Utf8 [StackMapTable]
  + Utf8 [Z]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/g/a/f]
  + Utf8 [a/a/a/g/a/g]
  + Utf8 [append]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [execute]
  + Utf8 [getLogger]
  + Utf8 [getName]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/RuntimeException]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/Throwable]
  + Utf8 [java/util/concurrent/Executor]
  + Utf8 [java/util/logging/Level]
  + Utf8 [java/util/logging/Logger]
  + Utf8 [log]
  + Utf8 [this]
  + Utf8 [toString]
  + Utf8 [value]

Fields (count = 3):
  + Field:        a Ljava/util/logging/Logger;
    Access flags: 0x18
      = static final java.util.logging.Logger a
  + Field:        b La/a/a/g/a/g;
    Access flags: 0x2
      = private a.a.a.g.a.g b
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [this]
  + Field:        c Z
    Access flags: 0x2
      = private boolean c
    Class member attributes (count = 1):
    + Runtime invisible annotations attribute:
      - Annotation [Ljavax/annotation/concurrent/GuardedBy;]:
        - Constant element value [value '115']
          + Utf8 [this]

Methods (count = 5):
  - Method:       <init>()V
    Access flags: 0x1
      = public f()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #27
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
    Access flags: 0x1
      = public void a(java.lang.Runnable,java.util.concurrent.Executor)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 63, locals = 5, stack = 6):
      [0] aload_1 v1
      [1] ldc #3
        + String [Runnable was null.]
      [3] invokestatic #23
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [6] pop
      [7] aload_2 v2
      [8] ldc #2
        + String [Executor was null.]
      [10] invokestatic #23
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [13] pop
      [14] aload_0 v0
      [15] dup
      [16] astore_3 v3
      [17] monitorenter
      [18] aload_0 v0
      [19] getfield #18
        + Fieldref [a/a/a/g/a/f.c Z]
      [22] ifne +23 (target=45)
      [25] aload_0 v0
      [26] new #7
        + Class [a/a/a/g/a/g]
      [29] dup
      [30] aload_1 v1
      [31] aload_2 v2
      [32] aload_0 v0
      [33] getfield #17
        + Fieldref [a/a/a/g/a/f.b La/a/a/g/a/g;]
      [36] invokespecial #25
        + Methodref [a/a/a/g/a/g.<init> (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;La/a/a/g/a/g;)V]
      [39] putfield #17
        + Fieldref [a/a/a/g/a/f.b La/a/a/g/a/g;]
      [42] aload_3 v3
      [43] monitorexit
      [44] return
      [45] aload_3 v3
      [46] monitorexit
      [47] goto +10 (target=57)
      [50] astore v4
      [52] aload_3 v3
      [53] monitorexit
      [54] aload v4
      [56] athrow
      [57] aload_1 v1
      [58] aload_2 v2
      [59] invokestatic #24
        + Methodref [a/a/a/g/a/f.b (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
      [62] return
      Code attribute exceptions (count = 3):
      - ExceptionInfo (18 -> 44: 50):
      - ExceptionInfo (45 -> 47: 50):
      - ExceptionInfo (50 -> 54: 50):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [45] Var: ...[a:java/lang/Object], Stack: (empty)
        - [50] Var: ..., Stack: [a:java/lang/Throwable]
        - [57] Var: -1, Stack: (empty)
  + Method:       a()V
    Access flags: 0x1
      = public void a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 86, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] dup
      [2] astore_2 v2
      [3] monitorenter
      [4] aload_0 v0
      [5] getfield #18
        + Fieldref [a/a/a/g/a/f.c Z]
      [8] ifeq +6 (target=14)
      [11] aload_2 v2
      [12] monitorexit
      [13] return
      [14] aload_0 v0
      [15] iconst_1
      [16] putfield #18
        + Fieldref [a/a/a/g/a/f.c Z]
      [19] aload_0 v0
      [20] getfield #17
        + Fieldref [a/a/a/g/a/f.b La/a/a/g/a/g;]
      [23] astore_1 v1
      [24] aload_0 v0
      [25] aconst_null
      [26] putfield #17
        + Fieldref [a/a/a/g/a/f.b La/a/a/g/a/g;]
      [29] aload_2 v2
      [30] monitorexit
      [31] goto +8 (target=39)
      [34] astore_3 v3
      [35] aload_2 v2
      [36] monitorexit
      [37] aload_3 v3
      [38] athrow
      [39] aconst_null
      [40] astore_2 v2
      [41] aload_1 v1
      [42] ifnull +20 (target=62)
      [45] aload_1 v1
      [46] astore_3 v3
      [47] aload_1 v1
      [48] getfield #21
        + Fieldref [a/a/a/g/a/g.c La/a/a/g/a/g;]
      [51] astore_1 v1
      [52] aload_3 v3
      [53] aload_2 v2
      [54] putfield #21
        + Fieldref [a/a/a/g/a/g.c La/a/a/g/a/g;]
      [57] aload_3 v3
      [58] astore_2 v2
      [59] goto -18 (target=41)
      [62] aload_2 v2
      [63] ifnull +22 (target=85)
      [66] aload_2 v2
      [67] getfield #19
        + Fieldref [a/a/a/g/a/g.a Ljava/lang/Runnable;]
      [70] aload_2 v2
      [71] getfield #20
        + Fieldref [a/a/a/g/a/g.b Ljava/util/concurrent/Executor;]
      [74] invokestatic #24
        + Methodref [a/a/a/g/a/f.b (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
      [77] aload_2 v2
      [78] getfield #21
        + Fieldref [a/a/a/g/a/g.c La/a/a/g/a/g;]
      [81] astore_2 v2
      [82] goto -20 (target=62)
      [85] return
      Code attribute exceptions (count = 3):
      - ExceptionInfo (4 -> 13: 34):
      - ExceptionInfo (14 -> 31: 34):
      - ExceptionInfo (34 -> 37: 34):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [14] Var: ...[T][a:java/lang/Object], Stack: (empty)
        - [34] Var: ..., Stack: [a:java/lang/Throwable]
        - [39] Var: [a:a/a/a/g/a/f][a:a/a/a/g/a/g], Stack: 
        - [41] Var: ...[a:a/a/a/g/a/g], Stack: (empty)
        - [62] Var: ..., Stack: (empty)
        - [85] Var: ..., Stack: (empty)
  + Method:       b(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
    Access flags: 0xa
      = private static void b(java.lang.Runnable,java.util.concurrent.Executor)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 50, locals = 3, stack = 4):
      [0] aload_1 v1
      [1] aload_0 v0
      [2] invokeinterface #34
        + InterfaceMethodref [java/util/concurrent/Executor.execute (Ljava/lang/Runnable;)V]
      [7] goto +42 (target=49)
      [10] astore_2 v2
      [11] getstatic #16
        + Fieldref [a/a/a/g/a/f.a Ljava/util/logging/Logger;]
      [14] getstatic #22
        + Fieldref [java/util/logging/Level.SEVERE Ljava/util/logging/Level;]
      [17] new #11
        + Class [java/lang/StringBuilder]
      [20] dup
      [21] invokespecial #28
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [24] ldc #4
        + String [RuntimeException while executing runnable ]
      [26] invokevirtual #30
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [29] aload_0 v0
      [30] invokevirtual #29
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [33] ldc #1
        + String [ with executor ]
      [35] invokevirtual #30
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [38] aload_1 v1
      [39] invokevirtual #29
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [42] invokevirtual #31
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [45] aload_2 v2
      [46] invokevirtual #33
        + Methodref [java/util/logging/Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V]
      [49] return
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 7: 10):
      + Class [java/lang/RuntimeException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [10] Var: ..., Stack: [a:java/lang/RuntimeException]
        - [49] Var: ..., Stack: (empty)
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 0, stack = 1):
      [0] ldc #6
        + Class [a/a/a/g/a/f]
      [2] invokevirtual #26
        + Methodref [java/lang/Class.getName ()Ljava/lang/String;]
      [5] invokestatic #32
        + Methodref [java/util/logging/Logger.getLogger (Ljava/lang/String;)Ljava/util/logging/Logger;]
      [8] putstatic #16
        + Fieldref [a/a/a/g/a/f.a Ljava/util/logging/Logger;]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/g
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.g.a.g extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 25):
  + Class [a/a/a/g/a/g]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/g/a/g.a Ljava/lang/Runnable;]
  + Fieldref [a/a/a/g/a/g.b Ljava/util/concurrent/Executor;]
  + Fieldref [a/a/a/g/a/g.c La/a/a/g/a/g;]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a Ljava/lang/Runnable;]
  + NameAndType [b Ljava/util/concurrent/Executor;]
  + NameAndType [c La/a/a/g/a/g;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;La/a/a/g/a/g;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/g/a/g;]
  + Utf8 [Ljava/lang/Runnable;]
  + Utf8 [Ljava/util/concurrent/Executor;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/g/a/g]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [java/lang/Object]

Fields (count = 3):
  + Field:        a Ljava/lang/Runnable;
    Access flags: 0x10
      = final java.lang.Runnable a
  + Field:        b Ljava/util/concurrent/Executor;
    Access flags: 0x10
      = final java.util.concurrent.Executor b
  + Field:        c La/a/a/g/a/g;
    Access flags: 0x0
      = a.a.a.g.a.g c
    Class member attributes (count = 1):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:

Methods (count = 1):
  - Method:       <init>(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;La/a/a/g/a/g;)V
    Access flags: 0x0
      = g(java.lang.Runnable,java.util.concurrent.Executor,a.a.a.g.a.g)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #6
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #3
        + Fieldref [a/a/a/g/a/g.a Ljava/lang/Runnable;]
      [9] aload_0 v0
      [10] aload_2 v2
      [11] putfield #4
        + Fieldref [a/a/a/g/a/g.b Ljava/util/concurrent/Executor;]
      [14] aload_0 v0
      [15] aload_3 v3
      [16] putfield #5
        + Fieldref [a/a/a/g/a/g.c La/a/a/g/a/g;]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/h
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.g.a.h extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 80):
  + Class [a/a/a/a/o]
  + Class [a/a/a/c/dh]
  + Class [a/a/a/g/a/h]
  + Class [a/a/a/g/a/i]
  + Class [a/a/a/g/a/j]
  + Class [a/a/a/g/a/k]
  + Class [a/a/a/g/a/l]
  + Class [a/a/a/g/a/n]
  + Class [a/a/a/g/a/p]
  + Class [a/a/a/g/a/q]
  + Class [a/a/a/g/a/t]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/g/a/h.a La/a/a/g/a/d;]
  + Fieldref [a/a/a/g/a/h.b La/a/a/c/dh;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/c/dh.a ()La/a/a/c/dh;]
  + Methodref [a/a/a/c/dh.a (La/a/a/a/e;)La/a/a/c/dh;]
  + Methodref [a/a/a/c/dh.b ()La/a/a/c/dh;]
  + Methodref [a/a/a/g/a/h.a (La/a/a/g/a/q;La/a/a/a/e;Ljava/util/concurrent/Executor;)La/a/a/g/a/q;]
  + Methodref [a/a/a/g/a/h.a (La/a/a/g/a/q;La/a/a/g/a/d;Ljava/util/concurrent/Executor;)La/a/a/g/a/q;]
  + Methodref [a/a/a/g/a/i.<init> (La/a/a/a/e;)V]
  + Methodref [a/a/a/g/a/j.<init> ()V]
  + Methodref [a/a/a/g/a/k.<init> ()V]
  + Methodref [a/a/a/g/a/l.<init> (La/a/a/g/a/d;La/a/a/g/a/q;La/a/a/g/a/i;)V]
  + Methodref [a/a/a/g/a/n.<init> (Ljava/lang/Throwable;)V]
  + Methodref [a/a/a/g/a/p.<init> (Ljava/lang/Object;)V]
  + Methodref [a/a/a/g/a/t.a ()La/a/a/g/a/s;]
  + InterfaceMethodref [a/a/a/g/a/q.a (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (La/a/a/a/e;)V]
  + NameAndType [<init> (La/a/a/g/a/d;La/a/a/g/a/q;La/a/a/g/a/i;)V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/Throwable;)V]
  + NameAndType [a ()La/a/a/c/dh;]
  + NameAndType [a ()La/a/a/g/a/s;]
  + NameAndType [a (La/a/a/a/e;)La/a/a/c/dh;]
  + NameAndType [a (La/a/a/g/a/q;La/a/a/a/e;Ljava/util/concurrent/Executor;)La/a/a/g/a/q;]
  + NameAndType [a (La/a/a/g/a/q;La/a/a/g/a/d;Ljava/util/concurrent/Executor;)La/a/a/g/a/q;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + NameAndType [a La/a/a/g/a/d;]
  + NameAndType [b ()La/a/a/c/dh;]
  + NameAndType [b La/a/a/c/dh;]
  + Utf8 [()La/a/a/c/dh;]
  + Utf8 [()La/a/a/g/a/s;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/a/e;)La/a/a/c/dh;]
  + Utf8 [(La/a/a/a/e;)V]
  + Utf8 [(La/a/a/g/a/d;La/a/a/g/a/q;La/a/a/g/a/i;)V]
  + Utf8 [(La/a/a/g/a/q;La/a/a/a/e;)La/a/a/g/a/q;]
  + Utf8 [(La/a/a/g/a/q;La/a/a/a/e;Ljava/util/concurrent/Executor;)La/a/a/g/a/q;]
  + Utf8 [(La/a/a/g/a/q;La/a/a/g/a/d;Ljava/util/concurrent/Executor;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + Utf8 [(Ljava/lang/Throwable;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/lang/Throwable;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/dh;]
  + Utf8 [La/a/a/g/a/d;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/c/dh]
  + Utf8 [a/a/a/g/a/h]
  + Utf8 [a/a/a/g/a/i]
  + Utf8 [a/a/a/g/a/j]
  + Utf8 [a/a/a/g/a/k]
  + Utf8 [a/a/a/g/a/l]
  + Utf8 [a/a/a/g/a/n]
  + Utf8 [a/a/a/g/a/p]
  + Utf8 [a/a/a/g/a/q]
  + Utf8 [a/a/a/g/a/t]
  + Utf8 [b]
  + Utf8 [java/lang/Object]

Fields (count = 2):
  + Field:        a La/a/a/g/a/d;
    Access flags: 0x1a
      = private static final a.a.a.g.a.d a
  + Field:        b La/a/a/c/dh;
    Access flags: 0x1a
      = private static final a.a.a.c.dh b

Methods (count = 6):
  + Method:       a(Ljava/lang/Object;)La/a/a/g/a/q;
    Access flags: 0x9
      = public static a.a.a.g.a.q a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #9
        + Class [a/a/a/g/a/p]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #26
        + Methodref [a/a/a/g/a/p.<init> (Ljava/lang/Object;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Throwable;)La/a/a/g/a/q;
    Access flags: 0x9
      = public static a.a.a.g.a.q a(java.lang.Throwable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] invokestatic #15
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] new #8
        + Class [a/a/a/g/a/n]
      [8] dup
      [9] aload_0 v0
      [10] invokespecial #25
        + Methodref [a/a/a/g/a/n.<init> (Ljava/lang/Throwable;)V]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/g/a/q;La/a/a/g/a/d;Ljava/util/concurrent/Executor;)La/a/a/g/a/q;
    Access flags: 0x9
      = public static a.a.a.g.a.q a(a.a.a.g.a.q,a.a.a.g.a.d,java.util.concurrent.Executor)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 4, stack = 5):
      [0] new #7
        + Class [a/a/a/g/a/l]
      [3] dup
      [4] aload_1 v1
      [5] aload_0 v0
      [6] aconst_null
      [7] invokespecial #24
        + Methodref [a/a/a/g/a/l.<init> (La/a/a/g/a/d;La/a/a/g/a/q;La/a/a/g/a/i;)V]
      [10] astore_3 v3
      [11] aload_0 v0
      [12] aload_3 v3
      [13] aload_2 v2
      [14] invokeinterface #28
        + InterfaceMethodref [a/a/a/g/a/q.a (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
      [19] aload_3 v3
      [20] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/g/a/q;La/a/a/a/e;)La/a/a/g/a/q;
    Access flags: 0x9
      = public static a.a.a.g.a.q a(a.a.a.g.a.q,a.a.a.a.e)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokestatic #27
        + Methodref [a/a/a/g/a/t.a ()La/a/a/g/a/s;]
      [5] invokestatic #19
        + Methodref [a/a/a/g/a/h.a (La/a/a/g/a/q;La/a/a/a/e;Ljava/util/concurrent/Executor;)La/a/a/g/a/q;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/g/a/q;La/a/a/a/e;Ljava/util/concurrent/Executor;)La/a/a/g/a/q;
    Access flags: 0x9
      = public static a.a.a.g.a.q a(a.a.a.g.a.q,a.a.a.a.e,java.util.concurrent.Executor)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 4, stack = 3):
      [0] aload_1 v1
      [1] invokestatic #15
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] new #4
        + Class [a/a/a/g/a/i]
      [8] dup
      [9] aload_1 v1
      [10] invokespecial #21
        + Methodref [a/a/a/g/a/i.<init> (La/a/a/a/e;)V]
      [13] astore_3 v3
      [14] aload_0 v0
      [15] aload_3 v3
      [16] aload_2 v2
      [17] invokestatic #20
        + Methodref [a/a/a/g/a/h.a (La/a/a/g/a/q;La/a/a/g/a/d;Ljava/util/concurrent/Executor;)La/a/a/g/a/q;]
      [20] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 30, locals = 0, stack = 3):
      [0] new #5
        + Class [a/a/a/g/a/j]
      [3] dup
      [4] invokespecial #22
        + Methodref [a/a/a/g/a/j.<init> ()V]
      [7] putstatic #13
        + Fieldref [a/a/a/g/a/h.a La/a/a/g/a/d;]
      [10] invokestatic #18
        + Methodref [a/a/a/c/dh.b ()La/a/a/c/dh;]
      [13] new #6
        + Class [a/a/a/g/a/k]
      [16] dup
      [17] invokespecial #23
        + Methodref [a/a/a/g/a/k.<init> ()V]
      [20] invokevirtual #17
        + Methodref [a/a/a/c/dh.a (La/a/a/a/e;)La/a/a/c/dh;]
      [23] invokevirtual #16
        + Methodref [a/a/a/c/dh.a ()La/a/a/c/dh;]
      [26] putstatic #14
        + Fieldref [a/a/a/g/a/h.b La/a/a/c/dh;]
      [29] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/i
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.g.a.i extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/g/a/d]

Constant Pool (count = 27):
  + Class [a/a/a/a/e]
  + Class [a/a/a/g/a/d]
  + Class [a/a/a/g/a/h]
  + Class [a/a/a/g/a/i]
  + Class [java/lang/Object]
  + Fieldref [a/a/a/g/a/i.a La/a/a/a/e;]
  + Methodref [a/a/a/g/a/h.a (Ljava/lang/Object;)La/a/a/g/a/q;]
  + Methodref [java/lang/Object.<init> ()V]
  + InterfaceMethodref [a/a/a/a/e.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/g/a/q;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a La/a/a/a/e;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/a/e;)V]
  + Utf8 [(Ljava/lang/Object;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/a/e;]
  + Utf8 [a]
  + Utf8 [a/a/a/a/e]
  + Utf8 [a/a/a/g/a/d]
  + Utf8 [a/a/a/g/a/h]
  + Utf8 [a/a/a/g/a/i]
  + Utf8 [java/lang/Object]

Fields (count = 1):
  + Field:        a La/a/a/a/e;
    Access flags: 0x1010
      = final synthetic a.a.a.a.e a

Methods (count = 2):
  - Method:       <init>(La/a/a/a/e;)V
    Access flags: 0x0
      = i(a.a.a.a.e)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #6
        + Fieldref [a/a/a/g/a/i.a La/a/a/a/e;]
      [5] aload_0 v0
      [6] invokespecial #8
        + Methodref [java/lang/Object.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)La/a/a/g/a/q;
    Access flags: 0x1
      = public a.a.a.g.a.q a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [a/a/a/g/a/i.a La/a/a/a/e;]
      [4] aload_1 v1
      [5] invokeinterface #9
        + InterfaceMethodref [a/a/a/a/e.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [10] astore_2 v2
      [11] aload_2 v2
      [12] invokestatic #7
        + Methodref [a/a/a/g/a/h.a (Ljava/lang/Object;)La/a/a/g/a/q;]
      [15] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/j
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.g.a.j extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/g/a/d]

Constant Pool (count = 19):
  + Class [a/a/a/g/a/d]
  + Class [a/a/a/g/a/j]
  + Class [a/a/a/g/a/q]
  + Class [java/lang/Object]
  + Methodref [a/a/a/g/a/j.a (La/a/a/g/a/q;)La/a/a/g/a/q;]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a (La/a/a/g/a/q;)La/a/a/g/a/q;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/g/a/q;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/lang/Object;)La/a/a/g/a/q;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/g/a/d]
  + Utf8 [a/a/a/g/a/j]
  + Utf8 [a/a/a/g/a/q]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x0
      = j()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #6
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/g/a/q;)La/a/a/g/a/q;
    Access flags: 0x1
      = public a.a.a.g.a.q a(a.a.a.g.a.q)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)La/a/a/g/a/q;
    Access flags: 0x1041
      = public bridge synthetic a.a.a.g.a.q a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #3
        + Class [a/a/a/g/a/q]
      [5] invokevirtual #5
        + Methodref [a/a/a/g/a/j.a (La/a/a/g/a/q;)La/a/a/g/a/q;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/k
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.g.a.k extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/a/e]

Constant Pool (count = 43):
  + Class [a/a/a/a/e]
  + Class [a/a/a/g/a/k]
  + Class [java/lang/Boolean]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/reflect/Constructor]
  + Class [java/util/Arrays]
  + Class [java/util/List]
  + Methodref [a/a/a/g/a/k.a (Ljava/lang/reflect/Constructor;)Ljava/lang/Boolean;]
  + Methodref [java/lang/Boolean.valueOf (Z)Ljava/lang/Boolean;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/reflect/Constructor.getParameterTypes ()[Ljava/lang/Class;]
  + Methodref [java/util/Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;]
  + InterfaceMethodref [java/util/List.contains (Ljava/lang/Object;)Z]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/reflect/Constructor;)Ljava/lang/Boolean;]
  + NameAndType [asList ([Ljava/lang/Object;)Ljava/util/List;]
  + NameAndType [contains (Ljava/lang/Object;)Z]
  + NameAndType [getParameterTypes ()[Ljava/lang/Class;]
  + NameAndType [valueOf (Z)Ljava/lang/Boolean;]
  + Utf8 [()V]
  + Utf8 [()[Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/reflect/Constructor;)Ljava/lang/Boolean;]
  + Utf8 [(Z)Ljava/lang/Boolean;]
  + Utf8 [([Ljava/lang/Object;)Ljava/util/List;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/a/e]
  + Utf8 [a/a/a/g/a/k]
  + Utf8 [asList]
  + Utf8 [contains]
  + Utf8 [getParameterTypes]
  + Utf8 [java/lang/Boolean]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/reflect/Constructor]
  + Utf8 [java/util/Arrays]
  + Utf8 [java/util/List]
  + Utf8 [valueOf]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x0
      = k()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #11
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/reflect/Constructor;)Ljava/lang/Boolean;
    Access flags: 0x1
      = public java.lang.Boolean a(java.lang.reflect.Constructor)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] invokevirtual #12
        + Methodref [java/lang/reflect/Constructor.getParameterTypes ()[Ljava/lang/Class;]
      [4] invokestatic #13
        + Methodref [java/util/Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;]
      [7] ldc #5
        + Class [java/lang/String]
      [9] invokeinterface #14
        + InterfaceMethodref [java/util/List.contains (Ljava/lang/Object;)Z]
      [14] invokestatic #10
        + Methodref [java/lang/Boolean.valueOf (Z)Ljava/lang/Boolean;]
      [17] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x1041
      = public bridge synthetic java.lang.Object a(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #6
        + Class [java/lang/reflect/Constructor]
      [5] invokevirtual #9
        + Methodref [a/a/a/g/a/k.a (Ljava/lang/reflect/Constructor;)Ljava/lang/Boolean;]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/l
  Superclass:    a/a/a/g/a/a
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.g.a.l extends a.a.a.g.a.a

Interfaces (count = 1):
  + Class [java/lang/Runnable]

Constant Pool (count = 110):
  + Class [a/a/a/a/o]
  + Class [a/a/a/g/a/a]
  + Class [a/a/a/g/a/d]
  + Class [a/a/a/g/a/l]
  + Class [a/a/a/g/a/m]
  + Class [a/a/a/g/a/q]
  + Class [a/a/a/g/a/t]
  + Class [a/a/a/g/a/y]
  + Class [java/lang/Object]
  + Class [java/lang/Runnable]
  + Class [java/lang/Throwable]
  + Class [java/lang/reflect/UndeclaredThrowableException]
  + Class [java/util/concurrent/CancellationException]
  + Class [java/util/concurrent/CountDownLatch]
  + Class [java/util/concurrent/ExecutionException]
  + Class [java/util/concurrent/Future]
  + Fieldref [a/a/a/g/a/l.a La/a/a/g/a/d;]
  + Fieldref [a/a/a/g/a/l.b La/a/a/g/a/q;]
  + Fieldref [a/a/a/g/a/l.c La/a/a/g/a/q;]
  + Fieldref [a/a/a/g/a/l.d Ljava/util/concurrent/CountDownLatch;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/g/a/a.<init> ()V]
  + Methodref [a/a/a/g/a/a.cancel (Z)Z]
  + Methodref [a/a/a/g/a/l.<init> (La/a/a/g/a/d;La/a/a/g/a/q;)V]
  + Methodref [a/a/a/g/a/l.a (Ljava/lang/Throwable;)Z]
  + Methodref [a/a/a/g/a/l.a (Ljava/util/concurrent/Future;Z)V]
  + Methodref [a/a/a/g/a/l.b ()Z]
  + Methodref [a/a/a/g/a/l.cancel (Z)Z]
  + Methodref [a/a/a/g/a/l.isCancelled ()Z]
  + Methodref [a/a/a/g/a/m.<init> (La/a/a/g/a/l;La/a/a/g/a/q;)V]
  + Methodref [a/a/a/g/a/t.a ()La/a/a/g/a/s;]
  + Methodref [a/a/a/g/a/y.a (Ljava/util/concurrent/Future;)Ljava/lang/Object;]
  + Methodref [java/lang/reflect/UndeclaredThrowableException.getCause ()Ljava/lang/Throwable;]
  + Methodref [java/util/concurrent/CountDownLatch.<init> (I)V]
  + Methodref [java/util/concurrent/CountDownLatch.countDown ()V]
  + Methodref [java/util/concurrent/ExecutionException.getCause ()Ljava/lang/Throwable;]
  + InterfaceMethodref [a/a/a/g/a/d.a (Ljava/lang/Object;)La/a/a/g/a/q;]
  + InterfaceMethodref [a/a/a/g/a/q.a (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + InterfaceMethodref [a/a/a/g/a/q.cancel (Z)Z]
  + InterfaceMethodref [java/util/concurrent/Future.cancel (Z)Z]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (I)V]
  + NameAndType [<init> (La/a/a/g/a/d;La/a/a/g/a/q;)V]
  + NameAndType [<init> (La/a/a/g/a/l;La/a/a/g/a/q;)V]
  + NameAndType [a ()La/a/a/g/a/s;]
  + NameAndType [a (Ljava/lang/Object;)La/a/a/g/a/q;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + NameAndType [a (Ljava/lang/Throwable;)Z]
  + NameAndType [a (Ljava/util/concurrent/Future;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/util/concurrent/Future;Z)V]
  + NameAndType [a La/a/a/g/a/d;]
  + NameAndType [b ()Z]
  + NameAndType [b La/a/a/g/a/q;]
  + NameAndType [c La/a/a/g/a/q;]
  + NameAndType [cancel (Z)Z]
  + NameAndType [countDown ()V]
  + NameAndType [d Ljava/util/concurrent/CountDownLatch;]
  + NameAndType [getCause ()Ljava/lang/Throwable;]
  + NameAndType [isCancelled ()Z]
  + Utf8 [()La/a/a/g/a/s;]
  + Utf8 [()Ljava/lang/Throwable;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)V]
  + Utf8 [(La/a/a/g/a/d;La/a/a/g/a/q;)V]
  + Utf8 [(La/a/a/g/a/d;La/a/a/g/a/q;La/a/a/g/a/i;)V]
  + Utf8 [(La/a/a/g/a/l;La/a/a/g/a/q;)La/a/a/g/a/q;]
  + Utf8 [(La/a/a/g/a/l;La/a/a/g/a/q;)V]
  + Utf8 [(Ljava/lang/Object;)La/a/a/g/a/q;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + Utf8 [(Ljava/lang/Throwable;)Z]
  + Utf8 [(Ljava/util/concurrent/Future;)Ljava/lang/Object;]
  + Utf8 [(Ljava/util/concurrent/Future;Z)V]
  + Utf8 [(Z)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/g/a/d;]
  + Utf8 [La/a/a/g/a/q;]
  + Utf8 [Ljava/util/concurrent/CountDownLatch;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/g/a/a]
  + Utf8 [a/a/a/g/a/d]
  + Utf8 [a/a/a/g/a/l]
  + Utf8 [a/a/a/g/a/m]
  + Utf8 [a/a/a/g/a/q]
  + Utf8 [a/a/a/g/a/t]
  + Utf8 [a/a/a/g/a/y]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [cancel]
  + Utf8 [countDown]
  + Utf8 [d]
  + Utf8 [getCause]
  + Utf8 [isCancelled]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/Runnable]
  + Utf8 [java/lang/Throwable]
  + Utf8 [java/lang/reflect/UndeclaredThrowableException]
  + Utf8 [java/util/concurrent/CancellationException]
  + Utf8 [java/util/concurrent/CountDownLatch]
  + Utf8 [java/util/concurrent/ExecutionException]
  + Utf8 [java/util/concurrent/Future]
  + Utf8 [run]

Fields (count = 4):
  + Field:        a La/a/a/g/a/d;
    Access flags: 0x2
      = private a.a.a.g.a.d a
  + Field:        b La/a/a/g/a/q;
    Access flags: 0x2
      = private a.a.a.g.a.q b
  + Field:        c La/a/a/g/a/q;
    Access flags: 0x42
      = private volatile a.a.a.g.a.q c
  + Field:        d Ljava/util/concurrent/CountDownLatch;
    Access flags: 0x12
      = private final java.util.concurrent.CountDownLatch d

Methods (count = 6):
  - Method:       <init>(La/a/a/g/a/d;La/a/a/g/a/q;)V
    Access flags: 0x2
      = private l(a.a.a.g.a.d,a.a.a.g.a.q)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 39, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] invokespecial #22
        + Methodref [a/a/a/g/a/a.<init> ()V]
      [4] aload_0 v0
      [5] new #14
        + Class [java/util/concurrent/CountDownLatch]
      [8] dup
      [9] iconst_1
      [10] invokespecial #34
        + Methodref [java/util/concurrent/CountDownLatch.<init> (I)V]
      [13] putfield #20
        + Fieldref [a/a/a/g/a/l.d Ljava/util/concurrent/CountDownLatch;]
      [16] aload_0 v0
      [17] aload_1 v1
      [18] invokestatic #21
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [21] checkcast #3
        + Class [a/a/a/g/a/d]
      [24] putfield #17
        + Fieldref [a/a/a/g/a/l.a La/a/a/g/a/d;]
      [27] aload_0 v0
      [28] aload_2 v2
      [29] invokestatic #21
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [32] checkcast #6
        + Class [a/a/a/g/a/q]
      [35] putfield #18
        + Fieldref [a/a/a/g/a/l.b La/a/a/g/a/q;]
      [38] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       cancel(Z)Z
    Access flags: 0x1
      = public boolean cancel(boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 30, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] invokespecial #23
        + Methodref [a/a/a/g/a/a.cancel (Z)Z]
      [5] ifeq +23 (target=28)
      [8] aload_0 v0
      [9] aload_0 v0
      [10] getfield #18
        + Fieldref [a/a/a/g/a/l.b La/a/a/g/a/q;]
      [13] iload_1 v1
      [14] invokespecial #26
        + Methodref [a/a/a/g/a/l.a (Ljava/util/concurrent/Future;Z)V]
      [17] aload_0 v0
      [18] aload_0 v0
      [19] getfield #19
        + Fieldref [a/a/a/g/a/l.c La/a/a/g/a/q;]
      [22] iload_1 v1
      [23] invokespecial #26
        + Methodref [a/a/a/g/a/l.a (Ljava/util/concurrent/Future;Z)V]
      [26] iconst_1
      [27] ireturn
      [28] iconst_0
      [29] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [28] Var: ..., Stack: (empty)
  + Method:       a(Ljava/util/concurrent/Future;Z)V
    Access flags: 0x2
      = private void a(java.util.concurrent.Future,boolean)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 13, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] ifnull +11 (target=12)
      [4] aload_1 v1
      [5] iload_2 v2
      [6] invokeinterface #40
        + InterfaceMethodref [java/util/concurrent/Future.cancel (Z)Z]
      [11] pop
      [12] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [12] Var: ..., Stack: (empty)
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       run()V
    Access flags: 0x1
      = public void run()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 237, locals = 4, stack = 5):
      [0] aload_0 v0
      [1] getfield #18
        + Fieldref [a/a/a/g/a/l.b La/a/a/g/a/q;]
      [4] invokestatic #32
        + Methodref [a/a/a/g/a/y.a (Ljava/util/concurrent/Future;)Ljava/lang/Object;]
      [7] astore_1 v1
      [8] goto +56 (target=64)
      [11] astore_2 v2
      [12] aload_0 v0
      [13] iconst_0
      [14] invokevirtual #28
        + Methodref [a/a/a/g/a/l.cancel (Z)Z]
      [17] pop
      [18] aload_0 v0
      [19] aconst_null
      [20] putfield #17
        + Fieldref [a/a/a/g/a/l.a La/a/a/g/a/d;]
      [23] aload_0 v0
      [24] aconst_null
      [25] putfield #18
        + Fieldref [a/a/a/g/a/l.b La/a/a/g/a/q;]
      [28] aload_0 v0
      [29] getfield #20
        + Fieldref [a/a/a/g/a/l.d Ljava/util/concurrent/CountDownLatch;]
      [32] invokevirtual #35
        + Methodref [java/util/concurrent/CountDownLatch.countDown ()V]
      [35] return
      [36] astore_2 v2
      [37] aload_0 v0
      [38] aload_2 v2
      [39] invokevirtual #36
        + Methodref [java/util/concurrent/ExecutionException.getCause ()Ljava/lang/Throwable;]
      [42] invokevirtual #25
        + Methodref [a/a/a/g/a/l.a (Ljava/lang/Throwable;)Z]
      [45] pop
      [46] aload_0 v0
      [47] aconst_null
      [48] putfield #17
        + Fieldref [a/a/a/g/a/l.a La/a/a/g/a/d;]
      [51] aload_0 v0
      [52] aconst_null
      [53] putfield #18
        + Fieldref [a/a/a/g/a/l.b La/a/a/g/a/q;]
      [56] aload_0 v0
      [57] getfield #20
        + Fieldref [a/a/a/g/a/l.d Ljava/util/concurrent/CountDownLatch;]
      [60] invokevirtual #35
        + Methodref [java/util/concurrent/CountDownLatch.countDown ()V]
      [63] return
      [64] aload_0 v0
      [65] aload_0 v0
      [66] getfield #17
        + Fieldref [a/a/a/g/a/l.a La/a/a/g/a/d;]
      [69] aload_1 v1
      [70] invokeinterface #37
        + InterfaceMethodref [a/a/a/g/a/d.a (Ljava/lang/Object;)La/a/a/g/a/q;]
      [75] dup_x1
      [76] putfield #19
        + Fieldref [a/a/a/g/a/l.c La/a/a/g/a/q;]
      [79] astore_2 v2
      [80] aload_0 v0
      [81] invokevirtual #29
        + Methodref [a/a/a/g/a/l.isCancelled ()Z]
      [84] ifeq +37 (target=121)
      [87] aload_2 v2
      [88] aload_0 v0
      [89] invokevirtual #27
        + Methodref [a/a/a/g/a/l.b ()Z]
      [92] invokeinterface #39
        + InterfaceMethodref [a/a/a/g/a/q.cancel (Z)Z]
      [97] pop
      [98] aload_0 v0
      [99] aconst_null
      [100] putfield #19
        + Fieldref [a/a/a/g/a/l.c La/a/a/g/a/q;]
      [103] aload_0 v0
      [104] aconst_null
      [105] putfield #17
        + Fieldref [a/a/a/g/a/l.a La/a/a/g/a/d;]
      [108] aload_0 v0
      [109] aconst_null
      [110] putfield #18
        + Fieldref [a/a/a/g/a/l.b La/a/a/g/a/q;]
      [113] aload_0 v0
      [114] getfield #20
        + Fieldref [a/a/a/g/a/l.d Ljava/util/concurrent/CountDownLatch;]
      [117] invokevirtual #35
        + Methodref [java/util/concurrent/CountDownLatch.countDown ()V]
      [120] return
      [121] aload_2 v2
      [122] new #5
        + Class [a/a/a/g/a/m]
      [125] dup
      [126] aload_0 v0
      [127] aload_2 v2
      [128] invokespecial #30
        + Methodref [a/a/a/g/a/m.<init> (La/a/a/g/a/l;La/a/a/g/a/q;)V]
      [131] invokestatic #31
        + Methodref [a/a/a/g/a/t.a ()La/a/a/g/a/s;]
      [134] invokeinterface #38
        + InterfaceMethodref [a/a/a/g/a/q.a (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
      [139] aload_0 v0
      [140] aconst_null
      [141] putfield #17
        + Fieldref [a/a/a/g/a/l.a La/a/a/g/a/d;]
      [144] aload_0 v0
      [145] aconst_null
      [146] putfield #18
        + Fieldref [a/a/a/g/a/l.b La/a/a/g/a/q;]
      [149] aload_0 v0
      [150] getfield #20
        + Fieldref [a/a/a/g/a/l.d Ljava/util/concurrent/CountDownLatch;]
      [153] invokevirtual #35
        + Methodref [java/util/concurrent/CountDownLatch.countDown ()V]
      [156] goto +80 (target=236)
      [159] astore_1 v1
      [160] aload_0 v0
      [161] aload_1 v1
      [162] invokevirtual #33
        + Methodref [java/lang/reflect/UndeclaredThrowableException.getCause ()Ljava/lang/Throwable;]
      [165] invokevirtual #25
        + Methodref [a/a/a/g/a/l.a (Ljava/lang/Throwable;)Z]
      [168] pop
      [169] aload_0 v0
      [170] aconst_null
      [171] putfield #17
        + Fieldref [a/a/a/g/a/l.a La/a/a/g/a/d;]
      [174] aload_0 v0
      [175] aconst_null
      [176] putfield #18
        + Fieldref [a/a/a/g/a/l.b La/a/a/g/a/q;]
      [179] aload_0 v0
      [180] getfield #20
        + Fieldref [a/a/a/g/a/l.d Ljava/util/concurrent/CountDownLatch;]
      [183] invokevirtual #35
        + Methodref [java/util/concurrent/CountDownLatch.countDown ()V]
      [186] goto +50 (target=236)
      [189] astore_1 v1
      [190] aload_0 v0
      [191] aload_1 v1
      [192] invokevirtual #25
        + Methodref [a/a/a/g/a/l.a (Ljava/lang/Throwable;)Z]
      [195] pop
      [196] aload_0 v0
      [197] aconst_null
      [198] putfield #17
        + Fieldref [a/a/a/g/a/l.a La/a/a/g/a/d;]
      [201] aload_0 v0
      [202] aconst_null
      [203] putfield #18
        + Fieldref [a/a/a/g/a/l.b La/a/a/g/a/q;]
      [206] aload_0 v0
      [207] getfield #20
        + Fieldref [a/a/a/g/a/l.d Ljava/util/concurrent/CountDownLatch;]
      [210] invokevirtual #35
        + Methodref [java/util/concurrent/CountDownLatch.countDown ()V]
      [213] goto +23 (target=236)
      [216] astore_3 v3
      [217] aload_0 v0
      [218] aconst_null
      [219] putfield #17
        + Fieldref [a/a/a/g/a/l.a La/a/a/g/a/d;]
      [222] aload_0 v0
      [223] aconst_null
      [224] putfield #18
        + Fieldref [a/a/a/g/a/l.b La/a/a/g/a/q;]
      [227] aload_0 v0
      [228] getfield #20
        + Fieldref [a/a/a/g/a/l.d Ljava/util/concurrent/CountDownLatch;]
      [231] invokevirtual #35
        + Methodref [java/util/concurrent/CountDownLatch.countDown ()V]
      [234] aload_3 v3
      [235] athrow
      [236] return
      Code attribute exceptions (count = 17):
      - ExceptionInfo (0 -> 8: 11):
      + Class [java/util/concurrent/CancellationException]
      - ExceptionInfo (0 -> 8: 36):
      + Class [java/util/concurrent/ExecutionException]
      - ExceptionInfo (0 -> 18: 159):
      + Class [java/lang/reflect/UndeclaredThrowableException]
      - ExceptionInfo (36 -> 46: 159):
      + Class [java/lang/reflect/UndeclaredThrowableException]
      - ExceptionInfo (64 -> 103: 159):
      + Class [java/lang/reflect/UndeclaredThrowableException]
      - ExceptionInfo (121 -> 139: 159):
      + Class [java/lang/reflect/UndeclaredThrowableException]
      - ExceptionInfo (0 -> 18: 189):
      + Class [java/lang/Throwable]
      - ExceptionInfo (36 -> 46: 189):
      + Class [java/lang/Throwable]
      - ExceptionInfo (64 -> 103: 189):
      + Class [java/lang/Throwable]
      - ExceptionInfo (121 -> 139: 189):
      + Class [java/lang/Throwable]
      - ExceptionInfo (0 -> 18: 216):
      - ExceptionInfo (36 -> 46: 216):
      - ExceptionInfo (64 -> 103: 216):
      - ExceptionInfo (121 -> 139: 216):
      - ExceptionInfo (159 -> 169: 216):
      - ExceptionInfo (189 -> 196: 216):
      - ExceptionInfo (216 -> 217: 216):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 8):
        - [11] Var: ..., Stack: [a:java/util/concurrent/CancellationException]
        - [36] Var: ..., Stack: [a:java/util/concurrent/ExecutionException]
        - [64] Var: ...[a:java/lang/Object], Stack: (empty)
        - [121] Var: ...[a:a/a/a/g/a/q], Stack: (empty)
        - [159] Var: [a:a/a/a/g/a/l], Stack: [a:java/lang/reflect/UndeclaredThrowableException]
        - [189] Var: ..., Stack: [a:java/lang/Throwable]
        - [216] Var: ..., Stack: [a:java/lang/Throwable]
        - [236] Var: ..., Stack: (empty)
  - Method:       <init>(La/a/a/g/a/d;La/a/a/g/a/q;La/a/a/g/a/i;)V
    Access flags: 0x1000
      = synthetic l(a.a.a.g.a.d,a.a.a.g.a.q,a.a.a.g.a.i)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokespecial #24
        + Methodref [a/a/a/g/a/l.<init> (La/a/a/g/a/d;La/a/a/g/a/q;)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(La/a/a/g/a/l;La/a/a/g/a/q;)La/a/a/g/a/q;
    Access flags: 0x1008
      = static synthetic a.a.a.g.a.q a(a.a.a.g.a.l,a.a.a.g.a.q)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] dup_x1
      [3] putfield #19
        + Fieldref [a/a/a/g/a/l.c La/a/a/g/a/q;]
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/m
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.g.a.m extends java.lang.Object

Interfaces (count = 1):
  + Class [java/lang/Runnable]

Constant Pool (count = 53):
  + Class [a/a/a/g/a/l]
  + Class [a/a/a/g/a/m]
  + Class [a/a/a/g/a/y]
  + Class [java/lang/Object]
  + Class [java/lang/Runnable]
  + Class [java/lang/Throwable]
  + Class [java/util/concurrent/CancellationException]
  + Class [java/util/concurrent/ExecutionException]
  + Fieldref [a/a/a/g/a/m.a La/a/a/g/a/q;]
  + Fieldref [a/a/a/g/a/m.b La/a/a/g/a/l;]
  + Methodref [a/a/a/g/a/l.a (La/a/a/g/a/l;La/a/a/g/a/q;)La/a/a/g/a/q;]
  + Methodref [a/a/a/g/a/l.a (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/g/a/l.a (Ljava/lang/Throwable;)Z]
  + Methodref [a/a/a/g/a/l.cancel (Z)Z]
  + Methodref [a/a/a/g/a/y.a (Ljava/util/concurrent/Future;)Ljava/lang/Object;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/util/concurrent/ExecutionException.getCause ()Ljava/lang/Throwable;]
  + NameAndType [<init> ()V]
  + NameAndType [a (La/a/a/g/a/l;La/a/a/g/a/q;)La/a/a/g/a/q;]
  + NameAndType [a (Ljava/lang/Object;)Z]
  + NameAndType [a (Ljava/lang/Throwable;)Z]
  + NameAndType [a (Ljava/util/concurrent/Future;)Ljava/lang/Object;]
  + NameAndType [a La/a/a/g/a/q;]
  + NameAndType [b La/a/a/g/a/l;]
  + NameAndType [cancel (Z)Z]
  + NameAndType [getCause ()Ljava/lang/Throwable;]
  + Utf8 [()Ljava/lang/Throwable;]
  + Utf8 [()V]
  + Utf8 [(La/a/a/g/a/l;La/a/a/g/a/q;)La/a/a/g/a/q;]
  + Utf8 [(La/a/a/g/a/l;La/a/a/g/a/q;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Throwable;)Z]
  + Utf8 [(Ljava/util/concurrent/Future;)Ljava/lang/Object;]
  + Utf8 [(Z)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/g/a/l;]
  + Utf8 [La/a/a/g/a/q;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/g/a/l]
  + Utf8 [a/a/a/g/a/m]
  + Utf8 [a/a/a/g/a/y]
  + Utf8 [b]
  + Utf8 [cancel]
  + Utf8 [getCause]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/Runnable]
  + Utf8 [java/lang/Throwable]
  + Utf8 [java/util/concurrent/CancellationException]
  + Utf8 [java/util/concurrent/ExecutionException]
  + Utf8 [run]

Fields (count = 2):
  + Field:        a La/a/a/g/a/q;
    Access flags: 0x1010
      = final synthetic a.a.a.g.a.q a
  + Field:        b La/a/a/g/a/l;
    Access flags: 0x1010
      = final synthetic a.a.a.g.a.l b

Methods (count = 2):
  - Method:       <init>(La/a/a/g/a/l;La/a/a/g/a/q;)V
    Access flags: 0x0
      = m(a.a.a.g.a.l,a.a.a.g.a.q)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #10
        + Fieldref [a/a/a/g/a/m.b La/a/a/g/a/l;]
      [5] aload_0 v0
      [6] aload_2 v2
      [7] putfield #9
        + Fieldref [a/a/a/g/a/m.a La/a/a/g/a/q;]
      [10] aload_0 v0
      [11] invokespecial #16
        + Methodref [java/lang/Object.<init> ()V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       run()V
    Access flags: 0x1
      = public void run()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 85, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] getfield #10
        + Fieldref [a/a/a/g/a/m.b La/a/a/g/a/l;]
      [4] aload_0 v0
      [5] getfield #9
        + Fieldref [a/a/a/g/a/m.a La/a/a/g/a/q;]
      [8] invokestatic #15
        + Methodref [a/a/a/g/a/y.a (Ljava/util/concurrent/Future;)Ljava/lang/Object;]
      [11] invokevirtual #12
        + Methodref [a/a/a/g/a/l.a (Ljava/lang/Object;)Z]
      [14] pop
      [15] aload_0 v0
      [16] getfield #10
        + Fieldref [a/a/a/g/a/m.b La/a/a/g/a/l;]
      [19] aconst_null
      [20] invokestatic #11
        + Methodref [a/a/a/g/a/l.a (La/a/a/g/a/l;La/a/a/g/a/q;)La/a/a/g/a/q;]
      [23] pop
      [24] goto +60 (target=84)
      [27] astore_1 v1
      [28] aload_0 v0
      [29] getfield #10
        + Fieldref [a/a/a/g/a/m.b La/a/a/g/a/l;]
      [32] iconst_0
      [33] invokevirtual #14
        + Methodref [a/a/a/g/a/l.cancel (Z)Z]
      [36] pop
      [37] aload_0 v0
      [38] getfield #10
        + Fieldref [a/a/a/g/a/m.b La/a/a/g/a/l;]
      [41] aconst_null
      [42] invokestatic #11
        + Methodref [a/a/a/g/a/l.a (La/a/a/g/a/l;La/a/a/g/a/q;)La/a/a/g/a/q;]
      [45] pop
      [46] return
      [47] astore_1 v1
      [48] aload_0 v0
      [49] getfield #10
        + Fieldref [a/a/a/g/a/m.b La/a/a/g/a/l;]
      [52] aload_1 v1
      [53] invokevirtual #17
        + Methodref [java/util/concurrent/ExecutionException.getCause ()Ljava/lang/Throwable;]
      [56] invokevirtual #13
        + Methodref [a/a/a/g/a/l.a (Ljava/lang/Throwable;)Z]
      [59] pop
      [60] aload_0 v0
      [61] getfield #10
        + Fieldref [a/a/a/g/a/m.b La/a/a/g/a/l;]
      [64] aconst_null
      [65] invokestatic #11
        + Methodref [a/a/a/g/a/l.a (La/a/a/g/a/l;La/a/a/g/a/q;)La/a/a/g/a/q;]
      [68] pop
      [69] goto +15 (target=84)
      [72] astore_2 v2
      [73] aload_0 v0
      [74] getfield #10
        + Fieldref [a/a/a/g/a/m.b La/a/a/g/a/l;]
      [77] aconst_null
      [78] invokestatic #11
        + Methodref [a/a/a/g/a/l.a (La/a/a/g/a/l;La/a/a/g/a/q;)La/a/a/g/a/q;]
      [81] pop
      [82] aload_2 v2
      [83] athrow
      [84] return
      Code attribute exceptions (count = 6):
      - ExceptionInfo (0 -> 15: 27):
      + Class [java/util/concurrent/CancellationException]
      - ExceptionInfo (0 -> 15: 47):
      + Class [java/util/concurrent/ExecutionException]
      - ExceptionInfo (0 -> 15: 72):
      - ExceptionInfo (27 -> 37: 72):
      - ExceptionInfo (47 -> 60: 72):
      - ExceptionInfo (72 -> 73: 72):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [27] Var: ..., Stack: [a:java/util/concurrent/CancellationException]
        - [47] Var: ..., Stack: [a:java/util/concurrent/ExecutionException]
        - [72] Var: ..., Stack: [a:java/lang/Throwable]
        - [84] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/n
  Superclass:    a/a/a/g/a/o
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.g.a.n extends a.a.a.g.a.o

Interfaces (count = 0):

Constant Pool (count = 21):
  + Class [a/a/a/g/a/n]
  + Class [a/a/a/g/a/o]
  + Class [java/util/concurrent/ExecutionException]
  + Fieldref [a/a/a/g/a/n.a Ljava/lang/Throwable;]
  + Methodref [a/a/a/g/a/o.<init> (La/a/a/g/a/i;)V]
  + Methodref [java/util/concurrent/ExecutionException.<init> (Ljava/lang/Throwable;)V]
  + NameAndType [<init> (La/a/a/g/a/i;)V]
  + NameAndType [<init> (Ljava/lang/Throwable;)V]
  + NameAndType [a Ljava/lang/Throwable;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [(La/a/a/g/a/i;)V]
  + Utf8 [(Ljava/lang/Throwable;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/Throwable;]
  + Utf8 [a]
  + Utf8 [a/a/a/g/a/n]
  + Utf8 [a/a/a/g/a/o]
  + Utf8 [get]
  + Utf8 [java/util/concurrent/ExecutionException]

Fields (count = 1):
  + Field:        a Ljava/lang/Throwable;
    Access flags: 0x12
      = private final java.lang.Throwable a

Methods (count = 2):
  - Method:       <init>(Ljava/lang/Throwable;)V
    Access flags: 0x0
      = n(java.lang.Throwable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aconst_null
      [2] invokespecial #5
        + Methodref [a/a/a/g/a/o.<init> (La/a/a/g/a/i;)V]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] putfield #4
        + Fieldref [a/a/a/g/a/n.a Ljava/lang/Throwable;]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 1, stack = 3):
      [0] new #3
        + Class [java/util/concurrent/ExecutionException]
      [3] dup
      [4] aload_0 v0
      [5] getfield #4
        + Fieldref [a/a/a/g/a/n.a Ljava/lang/Throwable;]
      [8] invokespecial #6
        + Methodref [java/util/concurrent/ExecutionException.<init> (Ljava/lang/Throwable;)V]
      [11] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/o
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x420
    = abstract class a.a.a.g.a.o extends java.lang.Object

Interfaces (count = 1):
  + Class [a/a/a/g/a/q]

Constant Pool (count = 90):
  + String [ with executor ]
  + String [Executor was null.]
  + String [Runnable was null.]
  + String [RuntimeException while executing runnable ]
  + Class [a/a/a/a/o]
  + Class [a/a/a/g/a/o]
  + Class [a/a/a/g/a/q]
  + Class [java/lang/Class]
  + Class [java/lang/Object]
  + Class [java/lang/RuntimeException]
  + Class [java/lang/StringBuilder]
  + Class [java/util/concurrent/Executor]
  + Class [java/util/logging/Level]
  + Class [java/util/logging/Logger]
  + Fieldref [a/a/a/g/a/o.a Ljava/util/logging/Logger;]
  + Fieldref [java/util/logging/Level.SEVERE Ljava/util/logging/Level;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/a/o.a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [a/a/a/g/a/o.<init> ()V]
  + Methodref [a/a/a/g/a/o.get ()Ljava/lang/Object;]
  + Methodref [java/lang/Class.getName ()Ljava/lang/String;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/logging/Logger.getLogger (Ljava/lang/String;)Ljava/util/logging/Logger;]
  + Methodref [java/util/logging/Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V]
  + InterfaceMethodref [java/util/concurrent/Executor.execute (Ljava/lang/Runnable;)V]
  + NameAndType [<init> ()V]
  + NameAndType [SEVERE Ljava/util/logging/Level;]
  + NameAndType [a (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [a Ljava/util/logging/Logger;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [execute (Ljava/lang/Runnable;)V]
  + NameAndType [get ()Ljava/lang/Object;]
  + NameAndType [getLogger (Ljava/lang/String;)Ljava/util/logging/Logger;]
  + NameAndType [getName ()Ljava/lang/String;]
  + NameAndType [log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [ with executor ]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;]
  + Utf8 [(La/a/a/g/a/i;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Runnable;)V]
  + Utf8 [(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)Ljava/util/logging/Logger;]
  + Utf8 [(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V]
  + Utf8 [(Z)Z]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Executor was null.]
  + Utf8 [Ljava/util/logging/Level;]
  + Utf8 [Ljava/util/logging/Logger;]
  + Utf8 [Runnable was null.]
  + Utf8 [RuntimeException while executing runnable ]
  + Utf8 [SEVERE]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/a/o]
  + Utf8 [a/a/a/g/a/o]
  + Utf8 [a/a/a/g/a/q]
  + Utf8 [append]
  + Utf8 [cancel]
  + Utf8 [execute]
  + Utf8 [get]
  + Utf8 [getLogger]
  + Utf8 [getName]
  + Utf8 [isCancelled]
  + Utf8 [isDone]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/RuntimeException]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/concurrent/Executor]
  + Utf8 [java/util/logging/Level]
  + Utf8 [java/util/logging/Logger]
  + Utf8 [log]
  + Utf8 [toString]

Fields (count = 1):
  + Field:        a Ljava/util/logging/Logger;
    Access flags: 0x1a
      = private static final java.util.logging.Logger a

Methods (count = 9):
  - Method:       <init>()V
    Access flags: 0x2
      = private o()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #22
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
    Access flags: 0x1
      = public void a(java.lang.Runnable,java.util.concurrent.Executor)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 64, locals = 4, stack = 4):
      [0] aload_1 v1
      [1] ldc #3
        + String [Runnable was null.]
      [3] invokestatic #18
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [6] pop
      [7] aload_2 v2
      [8] ldc #2
        + String [Executor was null.]
      [10] invokestatic #18
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [13] pop
      [14] aload_2 v2
      [15] aload_1 v1
      [16] invokeinterface #29
        + InterfaceMethodref [java/util/concurrent/Executor.execute (Ljava/lang/Runnable;)V]
      [21] goto +42 (target=63)
      [24] astore_3 v3
      [25] getstatic #15
        + Fieldref [a/a/a/g/a/o.a Ljava/util/logging/Logger;]
      [28] getstatic #16
        + Fieldref [java/util/logging/Level.SEVERE Ljava/util/logging/Level;]
      [31] new #11
        + Class [java/lang/StringBuilder]
      [34] dup
      [35] invokespecial #23
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [38] ldc #4
        + String [RuntimeException while executing runnable ]
      [40] invokevirtual #25
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [43] aload_1 v1
      [44] invokevirtual #24
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [47] ldc #1
        + String [ with executor ]
      [49] invokevirtual #25
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [52] aload_2 v2
      [53] invokevirtual #24
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [56] invokevirtual #26
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [59] aload_3 v3
      [60] invokevirtual #28
        + Methodref [java/util/logging/Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V]
      [63] return
      Code attribute exceptions (count = 1):
      - ExceptionInfo (14 -> 21: 24):
      + Class [java/lang/RuntimeException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [24] Var: ..., Stack: [a:java/lang/RuntimeException]
        - [63] Var: ..., Stack: (empty)
  + Method:       cancel(Z)Z
    Access flags: 0x1
      = public boolean cancel(boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 2, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get()Ljava/lang/Object;
    Access flags: 0x401
      = public abstract java.lang.Object get()
  + Method:       get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get(long,java.util.concurrent.TimeUnit)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 4, stack = 1):
      [0] aload_3 v3
      [1] invokestatic #17
        + Methodref [a/a/a/a/o.a (Ljava/lang/Object;)Ljava/lang/Object;]
      [4] pop
      [5] aload_0 v0
      [6] invokevirtual #20
        + Methodref [a/a/a/g/a/o.get ()Ljava/lang/Object;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isCancelled()Z
    Access flags: 0x1
      = public boolean isCancelled()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isDone()Z
    Access flags: 0x1
      = public boolean isDone()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_1
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(La/a/a/g/a/i;)V
    Access flags: 0x1000
      = synthetic o(a.a.a.g.a.i)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #19
        + Methodref [a/a/a/g/a/o.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 0, stack = 1):
      [0] ldc #6
        + Class [a/a/a/g/a/o]
      [2] invokevirtual #21
        + Methodref [java/lang/Class.getName ()Ljava/lang/String;]
      [5] invokestatic #27
        + Methodref [java/util/logging/Logger.getLogger (Ljava/lang/String;)Ljava/util/logging/Logger;]
      [8] putstatic #15
        + Fieldref [a/a/a/g/a/o.a Ljava/util/logging/Logger;]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/p
  Superclass:    a/a/a/g/a/o
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.g.a.p extends a.a.a.g.a.o

Interfaces (count = 0):

Constant Pool (count = 20):
  + Class [a/a/a/g/a/o]
  + Class [a/a/a/g/a/p]
  + Fieldref [a/a/a/g/a/p.a Ljava/lang/Object;]
  + Methodref [a/a/a/g/a/o.<init> (La/a/a/g/a/i;)V]
  + NameAndType [<init> (La/a/a/g/a/i;)V]
  + NameAndType [a Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [(La/a/a/g/a/i;)V]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/g/a/o]
  + Utf8 [a/a/a/g/a/p]
  + Utf8 [get]

Fields (count = 1):
  + Field:        a Ljava/lang/Object;
    Access flags: 0x12
      = private final java.lang.Object a
    Class member attributes (count = 1):
    + Runtime visible annotations attribute:
      - Annotation [Ljavax/annotation/Nullable;]:

Methods (count = 2):
  - Method:       <init>(Ljava/lang/Object;)V
    Access flags: 0x0
      = p(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aconst_null
      [2] invokespecial #4
        + Methodref [a/a/a/g/a/o.<init> (La/a/a/g/a/i;)V]
      [5] aload_0 v0
      [6] aload_1 v1
      [7] putfield #3
        + Fieldref [a/a/a/g/a/p.a Ljava/lang/Object;]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       get()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #3
        + Fieldref [a/a/a/g/a/p.a Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/q
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface a.a.a.g.a.q extends java.lang.Object

Interfaces (count = 1):
  + Class [java/util/concurrent/Future]

Constant Pool (count = 9):
  + Class [a/a/a/g/a/q]
  + Class [java/lang/Object]
  + Class [java/util/concurrent/Future]
  + Utf8 [(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + Utf8 [a]
  + Utf8 [a/a/a/g/a/q]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/concurrent/Future]

Fields (count = 0):

Methods (count = 1):
  + Method:       a(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
    Access flags: 0x401
      = public abstract void a(java.lang.Runnable,java.util.concurrent.Executor)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/r
  Superclass:    java/util/concurrent/FutureTask
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class a.a.a.g.a.r extends java.util.concurrent.FutureTask

Interfaces (count = 1):
  + Class [a/a/a/g/a/q]

Constant Pool (count = 36):
  + Class [a/a/a/g/a/f]
  + Class [a/a/a/g/a/q]
  + Class [a/a/a/g/a/r]
  + Class [java/util/concurrent/FutureTask]
  + Fieldref [a/a/a/g/a/r.a La/a/a/g/a/f;]
  + Methodref [a/a/a/g/a/f.<init> ()V]
  + Methodref [a/a/a/g/a/f.a ()V]
  + Methodref [a/a/a/g/a/f.a (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + Methodref [a/a/a/g/a/r.<init> (Ljava/lang/Runnable;Ljava/lang/Object;)V]
  + Methodref [a/a/a/g/a/r.<init> (Ljava/util/concurrent/Callable;)V]
  + Methodref [java/util/concurrent/FutureTask.<init> (Ljava/lang/Runnable;Ljava/lang/Object;)V]
  + Methodref [java/util/concurrent/FutureTask.<init> (Ljava/util/concurrent/Callable;)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Runnable;Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/util/concurrent/Callable;)V]
  + NameAndType [a ()V]
  + NameAndType [a (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + NameAndType [a La/a/a/g/a/f;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Runnable;Ljava/lang/Object;)La/a/a/g/a/r;]
  + Utf8 [(Ljava/lang/Runnable;Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
  + Utf8 [(Ljava/util/concurrent/Callable;)La/a/a/g/a/r;]
  + Utf8 [(Ljava/util/concurrent/Callable;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/g/a/f;]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/g/a/f]
  + Utf8 [a/a/a/g/a/q]
  + Utf8 [a/a/a/g/a/r]
  + Utf8 [done]
  + Utf8 [java/util/concurrent/FutureTask]

Fields (count = 1):
  + Field:        a La/a/a/g/a/f;
    Access flags: 0x12
      = private final a.a.a.g.a.f a

Methods (count = 6):
  + Method:       a(Ljava/util/concurrent/Callable;)La/a/a/g/a/r;
    Access flags: 0x9
      = public static a.a.a.g.a.r a(java.util.concurrent.Callable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 3):
      [0] new #3
        + Class [a/a/a/g/a/r]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #10
        + Methodref [a/a/a/g/a/r.<init> (Ljava/util/concurrent/Callable;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Runnable;Ljava/lang/Object;)La/a/a/g/a/r;
    Access flags: 0x9
      = public static a.a.a.g.a.r a(java.lang.Runnable,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 10, locals = 2, stack = 4):
      [0] new #3
        + Class [a/a/a/g/a/r]
      [3] dup
      [4] aload_0 v0
      [5] aload_1 v1
      [6] invokespecial #9
        + Methodref [a/a/a/g/a/r.<init> (Ljava/lang/Runnable;Ljava/lang/Object;)V]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  - Method:       <init>(Ljava/util/concurrent/Callable;)V
    Access flags: 0x0
      = r(java.util.concurrent.Callable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #12
        + Methodref [java/util/concurrent/FutureTask.<init> (Ljava/util/concurrent/Callable;)V]
      [5] aload_0 v0
      [6] new #1
        + Class [a/a/a/g/a/f]
      [9] dup
      [10] invokespecial #6
        + Methodref [a/a/a/g/a/f.<init> ()V]
      [13] putfield #5
        + Fieldref [a/a/a/g/a/r.a La/a/a/g/a/f;]
      [16] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/Runnable;Ljava/lang/Object;)V
    Access flags: 0x0
      = r(java.lang.Runnable,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 18, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokespecial #11
        + Methodref [java/util/concurrent/FutureTask.<init> (Ljava/lang/Runnable;Ljava/lang/Object;)V]
      [6] aload_0 v0
      [7] new #1
        + Class [a/a/a/g/a/f]
      [10] dup
      [11] invokespecial #6
        + Methodref [a/a/a/g/a/f.<init> ()V]
      [14] putfield #5
        + Fieldref [a/a/a/g/a/r.a La/a/a/g/a/f;]
      [17] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 2):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
    Access flags: 0x1
      = public void a(java.lang.Runnable,java.util.concurrent.Executor)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/g/a/r.a La/a/a/g/a/f;]
      [4] aload_1 v1
      [5] aload_2 v2
      [6] invokevirtual #8
        + Methodref [a/a/a/g/a/f.a (Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       done()V
    Access flags: 0x4
      = protected void done()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/g/a/r.a La/a/a/g/a/f;]
      [4] invokevirtual #7
        + Methodref [a/a/a/g/a/f.a ()V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/s
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface a.a.a.g.a.s extends java.lang.Object

Interfaces (count = 1):
  + Class [java/util/concurrent/ExecutorService]

Constant Pool (count = 7):
  + Class [a/a/a/g/a/s]
  + Class [java/lang/Object]
  + Class [java/util/concurrent/ExecutorService]
  + Utf8 [a/a/a/g/a/s]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/concurrent/ExecutorService]

Fields (count = 0):

Methods (count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/t
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.g.a.t extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 14):
  + Class [a/a/a/g/a/t]
  + Class [a/a/a/g/a/v]
  + Class [java/lang/Object]
  + Methodref [a/a/a/g/a/v.<init> (La/a/a/g/a/u;)V]
  + NameAndType [<init> (La/a/a/g/a/u;)V]
  + Utf8 [()La/a/a/g/a/s;]
  + Utf8 [(La/a/a/g/a/u;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [a]
  + Utf8 [a/a/a/g/a/t]
  + Utf8 [a/a/a/g/a/v]
  + Utf8 [java/lang/Object]

Fields (count = 0):

Methods (count = 1):
  + Method:       a()La/a/a/g/a/s;
    Access flags: 0x9
      = public static a.a.a.g.a.s a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 0, stack = 3):
      [0] new #2
        + Class [a/a/a/g/a/v]
      [3] dup
      [4] aconst_null
      [5] invokespecial #4
        + Methodref [a/a/a/g/a/v.<init> (La/a/a/g/a/u;)V]
      [8] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/u
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x30
    = final class a.a.a.g.a.u extends java.lang.Object

Interfaces (count = 1):
  + Class [java/lang/Runnable]

Constant Pool (count = 24):
  + Class [a/a/a/g/a/u]
  + Class [java/lang/Object]
  + Class [java/lang/Runnable]
  + Class [java/util/concurrent/BlockingQueue]
  + Fieldref [a/a/a/g/a/u.a Ljava/util/concurrent/BlockingQueue;]
  + Fieldref [a/a/a/g/a/u.b La/a/a/g/a/q;]
  + InterfaceMethodref [java/util/concurrent/BlockingQueue.add (Ljava/lang/Object;)Z]
  + NameAndType [a Ljava/util/concurrent/BlockingQueue;]
  + NameAndType [add (Ljava/lang/Object;)Z]
  + NameAndType [b La/a/a/g/a/q;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [Code]
  + Utf8 [La/a/a/g/a/q;]
  + Utf8 [Ljava/util/concurrent/BlockingQueue;]
  + Utf8 [a]
  + Utf8 [a/a/a/g/a/u]
  + Utf8 [add]
  + Utf8 [b]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/Runnable]
  + Utf8 [java/util/concurrent/BlockingQueue]
  + Utf8 [run]

Fields (count = 2):
  + Field:        a Ljava/util/concurrent/BlockingQueue;
    Access flags: 0x1010
      = final synthetic java.util.concurrent.BlockingQueue a
  + Field:        b La/a/a/g/a/q;
    Access flags: 0x1010
      = final synthetic a.a.a.g.a.q b

Methods (count = 1):
  + Method:       run()V
    Access flags: 0x1
      = public void run()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [a/a/a/g/a/u.a Ljava/util/concurrent/BlockingQueue;]
      [4] aload_0 v0
      [5] getfield #6
        + Fieldref [a/a/a/g/a/u.b La/a/a/g/a/q;]
      [8] invokeinterface #7
        + InterfaceMethodref [java/util/concurrent/BlockingQueue.add (Ljava/lang/Object;)Z]
      [13] pop
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/v
  Superclass:    a/a/a/g/a/c
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class a.a.a.g.a.v extends a.a.a.g.a.c

Interfaces (count = 0):

Constant Pool (count = 97):
  + String [Executor already shutdown]
  + Class [a/a/a/g/a/c]
  + Class [a/a/a/g/a/v]
  + Class [java/lang/Runnable]
  + Class [java/lang/Throwable]
  + Class [java/util/Collections]
  + Class [java/util/concurrent/RejectedExecutionException]
  + Class [java/util/concurrent/TimeUnit]
  + Class [java/util/concurrent/locks/Condition]
  + Class [java/util/concurrent/locks/Lock]
  + Class [java/util/concurrent/locks/ReentrantLock]
  + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
  + Fieldref [a/a/a/g/a/v.b Ljava/util/concurrent/locks/Condition;]
  + Fieldref [a/a/a/g/a/v.c I]
  + Fieldref [a/a/a/g/a/v.d Z]
  + Methodref [a/a/a/g/a/c.<init> ()V]
  + Methodref [a/a/a/g/a/v.<init> ()V]
  + Methodref [a/a/a/g/a/v.a ()V]
  + Methodref [a/a/a/g/a/v.b ()V]
  + Methodref [a/a/a/g/a/v.isShutdown ()Z]
  + Methodref [a/a/a/g/a/v.isTerminated ()Z]
  + Methodref [a/a/a/g/a/v.shutdown ()V]
  + Methodref [java/util/Collections.emptyList ()Ljava/util/List;]
  + Methodref [java/util/concurrent/RejectedExecutionException.<init> (Ljava/lang/String;)V]
  + Methodref [java/util/concurrent/TimeUnit.toNanos (J)J]
  + Methodref [java/util/concurrent/locks/ReentrantLock.<init> ()V]
  + InterfaceMethodref [java/lang/Runnable.run ()V]
  + InterfaceMethodref [java/util/concurrent/locks/Condition.awaitNanos (J)J]
  + InterfaceMethodref [java/util/concurrent/locks/Condition.signalAll ()V]
  + InterfaceMethodref [java/util/concurrent/locks/Lock.lock ()V]
  + InterfaceMethodref [java/util/concurrent/locks/Lock.newCondition ()Ljava/util/concurrent/locks/Condition;]
  + InterfaceMethodref [java/util/concurrent/locks/Lock.unlock ()V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [a ()V]
  + NameAndType [a Ljava/util/concurrent/locks/Lock;]
  + NameAndType [awaitNanos (J)J]
  + NameAndType [b ()V]
  + NameAndType [b Ljava/util/concurrent/locks/Condition;]
  + NameAndType [c I]
  + NameAndType [d Z]
  + NameAndType [emptyList ()Ljava/util/List;]
  + NameAndType [isShutdown ()Z]
  + NameAndType [isTerminated ()Z]
  + NameAndType [lock ()V]
  + NameAndType [newCondition ()Ljava/util/concurrent/locks/Condition;]
  + NameAndType [run ()V]
  + NameAndType [shutdown ()V]
  + NameAndType [signalAll ()V]
  + NameAndType [toNanos (J)J]
  + NameAndType [unlock ()V]
  + Utf8 [()Ljava/util/List;]
  + Utf8 [()Ljava/util/concurrent/locks/Condition;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(J)J]
  + Utf8 [(JLjava/util/concurrent/TimeUnit;)Z]
  + Utf8 [(La/a/a/g/a/u;)V]
  + Utf8 [(Ljava/lang/Runnable;)V]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Executor already shutdown]
  + Utf8 [I]
  + Utf8 [Ljava/util/concurrent/locks/Condition;]
  + Utf8 [Ljava/util/concurrent/locks/Lock;]
  + Utf8 [StackMapTable]
  + Utf8 [Z]
  + Utf8 [a]
  + Utf8 [a/a/a/g/a/c]
  + Utf8 [a/a/a/g/a/v]
  + Utf8 [awaitNanos]
  + Utf8 [awaitTermination]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [d]
  + Utf8 [emptyList]
  + Utf8 [execute]
  + Utf8 [isShutdown]
  + Utf8 [isTerminated]
  + Utf8 [java/lang/Runnable]
  + Utf8 [java/lang/Throwable]
  + Utf8 [java/util/Collections]
  + Utf8 [java/util/concurrent/RejectedExecutionException]
  + Utf8 [java/util/concurrent/TimeUnit]
  + Utf8 [java/util/concurrent/locks/Condition]
  + Utf8 [java/util/concurrent/locks/Lock]
  + Utf8 [java/util/concurrent/locks/ReentrantLock]
  + Utf8 [lock]
  + Utf8 [newCondition]
  + Utf8 [run]
  + Utf8 [shutdown]
  + Utf8 [shutdownNow]
  + Utf8 [signalAll]
  + Utf8 [toNanos]
  + Utf8 [unlock]

Fields (count = 4):
  + Field:        a Ljava/util/concurrent/locks/Lock;
    Access flags: 0x12
      = private final java.util.concurrent.locks.Lock a
  + Field:        b Ljava/util/concurrent/locks/Condition;
    Access flags: 0x12
      = private final java.util.concurrent.locks.Condition b
  + Field:        c I
    Access flags: 0x2
      = private int c
  + Field:        d Z
    Access flags: 0x2
      = private boolean d

Methods (count = 10):
  - Method:       <init>()V
    Access flags: 0x2
      = private v()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 39, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #16
        + Methodref [a/a/a/g/a/c.<init> ()V]
      [4] aload_0 v0
      [5] new #11
        + Class [java/util/concurrent/locks/ReentrantLock]
      [8] dup
      [9] invokespecial #26
        + Methodref [java/util/concurrent/locks/ReentrantLock.<init> ()V]
      [12] putfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [15] aload_0 v0
      [16] aload_0 v0
      [17] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [20] invokeinterface #31
        + InterfaceMethodref [java/util/concurrent/locks/Lock.newCondition ()Ljava/util/concurrent/locks/Condition;]
      [25] putfield #13
        + Fieldref [a/a/a/g/a/v.b Ljava/util/concurrent/locks/Condition;]
      [28] aload_0 v0
      [29] iconst_0
      [30] putfield #14
        + Fieldref [a/a/a/g/a/v.c I]
      [33] aload_0 v0
      [34] iconst_0
      [35] putfield #15
        + Fieldref [a/a/a/g/a/v.d Z]
      [38] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       execute(Ljava/lang/Runnable;)V
    Access flags: 0x1
      = public void execute(java.lang.Runnable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 25, locals = 3, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #18
        + Methodref [a/a/a/g/a/v.a ()V]
      [4] aload_1 v1
      [5] invokeinterface #27
        + InterfaceMethodref [java/lang/Runnable.run ()V]
      [10] aload_0 v0
      [11] invokespecial #19
        + Methodref [a/a/a/g/a/v.b ()V]
      [14] goto +10 (target=24)
      [17] astore_2 v2
      [18] aload_0 v0
      [19] invokespecial #19
        + Methodref [a/a/a/g/a/v.b ()V]
      [22] aload_2 v2
      [23] athrow
      [24] return
      Code attribute exceptions (count = 2):
      - ExceptionInfo (4 -> 10: 17):
      - ExceptionInfo (17 -> 18: 17):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [17] Var: ..., Stack: [a:java/lang/Throwable]
        - [24] Var: ..., Stack: (empty)
  + Method:       isShutdown()Z
    Access flags: 0x1
      = public boolean isShutdown()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 37, locals = 3, stack = 1):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [4] invokeinterface #30
        + InterfaceMethodref [java/util/concurrent/locks/Lock.lock ()V]
      [9] aload_0 v0
      [10] getfield #15
        + Fieldref [a/a/a/g/a/v.d Z]
      [13] istore_1 v1
      [14] aload_0 v0
      [15] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [18] invokeinterface #32
        + InterfaceMethodref [java/util/concurrent/locks/Lock.unlock ()V]
      [23] iload_1 v1
      [24] ireturn
      [25] astore_2 v2
      [26] aload_0 v0
      [27] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [30] invokeinterface #32
        + InterfaceMethodref [java/util/concurrent/locks/Lock.unlock ()V]
      [35] aload_2 v2
      [36] athrow
      Code attribute exceptions (count = 2):
      - ExceptionInfo (9 -> 14: 25):
      - ExceptionInfo (25 -> 26: 25):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [25] Var: ..., Stack: [a:java/lang/Throwable]
  + Method:       shutdown()V
    Access flags: 0x1
      = public void shutdown()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 39, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [4] invokeinterface #30
        + InterfaceMethodref [java/util/concurrent/locks/Lock.lock ()V]
      [9] aload_0 v0
      [10] iconst_1
      [11] putfield #15
        + Fieldref [a/a/a/g/a/v.d Z]
      [14] aload_0 v0
      [15] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [18] invokeinterface #32
        + InterfaceMethodref [java/util/concurrent/locks/Lock.unlock ()V]
      [23] goto +15 (target=38)
      [26] astore_1 v1
      [27] aload_0 v0
      [28] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [31] invokeinterface #32
        + InterfaceMethodref [java/util/concurrent/locks/Lock.unlock ()V]
      [36] aload_1 v1
      [37] athrow
      [38] return
      Code attribute exceptions (count = 2):
      - ExceptionInfo (9 -> 14: 26):
      - ExceptionInfo (26 -> 27: 26):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [26] Var: ..., Stack: [a:java/lang/Throwable]
        - [38] Var: ..., Stack: (empty)
  + Method:       shutdownNow()Ljava/util/List;
    Access flags: 0x1
      = public java.util.List shutdownNow()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokevirtual #22
        + Methodref [a/a/a/g/a/v.shutdown ()V]
      [4] invokestatic #23
        + Methodref [java/util/Collections.emptyList ()Ljava/util/List;]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isTerminated()Z
    Access flags: 0x1
      = public boolean isTerminated()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 52, locals = 3, stack = 1):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [4] invokeinterface #30
        + InterfaceMethodref [java/util/concurrent/locks/Lock.lock ()V]
      [9] aload_0 v0
      [10] getfield #15
        + Fieldref [a/a/a/g/a/v.d Z]
      [13] ifeq +14 (target=27)
      [16] aload_0 v0
      [17] getfield #14
        + Fieldref [a/a/a/g/a/v.c I]
      [20] ifne +7 (target=27)
      [23] iconst_1
      [24] goto +4 (target=28)
      [27] iconst_0
      [28] istore_1 v1
      [29] aload_0 v0
      [30] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [33] invokeinterface #32
        + InterfaceMethodref [java/util/concurrent/locks/Lock.unlock ()V]
      [38] iload_1 v1
      [39] ireturn
      [40] astore_2 v2
      [41] aload_0 v0
      [42] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [45] invokeinterface #32
        + InterfaceMethodref [java/util/concurrent/locks/Lock.unlock ()V]
      [50] aload_2 v2
      [51] athrow
      Code attribute exceptions (count = 2):
      - ExceptionInfo (9 -> 29: 40):
      - ExceptionInfo (40 -> 41: 40):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [27] Var: ..., Stack: (empty)
        - [28] Var: ..., Stack: [i]
        - [40] Var: ..., Stack: [a:java/lang/Throwable]
  + Method:       awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
    Access flags: 0x1
      = public boolean awaitTermination(long,java.util.concurrent.TimeUnit)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 90, locals = 8, stack = 4):
      [0] aload_3 v3
      [1] lload_1 v1
      [2] invokevirtual #25
        + Methodref [java/util/concurrent/TimeUnit.toNanos (J)J]
      [5] lstore v4
      [7] aload_0 v0
      [8] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [11] invokeinterface #30
        + InterfaceMethodref [java/util/concurrent/locks/Lock.lock ()V]
      [16] aload_0 v0
      [17] invokevirtual #21
        + Methodref [a/a/a/g/a/v.isTerminated ()Z]
      [20] ifeq +18 (target=38)
      [23] iconst_1
      [24] istore v6
      [26] aload_0 v0
      [27] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [30] invokeinterface #32
        + InterfaceMethodref [java/util/concurrent/locks/Lock.unlock ()V]
      [35] iload v6
      [37] ireturn
      [38] lload v4
      [40] lconst_0
      [41] lcmp
      [42] ifgt +18 (target=60)
      [45] iconst_0
      [46] istore v6
      [48] aload_0 v0
      [49] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [52] invokeinterface #32
        + InterfaceMethodref [java/util/concurrent/locks/Lock.unlock ()V]
      [57] iload v6
      [59] ireturn
      [60] aload_0 v0
      [61] getfield #13
        + Fieldref [a/a/a/g/a/v.b Ljava/util/concurrent/locks/Condition;]
      [64] lload v4
      [66] invokeinterface #28
        + InterfaceMethodref [java/util/concurrent/locks/Condition.awaitNanos (J)J]
      [71] lstore v4
      [73] goto -57 (target=16)
      [76] astore v7
      [78] aload_0 v0
      [79] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [82] invokeinterface #32
        + InterfaceMethodref [java/util/concurrent/locks/Lock.unlock ()V]
      [87] aload v7
      [89] athrow
      Code attribute exceptions (count = 3):
      - ExceptionInfo (16 -> 26: 76):
      - ExceptionInfo (38 -> 48: 76):
      - ExceptionInfo (60 -> 78: 76):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [16] Var: ...[l], Stack: (empty)
        - [38] Var: ..., Stack: (empty)
        - [60] Var: ..., Stack: (empty)
        - [76] Var: ..., Stack: [a:java/lang/Throwable]
  + Method:       a()V
    Access flags: 0x2
      = private void a()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 61, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [4] invokeinterface #30
        + InterfaceMethodref [java/util/concurrent/locks/Lock.lock ()V]
      [9] aload_0 v0
      [10] invokevirtual #20
        + Methodref [a/a/a/g/a/v.isShutdown ()Z]
      [13] ifeq +13 (target=26)
      [16] new #7
        + Class [java/util/concurrent/RejectedExecutionException]
      [19] dup
      [20] ldc #1
        + String [Executor already shutdown]
      [22] invokespecial #24
        + Methodref [java/util/concurrent/RejectedExecutionException.<init> (Ljava/lang/String;)V]
      [25] athrow
      [26] aload_0 v0
      [27] dup
      [28] getfield #14
        + Fieldref [a/a/a/g/a/v.c I]
      [31] iconst_1
      [32] iadd
      [33] putfield #14
        + Fieldref [a/a/a/g/a/v.c I]
      [36] aload_0 v0
      [37] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [40] invokeinterface #32
        + InterfaceMethodref [java/util/concurrent/locks/Lock.unlock ()V]
      [45] goto +15 (target=60)
      [48] astore_1 v1
      [49] aload_0 v0
      [50] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [53] invokeinterface #32
        + InterfaceMethodref [java/util/concurrent/locks/Lock.unlock ()V]
      [58] aload_1 v1
      [59] athrow
      [60] return
      Code attribute exceptions (count = 2):
      - ExceptionInfo (9 -> 36: 48):
      - ExceptionInfo (48 -> 49: 48):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [26] Var: ..., Stack: (empty)
        - [48] Var: ..., Stack: [a:java/lang/Throwable]
        - [60] Var: ..., Stack: (empty)
  + Method:       b()V
    Access flags: 0x2
      = private void b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 60, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [4] invokeinterface #30
        + InterfaceMethodref [java/util/concurrent/locks/Lock.lock ()V]
      [9] aload_0 v0
      [10] dup
      [11] getfield #14
        + Fieldref [a/a/a/g/a/v.c I]
      [14] iconst_1
      [15] isub
      [16] putfield #14
        + Fieldref [a/a/a/g/a/v.c I]
      [19] aload_0 v0
      [20] invokevirtual #21
        + Methodref [a/a/a/g/a/v.isTerminated ()Z]
      [23] ifeq +12 (target=35)
      [26] aload_0 v0
      [27] getfield #13
        + Fieldref [a/a/a/g/a/v.b Ljava/util/concurrent/locks/Condition;]
      [30] invokeinterface #29
        + InterfaceMethodref [java/util/concurrent/locks/Condition.signalAll ()V]
      [35] aload_0 v0
      [36] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [39] invokeinterface #32
        + InterfaceMethodref [java/util/concurrent/locks/Lock.unlock ()V]
      [44] goto +15 (target=59)
      [47] astore_1 v1
      [48] aload_0 v0
      [49] getfield #12
        + Fieldref [a/a/a/g/a/v.a Ljava/util/concurrent/locks/Lock;]
      [52] invokeinterface #32
        + InterfaceMethodref [java/util/concurrent/locks/Lock.unlock ()V]
      [57] aload_1 v1
      [58] athrow
      [59] return
      Code attribute exceptions (count = 2):
      - ExceptionInfo (9 -> 35: 47):
      - ExceptionInfo (47 -> 48: 47):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [35] Var: ..., Stack: (empty)
        - [47] Var: ..., Stack: [a:java/lang/Throwable]
        - [59] Var: ..., Stack: (empty)
  - Method:       <init>(La/a/a/g/a/u;)V
    Access flags: 0x1000
      = synthetic v(a.a.a.g.a.u)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 2, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #17
        + Methodref [a/a/a/g/a/v.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/w
  Superclass:    a/a/a/g/a/a
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.g.a.w extends a.a.a.g.a.a

Interfaces (count = 0):

Constant Pool (count = 22):
  + Class [a/a/a/g/a/a]
  + Class [a/a/a/g/a/w]
  + Methodref [a/a/a/g/a/a.<init> ()V]
  + Methodref [a/a/a/g/a/a.a (Ljava/lang/Object;)Z]
  + Methodref [a/a/a/g/a/a.a (Ljava/lang/Throwable;)Z]
  + Methodref [a/a/a/g/a/w.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a (Ljava/lang/Object;)Z]
  + NameAndType [a (Ljava/lang/Throwable;)Z]
  + Utf8 [()La/a/a/g/a/w;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Throwable;)Z]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a]
  + Utf8 [a/a/a/g/a/a]
  + Utf8 [a/a/a/g/a/w]
  + Utf8 [c]

Fields (count = 0):

Methods (count = 4):
  + Method:       c()La/a/a/g/a/w;
    Access flags: 0x9
      = public static a.a.a.g.a.w c()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 0, stack = 2):
      [0] new #2
        + Class [a/a/a/g/a/w]
      [3] dup
      [4] invokespecial #6
        + Methodref [a/a/a/g/a/w.<init> ()V]
      [7] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>()V
    Access flags: 0x2
      = private w()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #3
        + Methodref [a/a/a/g/a/a.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       a(Ljava/lang/Object;)Z
    Access flags: 0x1
      = public boolean a(java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #4
        + Methodref [a/a/a/g/a/a.a (Ljava/lang/Object;)Z]
      [5] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:
  + Method:       a(Ljava/lang/Throwable;)Z
    Access flags: 0x1
      = public boolean a(java.lang.Throwable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #5
        + Methodref [a/a/a/g/a/a.a (Ljava/lang/Throwable;)Z]
      [5] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/x
  Superclass:    java/lang/RuntimeException
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class a.a.a.g.a.x extends java.lang.RuntimeException

Interfaces (count = 0):

Constant Pool (count = 15):
  + Class [a/a/a/g/a/x]
  + Class [java/lang/RuntimeException]
  + Methodref [java/lang/RuntimeException.<init> ()V]
  + Methodref [java/lang/RuntimeException.<init> (Ljava/lang/Throwable;)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Throwable;)V]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Throwable;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljavax/annotation/Nullable;]
  + Utf8 [RuntimeVisibleParameterAnnotations]
  + Utf8 [a/a/a/g/a/x]
  + Utf8 [java/lang/RuntimeException]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>()V
    Access flags: 0x4
      = protected x()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #3
        + Methodref [java/lang/RuntimeException.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/Throwable;)V
    Access flags: 0x1
      = public x(java.lang.Throwable)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #4
        + Methodref [java/lang/RuntimeException.<init> (Ljava/lang/Throwable;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible parameter annotations attribute (parameter count = 1):
      - Annotation [Ljavax/annotation/Nullable;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: a/a/a/g/a/y
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class a.a.a.g.a.y extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 29):
  + Class [a/a/a/g/a/y]
  + Class [java/lang/InterruptedException]
  + Class [java/lang/Object]
  + Class [java/lang/Thread]
  + Class [java/lang/Throwable]
  + Class [java/util/concurrent/Future]
  + Methodref [java/lang/Thread.currentThread ()Ljava/lang/Thread;]
  + Methodref [java/lang/Thread.interrupt ()V]
  + InterfaceMethodref [java/util/concurrent/Future.get ()Ljava/lang/Object;]
  + NameAndType [currentThread ()Ljava/lang/Thread;]
  + NameAndType [get ()Ljava/lang/Object;]
  + NameAndType [interrupt ()V]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/Thread;]
  + Utf8 [()V]
  + Utf8 [(Ljava/util/concurrent/Future;)Ljava/lang/Object;]
  + Utf8 [Code]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [a/a/a/g/a/y]
  + Utf8 [currentThread]
  + Utf8 [get]
  + Utf8 [interrupt]
  + Utf8 [java/lang/InterruptedException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/Thread]
  + Utf8 [java/lang/Throwable]
  + Utf8 [java/util/concurrent/Future]

Fields (count = 0):

Methods (count = 1):
  + Method:       a(Ljava/util/concurrent/Future;)Ljava/lang/Object;
    Access flags: 0x9
      = public static java.lang.Object a(java.util.concurrent.Future)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 40, locals = 4, stack = 1):
      [0] iconst_0
      [1] istore_1 v1
      [2] aload_0 v0
      [3] invokeinterface #9
        + InterfaceMethodref [java/util/concurrent/Future.get ()Ljava/lang/Object;]
      [8] astore_2 v2
      [9] iload_1 v1
      [10] ifeq +9 (target=19)
      [13] invokestatic #7
        + Methodref [java/lang/Thread.currentThread ()Ljava/lang/Thread;]
      [16] invokevirtual #8
        + Methodref [java/lang/Thread.interrupt ()V]
      [19] aload_2 v2
      [20] areturn
      [21] astore_2 v2
      [22] iconst_1
      [23] istore_1 v1
      [24] goto -22 (target=2)
      [27] astore_3 v3
      [28] iload_1 v1
      [29] ifeq +9 (target=38)
      [32] invokestatic #7
        + Methodref [java/lang/Thread.currentThread ()Ljava/lang/Thread;]
      [35] invokevirtual #8
        + Methodref [java/lang/Thread.interrupt ()V]
      [38] aload_3 v3
      [39] athrow
      Code attribute exceptions (count = 3):
      - ExceptionInfo (2 -> 9: 21):
      + Class [java/lang/InterruptedException]
      - ExceptionInfo (2 -> 9: 27):
      - ExceptionInfo (21 -> 28: 27):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 5):
        - [2] Var: ...[i], Stack: (empty)
        - [19] Var: ...[a:java/lang/Object], Stack: (empty)
        - [21] Var: [a:java/util/concurrent/Future][i], Stack: [a:java/lang/InterruptedException]
        - [27] Var: ..., Stack: [a:java/lang/Throwable]
        - [38] Var: ...[T][a:java/lang/Throwable], Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/Box
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.advancedvm.Box extends java.lang.Object

Interfaces (count = 2):
  + Class [java/io/Serializable]
  + Class [me/planetguy/advancedvm/IBox]

Constant Pool (count = 106):
  + String [Box[]
  + String []]
  + Class [java/io/ObjectInputStream]
  + Class [java/io/ObjectOutputStream]
  + Class [java/io/Serializable]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/StringBuilder]
  + Class [java/util/HashMap]
  + Class [java/util/Map]
  + Class [me/planetguy/advancedvm/Box]
  + Class [me/planetguy/advancedvm/IBox]
  + Class [me/planetguy/advancedvm/ImperativeScript]
  + Long [-8410494493928878550]
  + Fieldref [me/planetguy/advancedvm/Box.invNames Ljava/util/Map;]
  + Fieldref [me/planetguy/advancedvm/Box.names Ljava/util/Map;]
  + Fieldref [me/planetguy/advancedvm/Box.o Ljava/lang/Object;]
  + Fieldref [me/planetguy/advancedvm/Box.objID Ljava/lang/String;]
  + Fieldref [me/planetguy/advancedvm/Box.so Ljava/io/Serializable;]
  + Methodref [java/io/ObjectInputStream.defaultReadObject ()V]
  + Methodref [java/io/ObjectOutputStream.defaultWriteObject ()V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/HashMap.<init> ()V]
  + Methodref [me/planetguy/advancedvm/Box.fish (Ljava/lang/String;)Ljava/lang/Object;]
  + Methodref [me/planetguy/advancedvm/Box.get ()Ljava/lang/Object;]
  + Methodref [me/planetguy/advancedvm/Box.name (Ljava/lang/Object;)Ljava/lang/String;]
  + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [defaultReadObject ()V]
  + NameAndType [defaultWriteObject ()V]
  + NameAndType [fish (Ljava/lang/String;)Ljava/lang/Object;]
  + NameAndType [get ()Ljava/lang/Object;]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [invNames Ljava/util/Map;]
  + NameAndType [name (Ljava/lang/Object;)Ljava/lang/String;]
  + NameAndType [names Ljava/util/Map;]
  + NameAndType [o Ljava/lang/Object;]
  + NameAndType [objID Ljava/lang/String;]
  + NameAndType [put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [so Ljava/io/Serializable;]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(Ljava/io/ObjectInputStream;)V]
  + Utf8 [(Ljava/io/ObjectOutputStream;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Box[]
  + Utf8 [Code]
  + Utf8 [ConstantValue]
  + Utf8 [J]
  + Utf8 [Ljava/io/Serializable;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljava/lang/String;]
  + Utf8 [Ljava/util/Map;]
  + Utf8 [StackMapTable]
  + Utf8 []]
  + Utf8 [append]
  + Utf8 [defaultReadObject]
  + Utf8 [defaultWriteObject]
  + Utf8 [fish]
  + Utf8 [get]
  + Utf8 [invNames]
  + Utf8 [java/io/ObjectInputStream]
  + Utf8 [java/io/ObjectOutputStream]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/HashMap]
  + Utf8 [java/util/Map]
  + Utf8 [me/planetguy/advancedvm/Box]
  + Utf8 [me/planetguy/advancedvm/IBox]
  + Utf8 [me/planetguy/advancedvm/ImperativeScript]
  + Utf8 [name]
  + Utf8 [names]
  + Utf8 [o]
  + Utf8 [objID]
  + Utf8 [put]
  + Utf8 [readObject]
  + Utf8 [register]
  + Utf8 [serialVersionUID]
  + Utf8 [set]
  + Utf8 [so]
  + Utf8 [toString]
  + Utf8 [writeObject]

Fields (count = 6):
  + Field:        serialVersionUID J
    Access flags: 0x1a
      = private static final long serialVersionUID
    Class member attributes (count = 1):
    + Constant value attribute:
    + Long [-8410494493928878550]
  + Field:        names Ljava/util/Map;
    Access flags: 0xa
      = private static java.util.Map names
  + Field:        invNames Ljava/util/Map;
    Access flags: 0xa
      = private static java.util.Map invNames
  + Field:        o Ljava/lang/Object;
    Access flags: 0x82
      = private transient java.lang.Object o
  + Field:        objID Ljava/lang/String;
    Access flags: 0x2
      = private java.lang.String objID
  + Field:        so Ljava/io/Serializable;
    Access flags: 0x2
      = private java.io.Serializable so

Methods (count = 11):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 0, stack = 2):
      [0] new #9
        + Class [java/util/HashMap]
      [3] dup
      [4] invokespecial #28
        + Methodref [java/util/HashMap.<init> ()V]
      [7] putstatic #17
        + Fieldref [me/planetguy/advancedvm/Box.names Ljava/util/Map;]
      [10] new #9
        + Class [java/util/HashMap]
      [13] dup
      [14] invokespecial #28
        + Methodref [java/util/HashMap.<init> ()V]
      [17] putstatic #16
        + Fieldref [me/planetguy/advancedvm/Box.invNames Ljava/util/Map;]
      [20] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       register(Ljava/lang/Object;Ljava/lang/String;)V
    Access flags: 0x9
      = public static void register(java.lang.Object,java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 23, locals = 2, stack = 3):
      [0] getstatic #17
        + Fieldref [me/planetguy/advancedvm/Box.names Ljava/util/Map;]
      [3] aload_0 v0
      [4] aload_1 v1
      [5] invokeinterface #33
        + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [10] pop
      [11] getstatic #16
        + Fieldref [me/planetguy/advancedvm/Box.invNames Ljava/util/Map;]
      [14] aload_1 v1
      [15] aload_0 v0
      [16] invokeinterface #33
        + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [21] pop
      [22] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       fish(Ljava/lang/String;)Ljava/lang/Object;
    Access flags: 0x9
      = public static java.lang.Object fish(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 2):
      [0] getstatic #16
        + Fieldref [me/planetguy/advancedvm/Box.invNames Ljava/util/Map;]
      [3] aload_0 v0
      [4] invokeinterface #32
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       name(Ljava/lang/Object;)Ljava/lang/String;
    Access flags: 0x9
      = public static java.lang.String name(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 2):
      [0] getstatic #17
        + Fieldref [me/planetguy/advancedvm/Box.names Ljava/util/Map;]
      [3] aload_0 v0
      [4] invokeinterface #32
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [9] checkcast #7
        + Class [java/lang/String]
      [12] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>()V
    Access flags: 0x1
      = public Box()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #23
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/Object;)V
    Access flags: 0x1
      = public Box(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #23
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #18
        + Fieldref [me/planetguy/advancedvm/Box.o Ljava/lang/Object;]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       set(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void set(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #18
        + Fieldref [me/planetguy/advancedvm/Box.o Ljava/lang/Object;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #18
        + Fieldref [me/planetguy/advancedvm/Box.o Ljava/lang/Object;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 63, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #30
        + Methodref [me/planetguy/advancedvm/Box.get ()Ljava/lang/Object;]
      [4] instanceof #13
        + Class [me/planetguy/advancedvm/ImperativeScript]
      [7] ifeq +31 (target=38)
      [10] new #8
        + Class [java/lang/StringBuilder]
      [13] dup
      [14] ldc #1
        + String [Box[]
      [16] invokespecial #24
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [19] aload_0 v0
      [20] invokevirtual #30
        + Methodref [me/planetguy/advancedvm/Box.get ()Ljava/lang/Object;]
      [23] invokestatic #31
        + Methodref [me/planetguy/advancedvm/Box.name (Ljava/lang/Object;)Ljava/lang/String;]
      [26] invokevirtual #26
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [29] ldc #2
        + String []]
      [31] invokevirtual #26
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [34] invokevirtual #27
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [37] areturn
      [38] new #8
        + Class [java/lang/StringBuilder]
      [41] dup
      [42] ldc #1
        + String [Box[]
      [44] invokespecial #24
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [47] aload_0 v0
      [48] invokevirtual #30
        + Methodref [me/planetguy/advancedvm/Box.get ()Ljava/lang/Object;]
      [51] invokevirtual #25
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [54] ldc #2
        + String []]
      [56] invokevirtual #26
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [59] invokevirtual #27
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [62] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [38] Var: ..., Stack: (empty)
  + Method:       writeObject(Ljava/io/ObjectOutputStream;)V
    Access flags: 0x2
      = private void writeObject(java.io.ObjectOutputStream)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 50, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #18
        + Fieldref [me/planetguy/advancedvm/Box.o Ljava/lang/Object;]
      [4] instanceof #5
        + Class [java/io/Serializable]
      [7] ifeq +27 (target=34)
      [10] aload_0 v0
      [11] getfield #18
        + Fieldref [me/planetguy/advancedvm/Box.o Ljava/lang/Object;]
      [14] instanceof #13
        + Class [me/planetguy/advancedvm/ImperativeScript]
      [17] ifne +17 (target=34)
      [20] aload_0 v0
      [21] aload_0 v0
      [22] getfield #18
        + Fieldref [me/planetguy/advancedvm/Box.o Ljava/lang/Object;]
      [25] checkcast #5
        + Class [java/io/Serializable]
      [28] putfield #20
        + Fieldref [me/planetguy/advancedvm/Box.so Ljava/io/Serializable;]
      [31] goto +14 (target=45)
      [34] aload_0 v0
      [35] aload_0 v0
      [36] getfield #18
        + Fieldref [me/planetguy/advancedvm/Box.o Ljava/lang/Object;]
      [39] invokestatic #31
        + Methodref [me/planetguy/advancedvm/Box.name (Ljava/lang/Object;)Ljava/lang/String;]
      [42] putfield #19
        + Fieldref [me/planetguy/advancedvm/Box.objID Ljava/lang/String;]
      [45] aload_1 v1
      [46] invokevirtual #22
        + Methodref [java/io/ObjectOutputStream.defaultWriteObject ()V]
      [49] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [34] Var: ..., Stack: (empty)
        - [45] Var: ..., Stack: (empty)
  + Method:       readObject(Ljava/io/ObjectInputStream;)V
    Access flags: 0x2
      = private void readObject(java.io.ObjectInputStream)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 34, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] invokevirtual #21
        + Methodref [java/io/ObjectInputStream.defaultReadObject ()V]
      [4] aload_0 v0
      [5] getfield #20
        + Fieldref [me/planetguy/advancedvm/Box.so Ljava/io/Serializable;]
      [8] ifnonnull +17 (target=25)
      [11] aload_0 v0
      [12] aload_0 v0
      [13] getfield #19
        + Fieldref [me/planetguy/advancedvm/Box.objID Ljava/lang/String;]
      [16] invokestatic #29
        + Methodref [me/planetguy/advancedvm/Box.fish (Ljava/lang/String;)Ljava/lang/Object;]
      [19] putfield #18
        + Fieldref [me/planetguy/advancedvm/Box.o Ljava/lang/Object;]
      [22] goto +11 (target=33)
      [25] aload_0 v0
      [26] aload_0 v0
      [27] getfield #20
        + Fieldref [me/planetguy/advancedvm/Box.so Ljava/io/Serializable;]
      [30] putfield #18
        + Fieldref [me/planetguy/advancedvm/Box.o Ljava/lang/Object;]
      [33] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [25] Var: ..., Stack: (empty)
        - [33] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/FieldBox
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.advancedvm.FieldBox extends java.lang.Object

Interfaces (count = 1):
  + Class [me/planetguy/advancedvm/IBox]

Constant Pool (count = 136):
  + String [<]
  + String [>]
  + Class [java/io/ObjectInputStream]
  + Class [java/io/ObjectOutputStream]
  + Class [java/io/Serializable]
  + Class [java/lang/Class]
  + Class [java/lang/Exception]
  + Class [java/lang/NoSuchFieldException]
  + Class [java/lang/Object]
  + Class [java/lang/RuntimeException]
  + Class [java/lang/SecurityException]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/reflect/Field]
  + Class [me/planetguy/advancedvm/Box]
  + Class [me/planetguy/advancedvm/FieldBox]
  + Class [me/planetguy/advancedvm/IBox]
  + Class [me/planetguy/advancedvm/ImperativeScript]
  + Long [3474887475989678178]
  + Fieldref [me/planetguy/advancedvm/FieldBox.canWrite Z]
  + Fieldref [me/planetguy/advancedvm/FieldBox.field Ljava/lang/reflect/Field;]
  + Fieldref [me/planetguy/advancedvm/FieldBox.fieldName Ljava/lang/String;]
  + Fieldref [me/planetguy/advancedvm/FieldBox.objID Ljava/lang/String;]
  + Fieldref [me/planetguy/advancedvm/FieldBox.so Ljava/io/Serializable;]
  + Fieldref [me/planetguy/advancedvm/FieldBox.target Ljava/lang/Object;]
  + Methodref [java/io/ObjectInputStream.defaultReadObject ()V]
  + Methodref [java/io/ObjectOutputStream.defaultWriteObject ()V]
  + Methodref [java/lang/Class.getField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
  + Methodref [java/lang/NoSuchFieldException.printStackTrace ()V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
  + Methodref [java/lang/RuntimeException.<init> (Ljava/lang/Throwable;)V]
  + Methodref [java/lang/SecurityException.printStackTrace ()V]
  + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/lang/reflect/Field.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [java/lang/reflect/Field.getName ()Ljava/lang/String;]
  + Methodref [java/lang/reflect/Field.set (Ljava/lang/Object;Ljava/lang/Object;)V]
  + Methodref [java/lang/reflect/Field.setAccessible (Z)V]
  + Methodref [me/planetguy/advancedvm/Box.fish (Ljava/lang/String;)Ljava/lang/Object;]
  + Methodref [me/planetguy/advancedvm/Box.name (Ljava/lang/Object;)Ljava/lang/String;]
  + Methodref [me/planetguy/advancedvm/FieldBox.get ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (Ljava/lang/Throwable;)V]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [canWrite Z]
  + NameAndType [defaultReadObject ()V]
  + NameAndType [defaultWriteObject ()V]
  + NameAndType [field Ljava/lang/reflect/Field;]
  + NameAndType [fieldName Ljava/lang/String;]
  + NameAndType [fish (Ljava/lang/String;)Ljava/lang/Object;]
  + NameAndType [get ()Ljava/lang/Object;]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [getClass ()Ljava/lang/Class;]
  + NameAndType [getField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
  + NameAndType [getName ()Ljava/lang/String;]
  + NameAndType [name (Ljava/lang/Object;)Ljava/lang/String;]
  + NameAndType [objID Ljava/lang/String;]
  + NameAndType [printStackTrace ()V]
  + NameAndType [set (Ljava/lang/Object;Ljava/lang/Object;)V]
  + NameAndType [setAccessible (Z)V]
  + NameAndType [so Ljava/io/Serializable;]
  + NameAndType [target Ljava/lang/Object;]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(Ljava/io/ObjectInputStream;)V]
  + Utf8 [(Ljava/io/ObjectOutputStream;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/reflect/Field;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/Throwable;)V]
  + Utf8 [(Z)V]
  + Utf8 [<]
  + Utf8 [<init>]
  + Utf8 [>]
  + Utf8 [Code]
  + Utf8 [ConstantValue]
  + Utf8 [J]
  + Utf8 [Ljava/io/Serializable;]
  + Utf8 [Ljava/lang/Object;]
  + Utf8 [Ljava/lang/String;]
  + Utf8 [Ljava/lang/reflect/Field;]
  + Utf8 [StackMapTable]
  + Utf8 [Z]
  + Utf8 [append]
  + Utf8 [canWrite]
  + Utf8 [defaultReadObject]
  + Utf8 [defaultWriteObject]
  + Utf8 [field]
  + Utf8 [fieldName]
  + Utf8 [fish]
  + Utf8 [get]
  + Utf8 [getClass]
  + Utf8 [getField]
  + Utf8 [getName]
  + Utf8 [java/io/ObjectInputStream]
  + Utf8 [java/io/ObjectOutputStream]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Exception]
  + Utf8 [java/lang/NoSuchFieldException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/RuntimeException]
  + Utf8 [java/lang/SecurityException]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/reflect/Field]
  + Utf8 [me/planetguy/advancedvm/Box]
  + Utf8 [me/planetguy/advancedvm/FieldBox]
  + Utf8 [me/planetguy/advancedvm/IBox]
  + Utf8 [me/planetguy/advancedvm/ImperativeScript]
  + Utf8 [name]
  + Utf8 [objID]
  + Utf8 [printStackTrace]
  + Utf8 [readObject]
  + Utf8 [serialVersionUID]
  + Utf8 [set]
  + Utf8 [setAccessible]
  + Utf8 [so]
  + Utf8 [target]
  + Utf8 [toString]
  + Utf8 [writeObject]

Fields (count = 7):
  + Field:        serialVersionUID J
    Access flags: 0x1a
      = private static final long serialVersionUID
    Class member attributes (count = 1):
    + Constant value attribute:
    + Long [3474887475989678178]
  + Field:        target Ljava/lang/Object;
    Access flags: 0x82
      = private transient java.lang.Object target
  + Field:        field Ljava/lang/reflect/Field;
    Access flags: 0x82
      = private transient java.lang.reflect.Field field
  + Field:        so Ljava/io/Serializable;
    Access flags: 0x2
      = private java.io.Serializable so
  + Field:        objID Ljava/lang/String;
    Access flags: 0x2
      = private java.lang.String objID
  + Field:        fieldName Ljava/lang/String;
    Access flags: 0x2
      = private java.lang.String fieldName
  + Field:        canWrite Z
    Access flags: 0x12
      = private final boolean canWrite

Methods (count = 6):
  - Method:       <init>(Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V
    Access flags: 0x1
      = public FieldBox(java.lang.Object,java.lang.reflect.Field,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 36, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #30
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #25
        + Fieldref [me/planetguy/advancedvm/FieldBox.target Ljava/lang/Object;]
      [9] aload_0 v0
      [10] aload_2 v2
      [11] putfield #21
        + Fieldref [me/planetguy/advancedvm/FieldBox.field Ljava/lang/reflect/Field;]
      [14] aload_2 v2
      [15] iconst_1
      [16] invokevirtual #41
        + Methodref [java/lang/reflect/Field.setAccessible (Z)V]
      [19] aload_0 v0
      [20] aload_0 v0
      [21] getfield #21
        + Fieldref [me/planetguy/advancedvm/FieldBox.field Ljava/lang/reflect/Field;]
      [24] invokevirtual #39
        + Methodref [java/lang/reflect/Field.getName ()Ljava/lang/String;]
      [27] putfield #22
        + Fieldref [me/planetguy/advancedvm/FieldBox.fieldName Ljava/lang/String;]
      [30] aload_0 v0
      [31] iload_3 v3
      [32] putfield #20
        + Fieldref [me/planetguy/advancedvm/FieldBox.canWrite Z]
      [35] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       set(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void set(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 34, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #20
        + Fieldref [me/planetguy/advancedvm/FieldBox.canWrite Z]
      [4] ifne +4 (target=8)
      [7] return
      [8] aload_0 v0
      [9] getfield #21
        + Fieldref [me/planetguy/advancedvm/FieldBox.field Ljava/lang/reflect/Field;]
      [12] aload_0 v0
      [13] getfield #25
        + Fieldref [me/planetguy/advancedvm/FieldBox.target Ljava/lang/Object;]
      [16] aload_1 v1
      [17] invokevirtual #40
        + Methodref [java/lang/reflect/Field.set (Ljava/lang/Object;Ljava/lang/Object;)V]
      [20] goto +13 (target=33)
      [23] astore_2 v2
      [24] new #10
        + Class [java/lang/RuntimeException]
      [27] dup
      [28] aload_2 v2
      [29] invokespecial #32
        + Methodref [java/lang/RuntimeException.<init> (Ljava/lang/Throwable;)V]
      [32] athrow
      [33] return
      Code attribute exceptions (count = 1):
      - ExceptionInfo (8 -> 20: 23):
      + Class [java/lang/Exception]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [8] Var: ..., Stack: (empty)
        - [23] Var: ..., Stack: [a:java/lang/Exception]
        - [33] Var: ..., Stack: (empty)
  + Method:       get()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #21
        + Fieldref [me/planetguy/advancedvm/FieldBox.field Ljava/lang/reflect/Field;]
      [4] aload_0 v0
      [5] getfield #25
        + Fieldref [me/planetguy/advancedvm/FieldBox.target Ljava/lang/Object;]
      [8] invokevirtual #38
        + Methodref [java/lang/reflect/Field.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [11] areturn
      [12] astore_1 v1
      [13] new #10
        + Class [java/lang/RuntimeException]
      [16] dup
      [17] aload_1 v1
      [18] invokespecial #32
        + Methodref [java/lang/RuntimeException.<init> (Ljava/lang/Throwable;)V]
      [21] athrow
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 11: 12):
      + Class [java/lang/Exception]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [12] Var: ..., Stack: [a:java/lang/Exception]
  + Method:       writeObject(Ljava/io/ObjectOutputStream;)V
    Access flags: 0x2
      = private void writeObject(java.io.ObjectOutputStream)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 50, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #25
        + Fieldref [me/planetguy/advancedvm/FieldBox.target Ljava/lang/Object;]
      [4] instanceof #5
        + Class [java/io/Serializable]
      [7] ifeq +27 (target=34)
      [10] aload_0 v0
      [11] getfield #25
        + Fieldref [me/planetguy/advancedvm/FieldBox.target Ljava/lang/Object;]
      [14] instanceof #17
        + Class [me/planetguy/advancedvm/ImperativeScript]
      [17] ifne +17 (target=34)
      [20] aload_0 v0
      [21] aload_0 v0
      [22] getfield #25
        + Fieldref [me/planetguy/advancedvm/FieldBox.target Ljava/lang/Object;]
      [25] checkcast #5
        + Class [java/io/Serializable]
      [28] putfield #24
        + Fieldref [me/planetguy/advancedvm/FieldBox.so Ljava/io/Serializable;]
      [31] goto +14 (target=45)
      [34] aload_0 v0
      [35] aload_0 v0
      [36] getfield #25
        + Fieldref [me/planetguy/advancedvm/FieldBox.target Ljava/lang/Object;]
      [39] invokestatic #43
        + Methodref [me/planetguy/advancedvm/Box.name (Ljava/lang/Object;)Ljava/lang/String;]
      [42] putfield #23
        + Fieldref [me/planetguy/advancedvm/FieldBox.objID Ljava/lang/String;]
      [45] aload_1 v1
      [46] invokevirtual #27
        + Methodref [java/io/ObjectOutputStream.defaultWriteObject ()V]
      [49] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [34] Var: ..., Stack: (empty)
        - [45] Var: ..., Stack: (empty)
  + Method:       readObject(Ljava/io/ObjectInputStream;)V
    Access flags: 0x2
      = private void readObject(java.io.ObjectInputStream)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 68, locals = 3, stack = 3):
      [0] aload_1 v1
      [1] invokevirtual #26
        + Methodref [java/io/ObjectInputStream.defaultReadObject ()V]
      [4] aload_0 v0
      [5] getfield #24
        + Fieldref [me/planetguy/advancedvm/FieldBox.so Ljava/io/Serializable;]
      [8] ifnonnull +17 (target=25)
      [11] aload_0 v0
      [12] aload_0 v0
      [13] getfield #23
        + Fieldref [me/planetguy/advancedvm/FieldBox.objID Ljava/lang/String;]
      [16] invokestatic #42
        + Methodref [me/planetguy/advancedvm/Box.fish (Ljava/lang/String;)Ljava/lang/Object;]
      [19] putfield #25
        + Fieldref [me/planetguy/advancedvm/FieldBox.target Ljava/lang/Object;]
      [22] goto +11 (target=33)
      [25] aload_0 v0
      [26] aload_0 v0
      [27] getfield #24
        + Fieldref [me/planetguy/advancedvm/FieldBox.so Ljava/io/Serializable;]
      [30] putfield #25
        + Fieldref [me/planetguy/advancedvm/FieldBox.target Ljava/lang/Object;]
      [33] aload_0 v0
      [34] aload_0 v0
      [35] getfield #25
        + Fieldref [me/planetguy/advancedvm/FieldBox.target Ljava/lang/Object;]
      [38] invokevirtual #31
        + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
      [41] aload_0 v0
      [42] getfield #22
        + Fieldref [me/planetguy/advancedvm/FieldBox.fieldName Ljava/lang/String;]
      [45] invokevirtual #28
        + Methodref [java/lang/Class.getField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
      [48] putfield #21
        + Fieldref [me/planetguy/advancedvm/FieldBox.field Ljava/lang/reflect/Field;]
      [51] goto +16 (target=67)
      [54] astore_2 v2
      [55] aload_2 v2
      [56] invokevirtual #33
        + Methodref [java/lang/SecurityException.printStackTrace ()V]
      [59] goto +8 (target=67)
      [62] astore_2 v2
      [63] aload_2 v2
      [64] invokevirtual #29
        + Methodref [java/lang/NoSuchFieldException.printStackTrace ()V]
      [67] return
      Code attribute exceptions (count = 2):
      - ExceptionInfo (33 -> 51: 54):
      + Class [java/lang/SecurityException]
      - ExceptionInfo (33 -> 51: 62):
      + Class [java/lang/NoSuchFieldException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 5):
        - [25] Var: ..., Stack: (empty)
        - [33] Var: ..., Stack: (empty)
        - [54] Var: ..., Stack: [a:java/lang/SecurityException]
        - [62] Var: ..., Stack: [a:java/lang/NoSuchFieldException]
        - [67] Var: ..., Stack: (empty)
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 25, locals = 1, stack = 3):
      [0] new #12
        + Class [java/lang/StringBuilder]
      [3] dup
      [4] ldc #1
        + String [<]
      [6] invokespecial #34
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [9] aload_0 v0
      [10] invokevirtual #44
        + Methodref [me/planetguy/advancedvm/FieldBox.get ()Ljava/lang/Object;]
      [13] invokevirtual #35
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [16] ldc #2
        + String [>]
      [18] invokevirtual #36
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [21] invokevirtual #37
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [24] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/IBox
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface me.planetguy.advancedvm.IBox extends java.lang.Object

Interfaces (count = 1):
  + Class [java/io/Serializable]

Constant Pool (count = 11):
  + Class [java/io/Serializable]
  + Class [java/lang/Object]
  + Class [me/planetguy/advancedvm/IBox]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [get]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/advancedvm/IBox]
  + Utf8 [set]

Fields (count = 0):

Methods (count = 2):
  + Method:       set(Ljava/lang/Object;)V
    Access flags: 0x401
      = public abstract void set(java.lang.Object)
  + Method:       get()Ljava/lang/Object;
    Access flags: 0x401
      = public abstract java.lang.Object get()

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/ImmutableBox
  Superclass:    me/planetguy/advancedvm/Box
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.advancedvm.ImmutableBox extends me.planetguy.advancedvm.Box

Interfaces (count = 0):

Constant Pool (count = 23):
  + String [Tried to set an ImmutableBox! Oh noes!]
  + Class [java/lang/RuntimeException]
  + Class [me/planetguy/advancedvm/Box]
  + Class [me/planetguy/advancedvm/ImmutableBox]
  + Long [-2784513845533561808]
  + Methodref [java/lang/RuntimeException.<init> (Ljava/lang/String;)V]
  + Methodref [me/planetguy/advancedvm/Box.<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [ConstantValue]
  + Utf8 [J]
  + Utf8 [Tried to set an ImmutableBox! Oh noes!]
  + Utf8 [java/lang/RuntimeException]
  + Utf8 [me/planetguy/advancedvm/Box]
  + Utf8 [me/planetguy/advancedvm/ImmutableBox]
  + Utf8 [serialVersionUID]
  + Utf8 [set]

Fields (count = 1):
  + Field:        serialVersionUID J
    Access flags: 0x1a
      = private static final long serialVersionUID
    Class member attributes (count = 1):
    + Constant value attribute:
    + Long [-2784513845533561808]

Methods (count = 2):
  - Method:       <init>(Ljava/lang/Object;)V
    Access flags: 0x1
      = public ImmutableBox(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #8
        + Methodref [me/planetguy/advancedvm/Box.<init> (Ljava/lang/Object;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       set(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void set(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 3):
      [0] new #2
        + Class [java/lang/RuntimeException]
      [3] dup
      [4] ldc #1
        + String [Tried to set an ImmutableBox! Oh noes!]
      [6] invokespecial #7
        + Methodref [java/lang/RuntimeException.<init> (Ljava/lang/String;)V]
      [9] athrow
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/ImperativeScript
  Superclass:    me/planetguy/advancedvm/Script
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.advancedvm.ImperativeScript extends me.planetguy.advancedvm.Script

Interfaces (count = 2):
  + Class [java/io/Serializable]
  + Class [me/planetguy/advancedvm/Scripted]

Constant Pool (count = 163):
  + String [ ]
  + String [   { ]
  + String [, ]
  + String [:]
  + String [>]
  + String [Robots]
  + String [S@]
  + String [Script executing]
  + String [Script:
]
  + String [this]
  + String [} 
]
  + Class [[Ljava/lang/Object;]
  + Class [[Lme/planetguy/advancedvm/IBox;]
  + Class [android/util/Log]
  + Class [java/io/ObjectInputStream]
  + Class [java/io/PrintStream]
  + Class [java/io/Serializable]
  + Class [java/lang/Exception]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/System]
  + Class [java/lang/reflect/Method]
  + Class [java/util/Arrays]
  + Class [me/planetguy/advancedvm/IBox]
  + Class [me/planetguy/advancedvm/ImperativeScript]
  + Class [me/planetguy/advancedvm/Script]
  + Class [me/planetguy/advancedvm/Scripted]
  + Class [me/planetguy/advancedvm/Stream]
  + Fieldref [java/lang/System.err Ljava/io/PrintStream;]
  + Fieldref [me/planetguy/advancedvm/ImperativeScript.alive Z]
  + Fieldref [me/planetguy/advancedvm/ImperativeScript.debugStream Lme/planetguy/advancedvm/Stream;]
  + Fieldref [me/planetguy/advancedvm/ImperativeScript.index I]
  + Fieldref [me/planetguy/advancedvm/ImperativeScript.script [[Lme/planetguy/advancedvm/IBox;]
  + Methodref [android/util/Log.d (Ljava/lang/String;Ljava/lang/String;)I]
  + Methodref [java/io/ObjectInputStream.defaultReadObject ()V]
  + Methodref [java/io/PrintStream.println (Ljava/lang/Object;)V]
  + Methodref [java/lang/Exception.printStackTrace ()V]
  + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
  + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/lang/reflect/Method.invoke (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [java/util/Arrays.toString ([Ljava/lang/Object;)Ljava/lang/String;]
  + Methodref [me/planetguy/advancedvm/ImperativeScript.getNamedBox (Ljava/lang/String;)Lme/planetguy/advancedvm/IBox;]
  + Methodref [me/planetguy/advancedvm/ImperativeScript.getOwningObject ()Lme/planetguy/advancedvm/Scripted;]
  + Methodref [me/planetguy/advancedvm/ImperativeScript.unboxEnd ([Lme/planetguy/advancedvm/IBox;)[Ljava/lang/Object;]
  + Methodref [me/planetguy/advancedvm/Script.<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;)V]
  + Methodref [me/planetguy/advancedvm/Script.<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V]
  + InterfaceMethodref [me/planetguy/advancedvm/IBox.get ()Ljava/lang/Object;]
  + InterfaceMethodref [me/planetguy/advancedvm/IBox.set (Ljava/lang/Object;)V]
  + InterfaceMethodref [me/planetguy/advancedvm/Stream.write (Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;)V]
  + NameAndType [<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V]
  + NameAndType [alive Z]
  + NameAndType [append (I)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [d (Ljava/lang/String;Ljava/lang/String;)I]
  + NameAndType [debugStream Lme/planetguy/advancedvm/Stream;]
  + NameAndType [defaultReadObject ()V]
  + NameAndType [err Ljava/io/PrintStream;]
  + NameAndType [get ()Ljava/lang/Object;]
  + NameAndType [getNamedBox (Ljava/lang/String;)Lme/planetguy/advancedvm/IBox;]
  + NameAndType [getOwningObject ()Lme/planetguy/advancedvm/Scripted;]
  + NameAndType [index I]
  + NameAndType [invoke (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [printStackTrace ()V]
  + NameAndType [println (Ljava/lang/Object;)V]
  + NameAndType [script [[Lme/planetguy/advancedvm/IBox;]
  + NameAndType [set (Ljava/lang/Object;)V]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [toString ([Ljava/lang/Object;)Ljava/lang/String;]
  + NameAndType [unboxEnd ([Lme/planetguy/advancedvm/IBox;)[Ljava/lang/Object;]
  + NameAndType [valueOf (Ljava/lang/Object;)Ljava/lang/String;]
  + NameAndType [write (Ljava/lang/Object;)V]
  + Utf8 [ ]
  + Utf8 [   { ]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Lme/planetguy/advancedvm/Script;]
  + Utf8 [()Lme/planetguy/advancedvm/Scripted;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)Ljava/lang/StringBuilder;]
  + Utf8 [(I)V]
  + Utf8 [(Ljava/io/ObjectInputStream;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)Lme/planetguy/advancedvm/IBox;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;Ljava/lang/String;)I]
  + Utf8 [(Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;)V]
  + Utf8 [(Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V]
  + Utf8 [([Ljava/lang/Object;)Ljava/lang/String;]
  + Utf8 [([Lme/planetguy/advancedvm/IBox;)[Ljava/lang/Object;]
  + Utf8 [, ]
  + Utf8 [:]
  + Utf8 [<init>]
  + Utf8 [>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [Ljava/io/PrintStream;]
  + Utf8 [Lme/planetguy/advancedvm/Stream;]
  + Utf8 [Robots]
  + Utf8 [S@]
  + Utf8 [Script executing]
  + Utf8 [Script:
]
  + Utf8 [StackMapTable]
  + Utf8 [Z]
  + Utf8 [[Ljava/lang/Object;]
  + Utf8 [[Lme/planetguy/advancedvm/IBox;]
  + Utf8 [[[Lme/planetguy/advancedvm/IBox;]
  + Utf8 [alive]
  + Utf8 [android/util/Log]
  + Utf8 [append]
  + Utf8 [canStep]
  + Utf8 [d]
  + Utf8 [debugStream]
  + Utf8 [defaultReadObject]
  + Utf8 [err]
  + Utf8 [get]
  + Utf8 [getNamedBox]
  + Utf8 [getOwningObject]
  + Utf8 [getScript]
  + Utf8 [index]
  + Utf8 [invoke]
  + Utf8 [java/io/ObjectInputStream]
  + Utf8 [java/io/PrintStream]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Exception]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/System]
  + Utf8 [java/lang/reflect/Method]
  + Utf8 [java/util/Arrays]
  + Utf8 [jump]
  + Utf8 [me/planetguy/advancedvm/IBox]
  + Utf8 [me/planetguy/advancedvm/ImperativeScript]
  + Utf8 [me/planetguy/advancedvm/Script]
  + Utf8 [me/planetguy/advancedvm/Scripted]
  + Utf8 [me/planetguy/advancedvm/Stream]
  + Utf8 [print]
  + Utf8 [printStackTrace]
  + Utf8 [println]
  + Utf8 [readObject]
  + Utf8 [script]
  + Utf8 [set]
  + Utf8 [step]
  + Utf8 [this]
  + Utf8 [toString]
  + Utf8 [unboxEnd]
  + Utf8 [valueOf]
  + Utf8 [write]
  + Utf8 [} 
]

Fields (count = 2):
  + Field:        alive Z
    Access flags: 0x0
      = boolean alive
  + Field:        index I
    Access flags: 0x0
      = int index

Methods (count = 10):
  - Method:       <init>(Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V
    Access flags: 0x1
      = public ImperativeScript(java.lang.String,me.planetguy.advancedvm.IBox[][],java.util.Map,me.planetguy.advancedvm.Scripted)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 5, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] aload_3 v3
      [4] aload v4
      [6] invokespecial #51
        + Methodref [me/planetguy/advancedvm/Script.<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V]
      [9] aload_0 v0
      [10] iconst_1
      [11] putfield #31
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.alive Z]
      [14] aload_0 v0
      [15] iconst_0
      [16] putfield #33
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.index I]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;)V
    Access flags: 0x1
      = public ImperativeScript(java.lang.String,me.planetguy.advancedvm.IBox[][],java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 4, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] aload_3 v3
      [4] invokespecial #50
        + Methodref [me/planetguy/advancedvm/Script.<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;)V]
      [7] aload_0 v0
      [8] iconst_1
      [9] putfield #31
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.alive Z]
      [12] aload_0 v0
      [13] iconst_0
      [14] putfield #33
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.index I]
      [17] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       jump(I)V
    Access flags: 0x1
      = public void jump(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] putfield #33
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.index I]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       canStep()Z
    Access flags: 0x1
      = public boolean canStep()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 2):
      [0] aload_0 v0
      [1] getfield #33
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.index I]
      [4] aload_0 v0
      [5] getfield #34
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.script [[Lme/planetguy/advancedvm/IBox;]
      [8] arraylength
      [9] ificmpge +5 (target=14)
      [12] iconst_1
      [13] ireturn
      [14] iconst_0
      [15] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [14] Var: ..., Stack: (empty)
  + Method:       step()V
    Access flags: 0x1
      = public void step()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 114, locals = 2, stack = 6):
      [0] aload_0 v0
      [1] getfield #31
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.alive Z]
      [4] ifne +4 (target=8)
      [7] return
      [8] ldc #6
        + String [Robots]
      [10] ldc #8
        + String [Script executing]
      [12] invokestatic #35
        + Methodref [android/util/Log.d (Ljava/lang/String;Ljava/lang/String;)I]
      [15] pop
      [16] aload_0 v0
      [17] getfield #33
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.index I]
      [20] istore_1 v1
      [21] aload_0 v0
      [22] getfield #34
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.script [[Lme/planetguy/advancedvm/IBox;]
      [25] aload_0 v0
      [26] getfield #33
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.index I]
      [29] aaload
      [30] iconst_1
      [31] aaload
      [32] aload_0 v0
      [33] getfield #34
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.script [[Lme/planetguy/advancedvm/IBox;]
      [36] aload_0 v0
      [37] getfield #33
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.index I]
      [40] aaload
      [41] iconst_0
      [42] aaload
      [43] invokeinterface #52
        + InterfaceMethodref [me/planetguy/advancedvm/IBox.get ()Ljava/lang/Object;]
      [48] checkcast #23
        + Class [java/lang/reflect/Method]
      [51] aconst_null
      [52] aload_0 v0
      [53] aload_0 v0
      [54] getfield #34
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.script [[Lme/planetguy/advancedvm/IBox;]
      [57] aload_0 v0
      [58] getfield #33
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.index I]
      [61] aaload
      [62] invokespecial #49
        + Methodref [me/planetguy/advancedvm/ImperativeScript.unboxEnd ([Lme/planetguy/advancedvm/IBox;)[Ljava/lang/Object;]
      [65] invokevirtual #45
        + Methodref [java/lang/reflect/Method.invoke (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;]
      [68] invokeinterface #53
        + InterfaceMethodref [me/planetguy/advancedvm/IBox.set (Ljava/lang/Object;)V]
      [73] iload_1 v1
      [74] aload_0 v0
      [75] getfield #33
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.index I]
      [78] ificmpne +35 (target=113)
      [81] aload_0 v0
      [82] dup
      [83] getfield #33
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.index I]
      [86] iconst_1
      [87] iadd
      [88] putfield #33
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.index I]
      [91] goto +22 (target=113)
      [94] astore_1 v1
      [95] aload_0 v0
      [96] iconst_0
      [97] putfield #31
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.alive Z]
      [100] getstatic #30
        + Fieldref [java/lang/System.err Ljava/io/PrintStream;]
      [103] aload_0 v0
      [104] invokevirtual #37
        + Methodref [java/io/PrintStream.println (Ljava/lang/Object;)V]
      [107] aload_1 v1
      [108] invokevirtual #38
        + Methodref [java/lang/Exception.printStackTrace ()V]
      [111] aload_1 v1
      [112] athrow
      [113] return
      Code attribute exceptions (count = 1):
      - ExceptionInfo (16 -> 91: 94):
      + Class [java/lang/Exception]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [8] Var: ..., Stack: (empty)
        - [91] Var: ..., Stack: (empty)
        - [94] Var: ..., Stack: [a:java/lang/Exception]
        - [113] Var: ..., Stack: (empty)
  + Method:       unboxEnd([Lme/planetguy/advancedvm/IBox;)[Ljava/lang/Object;
    Access flags: 0x2
      = private java.lang.Object[] unboxEnd(me.planetguy.advancedvm.IBox[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 66, locals = 4, stack = 4):
      [0] ldc #6
        + String [Robots]
      [2] aload_1 v1
      [3] invokestatic #46
        + Methodref [java/util/Arrays.toString ([Ljava/lang/Object;)Ljava/lang/String;]
      [6] invokestatic #35
        + Methodref [android/util/Log.d (Ljava/lang/String;Ljava/lang/String;)I]
      [9] pop
      [10] aload_1 v1
      [11] arraylength
      [12] iconst_2
      [13] isub
      [14] iconst_1
      [15] iadd
      [16] anewarray #19
        + Class [java/lang/Object]
      [19] astore_2 v2
      [20] aload_2 v2
      [21] iconst_0
      [22] aload_0 v0
      [23] invokevirtual #48
        + Methodref [me/planetguy/advancedvm/ImperativeScript.getOwningObject ()Lme/planetguy/advancedvm/Scripted;]
      [26] aastore
      [27] iconst_2
      [28] istore_3 v3
      [29] goto +19 (target=48)
      [32] aload_2 v2
      [33] iload_3 v3
      [34] iconst_1
      [35] isub
      [36] aload_1 v1
      [37] iload_3 v3
      [38] aaload
      [39] invokeinterface #52
        + InterfaceMethodref [me/planetguy/advancedvm/IBox.get ()Ljava/lang/Object;]
      [44] aastore
      [45] iinc v3, 1
      [48] iload_3 v3
      [49] aload_1 v1
      [50] arraylength
      [51] ificmplt -19 (target=32)
      [54] ldc #6
        + String [Robots]
      [56] aload_2 v2
      [57] invokestatic #46
        + Methodref [java/util/Arrays.toString ([Ljava/lang/Object;)Ljava/lang/String;]
      [60] invokestatic #35
        + Methodref [android/util/Log.d (Ljava/lang/String;Ljava/lang/String;)I]
      [63] pop
      [64] aload_2 v2
      [65] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [32] Var: ...[a:[Ljava/lang/Object;][i], Stack: (empty)
        - [48] Var: ..., Stack: (empty)
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 157, locals = 8, stack = 3):
      [0] ldc #9
        + String [Script:
]
      [2] astore_1 v1
      [3] iconst_0
      [4] istore_2 v2
      [5] goto +141 (target=146)
      [8] aload_0 v0
      [9] getfield #34
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.script [[Lme/planetguy/advancedvm/IBox;]
      [12] iload_2 v2
      [13] aaload
      [14] astore_3 v3
      [15] new #21
        + Class [java/lang/StringBuilder]
      [18] dup
      [19] aload_1 v1
      [20] invokestatic #39
        + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
      [23] invokespecial #40
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [26] iload_2 v2
      [27] aload_0 v0
      [28] getfield #33
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.index I]
      [31] ificmpne +8 (target=39)
      [34] ldc #5
        + String [>]
      [36] goto +5 (target=41)
      [39] ldc #1
        + String [ ]
      [41] invokevirtual #43
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [44] invokevirtual #44
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [47] astore_1 v1
      [48] new #21
        + Class [java/lang/StringBuilder]
      [51] dup
      [52] aload_1 v1
      [53] invokestatic #39
        + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
      [56] invokespecial #40
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [59] ldc #2
        + String [   { ]
      [61] invokevirtual #43
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [64] invokevirtual #44
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [67] astore_1 v1
      [68] aload_3 v3
      [69] dup
      [70] astore v7
      [72] arraylength
      [73] istore v6
      [75] iconst_0
      [76] istore v5
      [78] goto +38 (target=116)
      [81] aload v7
      [83] iload v5
      [85] aaload
      [86] astore v4
      [88] new #21
        + Class [java/lang/StringBuilder]
      [91] dup
      [92] aload_1 v1
      [93] invokestatic #39
        + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
      [96] invokespecial #40
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [99] aload v4
      [101] invokevirtual #42
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [104] ldc #3
        + String [, ]
      [106] invokevirtual #43
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [109] invokevirtual #44
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [112] astore_1 v1
      [113] iinc v5, 1
      [116] iload v5
      [118] iload v6
      [120] ificmplt -39 (target=81)
      [123] new #21
        + Class [java/lang/StringBuilder]
      [126] dup
      [127] aload_1 v1
      [128] invokestatic #39
        + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
      [131] invokespecial #40
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [134] ldc #11
        + String [} 
]
      [136] invokevirtual #43
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [139] invokevirtual #44
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [142] astore_1 v1
      [143] iinc v2, 1
      [146] iload_2 v2
      [147] aload_0 v0
      [148] getfield #34
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.script [[Lme/planetguy/advancedvm/IBox;]
      [151] arraylength
      [152] ificmplt -144 (target=8)
      [155] aload_1 v1
      [156] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [8] Var: ...[a:java/lang/String][i], Stack: (empty)
        - [39] Var: [a:me/planetguy/advancedvm/ImperativeScript][a:java/lang/String][i][a:[Lme/planetguy/advancedvm/IBox;], Stack: [a:java/lang/StringBuilder]
        - [41] Var: [a:me/planetguy/advancedvm/ImperativeScript][a:java/lang/String][i][a:[Lme/planetguy/advancedvm/IBox;], Stack: [a:java/lang/StringBuilder][a:java/lang/String]
        - [81] Var: [a:me/planetguy/advancedvm/ImperativeScript][a:java/lang/String][i][a:[Lme/planetguy/advancedvm/IBox;][T][i][i][a:[Lme/planetguy/advancedvm/IBox;], Stack: 
        - [116] Var: ..., Stack: (empty)
        - [146] Var: [a:me/planetguy/advancedvm/ImperativeScript][a:java/lang/String][i], Stack: 
  + Method:       getScript()Lme/planetguy/advancedvm/Script;
    Access flags: 0x1
      = public me.planetguy.advancedvm.Script getScript()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       readObject(Ljava/io/ObjectInputStream;)V
    Access flags: 0x2
      = private void readObject(java.io.ObjectInputStream)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 2, stack = 2):
      [0] aload_1 v1
      [1] invokevirtual #36
        + Methodref [java/io/ObjectInputStream.defaultReadObject ()V]
      [4] aload_0 v0
      [5] ldc #10
        + String [this]
      [7] invokevirtual #47
        + Methodref [me/planetguy/advancedvm/ImperativeScript.getNamedBox (Ljava/lang/String;)Lme/planetguy/advancedvm/IBox;]
      [10] aload_0 v0
      [11] invokeinterface #53
        + InterfaceMethodref [me/planetguy/advancedvm/IBox.set (Ljava/lang/Object;)V]
      [16] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       print(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void print(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 38, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] getfield #32
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.debugStream Lme/planetguy/advancedvm/Stream;]
      [4] new #21
        + Class [java/lang/StringBuilder]
      [7] dup
      [8] ldc #7
        + String [S@]
      [10] invokespecial #40
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [13] aload_0 v0
      [14] getfield #33
        + Fieldref [me/planetguy/advancedvm/ImperativeScript.index I]
      [17] invokevirtual #41
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [20] ldc #4
        + String [:]
      [22] invokevirtual #43
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [25] aload_1 v1
      [26] invokevirtual #42
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [29] invokevirtual #44
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [32] invokeinterface #54
        + InterfaceMethodref [me/planetguy/advancedvm/Stream.write (Ljava/lang/Object;)V]
      [37] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/Inline
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface me.planetguy.advancedvm.Inline extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 9):
  + Class [java/lang/Object]
  + Class [me/planetguy/advancedvm/Inline]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [([Ljava/lang/String;)Ljava/util/List;]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/advancedvm/Inline]
  + Utf8 [name]
  + Utf8 [replace]

Fields (count = 0):

Methods (count = 2):
  + Method:       name()Ljava/lang/String;
    Access flags: 0x401
      = public abstract java.lang.String name()
  + Method:       replace([Ljava/lang/String;)Ljava/util/List;
    Access flags: 0x401
      = public abstract java.util.List replace(java.lang.String[])

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/Limited
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface me.planetguy.advancedvm.Limited extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 10):
  + Class [java/lang/Object]
  + Class [me/planetguy/advancedvm/Limited]
  + Utf8 [()V]
  + Utf8 [(I)V]
  + Utf8 [allowSteps]
  + Utf8 [doAllAllowedSteps]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/advancedvm/Limited]
  + Utf8 [onRunExtraComputation]

Fields (count = 0):

Methods (count = 3):
  + Method:       onRunExtraComputation(I)V
    Access flags: 0x401
      = public abstract void onRunExtraComputation(int)
  + Method:       doAllAllowedSteps()V
    Access flags: 0x401
      = public abstract void doAllAllowedSteps()
  + Method:       allowSteps(I)V
    Access flags: 0x401
      = public abstract void allowSteps(int)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/LimitedScript
  Superclass:    me/planetguy/advancedvm/ImperativeScript
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.advancedvm.LimitedScript extends me.planetguy.advancedvm.ImperativeScript

Interfaces (count = 1):
  + Class [me/planetguy/advancedvm/Limited]

Constant Pool (count = 38):
  + Class [java/lang/Exception]
  + Class [me/planetguy/advancedvm/ImperativeScript]
  + Class [me/planetguy/advancedvm/Limited]
  + Class [me/planetguy/advancedvm/LimitedScript]
  + Long [-1614013099277951512]
  + Fieldref [me/planetguy/advancedvm/LimitedScript.steps I]
  + Methodref [java/lang/Exception.printStackTrace ()V]
  + Methodref [me/planetguy/advancedvm/ImperativeScript.<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;)V]
  + Methodref [me/planetguy/advancedvm/ImperativeScript.<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V]
  + Methodref [me/planetguy/advancedvm/LimitedScript.step ()V]
  + NameAndType [<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;)V]
  + NameAndType [<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V]
  + NameAndType [printStackTrace ()V]
  + NameAndType [step ()V]
  + NameAndType [steps I]
  + Utf8 [()V]
  + Utf8 [(I)V]
  + Utf8 [(Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;)V]
  + Utf8 [(Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [ConstantValue]
  + Utf8 [I]
  + Utf8 [J]
  + Utf8 [StackMapTable]
  + Utf8 [allowSteps]
  + Utf8 [doAllAllowedSteps]
  + Utf8 [java/lang/Exception]
  + Utf8 [me/planetguy/advancedvm/ImperativeScript]
  + Utf8 [me/planetguy/advancedvm/Limited]
  + Utf8 [me/planetguy/advancedvm/LimitedScript]
  + Utf8 [onRunExtraComputation]
  + Utf8 [printStackTrace]
  + Utf8 [serialVersionUID]
  + Utf8 [step]
  + Utf8 [steps]

Fields (count = 2):
  + Field:        steps I
    Access flags: 0x1
      = public int steps
  + Field:        serialVersionUID J
    Access flags: 0x1a
      = private static final long serialVersionUID
    Class member attributes (count = 1):
    + Constant value attribute:
    + Long [-1614013099277951512]

Methods (count = 5):
  - Method:       <init>(Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;)V
    Access flags: 0x1
      = public LimitedScript(java.lang.String,me.planetguy.advancedvm.IBox[][],java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 4, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] aload_3 v3
      [4] invokespecial #9
        + Methodref [me/planetguy/advancedvm/ImperativeScript.<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;)V]
      [7] aload_0 v0
      [8] iconst_0
      [9] putfield #7
        + Fieldref [me/planetguy/advancedvm/LimitedScript.steps I]
      [12] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V
    Access flags: 0x1
      = public LimitedScript(java.lang.String,me.planetguy.advancedvm.IBox[][],java.util.Map,me.planetguy.advancedvm.Scripted)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 5, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] aload_3 v3
      [4] aload v4
      [6] invokespecial #10
        + Methodref [me/planetguy/advancedvm/ImperativeScript.<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V]
      [9] aload_0 v0
      [10] iconst_0
      [11] putfield #7
        + Fieldref [me/planetguy/advancedvm/LimitedScript.steps I]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onRunExtraComputation(I)V
    Access flags: 0x1
      = public void onRunExtraComputation(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] dup
      [2] getfield #7
        + Fieldref [me/planetguy/advancedvm/LimitedScript.steps I]
      [5] iload_1 v1
      [6] isub
      [7] putfield #7
        + Fieldref [me/planetguy/advancedvm/LimitedScript.steps I]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       doAllAllowedSteps()V
    Access flags: 0x1
      = public void doAllAllowedSteps()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 33, locals = 2, stack = 3):
      [0] goto +25 (target=25)
      [3] aload_0 v0
      [4] invokevirtual #11
        + Methodref [me/planetguy/advancedvm/LimitedScript.step ()V]
      [7] aload_0 v0
      [8] dup
      [9] getfield #7
        + Fieldref [me/planetguy/advancedvm/LimitedScript.steps I]
      [12] iconst_1
      [13] isub
      [14] putfield #7
        + Fieldref [me/planetguy/advancedvm/LimitedScript.steps I]
      [17] goto +8 (target=25)
      [20] astore_1 v1
      [21] aload_1 v1
      [22] invokevirtual #8
        + Methodref [java/lang/Exception.printStackTrace ()V]
      [25] aload_0 v0
      [26] getfield #7
        + Fieldref [me/planetguy/advancedvm/LimitedScript.steps I]
      [29] ifgt -26 (target=3)
      [32] return
      Code attribute exceptions (count = 1):
      - ExceptionInfo (3 -> 17: 20):
      + Class [java/lang/Exception]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [3] Var: ..., Stack: (empty)
        - [20] Var: ..., Stack: [a:java/lang/Exception]
        - [25] Var: ..., Stack: (empty)
  + Method:       allowSteps(I)V
    Access flags: 0x1
      = public void allowSteps(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] dup
      [2] getfield #7
        + Fieldref [me/planetguy/advancedvm/LimitedScript.steps I]
      [5] iload_1 v1
      [6] iadd
      [7] putfield #7
        + Fieldref [me/planetguy/advancedvm/LimitedScript.steps I]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/NullBox
  Superclass:    java/lang/Enum
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4031
    = public final enum enum me.planetguy.advancedvm.NullBox extends java.lang.Enum

Interfaces (count = 1):
  + Class [me/planetguy/advancedvm/IBox]

Constant Pool (count = 45):
  + String [NullBox]
  + String [instance]
  + Class [java/lang/Enum]
  + Class [java/lang/System]
  + Class [me/planetguy/advancedvm/IBox]
  + Class [me/planetguy/advancedvm/NullBox]
  + Fieldref [me/planetguy/advancedvm/NullBox.ENUM$VALUES [Lme/planetguy/advancedvm/NullBox;]
  + Fieldref [me/planetguy/advancedvm/NullBox.instance Lme/planetguy/advancedvm/NullBox;]
  + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Methodref [java/lang/System.arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
  + Methodref [me/planetguy/advancedvm/NullBox.<init> (Ljava/lang/String;I)V]
  + NameAndType [<init> (Ljava/lang/String;I)V]
  + NameAndType [ENUM$VALUES [Lme/planetguy/advancedvm/NullBox;]
  + NameAndType [arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
  + NameAndType [instance Lme/planetguy/advancedvm/NullBox;]
  + NameAndType [valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [()[Lme/planetguy/advancedvm/NullBox;]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;II)V]
  + Utf8 [(Ljava/lang/String;)Lme/planetguy/advancedvm/NullBox;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [ENUM$VALUES]
  + Utf8 [Lme/planetguy/advancedvm/NullBox;]
  + Utf8 [NullBox]
  + Utf8 [[Lme/planetguy/advancedvm/NullBox;]
  + Utf8 [arraycopy]
  + Utf8 [get]
  + Utf8 [instance]
  + Utf8 [java/lang/Enum]
  + Utf8 [java/lang/System]
  + Utf8 [me/planetguy/advancedvm/IBox]
  + Utf8 [me/planetguy/advancedvm/NullBox]
  + Utf8 [set]
  + Utf8 [toString]
  + Utf8 [valueOf]
  + Utf8 [values]

Fields (count = 2):
  + Field:        instance Lme/planetguy/advancedvm/NullBox;
    Access flags: 0x4019
      = public static final me.planetguy.advancedvm.NullBox instance
  + Field:        ENUM$VALUES [Lme/planetguy/advancedvm/NullBox;
    Access flags: 0x101a
      = private static final synthetic me.planetguy.advancedvm.NullBox[] ENUM$VALUES

Methods (count = 7):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 27, locals = 0, stack = 4):
      [0] new #6
        + Class [me/planetguy/advancedvm/NullBox]
      [3] dup
      [4] ldc #2
        + String [instance]
      [6] iconst_0
      [7] invokespecial #12
        + Methodref [me/planetguy/advancedvm/NullBox.<init> (Ljava/lang/String;I)V]
      [10] putstatic #8
        + Fieldref [me/planetguy/advancedvm/NullBox.instance Lme/planetguy/advancedvm/NullBox;]
      [13] iconst_1
      [14] anewarray #6
        + Class [me/planetguy/advancedvm/NullBox]
      [17] dup
      [18] iconst_0
      [19] getstatic #8
        + Fieldref [me/planetguy/advancedvm/NullBox.instance Lme/planetguy/advancedvm/NullBox;]
      [22] aastore
      [23] putstatic #7
        + Fieldref [me/planetguy/advancedvm/NullBox.ENUM$VALUES [Lme/planetguy/advancedvm/NullBox;]
      [26] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x2
      = private NullBox(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #9
        + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       set(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void set(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get()Ljava/lang/Object;
    Access flags: 0x1
      = public java.lang.Object get()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aconst_null
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 3, locals = 1, stack = 1):
      [0] ldc #1
        + String [NullBox]
      [2] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       values()[Lme/planetguy/advancedvm/NullBox;
    Access flags: 0x9
      = public static me.planetguy.advancedvm.NullBox[] values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 3, stack = 5):
      [0] getstatic #7
        + Fieldref [me/planetguy/advancedvm/NullBox.ENUM$VALUES [Lme/planetguy/advancedvm/NullBox;]
      [3] dup
      [4] astore_0 v0
      [5] iconst_0
      [6] aload_0 v0
      [7] arraylength
      [8] dup
      [9] istore_1 v1
      [10] anewarray #6
        + Class [me/planetguy/advancedvm/NullBox]
      [13] dup
      [14] astore_2 v2
      [15] iconst_0
      [16] iload_1 v1
      [17] invokestatic #11
        + Methodref [java/lang/System.arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
      [20] aload_2 v2
      [21] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       valueOf(Ljava/lang/String;)Lme/planetguy/advancedvm/NullBox;
    Access flags: 0x9
      = public static me.planetguy.advancedvm.NullBox valueOf(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 2):
      [0] ldc #6
        + Class [me/planetguy/advancedvm/NullBox]
      [2] aload_0 v0
      [3] invokestatic #10
        + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
      [6] checkcast #6
        + Class [me/planetguy/advancedvm/NullBox]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/Script
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class me.planetguy.advancedvm.Script extends java.lang.Object

Interfaces (count = 2):
  + Class [java/io/Serializable]
  + Class [me/planetguy/advancedvm/Scripted]

Constant Pool (count = 148):
  + String []
  + String [
]
  + String [:   ]
  + String [>]
  + String [script<]
  + Class [java/io/Serializable]
  + Class [java/lang/Enum]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/reflect/Method]
  + Class [java/util/Iterator]
  + Class [java/util/Map]
  + Class [java/util/Random]
  + Class [java/util/Set]
  + Class [me/planetguy/advancedvm/Box]
  + Class [me/planetguy/advancedvm/IBox]
  + Class [me/planetguy/advancedvm/Script]
  + Class [me/planetguy/advancedvm/Scripted]
  + Class [me/planetguy/advancedvm/a]
  + Long [-8554584858663984873]
  + Fieldref [me/planetguy/advancedvm/Script.boxMap Ljava/util/Map;]
  + Fieldref [me/planetguy/advancedvm/Script.debugStream Lme/planetguy/advancedvm/Stream;]
  + Fieldref [me/planetguy/advancedvm/Script.owningObject Lme/planetguy/advancedvm/Scripted;]
  + Fieldref [me/planetguy/advancedvm/Script.r Ljava/util/Random;]
  + Fieldref [me/planetguy/advancedvm/Script.script [[Lme/planetguy/advancedvm/IBox;]
  + Fieldref [me/planetguy/advancedvm/Script.scriptID J]
  + Fieldref [me/planetguy/advancedvm/Script.source Ljava/lang/String;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
  + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.append (J)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/Random.<init> ()V]
  + Methodref [java/util/Random.nextLong ()J]
  + Methodref [me/planetguy/advancedvm/Box.register (Ljava/lang/Object;Ljava/lang/String;)V]
  + Methodref [me/planetguy/advancedvm/Script.<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V]
  + Methodref [me/planetguy/advancedvm/a.<init> (Lme/planetguy/advancedvm/Script;)V]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.keySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [me/planetguy/advancedvm/IBox.get ()Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V]
  + NameAndType [<init> (Lme/planetguy/advancedvm/Script;)V]
  + NameAndType [append (J)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [boxMap Ljava/util/Map;]
  + NameAndType [debugStream Lme/planetguy/advancedvm/Stream;]
  + NameAndType [get ()Ljava/lang/Object;]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [hasNext ()Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [keySet ()Ljava/util/Set;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [nextLong ()J]
  + NameAndType [owningObject Lme/planetguy/advancedvm/Scripted;]
  + NameAndType [r Ljava/util/Random;]
  + NameAndType [register (Ljava/lang/Object;Ljava/lang/String;)V]
  + NameAndType [script [[Lme/planetguy/advancedvm/IBox;]
  + NameAndType [scriptID J]
  + NameAndType [source Ljava/lang/String;]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [valueOf (Ljava/lang/Object;)Ljava/lang/String;]
  + Utf8 []
  + Utf8 [
]
  + Utf8 [()J]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()Lme/planetguy/advancedvm/Script;]
  + Utf8 [()Lme/planetguy/advancedvm/Scripted;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(J)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)Lme/planetguy/advancedvm/IBox;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;)V]
  + Utf8 [(Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V]
  + Utf8 [(Lme/planetguy/advancedvm/Script;)V]
  + Utf8 [:   ]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [>]
  + Utf8 [Code]
  + Utf8 [ConstantValue]
  + Utf8 [J]
  + Utf8 [Ljava/lang/String;]
  + Utf8 [Ljava/util/Map;]
  + Utf8 [Ljava/util/Random;]
  + Utf8 [Lme/planetguy/advancedvm/Scripted;]
  + Utf8 [Lme/planetguy/advancedvm/Stream;]
  + Utf8 [StackMapTable]
  + Utf8 [[[Lme/planetguy/advancedvm/IBox;]
  + Utf8 [append]
  + Utf8 [boxMap]
  + Utf8 [canStep]
  + Utf8 [debugStream]
  + Utf8 [dumpSymbolTable]
  + Utf8 [get]
  + Utf8 [getNamedBox]
  + Utf8 [getOwningObject]
  + Utf8 [getScript]
  + Utf8 [hasNext]
  + Utf8 [iterator]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Enum]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/reflect/Method]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Random]
  + Utf8 [java/util/Set]
  + Utf8 [keySet]
  + Utf8 [me/planetguy/advancedvm/Box]
  + Utf8 [me/planetguy/advancedvm/IBox]
  + Utf8 [me/planetguy/advancedvm/Script]
  + Utf8 [me/planetguy/advancedvm/Scripted]
  + Utf8 [me/planetguy/advancedvm/a]
  + Utf8 [next]
  + Utf8 [nextLong]
  + Utf8 [owningObject]
  + Utf8 [r]
  + Utf8 [register]
  + Utf8 [script]
  + Utf8 [script<]
  + Utf8 [scriptID]
  + Utf8 [serialVersionUID]
  + Utf8 [source]
  + Utf8 [step]
  + Utf8 [toString]
  + Utf8 [valueOf]

Fields (count = 8):
  + Field:        r Ljava/util/Random;
    Access flags: 0xa
      = private static java.util.Random r
  + Field:        serialVersionUID J
    Access flags: 0x18
      = static final long serialVersionUID
    Class member attributes (count = 1):
    + Constant value attribute:
    + Long [-8554584858663984873]
  + Field:        scriptID J
    Access flags: 0x0
      = long scriptID
  + Field:        script [[Lme/planetguy/advancedvm/IBox;
    Access flags: 0x0
      = me.planetguy.advancedvm.IBox[][] script
  + Field:        boxMap Ljava/util/Map;
    Access flags: 0x0
      = java.util.Map boxMap
  + Field:        source Ljava/lang/String;
    Access flags: 0x11
      = public final java.lang.String source
  + Field:        owningObject Lme/planetguy/advancedvm/Scripted;
    Access flags: 0x2
      = private me.planetguy.advancedvm.Scripted owningObject
  + Field:        debugStream Lme/planetguy/advancedvm/Stream;
    Access flags: 0x1
      = public me.planetguy.advancedvm.Stream debugStream

Methods (count = 9):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 0, stack = 2):
      [0] new #14
        + Class [java/util/Random]
      [3] dup
      [4] invokespecial #37
        + Methodref [java/util/Random.<init> ()V]
      [7] putstatic #26
        + Fieldref [me/planetguy/advancedvm/Script.r Ljava/util/Random;]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V
    Access flags: 0x1
      = public Script(java.lang.String,me.planetguy.advancedvm.IBox[][],java.util.Map,me.planetguy.advancedvm.Scripted)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 76, locals = 5, stack = 4):
      [0] aload_0 v0
      [1] invokespecial #30
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] getstatic #26
        + Fieldref [me/planetguy/advancedvm/Script.r Ljava/util/Random;]
      [8] invokevirtual #38
        + Methodref [java/util/Random.nextLong ()J]
      [11] putfield #28
        + Fieldref [me/planetguy/advancedvm/Script.scriptID J]
      [14] aload_0 v0
      [15] new #20
        + Class [me/planetguy/advancedvm/a]
      [18] dup
      [19] aload_0 v0
      [20] invokespecial #41
        + Methodref [me/planetguy/advancedvm/a.<init> (Lme/planetguy/advancedvm/Script;)V]
      [23] putfield #24
        + Fieldref [me/planetguy/advancedvm/Script.debugStream Lme/planetguy/advancedvm/Stream;]
      [26] aload_0 v0
      [27] aload_2 v2
      [28] putfield #27
        + Fieldref [me/planetguy/advancedvm/Script.script [[Lme/planetguy/advancedvm/IBox;]
      [31] aload_0 v0
      [32] aload_3 v3
      [33] putfield #23
        + Fieldref [me/planetguy/advancedvm/Script.boxMap Ljava/util/Map;]
      [36] aload_0 v0
      [37] new #10
        + Class [java/lang/StringBuilder]
      [40] dup
      [41] ldc #5
        + String [script<]
      [43] invokespecial #32
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [46] aload_0 v0
      [47] getfield #28
        + Fieldref [me/planetguy/advancedvm/Script.scriptID J]
      [50] invokevirtual #33
        + Methodref [java/lang/StringBuilder.append (J)Ljava/lang/StringBuilder;]
      [53] ldc #4
        + String [>]
      [55] invokevirtual #35
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [58] invokevirtual #36
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [61] invokestatic #39
        + Methodref [me/planetguy/advancedvm/Box.register (Ljava/lang/Object;Ljava/lang/String;)V]
      [64] aload_0 v0
      [65] aload_1 v1
      [66] putfield #29
        + Fieldref [me/planetguy/advancedvm/Script.source Ljava/lang/String;]
      [69] aload_0 v0
      [70] aload v4
      [72] putfield #25
        + Fieldref [me/planetguy/advancedvm/Script.owningObject Lme/planetguy/advancedvm/Scripted;]
      [75] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;)V
    Access flags: 0x1
      = public Script(java.lang.String,me.planetguy.advancedvm.IBox[][],java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 4, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] aload_3 v3
      [4] aconst_null
      [5] invokespecial #40
        + Methodref [me/planetguy/advancedvm/Script.<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V]
      [8] aload_0 v0
      [9] aload_0 v0
      [10] putfield #25
        + Fieldref [me/planetguy/advancedvm/Script.owningObject Lme/planetguy/advancedvm/Scripted;]
      [13] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getScript()Lme/planetguy/advancedvm/Script;
    Access flags: 0x1
      = public me.planetguy.advancedvm.Script getScript()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       canStep()Z
    Access flags: 0x401
      = public abstract boolean canStep()
  + Method:       step()V
    Access flags: 0x401
      = public abstract void step()
  + Method:       getNamedBox(Ljava/lang/String;)Lme/planetguy/advancedvm/IBox;
    Access flags: 0x1
      = public me.planetguy.advancedvm.IBox getNamedBox(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #23
        + Fieldref [me/planetguy/advancedvm/Script.boxMap Ljava/util/Map;]
      [4] aload_1 v1
      [5] invokeinterface #44
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [10] checkcast #17
        + Class [me/planetguy/advancedvm/IBox]
      [13] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       dumpSymbolTable()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String dumpSymbolTable()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 132, locals = 4, stack = 3):
      [0] ldc #1
        + String []
      [2] astore_1 v1
      [3] aload_0 v0
      [4] getfield #23
        + Fieldref [me/planetguy/advancedvm/Script.boxMap Ljava/util/Map;]
      [7] invokeinterface #45
        + InterfaceMethodref [java/util/Map.keySet ()Ljava/util/Set;]
      [12] invokeinterface #46
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [17] astore_3 v3
      [18] goto +103 (target=121)
      [21] aload_3 v3
      [22] invokeinterface #43
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [27] checkcast #9
        + Class [java/lang/String]
      [30] astore_2 v2
      [31] aload_0 v0
      [32] getfield #23
        + Fieldref [me/planetguy/advancedvm/Script.boxMap Ljava/util/Map;]
      [35] aload_2 v2
      [36] invokeinterface #44
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [41] checkcast #17
        + Class [me/planetguy/advancedvm/IBox]
      [44] invokeinterface #47
        + InterfaceMethodref [me/planetguy/advancedvm/IBox.get ()Ljava/lang/Object;]
      [49] instanceof #11
        + Class [java/lang/reflect/Method]
      [52] ifne +69 (target=121)
      [55] aload_0 v0
      [56] getfield #23
        + Fieldref [me/planetguy/advancedvm/Script.boxMap Ljava/util/Map;]
      [59] aload_2 v2
      [60] invokeinterface #44
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [65] checkcast #17
        + Class [me/planetguy/advancedvm/IBox]
      [68] invokeinterface #47
        + InterfaceMethodref [me/planetguy/advancedvm/IBox.get ()Ljava/lang/Object;]
      [73] instanceof #7
        + Class [java/lang/Enum]
      [76] ifne +45 (target=121)
      [79] new #10
        + Class [java/lang/StringBuilder]
      [82] dup
      [83] aload_1 v1
      [84] invokestatic #31
        + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
      [87] invokespecial #32
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [90] aload_2 v2
      [91] invokevirtual #35
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [94] ldc #3
        + String [:   ]
      [96] invokevirtual #35
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [99] aload_0 v0
      [100] getfield #23
        + Fieldref [me/planetguy/advancedvm/Script.boxMap Ljava/util/Map;]
      [103] aload_2 v2
      [104] invokeinterface #44
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [109] invokevirtual #34
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [112] ldc #2
        + String [
]
      [114] invokevirtual #35
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [117] invokevirtual #36
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [120] astore_1 v1
      [121] aload_3 v3
      [122] invokeinterface #42
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [127] ifne -106 (target=21)
      [130] aload_1 v1
      [131] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [21] Var: [a:me/planetguy/advancedvm/Script][a:java/lang/String][T][a:java/util/Iterator], Stack: 
        - [121] Var: ..., Stack: (empty)
  + Method:       getOwningObject()Lme/planetguy/advancedvm/Scripted;
    Access flags: 0x1
      = public me.planetguy.advancedvm.Scripted getOwningObject()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #25
        + Fieldref [me/planetguy/advancedvm/Script.owningObject Lme/planetguy/advancedvm/Scripted;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/a
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class me.planetguy.advancedvm.a extends java.lang.Object

Interfaces (count = 1):
  + Class [me/planetguy/advancedvm/Stream]

Constant Pool (count = 30):
  + Class [java/io/PrintStream]
  + Class [java/lang/Object]
  + Class [java/lang/System]
  + Class [me/planetguy/advancedvm/Stream]
  + Class [me/planetguy/advancedvm/a]
  + Fieldref [java/lang/System.out Ljava/io/PrintStream;]
  + Fieldref [me/planetguy/advancedvm/a.a Lme/planetguy/advancedvm/Script;]
  + Methodref [java/io/PrintStream.println (Ljava/lang/Object;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a Lme/planetguy/advancedvm/Script;]
  + NameAndType [out Ljava/io/PrintStream;]
  + NameAndType [println (Ljava/lang/Object;)V]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Lme/planetguy/advancedvm/Script;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/io/PrintStream;]
  + Utf8 [Lme/planetguy/advancedvm/Script;]
  + Utf8 [a]
  + Utf8 [java/io/PrintStream]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/System]
  + Utf8 [me/planetguy/advancedvm/Stream]
  + Utf8 [me/planetguy/advancedvm/a]
  + Utf8 [out]
  + Utf8 [println]
  + Utf8 [write]

Fields (count = 1):
  + Field:        a Lme/planetguy/advancedvm/Script;
    Access flags: 0x1010
      = final synthetic me.planetguy.advancedvm.Script a

Methods (count = 2):
  - Method:       <init>(Lme/planetguy/advancedvm/Script;)V
    Access flags: 0x0
      = a(me.planetguy.advancedvm.Script)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #7
        + Fieldref [me/planetguy/advancedvm/a.a Lme/planetguy/advancedvm/Script;]
      [5] aload_0 v0
      [6] invokespecial #9
        + Methodref [java/lang/Object.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       write(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void write(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] getstatic #6
        + Fieldref [java/lang/System.out Ljava/io/PrintStream;]
      [3] aload_1 v1
      [4] invokevirtual #8
        + Methodref [java/io/PrintStream.println (Ljava/lang/Object;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/ScriptAPI
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x2601
    = @ public @interface me.planetguy.advancedvm.ScriptAPI extends java.lang.Object

Interfaces (count = 1):
  + Class [java/lang/annotation/Annotation]

Constant Pool (count = 15):
  + Class [java/lang/Object]
  + Class [java/lang/annotation/Annotation]
  + Class [me/planetguy/advancedvm/ScriptAPI]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [AnnotationDefault]
  + Utf8 [Ljava/lang/annotation/Retention;]
  + Utf8 [Ljava/lang/annotation/RetentionPolicy;]
  + Utf8 [RUNTIME]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [__NULL__]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/annotation/Annotation]
  + Utf8 [me/planetguy/advancedvm/ScriptAPI]
  + Utf8 [value]

Fields (count = 0):

Methods (count = 1):
  + Method:       value()Ljava/lang/String;
    Access flags: 0x401
      = public abstract java.lang.String value()
    Class member attributes (count = 1):
    + Annotation default attribute:
      - Constant element value [(default) '115']
        + Utf8 [__NULL__]

Class file attributes (count = 1):
  + Runtime visible annotations attribute:
    - Annotation [Ljava/lang/annotation/Retention;]:
      - Enum constant element value [value, Ljava/lang/annotation/RetentionPolicy;, RUNTIME]

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/ScriptCreatedBox
  Superclass:    me/planetguy/advancedvm/Box
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.advancedvm.ScriptCreatedBox extends me.planetguy.advancedvm.Box

Interfaces (count = 0):

Constant Pool (count = 15):
  + Class [me/planetguy/advancedvm/Box]
  + Class [me/planetguy/advancedvm/ScriptCreatedBox]
  + Long [-6675520698741890199]
  + Methodref [me/planetguy/advancedvm/Box.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [ConstantValue]
  + Utf8 [J]
  + Utf8 [me/planetguy/advancedvm/Box]
  + Utf8 [me/planetguy/advancedvm/ScriptCreatedBox]
  + Utf8 [serialVersionUID]

Fields (count = 1):
  + Field:        serialVersionUID J
    Access flags: 0x1a
      = private static final long serialVersionUID
    Class member attributes (count = 1):
    + Constant value attribute:
    + Long [-6675520698741890199]

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x1
      = public ScriptCreatedBox()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #5
        + Methodref [me/planetguy/advancedvm/Box.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/ScriptTest
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.advancedvm.ScriptTest extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 91):
  + String [+ 11 5 + 3 13 = ==]
  + String [lit x 0
label :top
+ x 1 x
print  x this
!= test x 10
->?  :top this test
print  'Hello this
]
  + Class [java/io/ByteArrayInputStream]
  + Class [java/io/ByteArrayOutputStream]
  + Class [java/io/ObjectInputStream]
  + Class [java/io/ObjectOutputStream]
  + Class [java/lang/Exception]
  + Class [java/lang/Object]
  + Class [me/planetguy/advancedvm/ImperativeScript]
  + Class [me/planetguy/advancedvm/Script]
  + Class [me/planetguy/advancedvm/ScriptTest]
  + Class [me/planetguy/advancedvm/StackScript]
  + Class [me/planetguy/advancedvm/VMContext]
  + Class [me/planetguy/advancedvm/b]
  + Fieldref [me/planetguy/advancedvm/VMContext.root Lme/planetguy/advancedvm/VMContext;]
  + Methodref [java/io/ByteArrayInputStream.<init> ([B)V]
  + Methodref [java/io/ByteArrayOutputStream.<init> ()V]
  + Methodref [java/io/ByteArrayOutputStream.toByteArray ()[B]
  + Methodref [java/io/ObjectInputStream.<init> (Ljava/io/InputStream;)V]
  + Methodref [java/io/ObjectInputStream.readObject ()Ljava/lang/Object;]
  + Methodref [java/io/ObjectOutputStream.<init> (Ljava/io/OutputStream;)V]
  + Methodref [java/io/ObjectOutputStream.writeObject (Ljava/lang/Object;)V]
  + Methodref [java/lang/Exception.printStackTrace ()V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [me/planetguy/advancedvm/ImperativeScript.canStep ()Z]
  + Methodref [me/planetguy/advancedvm/ImperativeScript.step ()V]
  + Methodref [me/planetguy/advancedvm/Script.canStep ()Z]
  + Methodref [me/planetguy/advancedvm/Script.step ()V]
  + Methodref [me/planetguy/advancedvm/StackScript.setOutput (Lme/planetguy/advancedvm/Stream;)V]
  + Methodref [me/planetguy/advancedvm/VMContext.<init> (Lme/planetguy/advancedvm/VMContext;)V]
  + Methodref [me/planetguy/advancedvm/VMContext.compile (Ljava/lang/String;Lme/planetguy/advancedvm/Scripted;)Lme/planetguy/advancedvm/Script;]
  + Methodref [me/planetguy/advancedvm/VMContext.setScriptClass (Ljava/lang/Class;)V]
  + Methodref [me/planetguy/advancedvm/b.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/io/InputStream;)V]
  + NameAndType [<init> (Ljava/io/OutputStream;)V]
  + NameAndType [<init> (Lme/planetguy/advancedvm/VMContext;)V]
  + NameAndType [<init> ([B)V]
  + NameAndType [canStep ()Z]
  + NameAndType [compile (Ljava/lang/String;Lme/planetguy/advancedvm/Scripted;)Lme/planetguy/advancedvm/Script;]
  + NameAndType [printStackTrace ()V]
  + NameAndType [readObject ()Ljava/lang/Object;]
  + NameAndType [root Lme/planetguy/advancedvm/VMContext;]
  + NameAndType [setOutput (Lme/planetguy/advancedvm/Stream;)V]
  + NameAndType [setScriptClass (Ljava/lang/Class;)V]
  + NameAndType [step ()V]
  + NameAndType [toByteArray ()[B]
  + NameAndType [writeObject (Ljava/lang/Object;)V]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [()[B]
  + Utf8 [(Ljava/io/InputStream;)V]
  + Utf8 [(Ljava/io/OutputStream;)V]
  + Utf8 [(Ljava/lang/Class;)V]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/String;Lme/planetguy/advancedvm/Scripted;)Lme/planetguy/advancedvm/Script;]
  + Utf8 [(Lme/planetguy/advancedvm/Stream;)V]
  + Utf8 [(Lme/planetguy/advancedvm/VMContext;)V]
  + Utf8 [([B)V]
  + Utf8 [([Ljava/lang/String;)V]
  + Utf8 [+ 11 5 + 3 13 = ==]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Lme/planetguy/advancedvm/VMContext;]
  + Utf8 [StackMapTable]
  + Utf8 [canStep]
  + Utf8 [compile]
  + Utf8 [java/io/ByteArrayInputStream]
  + Utf8 [java/io/ByteArrayOutputStream]
  + Utf8 [java/io/ObjectInputStream]
  + Utf8 [java/io/ObjectOutputStream]
  + Utf8 [java/lang/Exception]
  + Utf8 [java/lang/Object]
  + Utf8 [lit x 0
label :top
+ x 1 x
print  x this
!= test x 10
->?  :top this test
print  'Hello this
]
  + Utf8 [main]
  + Utf8 [me/planetguy/advancedvm/ImperativeScript]
  + Utf8 [me/planetguy/advancedvm/Script]
  + Utf8 [me/planetguy/advancedvm/ScriptTest]
  + Utf8 [me/planetguy/advancedvm/StackScript]
  + Utf8 [me/planetguy/advancedvm/VMContext]
  + Utf8 [me/planetguy/advancedvm/b]
  + Utf8 [printStackTrace]
  + Utf8 [readObject]
  + Utf8 [root]
  + Utf8 [setOutput]
  + Utf8 [setScriptClass]
  + Utf8 [step]
  + Utf8 [toByteArray]
  + Utf8 [writeObject]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>()V
    Access flags: 0x1
      = public ScriptTest()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #24
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       main([Ljava/lang/String;)V
    Access flags: 0x9
      = public static void main(java.lang.String[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 183, locals = 9, stack = 3):
      [0] getstatic #15
        + Fieldref [me/planetguy/advancedvm/VMContext.root Lme/planetguy/advancedvm/VMContext;]
      [3] ldc #2
        + String [lit x 0
label :top
+ x 1 x
print  x this
!= test x 10
->?  :top this test
print  'Hello this
]
      [5] aconst_null
      [6] invokevirtual #31
        + Methodref [me/planetguy/advancedvm/VMContext.compile (Ljava/lang/String;Lme/planetguy/advancedvm/Scripted;)Lme/planetguy/advancedvm/Script;]
      [9] astore_1 v1
      [10] new #4
        + Class [java/io/ByteArrayOutputStream]
      [13] dup
      [14] invokespecial #17
        + Methodref [java/io/ByteArrayOutputStream.<init> ()V]
      [17] astore_2 v2
      [18] new #6
        + Class [java/io/ObjectOutputStream]
      [21] dup
      [22] aload_2 v2
      [23] invokespecial #21
        + Methodref [java/io/ObjectOutputStream.<init> (Ljava/io/OutputStream;)V]
      [26] astore_3 v3
      [27] aload_3 v3
      [28] aload_1 v1
      [29] invokevirtual #22
        + Methodref [java/io/ObjectOutputStream.writeObject (Ljava/lang/Object;)V]
      [32] goto +7 (target=39)
      [35] aload_1 v1
      [36] invokevirtual #28
        + Methodref [me/planetguy/advancedvm/Script.step ()V]
      [39] aload_1 v1
      [40] invokevirtual #27
        + Methodref [me/planetguy/advancedvm/Script.canStep ()Z]
      [43] ifne -8 (target=35)
      [46] goto +10 (target=56)
      [49] astore v4
      [51] aload v4
      [53] invokevirtual #23
        + Methodref [java/lang/Exception.printStackTrace ()V]
      [56] new #3
        + Class [java/io/ByteArrayInputStream]
      [59] dup
      [60] aload_2 v2
      [61] invokevirtual #18
        + Methodref [java/io/ByteArrayOutputStream.toByteArray ()[B]
      [64] invokespecial #16
        + Methodref [java/io/ByteArrayInputStream.<init> ([B)V]
      [67] astore v4
      [69] new #5
        + Class [java/io/ObjectInputStream]
      [72] dup
      [73] aload v4
      [75] invokespecial #19
        + Methodref [java/io/ObjectInputStream.<init> (Ljava/io/InputStream;)V]
      [78] invokevirtual #20
        + Methodref [java/io/ObjectInputStream.readObject ()Ljava/lang/Object;]
      [81] checkcast #9
        + Class [me/planetguy/advancedvm/ImperativeScript]
      [84] astore v5
      [86] goto +8 (target=94)
      [89] aload v5
      [91] invokevirtual #26
        + Methodref [me/planetguy/advancedvm/ImperativeScript.step ()V]
      [94] aload v5
      [96] invokevirtual #25
        + Methodref [me/planetguy/advancedvm/ImperativeScript.canStep ()Z]
      [99] ifne -10 (target=89)
      [102] goto +10 (target=112)
      [105] astore v6
      [107] aload v6
      [109] invokevirtual #23
        + Methodref [java/lang/Exception.printStackTrace ()V]
      [112] new #13
        + Class [me/planetguy/advancedvm/VMContext]
      [115] dup
      [116] getstatic #15
        + Fieldref [me/planetguy/advancedvm/VMContext.root Lme/planetguy/advancedvm/VMContext;]
      [119] invokespecial #30
        + Methodref [me/planetguy/advancedvm/VMContext.<init> (Lme/planetguy/advancedvm/VMContext;)V]
      [122] astore v6
      [124] aload v6
      [126] ldc #12
        + Class [me/planetguy/advancedvm/StackScript]
      [128] invokevirtual #32
        + Methodref [me/planetguy/advancedvm/VMContext.setScriptClass (Ljava/lang/Class;)V]
      [131] aload v6
      [133] ldc #1
        + String [+ 11 5 + 3 13 = ==]
      [135] aconst_null
      [136] invokevirtual #31
        + Methodref [me/planetguy/advancedvm/VMContext.compile (Ljava/lang/String;Lme/planetguy/advancedvm/Scripted;)Lme/planetguy/advancedvm/Script;]
      [139] astore v7
      [141] aload v7
      [143] checkcast #12
        + Class [me/planetguy/advancedvm/StackScript]
      [146] new #14
        + Class [me/planetguy/advancedvm/b]
      [149] dup
      [150] invokespecial #33
        + Methodref [me/planetguy/advancedvm/b.<init> ()V]
      [153] invokevirtual #29
        + Methodref [me/planetguy/advancedvm/StackScript.setOutput (Lme/planetguy/advancedvm/Stream;)V]
      [156] goto +8 (target=164)
      [159] aload v7
      [161] invokevirtual #28
        + Methodref [me/planetguy/advancedvm/Script.step ()V]
      [164] aload v7
      [166] invokevirtual #27
        + Methodref [me/planetguy/advancedvm/Script.canStep ()Z]
      [169] ifne -10 (target=159)
      [172] goto +10 (target=182)
      [175] astore v8
      [177] aload v8
      [179] invokevirtual #23
        + Methodref [java/lang/Exception.printStackTrace ()V]
      [182] return
      Code attribute exceptions (count = 3):
      - ExceptionInfo (32 -> 46: 49):
      + Class [java/lang/Exception]
      - ExceptionInfo (86 -> 102: 105):
      + Class [java/lang/Exception]
      - ExceptionInfo (156 -> 172: 175):
      + Class [java/lang/Exception]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 12):
        - [35] Var: ...[a:me/planetguy/advancedvm/Script][a:java/io/ByteArrayOutputStream][a:java/io/ObjectOutputStream], Stack: (empty)
        - [39] Var: ..., Stack: (empty)
        - [49] Var: ..., Stack: [a:java/lang/Exception]
        - [56] Var: ..., Stack: (empty)
        - [89] Var: ...[a:java/io/ByteArrayInputStream][a:me/planetguy/advancedvm/ImperativeScript], Stack: (empty)
        - [94] Var: ..., Stack: (empty)
        - [105] Var: ..., Stack: [a:java/lang/Exception]
        - [112] Var: ..., Stack: (empty)
        - [159] Var: ...[a:me/planetguy/advancedvm/VMContext][a:me/planetguy/advancedvm/Script], Stack: (empty)
        - [164] Var: ..., Stack: (empty)
        - [175] Var: ..., Stack: [a:java/lang/Exception]
        - [182] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/b
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class me.planetguy.advancedvm.b extends java.lang.Object

Interfaces (count = 1):
  + Class [me/planetguy/advancedvm/Stream]

Constant Pool (count = 25):
  + Class [java/io/PrintStream]
  + Class [java/lang/Object]
  + Class [java/lang/System]
  + Class [me/planetguy/advancedvm/Stream]
  + Class [me/planetguy/advancedvm/b]
  + Fieldref [java/lang/System.out Ljava/io/PrintStream;]
  + Methodref [java/io/PrintStream.println (Ljava/lang/Object;)V]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [out Ljava/io/PrintStream;]
  + NameAndType [println (Ljava/lang/Object;)V]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/io/PrintStream;]
  + Utf8 [java/io/PrintStream]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/System]
  + Utf8 [me/planetguy/advancedvm/Stream]
  + Utf8 [me/planetguy/advancedvm/b]
  + Utf8 [out]
  + Utf8 [println]
  + Utf8 [write]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>()V
    Access flags: 0x0
      = b()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #8
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       write(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void write(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] getstatic #6
        + Fieldref [java/lang/System.out Ljava/io/PrintStream;]
      [3] aload_1 v1
      [4] invokevirtual #7
        + Methodref [java/io/PrintStream.println (Ljava/lang/Object;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/ScriptTransformer
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface me.planetguy.advancedvm.ScriptTransformer extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 7):
  + Class [java/lang/Object]
  + Class [me/planetguy/advancedvm/ScriptTransformer]
  + Utf8 [([Ljava/lang/String;)[Ljava/lang/String;]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/advancedvm/ScriptTransformer]
  + Utf8 [transform]

Fields (count = 0):

Methods (count = 1):
  + Method:       transform([Ljava/lang/String;)[Ljava/lang/String;
    Access flags: 0x401
      = public abstract java.lang.String[] transform(java.lang.String[])

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/Scripted
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface me.planetguy.advancedvm.Scripted extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 9):
  + Class [java/lang/Object]
  + Class [me/planetguy/advancedvm/Scripted]
  + Utf8 [()Lme/planetguy/advancedvm/Script;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [getScript]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/advancedvm/Scripted]
  + Utf8 [print]

Fields (count = 0):

Methods (count = 2):
  + Method:       getScript()Lme/planetguy/advancedvm/Script;
    Access flags: 0x401
      = public abstract me.planetguy.advancedvm.Script getScript()
  + Method:       print(Ljava/lang/Object;)V
    Access flags: 0x401
      = public abstract void print(java.lang.Object)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/StackScript
  Superclass:    me/planetguy/advancedvm/Script
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.advancedvm.StackScript extends me.planetguy.advancedvm.Script

Interfaces (count = 1):
  + Class [me/planetguy/advancedvm/Scripted]

Constant Pool (count = 111):
  + Integer [9]
  + String [out]
  + Class [[Ljava/lang/Object;]
  + Class [[Lme/planetguy/advancedvm/IBox;]
  + Class [[[Lme/planetguy/advancedvm/IBox;]
  + Class [java/io/PrintStream]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/System]
  + Class [java/lang/reflect/Method]
  + Class [java/util/ArrayDeque]
  + Class [java/util/Arrays]
  + Class [java/util/Map]
  + Class [me/planetguy/advancedvm/IBox]
  + Class [me/planetguy/advancedvm/ImmutableBox]
  + Class [me/planetguy/advancedvm/Script]
  + Class [me/planetguy/advancedvm/Scripted]
  + Class [me/planetguy/advancedvm/StackScript]
  + Class [me/planetguy/advancedvm/Stream]
  + Fieldref [java/lang/System.out Ljava/io/PrintStream;]
  + Fieldref [me/planetguy/advancedvm/StackScript.output Lme/planetguy/advancedvm/Stream;]
  + Fieldref [me/planetguy/advancedvm/StackScript.prog Ljava/util/ArrayDeque;]
  + Methodref [java/io/PrintStream.println (Ljava/lang/Object;)V]
  + Methodref [java/io/PrintStream.println (Ljava/lang/String;)V]
  + Methodref [java/lang/reflect/Method.getParameterTypes ()[Ljava/lang/Class;]
  + Methodref [java/lang/reflect/Method.invoke (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [java/util/ArrayDeque.<init> ()V]
  + Methodref [java/util/ArrayDeque.add (Ljava/lang/Object;)Z]
  + Methodref [java/util/ArrayDeque.addLast (Ljava/lang/Object;)V]
  + Methodref [java/util/ArrayDeque.isEmpty ()Z]
  + Methodref [java/util/ArrayDeque.pop ()Ljava/lang/Object;]
  + Methodref [java/util/Arrays.toString ([Ljava/lang/Object;)Ljava/lang/String;]
  + Methodref [me/planetguy/advancedvm/ImmutableBox.<init> (Ljava/lang/Object;)V]
  + Methodref [me/planetguy/advancedvm/Script.<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V]
  + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [me/planetguy/advancedvm/IBox.get ()Ljava/lang/Object;]
  + InterfaceMethodref [me/planetguy/advancedvm/Stream.write (Ljava/lang/Object;)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V]
  + NameAndType [add (Ljava/lang/Object;)Z]
  + NameAndType [addLast (Ljava/lang/Object;)V]
  + NameAndType [get ()Ljava/lang/Object;]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [getParameterTypes ()[Ljava/lang/Class;]
  + NameAndType [invoke (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [isEmpty ()Z]
  + NameAndType [out Ljava/io/PrintStream;]
  + NameAndType [output Lme/planetguy/advancedvm/Stream;]
  + NameAndType [pop ()Ljava/lang/Object;]
  + NameAndType [println (Ljava/lang/Object;)V]
  + NameAndType [println (Ljava/lang/String;)V]
  + NameAndType [prog Ljava/util/ArrayDeque;]
  + NameAndType [toString ([Ljava/lang/Object;)Ljava/lang/String;]
  + NameAndType [write (Ljava/lang/Object;)V]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [()[Ljava/lang/Class;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V]
  + Utf8 [(Lme/planetguy/advancedvm/Stream;)V]
  + Utf8 [([Ljava/lang/Object;)Ljava/lang/String;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Landroid/annotation/TargetApi;]
  + Utf8 [Ljava/io/PrintStream;]
  + Utf8 [Ljava/util/ArrayDeque;]
  + Utf8 [Lme/planetguy/advancedvm/Stream;]
  + Utf8 [RuntimeInvisibleAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/Object;]
  + Utf8 [[Lme/planetguy/advancedvm/IBox;]
  + Utf8 [[[Lme/planetguy/advancedvm/IBox;]
  + Utf8 [add]
  + Utf8 [addLast]
  + Utf8 [canStep]
  + Utf8 [get]
  + Utf8 [getParameterTypes]
  + Utf8 [invoke]
  + Utf8 [isEmpty]
  + Utf8 [java/io/PrintStream]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/System]
  + Utf8 [java/lang/reflect/Method]
  + Utf8 [java/util/ArrayDeque]
  + Utf8 [java/util/Arrays]
  + Utf8 [java/util/Map]
  + Utf8 [me/planetguy/advancedvm/IBox]
  + Utf8 [me/planetguy/advancedvm/ImmutableBox]
  + Utf8 [me/planetguy/advancedvm/Script]
  + Utf8 [me/planetguy/advancedvm/Scripted]
  + Utf8 [me/planetguy/advancedvm/StackScript]
  + Utf8 [me/planetguy/advancedvm/Stream]
  + Utf8 [out]
  + Utf8 [output]
  + Utf8 [pop]
  + Utf8 [print]
  + Utf8 [println]
  + Utf8 [prog]
  + Utf8 [setOutput]
  + Utf8 [step]
  + Utf8 [toString]
  + Utf8 [value]
  + Utf8 [write]

Fields (count = 2):
  + Field:        prog Ljava/util/ArrayDeque;
    Access flags: 0x2
      = private java.util.ArrayDeque prog
  + Field:        output Lme/planetguy/advancedvm/Stream;
    Access flags: 0x2
      = private me.planetguy.advancedvm.Stream output

Methods (count = 5):
  - Method:       <init>(Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V
    Access flags: 0x1
      = public StackScript(java.lang.String,me.planetguy.advancedvm.IBox[][],java.util.Map,me.planetguy.advancedvm.Scripted)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 107, locals = 13, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] aload_3 v3
      [4] aload v4
      [6] invokespecial #34
        + Methodref [me/planetguy/advancedvm/Script.<init> (Ljava/lang/String;[[Lme/planetguy/advancedvm/IBox;Ljava/util/Map;Lme/planetguy/advancedvm/Scripted;)V]
      [9] aload_0 v0
      [10] new #11
        + Class [java/util/ArrayDeque]
      [13] dup
      [14] invokespecial #27
        + Methodref [java/util/ArrayDeque.<init> ()V]
      [17] putfield #22
        + Fieldref [me/planetguy/advancedvm/StackScript.prog Ljava/util/ArrayDeque;]
      [20] aload_2 v2
      [21] dup
      [22] astore v8
      [24] arraylength
      [25] istore v7
      [27] iconst_0
      [28] istore v6
      [30] goto +54 (target=84)
      [33] aload v8
      [35] iload v6
      [37] aaload
      [38] astore v5
      [40] aload v5
      [42] dup
      [43] astore v12
      [45] arraylength
      [46] istore v11
      [48] iconst_0
      [49] istore v10
      [51] goto +23 (target=74)
      [54] aload v12
      [56] iload v10
      [58] aaload
      [59] astore v9
      [61] aload_0 v0
      [62] getfield #22
        + Fieldref [me/planetguy/advancedvm/StackScript.prog Ljava/util/ArrayDeque;]
      [65] aload v9
      [67] invokevirtual #28
        + Methodref [java/util/ArrayDeque.add (Ljava/lang/Object;)Z]
      [70] pop
      [71] iinc v10, 1
      [74] iload v10
      [76] iload v11
      [78] ificmplt -24 (target=54)
      [81] iinc v6, 1
      [84] iload v6
      [86] iload v7
      [88] ificmplt -55 (target=33)
      [91] aload_0 v0
      [92] aload_3 v3
      [93] ldc #2
        + String [out]
      [95] invokeinterface #35
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [100] checkcast #19
        + Class [me/planetguy/advancedvm/Stream]
      [103] putfield #21
        + Fieldref [me/planetguy/advancedvm/StackScript.output Lme/planetguy/advancedvm/Stream;]
      [106] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [33] Var: [a:me/planetguy/advancedvm/StackScript][a:java/lang/String][a:[[Lme/planetguy/advancedvm/IBox;][a:java/util/Map][a:me/planetguy/advancedvm/Scripted][T][i][i][a:[[Lme/planetguy/advancedvm/IBox;], Stack: 
        - [54] Var: [a:me/planetguy/advancedvm/StackScript][a:java/lang/String][a:[[Lme/planetguy/advancedvm/IBox;][a:java/util/Map][a:me/planetguy/advancedvm/Scripted][a:[Lme/planetguy/advancedvm/IBox;][i][i][a:[[Lme/planetguy/advancedvm/IBox;][T][i][i][a:[Lme/planetguy/advancedvm/IBox;], Stack: 
        - [74] Var: ..., Stack: (empty)
        - [84] Var: [a:me/planetguy/advancedvm/StackScript][a:java/lang/String][a:[[Lme/planetguy/advancedvm/IBox;][a:java/util/Map][a:me/planetguy/advancedvm/Scripted][T][i][i][a:[[Lme/planetguy/advancedvm/IBox;], Stack: 
  + Method:       print(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void print(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       canStep()Z
    Access flags: 0x1
      = public boolean canStep()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #22
        + Fieldref [me/planetguy/advancedvm/StackScript.prog Ljava/util/ArrayDeque;]
      [4] invokevirtual #30
        + Methodref [java/util/ArrayDeque.isEmpty ()Z]
      [7] ifeq +7 (target=14)
      [10] iconst_0
      [11] goto +4 (target=15)
      [14] iconst_1
      [15] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [14] Var: ..., Stack: (empty)
        - [15] Var: ..., Stack: [i]
  + Method:       step()V
    Access flags: 0x1
      = public void step()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 145, locals = 5, stack = 5):
      [0] getstatic #20
        + Fieldref [java/lang/System.out Ljava/io/PrintStream;]
      [3] aload_0 v0
      [4] getfield #22
        + Fieldref [me/planetguy/advancedvm/StackScript.prog Ljava/util/ArrayDeque;]
      [7] invokevirtual #23
        + Methodref [java/io/PrintStream.println (Ljava/lang/Object;)V]
      [10] aload_0 v0
      [11] getfield #22
        + Fieldref [me/planetguy/advancedvm/StackScript.prog Ljava/util/ArrayDeque;]
      [14] invokevirtual #31
        + Methodref [java/util/ArrayDeque.pop ()Ljava/lang/Object;]
      [17] checkcast #14
        + Class [me/planetguy/advancedvm/IBox]
      [20] invokeinterface #36
        + InterfaceMethodref [me/planetguy/advancedvm/IBox.get ()Ljava/lang/Object;]
      [25] astore_1 v1
      [26] aload_1 v1
      [27] instanceof #10
        + Class [java/lang/reflect/Method]
      [30] ifeq +104 (target=134)
      [33] aload_1 v1
      [34] checkcast #10
        + Class [java/lang/reflect/Method]
      [37] invokevirtual #25
        + Methodref [java/lang/reflect/Method.getParameterTypes ()[Ljava/lang/Class;]
      [40] arraylength
      [41] istore_2 v2
      [42] iload_2 v2
      [43] anewarray #7
        + Class [java/lang/Object]
      [46] astore_3 v3
      [47] iconst_0
      [48] istore v4
      [50] goto +32 (target=82)
      [53] aload_3 v3
      [54] iload v4
      [56] aload_0 v0
      [57] getfield #22
        + Fieldref [me/planetguy/advancedvm/StackScript.prog Ljava/util/ArrayDeque;]
      [60] invokevirtual #31
        + Methodref [java/util/ArrayDeque.pop ()Ljava/lang/Object;]
      [63] checkcast #14
        + Class [me/planetguy/advancedvm/IBox]
      [66] invokeinterface #36
        + InterfaceMethodref [me/planetguy/advancedvm/IBox.get ()Ljava/lang/Object;]
      [71] aastore
      [72] aload_3 v3
      [73] iload v4
      [75] aaload
      [76] ifnull -23 (target=53)
      [79] iinc v4, 1
      [82] iload v4
      [84] aload_3 v3
      [85] arraylength
      [86] ificmplt -14 (target=72)
      [89] getstatic #20
        + Fieldref [java/lang/System.out Ljava/io/PrintStream;]
      [92] aload_3 v3
      [93] invokestatic #32
        + Methodref [java/util/Arrays.toString ([Ljava/lang/Object;)Ljava/lang/String;]
      [96] invokevirtual #24
        + Methodref [java/io/PrintStream.println (Ljava/lang/String;)V]
      [99] new #15
        + Class [me/planetguy/advancedvm/ImmutableBox]
      [102] dup
      [103] aload_1 v1
      [104] checkcast #10
        + Class [java/lang/reflect/Method]
      [107] aconst_null
      [108] aload_3 v3
      [109] invokevirtual #26
        + Methodref [java/lang/reflect/Method.invoke (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;]
      [112] invokespecial #33
        + Methodref [me/planetguy/advancedvm/ImmutableBox.<init> (Ljava/lang/Object;)V]
      [115] astore v4
      [117] aload v4
      [119] ifnull +25 (target=144)
      [122] aload_0 v0
      [123] getfield #22
        + Fieldref [me/planetguy/advancedvm/StackScript.prog Ljava/util/ArrayDeque;]
      [126] aload v4
      [128] invokevirtual #29
        + Methodref [java/util/ArrayDeque.addLast (Ljava/lang/Object;)V]
      [131] goto +13 (target=144)
      [134] aload_0 v0
      [135] getfield #21
        + Fieldref [me/planetguy/advancedvm/StackScript.output Lme/planetguy/advancedvm/Stream;]
      [138] aload_1 v1
      [139] invokeinterface #37
        + InterfaceMethodref [me/planetguy/advancedvm/Stream.write (Ljava/lang/Object;)V]
      [144] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [53] Var: [a:me/planetguy/advancedvm/StackScript][a:java/lang/Object][i][a:[Ljava/lang/Object;][i], Stack: 
        - [72] Var: ..., Stack: (empty)
        - [82] Var: ..., Stack: (empty)
        - [131] Var: -3, Stack: (empty)
        - [134] Var: ..., Stack: (empty)
        - [144] Var: ..., Stack: (empty)
  + Method:       setOutput(Lme/planetguy/advancedvm/Stream;)V
    Access flags: 0x1
      = public void setOutput(me.planetguy.advancedvm.Stream)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #21
        + Fieldref [me/planetguy/advancedvm/StackScript.output Lme/planetguy/advancedvm/Stream;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 1):
  + Runtime invisible annotations attribute:
    - Annotation [Landroid/annotation/TargetApi;]:
      - Constant element value [value '73']
        + Integer [9]

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/StandardLibrary
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.advancedvm.StandardLibrary extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 116):
  + Class [java/lang/Comparable]
  + Class [java/lang/Math]
  + Class [java/lang/Object]
  + Class [me/planetguy/advancedvm/ImperativeScript]
  + Class [me/planetguy/advancedvm/Scripted]
  + Class [me/planetguy/advancedvm/StackScript]
  + Class [me/planetguy/advancedvm/StandardLibrary]
  + Double [0.01]
  + Fieldref [me/planetguy/advancedvm/StandardLibrary.PRECISION D]
  + Methodref [java/lang/Math.abs (D)D]
  + Methodref [java/lang/Math.random ()D]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
  + Methodref [me/planetguy/advancedvm/ImperativeScript.jump (I)V]
  + Methodref [me/planetguy/advancedvm/StackScript.setOutput (Lme/planetguy/advancedvm/Stream;)V]
  + Methodref [me/planetguy/advancedvm/StandardLibrary.eq (Lme/planetguy/advancedvm/Scripted;Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Methodref [me/planetguy/advancedvm/StandardLibrary.jump (Lme/planetguy/advancedvm/Scripted;D)V]
  + InterfaceMethodref [java/lang/Comparable.compareTo (Ljava/lang/Object;)I]
  + InterfaceMethodref [me/planetguy/advancedvm/Scripted.getScript ()Lme/planetguy/advancedvm/Script;]
  + InterfaceMethodref [me/planetguy/advancedvm/Scripted.print (Ljava/lang/Object;)V]
  + NameAndType [<init> ()V]
  + NameAndType [PRECISION D]
  + NameAndType [abs (D)D]
  + NameAndType [compareTo (Ljava/lang/Object;)I]
  + NameAndType [eq (Lme/planetguy/advancedvm/Scripted;Ljava/lang/Object;Ljava/lang/Object;)Z]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [getScript ()Lme/planetguy/advancedvm/Script;]
  + NameAndType [jump (I)V]
  + NameAndType [jump (Lme/planetguy/advancedvm/Scripted;D)V]
  + NameAndType [print (Ljava/lang/Object;)V]
  + NameAndType [random ()D]
  + NameAndType [setOutput (Lme/planetguy/advancedvm/Stream;)V]
  + Utf8 [!]
  + Utf8 [!=]
  + Utf8 [&]
  + Utf8 [()D]
  + Utf8 [()Lme/planetguy/advancedvm/Script;]
  + Utf8 [()V]
  + Utf8 [(D)D]
  + Utf8 [(I)V]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Lme/planetguy/advancedvm/Scripted;D)V]
  + Utf8 [(Lme/planetguy/advancedvm/Scripted;DD)D]
  + Utf8 [(Lme/planetguy/advancedvm/Scripted;DD)Z]
  + Utf8 [(Lme/planetguy/advancedvm/Scripted;DDD)Z]
  + Utf8 [(Lme/planetguy/advancedvm/Scripted;DZ)V]
  + Utf8 [(Lme/planetguy/advancedvm/Scripted;Ljava/lang/Comparable;Ljava/lang/Comparable;)Z]
  + Utf8 [(Lme/planetguy/advancedvm/Scripted;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Lme/planetguy/advancedvm/Scripted;Ljava/lang/Object;)V]
  + Utf8 [(Lme/planetguy/advancedvm/Scripted;Ljava/lang/Object;Ljava/lang/Object;)Z]
  + Utf8 [(Lme/planetguy/advancedvm/Scripted;Lme/planetguy/advancedvm/Stream;)V]
  + Utf8 [(Lme/planetguy/advancedvm/Scripted;Z)Z]
  + Utf8 [(Lme/planetguy/advancedvm/Scripted;ZZ)Z]
  + Utf8 [(Lme/planetguy/advancedvm/Stream;)V]
  + Utf8 [*]
  + Utf8 [+]
  + Utf8 [-]
  + Utf8 [->]
  + Utf8 [->?]
  + Utf8 [/]
  + Utf8 [<]
  + Utf8 [<-?->]
  + Utf8 [<=]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [=]
  + Utf8 [==]
  + Utf8 [>]
  + Utf8 [>=]
  + Utf8 [Code]
  + Utf8 [D]
  + Utf8 [Lme/planetguy/advancedvm/ScriptAPI;]
  + Utf8 [PRECISION]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [abs]
  + Utf8 [add]
  + Utf8 [and]
  + Utf8 [compareTo]
  + Utf8 [div]
  + Utf8 [eq]
  + Utf8 [equals]
  + Utf8 [fuzzyeq]
  + Utf8 [getScript]
  + Utf8 [greater]
  + Utf8 [greatereq]
  + Utf8 [ident]
  + Utf8 [java/lang/Comparable]
  + Utf8 [java/lang/Math]
  + Utf8 [java/lang/Object]
  + Utf8 [jump]
  + Utf8 [jumpif]
  + Utf8 [less]
  + Utf8 [lesseq]
  + Utf8 [me/planetguy/advancedvm/ImperativeScript]
  + Utf8 [me/planetguy/advancedvm/Scripted]
  + Utf8 [me/planetguy/advancedvm/StackScript]
  + Utf8 [me/planetguy/advancedvm/StandardLibrary]
  + Utf8 [mult]
  + Utf8 [not]
  + Utf8 [noteq]
  + Utf8 [or]
  + Utf8 [print]
  + Utf8 [randint]
  + Utf8 [random]
  + Utf8 [setOutput]
  + Utf8 [setoutput]
  + Utf8 [sub]
  + Utf8 [value]
  + Utf8 [within]
  + Utf8 [|]
  + Utf8 [~=]

Fields (count = 1):
  + Field:        PRECISION D
    Access flags: 0x9
      = public static double PRECISION

Methods (count = 23):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 0, stack = 2):
      [0] ldc2_w #8
        + Double [0.01]
      [3] putstatic #10
        + Fieldref [me/planetguy/advancedvm/StandardLibrary.PRECISION D]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>()V
    Access flags: 0x1
      = public StandardLibrary()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #13
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       add(Lme/planetguy/advancedvm/Scripted;DD)D
    Access flags: 0x9
      = public static double add(me.planetguy.advancedvm.Scripted,double,double)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 4, locals = 5, stack = 4):
      [0] dload_1 v1
      [1] dload_3 v3
      [2] dadd
      [3] dreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [+]
  + Method:       sub(Lme/planetguy/advancedvm/Scripted;DD)D
    Access flags: 0x9
      = public static double sub(me.planetguy.advancedvm.Scripted,double,double)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 4, locals = 5, stack = 4):
      [0] dload_1 v1
      [1] dload_3 v3
      [2] dsub
      [3] dreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [-]
  + Method:       mult(Lme/planetguy/advancedvm/Scripted;DD)D
    Access flags: 0x9
      = public static double mult(me.planetguy.advancedvm.Scripted,double,double)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 4, locals = 5, stack = 4):
      [0] dload_1 v1
      [1] dload_3 v3
      [2] dmul
      [3] dreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [*]
  + Method:       div(Lme/planetguy/advancedvm/Scripted;DD)D
    Access flags: 0x9
      = public static double div(me.planetguy.advancedvm.Scripted,double,double)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 4, locals = 5, stack = 4):
      [0] dload_1 v1
      [1] dload_3 v3
      [2] ddiv
      [3] dreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [/]
  + Method:       print(Lme/planetguy/advancedvm/Scripted;Ljava/lang/Object;)V
    Access flags: 0x9
      = public static void print(me.planetguy.advancedvm.Scripted,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 8, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokeinterface #21
        + InterfaceMethodref [me/planetguy/advancedvm/Scripted.print (Ljava/lang/Object;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
  + Method:       jump(Lme/planetguy/advancedvm/Scripted;D)V
    Access flags: 0x9
      = public static void jump(me.planetguy.advancedvm.Scripted,double)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 15, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] invokeinterface #20
        + InterfaceMethodref [me/planetguy/advancedvm/Scripted.getScript ()Lme/planetguy/advancedvm/Script;]
      [6] checkcast #4
        + Class [me/planetguy/advancedvm/ImperativeScript]
      [9] dload_1 v1
      [10] d2i
      [11] invokevirtual #15
        + Methodref [me/planetguy/advancedvm/ImperativeScript.jump (I)V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [->]
  + Method:       jumpif(Lme/planetguy/advancedvm/Scripted;DZ)V
    Access flags: 0x9
      = public static void jumpif(me.planetguy.advancedvm.Scripted,double,boolean)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 10, locals = 4, stack = 3):
      [0] iload_3 v3
      [1] ifeq +8 (target=9)
      [4] aload_0 v0
      [5] dload_1 v1
      [6] invokestatic #18
        + Methodref [me/planetguy/advancedvm/StandardLibrary.jump (Lme/planetguy/advancedvm/Scripted;D)V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [9] Var: ..., Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [->?]
  + Method:       eq(Lme/planetguy/advancedvm/Scripted;Ljava/lang/Object;Ljava/lang/Object;)Z
    Access flags: 0x9
      = public static boolean eq(me.planetguy.advancedvm.Scripted,java.lang.Object,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 28, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] ifnonnull +11 (target=12)
      [4] aload_2 v2
      [5] ifnonnull +5 (target=10)
      [8] iconst_1
      [9] ireturn
      [10] iconst_0
      [11] ireturn
      [12] aload_2 v2
      [13] ifnull +13 (target=26)
      [16] aload_2 v2
      [17] aload_1 v1
      [18] invokevirtual #14
        + Methodref [java/lang/Object.equals (Ljava/lang/Object;)Z]
      [21] ifeq +5 (target=26)
      [24] iconst_1
      [25] ireturn
      [26] iconst_0
      [27] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [10] Var: ..., Stack: (empty)
        - [12] Var: ..., Stack: (empty)
        - [26] Var: ..., Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [==]
  + Method:       noteq(Lme/planetguy/advancedvm/Scripted;Ljava/lang/Object;Ljava/lang/Object;)Z
    Access flags: 0x9
      = public static boolean noteq(me.planetguy.advancedvm.Scripted,java.lang.Object,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 15, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_2 v2
      [3] invokestatic #17
        + Methodref [me/planetguy/advancedvm/StandardLibrary.eq (Lme/planetguy/advancedvm/Scripted;Ljava/lang/Object;Ljava/lang/Object;)Z]
      [6] ifeq +7 (target=13)
      [9] iconst_0
      [10] goto +4 (target=14)
      [13] iconst_1
      [14] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: ..., Stack: (empty)
        - [14] Var: ..., Stack: [i]
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [!=]
  + Method:       greater(Lme/planetguy/advancedvm/Scripted;Ljava/lang/Comparable;Ljava/lang/Comparable;)Z
    Access flags: 0x9
      = public static boolean greater(me.planetguy.advancedvm.Scripted,java.lang.Comparable,java.lang.Comparable)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 14, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] aload_2 v2
      [2] invokeinterface #19
        + InterfaceMethodref [java/lang/Comparable.compareTo (Ljava/lang/Object;)I]
      [7] ifle +5 (target=12)
      [10] iconst_1
      [11] ireturn
      [12] iconst_0
      [13] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [12] Var: ..., Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [>]
  + Method:       less(Lme/planetguy/advancedvm/Scripted;Ljava/lang/Comparable;Ljava/lang/Comparable;)Z
    Access flags: 0x9
      = public static boolean less(me.planetguy.advancedvm.Scripted,java.lang.Comparable,java.lang.Comparable)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 14, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] aload_2 v2
      [2] invokeinterface #19
        + InterfaceMethodref [java/lang/Comparable.compareTo (Ljava/lang/Object;)I]
      [7] ifge +5 (target=12)
      [10] iconst_1
      [11] ireturn
      [12] iconst_0
      [13] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [12] Var: ..., Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [<]
  + Method:       greatereq(Lme/planetguy/advancedvm/Scripted;Ljava/lang/Comparable;Ljava/lang/Comparable;)Z
    Access flags: 0x9
      = public static boolean greatereq(me.planetguy.advancedvm.Scripted,java.lang.Comparable,java.lang.Comparable)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 14, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] aload_2 v2
      [2] invokeinterface #19
        + InterfaceMethodref [java/lang/Comparable.compareTo (Ljava/lang/Object;)I]
      [7] iflt +5 (target=12)
      [10] iconst_1
      [11] ireturn
      [12] iconst_0
      [13] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [12] Var: ..., Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [>=]
  + Method:       lesseq(Lme/planetguy/advancedvm/Scripted;Ljava/lang/Comparable;Ljava/lang/Comparable;)Z
    Access flags: 0x9
      = public static boolean lesseq(me.planetguy.advancedvm.Scripted,java.lang.Comparable,java.lang.Comparable)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 14, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] aload_2 v2
      [2] invokeinterface #19
        + InterfaceMethodref [java/lang/Comparable.compareTo (Ljava/lang/Object;)I]
      [7] ifgt +5 (target=12)
      [10] iconst_1
      [11] ireturn
      [12] iconst_0
      [13] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [12] Var: ..., Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [<=]
  + Method:       within(Lme/planetguy/advancedvm/Scripted;DDD)Z
    Access flags: 0x9
      = public static boolean within(me.planetguy.advancedvm.Scripted,double,double,double)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 16, locals = 7, stack = 4):
      [0] dload_1 v1
      [1] dload_3 v3
      [2] dsub
      [3] invokestatic #11
        + Methodref [java/lang/Math.abs (D)D]
      [6] dload v5
      [8] dcmpg
      [9] ifge +5 (target=14)
      [12] iconst_1
      [13] ireturn
      [14] iconst_0
      [15] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [14] Var: ..., Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [<-?->]
  + Method:       fuzzyeq(Lme/planetguy/advancedvm/Scripted;DD)Z
    Access flags: 0x9
      = public static boolean fuzzyeq(me.planetguy.advancedvm.Scripted,double,double)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 17, locals = 5, stack = 4):
      [0] dload_1 v1
      [1] dload_3 v3
      [2] dsub
      [3] invokestatic #11
        + Methodref [java/lang/Math.abs (D)D]
      [6] getstatic #10
        + Fieldref [me/planetguy/advancedvm/StandardLibrary.PRECISION D]
      [9] dcmpg
      [10] ifge +5 (target=15)
      [13] iconst_1
      [14] ireturn
      [15] iconst_0
      [16] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [15] Var: ..., Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [~=]
  + Method:       and(Lme/planetguy/advancedvm/Scripted;ZZ)Z
    Access flags: 0x9
      = public static boolean and(me.planetguy.advancedvm.Scripted,boolean,boolean)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 12, locals = 3, stack = 1):
      [0] iload_1 v1
      [1] ifeq +9 (target=10)
      [4] iload_2 v2
      [5] ifeq +5 (target=10)
      [8] iconst_1
      [9] ireturn
      [10] iconst_0
      [11] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [10] Var: ..., Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [&]
  + Method:       or(Lme/planetguy/advancedvm/Scripted;ZZ)Z
    Access flags: 0x9
      = public static boolean or(me.planetguy.advancedvm.Scripted,boolean,boolean)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 12, locals = 3, stack = 1):
      [0] iload_1 v1
      [1] ifne +9 (target=10)
      [4] iload_2 v2
      [5] ifne +5 (target=10)
      [8] iconst_0
      [9] ireturn
      [10] iconst_1
      [11] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [10] Var: ..., Stack: (empty)
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [|]
  + Method:       not(Lme/planetguy/advancedvm/Scripted;Z)Z
    Access flags: 0x9
      = public static boolean not(me.planetguy.advancedvm.Scripted,boolean)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 10, locals = 2, stack = 1):
      [0] iload_1 v1
      [1] ifeq +7 (target=8)
      [4] iconst_0
      [5] goto +4 (target=9)
      [8] iconst_1
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [8] Var: ..., Stack: (empty)
        - [9] Var: ..., Stack: [i]
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [!]
  + Method:       ident(Lme/planetguy/advancedvm/Scripted;Ljava/lang/Object;)Ljava/lang/Object;
    Access flags: 0x9
      = public static java.lang.Object ident(me.planetguy.advancedvm.Scripted,java.lang.Object)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 2, locals = 2, stack = 1):
      [0] aload_1 v1
      [1] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
        - Constant element value [value '115']
          + Utf8 [=]
  + Method:       setoutput(Lme/planetguy/advancedvm/Scripted;Lme/planetguy/advancedvm/Stream;)V
    Access flags: 0x9
      = public static void setoutput(me.planetguy.advancedvm.Scripted,me.planetguy.advancedvm.Stream)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 14, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokeinterface #20
        + InterfaceMethodref [me/planetguy/advancedvm/Scripted.getScript ()Lme/planetguy/advancedvm/Script;]
      [6] checkcast #6
        + Class [me/planetguy/advancedvm/StackScript]
      [9] aload_1 v1
      [10] invokevirtual #16
        + Methodref [me/planetguy/advancedvm/StackScript.setOutput (Lme/planetguy/advancedvm/Stream;)V]
      [13] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:
  + Method:       randint(Lme/planetguy/advancedvm/Scripted;DD)D
    Access flags: 0x9
      = public static double randint(me.planetguy.advancedvm.Scripted,double,double)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 14, locals = 5, stack = 8):
      [0] dload_1 v1
      [1] invokestatic #12
        + Methodref [java/lang/Math.random ()D]
      [4] dload_3 v3
      [5] dconst_1
      [6] dadd
      [7] dload_1 v1
      [8] dsub
      [9] dmul
      [10] dadd
      [11] d2i
      [12] i2d
      [13] dreturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/Stream
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x601
    = public interface me.planetguy.advancedvm.Stream extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 7):
  + Class [java/lang/Object]
  + Class [me/planetguy/advancedvm/Stream]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/advancedvm/Stream]
  + Utf8 [write]

Fields (count = 0):

Methods (count = 1):
  + Method:       write(Ljava/lang/Object;)V
    Access flags: 0x401
      = public abstract void write(java.lang.Object)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/TransformerInlineConstants
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.advancedvm.TransformerInlineConstants extends java.lang.Object

Interfaces (count = 1):
  + Class [me/planetguy/advancedvm/ScriptTransformer]

Constant Pool (count = 110):
  + String []
  + String [ ]
  + String [false]
  + String [lit ]
  + String [true]
  + Class [[Ljava/lang/String;]
  + Class [java/lang/Double]
  + Class [java/lang/NumberFormatException]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/StringBuilder]
  + Class [java/util/ArrayList]
  + Class [java/util/Arrays]
  + Class [java/util/HashSet]
  + Class [java/util/Set]
  + Class [me/planetguy/advancedvm/ScriptTransformer]
  + Class [me/planetguy/advancedvm/TransformerInlineConstants]
  + Methodref [java/lang/Double.parseDouble (Ljava/lang/String;)D]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/String.charAt (I)C]
  + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/String.length ()I]
  + Methodref [java/lang/String.split (Ljava/lang/String;)[Ljava/lang/String;]
  + Methodref [java/lang/String.substring (I)Ljava/lang/String;]
  + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/ArrayList.<init> (Ljava/util/Collection;)V]
  + Methodref [java/util/ArrayList.add (ILjava/lang/Object;)V]
  + Methodref [java/util/ArrayList.get (I)Ljava/lang/Object;]
  + Methodref [java/util/ArrayList.size ()I]
  + Methodref [java/util/ArrayList.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;]
  + Methodref [java/util/Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;]
  + Methodref [java/util/HashSet.<init> ()V]
  + Methodref [me/planetguy/advancedvm/TransformerInlineConstants.isLiteral (Ljava/lang/String;)Z]
  + InterfaceMethodref [java/util/Set.add (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Set.contains (Ljava/lang/Object;)Z]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (Ljava/util/Collection;)V]
  + NameAndType [add (ILjava/lang/Object;)V]
  + NameAndType [add (Ljava/lang/Object;)Z]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [asList ([Ljava/lang/Object;)Ljava/util/List;]
  + NameAndType [charAt (I)C]
  + NameAndType [contains (Ljava/lang/Object;)Z]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [get (I)Ljava/lang/Object;]
  + NameAndType [isLiteral (Ljava/lang/String;)Z]
  + NameAndType [length ()I]
  + NameAndType [parseDouble (Ljava/lang/String;)D]
  + NameAndType [size ()I]
  + NameAndType [split (Ljava/lang/String;)[Ljava/lang/String;]
  + NameAndType [substring (I)Ljava/lang/String;]
  + NameAndType [toArray ([Ljava/lang/Object;)[Ljava/lang/Object;]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 []
  + Utf8 [ ]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(I)C]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(I)Ljava/lang/String;]
  + Utf8 [(ILjava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)D]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;)Z]
  + Utf8 [(Ljava/lang/String;)[Ljava/lang/String;]
  + Utf8 [(Ljava/util/Collection;)V]
  + Utf8 [([Ljava/lang/Object;)Ljava/util/List;]
  + Utf8 [([Ljava/lang/Object;)[Ljava/lang/Object;]
  + Utf8 [([Ljava/lang/String;)[Ljava/lang/String;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/String;]
  + Utf8 [add]
  + Utf8 [append]
  + Utf8 [asList]
  + Utf8 [charAt]
  + Utf8 [contains]
  + Utf8 [equals]
  + Utf8 [false]
  + Utf8 [get]
  + Utf8 [isLiteral]
  + Utf8 [java/lang/Double]
  + Utf8 [java/lang/NumberFormatException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/ArrayList]
  + Utf8 [java/util/Arrays]
  + Utf8 [java/util/HashSet]
  + Utf8 [java/util/Set]
  + Utf8 [length]
  + Utf8 [lit ]
  + Utf8 [me/planetguy/advancedvm/ScriptTransformer]
  + Utf8 [me/planetguy/advancedvm/TransformerInlineConstants]
  + Utf8 [parseDouble]
  + Utf8 [size]
  + Utf8 [split]
  + Utf8 [substring]
  + Utf8 [toArray]
  + Utf8 [toString]
  + Utf8 [transform]
  + Utf8 [true]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x1
      = public TransformerInlineConstants()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #19
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       transform([Ljava/lang/String;)[Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String[] transform(java.lang.String[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 218, locals = 10, stack = 5):
      [0] new #14
        + Class [java/util/HashSet]
      [3] dup
      [4] invokespecial #34
        + Methodref [java/util/HashSet.<init> ()V]
      [7] astore_2 v2
      [8] new #12
        + Class [java/util/ArrayList]
      [11] dup
      [12] aload_1 v1
      [13] invokestatic #33
        + Methodref [java/util/Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;]
      [16] invokespecial #28
        + Methodref [java/util/ArrayList.<init> (Ljava/util/Collection;)V]
      [19] astore_3 v3
      [20] iconst_0
      [21] istore v4
      [23] goto +174 (target=197)
      [26] aload_3 v3
      [27] iload v4
      [29] invokevirtual #30
        + Methodref [java/util/ArrayList.get (I)Ljava/lang/Object;]
      [32] checkcast #10
        + Class [java/lang/String]
      [35] ldc #2
        + String [ ]
      [37] invokevirtual #23
        + Methodref [java/lang/String.split (Ljava/lang/String;)[Ljava/lang/String;]
      [40] astore v5
      [42] aload v5
      [44] dup
      [45] astore v9
      [47] arraylength
      [48] istore v8
      [50] iconst_0
      [51] istore v7
      [53] goto +134 (target=187)
      [56] aload v9
      [58] iload v7
      [60] aaload
      [61] astore v6
      [63] aload_0 v0
      [64] aload v6
      [66] invokespecial #35
        + Methodref [me/planetguy/advancedvm/TransformerInlineConstants.isLiteral (Ljava/lang/String;)Z]
      [69] ifeq +115 (target=184)
      [72] aload_2 v2
      [73] aload v6
      [75] invokeinterface #37
        + InterfaceMethodref [java/util/Set.contains (Ljava/lang/Object;)Z]
      [80] ifne +104 (target=184)
      [83] aload v6
      [85] ldc #1
        + String []
      [87] invokevirtual #21
        + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
      [90] ifne +94 (target=184)
      [93] aload_2 v2
      [94] aload v6
      [96] invokeinterface #36
        + InterfaceMethodref [java/util/Set.add (Ljava/lang/Object;)Z]
      [101] pop
      [102] aload v6
      [104] iconst_0
      [105] invokevirtual #20
        + Methodref [java/lang/String.charAt (I)C]
      [108] bipush 39
      [110] ificmpne +42 (target=152)
      [113] aload_3 v3
      [114] iconst_0
      [115] new #11
        + Class [java/lang/StringBuilder]
      [118] dup
      [119] ldc #4
        + String [lit ]
      [121] invokespecial #25
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [124] aload v6
      [126] invokevirtual #26
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [129] ldc #2
        + String [ ]
      [131] invokevirtual #26
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [134] aload v6
      [136] iconst_1
      [137] invokevirtual #24
        + Methodref [java/lang/String.substring (I)Ljava/lang/String;]
      [140] invokevirtual #26
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [143] invokevirtual #27
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [146] invokevirtual #29
        + Methodref [java/util/ArrayList.add (ILjava/lang/Object;)V]
      [149] goto +35 (target=184)
      [152] aload_3 v3
      [153] iconst_0
      [154] new #11
        + Class [java/lang/StringBuilder]
      [157] dup
      [158] ldc #4
        + String [lit ]
      [160] invokespecial #25
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [163] aload v6
      [165] invokevirtual #26
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [168] ldc #2
        + String [ ]
      [170] invokevirtual #26
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [173] aload v6
      [175] invokevirtual #26
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [178] invokevirtual #27
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [181] invokevirtual #29
        + Methodref [java/util/ArrayList.add (ILjava/lang/Object;)V]
      [184] iinc v7, 1
      [187] iload v7
      [189] iload v8
      [191] ificmplt -135 (target=56)
      [194] iinc v4, 1
      [197] iload v4
      [199] aload_3 v3
      [200] invokevirtual #31
        + Methodref [java/util/ArrayList.size ()I]
      [203] ificmplt -177 (target=26)
      [206] aload_3 v3
      [207] iconst_0
      [208] anewarray #10
        + Class [java/lang/String]
      [211] invokevirtual #32
        + Methodref [java/util/ArrayList.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;]
      [214] checkcast #6
        + Class [[Ljava/lang/String;]
      [217] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [26] Var: ...[a:java/util/Set][a:java/util/ArrayList][i], Stack: (empty)
        - [56] Var: [a:me/planetguy/advancedvm/TransformerInlineConstants][a:[Ljava/lang/String;][a:java/util/Set][a:java/util/ArrayList][i][a:[Ljava/lang/String;][T][i][i][a:[Ljava/lang/String;], Stack: 
        - [152] Var: [a:me/planetguy/advancedvm/TransformerInlineConstants][a:[Ljava/lang/String;][a:java/util/Set][a:java/util/ArrayList][i][a:[Ljava/lang/String;][a:java/lang/String][i][i][a:[Ljava/lang/String;], Stack: 
        - [184] Var: [a:me/planetguy/advancedvm/TransformerInlineConstants][a:[Ljava/lang/String;][a:java/util/Set][a:java/util/ArrayList][i][a:[Ljava/lang/String;][T][i][i][a:[Ljava/lang/String;], Stack: 
        - [187] Var: ..., Stack: (empty)
        - [197] Var: [a:me/planetguy/advancedvm/TransformerInlineConstants][a:[Ljava/lang/String;][a:java/util/Set][a:java/util/ArrayList][i], Stack: 
  + Method:       isLiteral(Ljava/lang/String;)Z
    Access flags: 0x2
      = private boolean isLiteral(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 47, locals = 3, stack = 2):
      [0] aload_1 v1
      [1] invokestatic #18
        + Methodref [java/lang/Double.parseDouble (Ljava/lang/String;)D]
      [4] pop2
      [5] iconst_1
      [6] ireturn
      [7] astore_2 v2
      [8] aload_1 v1
      [9] ldc #5
        + String [true]
      [11] invokevirtual #21
        + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
      [14] ifne +31 (target=45)
      [17] aload_1 v1
      [18] ldc #3
        + String [false]
      [20] invokevirtual #21
        + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
      [23] ifne +22 (target=45)
      [26] aload_1 v1
      [27] invokevirtual #22
        + Methodref [java/lang/String.length ()I]
      [30] ifeq +13 (target=43)
      [33] aload_1 v1
      [34] iconst_0
      [35] invokevirtual #20
        + Methodref [java/lang/String.charAt (I)C]
      [38] bipush 39
      [40] ificmpeq +5 (target=45)
      [43] iconst_0
      [44] ireturn
      [45] iconst_1
      [46] ireturn
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 5: 7):
      + Class [java/lang/NumberFormatException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [7] Var: ..., Stack: [a:java/lang/NumberFormatException]
        - [43] Var: ..., Stack: (empty)
        - [45] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/TransformerStructuredProgramming
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.advancedvm.TransformerStructuredProgramming extends java.lang.Object

Interfaces (count = 1):
  + Class [me/planetguy/advancedvm/ScriptTransformer]

Constant Pool (count = 46):
  + String [ ]
  + String [end]
  + String [while]
  + Class [[Ljava/lang/String;]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/util/ArrayList]
  + Class [java/util/Random]
  + Class [me/planetguy/advancedvm/ScriptTransformer]
  + Class [me/planetguy/advancedvm/TransformerStructuredProgramming]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/String.split (Ljava/lang/String;)[Ljava/lang/String;]
  + Methodref [java/util/ArrayList.<init> ()V]
  + Methodref [java/util/ArrayList.add (Ljava/lang/Object;)Z]
  + Methodref [java/util/ArrayList.toArray ()[Ljava/lang/Object;]
  + Methodref [java/util/Random.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [add (Ljava/lang/Object;)Z]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [split (Ljava/lang/String;)[Ljava/lang/String;]
  + NameAndType [toArray ()[Ljava/lang/Object;]
  + Utf8 [ ]
  + Utf8 [()V]
  + Utf8 [()[Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)[Ljava/lang/String;]
  + Utf8 [([Ljava/lang/String;)[Ljava/lang/String;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/String;]
  + Utf8 [add]
  + Utf8 [end]
  + Utf8 [equals]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/util/ArrayList]
  + Utf8 [java/util/Random]
  + Utf8 [me/planetguy/advancedvm/ScriptTransformer]
  + Utf8 [me/planetguy/advancedvm/TransformerStructuredProgramming]
  + Utf8 [split]
  + Utf8 [toArray]
  + Utf8 [transform]
  + Utf8 [while]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>()V
    Access flags: 0x1
      = public TransformerStructuredProgramming()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #11
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       transform([Ljava/lang/String;)[Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String[] transform(java.lang.String[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 94, locals = 9, stack = 2):
      [0] new #7
        + Class [java/util/ArrayList]
      [3] dup
      [4] invokespecial #14
        + Methodref [java/util/ArrayList.<init> ()V]
      [7] astore_2 v2
      [8] new #8
        + Class [java/util/Random]
      [11] dup
      [12] invokespecial #17
        + Methodref [java/util/Random.<init> ()V]
      [15] astore_3 v3
      [16] aload_1 v1
      [17] dup
      [18] astore v7
      [20] arraylength
      [21] istore v6
      [23] iconst_0
      [24] istore v5
      [26] goto +53 (target=79)
      [29] aload v7
      [31] iload v5
      [33] aaload
      [34] astore v4
      [36] aload v4
      [38] ldc #1
        + String [ ]
      [40] invokevirtual #13
        + Methodref [java/lang/String.split (Ljava/lang/String;)[Ljava/lang/String;]
      [43] astore v8
      [45] aload v8
      [47] iconst_0
      [48] aaload
      [49] ldc #3
        + String [while]
      [51] invokevirtual #12
        + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
      [54] ifne +22 (target=76)
      [57] aload v8
      [59] iconst_0
      [60] aaload
      [61] ldc #2
        + String [end]
      [63] invokevirtual #12
        + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
      [66] ifne +10 (target=76)
      [69] aload_2 v2
      [70] aload v4
      [72] invokevirtual #15
        + Methodref [java/util/ArrayList.add (Ljava/lang/Object;)Z]
      [75] pop
      [76] iinc v5, 1
      [79] iload v5
      [81] iload v6
      [83] ificmplt -54 (target=29)
      [86] aload_2 v2
      [87] invokevirtual #16
        + Methodref [java/util/ArrayList.toArray ()[Ljava/lang/Object;]
      [90] checkcast #4
        + Class [[Ljava/lang/String;]
      [93] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [29] Var: [a:me/planetguy/advancedvm/TransformerStructuredProgramming][a:[Ljava/lang/String;][a:java/util/ArrayList][a:java/util/Random][T][i][i][a:[Ljava/lang/String;], Stack: 
        - [76] Var: ..., Stack: (empty)
        - [79] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/advancedvm/VMContext
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.advancedvm.VMContext extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 365):
  + String []
  + String [
]
  + String [ ]
  + String [.]
  + String [Compiling ]
  + String [__NULL__]
  + String [false]
  + String [label]
  + String [lit]
  + String [method.]
  + String [script@]
  + String [true]
  + Class [[Ljava/lang/Object;]
  + Class [[Ljava/lang/String;]
  + Class [[Ljava/lang/reflect/Method;]
  + Class [[Lme/planetguy/advancedvm/IBox;]
  + Class [[[Lme/planetguy/advancedvm/IBox;]
  + Class [java/io/PrintStream]
  + Class [java/lang/Boolean]
  + Class [java/lang/Class]
  + Class [java/lang/Double]
  + Class [java/lang/Integer]
  + Class [java/lang/NumberFormatException]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/System]
  + Class [java/lang/reflect/Constructor]
  + Class [java/lang/reflect/Method]
  + Class [java/lang/reflect/Modifier]
  + Class [java/util/ArrayList]
  + Class [java/util/Arrays]
  + Class [java/util/HashMap]
  + Class [java/util/Iterator]
  + Class [java/util/LinkedList]
  + Class [java/util/List]
  + Class [java/util/Map]
  + Class [java/util/Set]
  + Class [me/planetguy/advancedvm/Box]
  + Class [me/planetguy/advancedvm/FieldBox]
  + Class [me/planetguy/advancedvm/IBox]
  + Class [me/planetguy/advancedvm/ImmutableBox]
  + Class [me/planetguy/advancedvm/ImperativeScript]
  + Class [me/planetguy/advancedvm/Inline]
  + Class [me/planetguy/advancedvm/NullBox]
  + Class [me/planetguy/advancedvm/Script]
  + Class [me/planetguy/advancedvm/ScriptAPI]
  + Class [me/planetguy/advancedvm/ScriptCreatedBox]
  + Class [me/planetguy/advancedvm/ScriptTransformer]
  + Class [me/planetguy/advancedvm/Scripted]
  + Class [me/planetguy/advancedvm/StandardLibrary]
  + Class [me/planetguy/advancedvm/TransformerInlineConstants]
  + Class [me/planetguy/advancedvm/VMContext]
  + Fieldref [java/lang/System.out Ljava/io/PrintStream;]
  + Fieldref [me/planetguy/advancedvm/NullBox.instance Lme/planetguy/advancedvm/NullBox;]
  + Fieldref [me/planetguy/advancedvm/VMContext.inlines Ljava/util/Map;]
  + Fieldref [me/planetguy/advancedvm/VMContext.literals Ljava/util/Map;]
  + Fieldref [me/planetguy/advancedvm/VMContext.methodMap Ljava/util/Map;]
  + Fieldref [me/planetguy/advancedvm/VMContext.root Lme/planetguy/advancedvm/VMContext;]
  + Fieldref [me/planetguy/advancedvm/VMContext.scriptClass Ljava/lang/Class;]
  + Fieldref [me/planetguy/advancedvm/VMContext.transformers Ljava/util/ArrayList;]
  + Methodref [java/io/PrintStream.println (Ljava/lang/String;)V]
  + Methodref [java/lang/Boolean.valueOf (Z)Ljava/lang/Boolean;]
  + Methodref [java/lang/Class.getConstructor ([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;]
  + Methodref [java/lang/Class.getDeclaredMethods ()[Ljava/lang/reflect/Method;]
  + Methodref [java/lang/Double.parseDouble (Ljava/lang/String;)D]
  + Methodref [java/lang/Double.valueOf (D)Ljava/lang/Double;]
  + Methodref [java/lang/Integer.valueOf (I)Ljava/lang/Integer;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/String.split (Ljava/lang/String;)[Ljava/lang/String;]
  + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
  + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/lang/reflect/Constructor.newInstance ([Ljava/lang/Object;)Ljava/lang/Object;]
  + Methodref [java/lang/reflect/Method.getAnnotation (Ljava/lang/Class;)Ljava/lang/annotation/Annotation;]
  + Methodref [java/lang/reflect/Method.getModifiers ()I]
  + Methodref [java/lang/reflect/Method.getName ()Ljava/lang/String;]
  + Methodref [java/lang/reflect/Modifier.isStatic (I)Z]
  + Methodref [java/util/ArrayList.<init> ()V]
  + Methodref [java/util/ArrayList.<init> (Ljava/util/Collection;)V]
  + Methodref [java/util/ArrayList.add (Ljava/lang/Object;)Z]
  + Methodref [java/util/ArrayList.iterator ()Ljava/util/Iterator;]
  + Methodref [java/util/ArrayList.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;]
  + Methodref [java/util/Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;]
  + Methodref [java/util/HashMap.<init> ()V]
  + Methodref [java/util/HashMap.<init> (Ljava/util/Map;)V]
  + Methodref [java/util/LinkedList.<init> ()V]
  + Methodref [java/util/LinkedList.addAll (Ljava/util/Collection;)Z]
  + Methodref [java/util/LinkedList.addFirst (Ljava/lang/Object;)V]
  + Methodref [java/util/LinkedList.getFirst ()Ljava/lang/Object;]
  + Methodref [java/util/LinkedList.isEmpty ()Z]
  + Methodref [java/util/LinkedList.removeFirst ()Ljava/lang/Object;]
  + Methodref [me/planetguy/advancedvm/Box.<init> ()V]
  + Methodref [me/planetguy/advancedvm/Box.<init> (Ljava/lang/Object;)V]
  + Methodref [me/planetguy/advancedvm/Box.register (Ljava/lang/Object;Ljava/lang/String;)V]
  + Methodref [me/planetguy/advancedvm/FieldBox.<init> (Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V]
  + Methodref [me/planetguy/advancedvm/ImmutableBox.<init> (Ljava/lang/Object;)V]
  + Methodref [me/planetguy/advancedvm/ScriptCreatedBox.<init> ()V]
  + Methodref [me/planetguy/advancedvm/TransformerInlineConstants.<init> ()V]
  + Methodref [me/planetguy/advancedvm/VMContext.<init> ()V]
  + Methodref [me/planetguy/advancedvm/VMContext.box (Ljava/lang/String;Ljava/util/Map;)Lme/planetguy/advancedvm/IBox;]
  + Methodref [me/planetguy/advancedvm/VMContext.boxUsedVar (Ljava/lang/String;Ljava/util/Map;)Lme/planetguy/advancedvm/IBox;]
  + Methodref [me/planetguy/advancedvm/VMContext.parseLit ([Ljava/lang/String;)Ljava/lang/Object;]
  + Methodref [me/planetguy/advancedvm/VMContext.parseSingleLit (Ljava/lang/String;)Ljava/lang/Object;]
  + Methodref [me/planetguy/advancedvm/VMContext.registerClass (Ljava/lang/Class;)V]
  + Methodref [me/planetguy/advancedvm/VMContext.registerClass (Ljava/lang/Class;Ljava/lang/String;)V]
  + Methodref [me/planetguy/advancedvm/VMContext.registerInline (Lme/planetguy/advancedvm/Inline;Ljava/lang/String;)V]
  + Methodref [me/planetguy/advancedvm/VMContext.registerLiteral (Ljava/lang/String;Lme/planetguy/advancedvm/IBox;)V]
  + Methodref [me/planetguy/advancedvm/VMContext.registerMethod (Ljava/lang/String;Ljava/lang/reflect/Method;)V]
  + Methodref [me/planetguy/advancedvm/VMContext.registerScriptTransformer (Lme/planetguy/advancedvm/ScriptTransformer;)V]
  + Methodref [me/planetguy/advancedvm/VMContext.setScriptClass (Ljava/lang/Class;)V]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/List.get (I)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/List.size ()I]
  + InterfaceMethodref [java/util/Map.containsKey (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Map.keySet ()Ljava/util/Set;]
  + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
  + InterfaceMethodref [me/planetguy/advancedvm/IBox.set (Ljava/lang/Object;)V]
  + InterfaceMethodref [me/planetguy/advancedvm/Inline.name ()Ljava/lang/String;]
  + InterfaceMethodref [me/planetguy/advancedvm/Inline.replace ([Ljava/lang/String;)Ljava/util/List;]
  + InterfaceMethodref [me/planetguy/advancedvm/ScriptAPI.value ()Ljava/lang/String;]
  + InterfaceMethodref [me/planetguy/advancedvm/ScriptTransformer.transform ([Ljava/lang/String;)[Ljava/lang/String;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/Object;)V]
  + NameAndType [<init> (Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (Ljava/util/Collection;)V]
  + NameAndType [<init> (Ljava/util/Map;)V]
  + NameAndType [add (Ljava/lang/Object;)Z]
  + NameAndType [addAll (Ljava/util/Collection;)Z]
  + NameAndType [addFirst (Ljava/lang/Object;)V]
  + NameAndType [append (I)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [asList ([Ljava/lang/Object;)Ljava/util/List;]
  + NameAndType [box (Ljava/lang/String;Ljava/util/Map;)Lme/planetguy/advancedvm/IBox;]
  + NameAndType [boxUsedVar (Ljava/lang/String;Ljava/util/Map;)Lme/planetguy/advancedvm/IBox;]
  + NameAndType [containsKey (Ljava/lang/Object;)Z]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [get (I)Ljava/lang/Object;]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [getAnnotation (Ljava/lang/Class;)Ljava/lang/annotation/Annotation;]
  + NameAndType [getConstructor ([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;]
  + NameAndType [getDeclaredMethods ()[Ljava/lang/reflect/Method;]
  + NameAndType [getFirst ()Ljava/lang/Object;]
  + NameAndType [getModifiers ()I]
  + NameAndType [getName ()Ljava/lang/String;]
  + NameAndType [hasNext ()Z]
  + NameAndType [inlines Ljava/util/Map;]
  + NameAndType [instance Lme/planetguy/advancedvm/NullBox;]
  + NameAndType [isEmpty ()Z]
  + NameAndType [isStatic (I)Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [keySet ()Ljava/util/Set;]
  + NameAndType [literals Ljava/util/Map;]
  + NameAndType [methodMap Ljava/util/Map;]
  + NameAndType [name ()Ljava/lang/String;]
  + NameAndType [newInstance ([Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [out Ljava/io/PrintStream;]
  + NameAndType [parseDouble (Ljava/lang/String;)D]
  + NameAndType [parseLit ([Ljava/lang/String;)Ljava/lang/Object;]
  + NameAndType [parseSingleLit (Ljava/lang/String;)Ljava/lang/Object;]
  + NameAndType [println (Ljava/lang/String;)V]
  + NameAndType [put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [register (Ljava/lang/Object;Ljava/lang/String;)V]
  + NameAndType [registerClass (Ljava/lang/Class;)V]
  + NameAndType [registerClass (Ljava/lang/Class;Ljava/lang/String;)V]
  + NameAndType [registerInline (Lme/planetguy/advancedvm/Inline;Ljava/lang/String;)V]
  + NameAndType [registerLiteral (Ljava/lang/String;Lme/planetguy/advancedvm/IBox;)V]
  + NameAndType [registerMethod (Ljava/lang/String;Ljava/lang/reflect/Method;)V]
  + NameAndType [registerScriptTransformer (Lme/planetguy/advancedvm/ScriptTransformer;)V]
  + NameAndType [removeFirst ()Ljava/lang/Object;]
  + NameAndType [replace ([Ljava/lang/String;)Ljava/util/List;]
  + NameAndType [root Lme/planetguy/advancedvm/VMContext;]
  + NameAndType [scriptClass Ljava/lang/Class;]
  + NameAndType [set (Ljava/lang/Object;)V]
  + NameAndType [setScriptClass (Ljava/lang/Class;)V]
  + NameAndType [size ()I]
  + NameAndType [split (Ljava/lang/String;)[Ljava/lang/String;]
  + NameAndType [toArray ([Ljava/lang/Object;)[Ljava/lang/Object;]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [transform ([Ljava/lang/String;)[Ljava/lang/String;]
  + NameAndType [transformers Ljava/util/ArrayList;]
  + NameAndType [value ()Ljava/lang/String;]
  + NameAndType [valueOf (D)Ljava/lang/Double;]
  + NameAndType [valueOf (I)Ljava/lang/Integer;]
  + NameAndType [valueOf (Ljava/lang/Object;)Ljava/lang/String;]
  + NameAndType [valueOf (Z)Ljava/lang/Boolean;]
  + Utf8 []
  + Utf8 [
]
  + Utf8 [ ]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Ljava/util/Set;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [()[Ljava/lang/reflect/Method;]
  + Utf8 [(D)Ljava/lang/Double;]
  + Utf8 [(I)Ljava/lang/Integer;]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(I)Ljava/lang/StringBuilder;]
  + Utf8 [(I)Z]
  + Utf8 [(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;]
  + Utf8 [(Ljava/lang/Class;)V]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V]
  + Utf8 [(Ljava/lang/String;)D]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;)[Ljava/lang/String;]
  + Utf8 [(Ljava/lang/String;Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V]
  + Utf8 [(Ljava/lang/String;Ljava/lang/reflect/Method;)V]
  + Utf8 [(Ljava/lang/String;Ljava/util/Map;)Lme/planetguy/advancedvm/IBox;]
  + Utf8 [(Ljava/lang/String;Lme/planetguy/advancedvm/IBox;)V]
  + Utf8 [(Ljava/lang/String;Lme/planetguy/advancedvm/Scripted;)Lme/planetguy/advancedvm/Script;]
  + Utf8 [(Ljava/util/Collection;)V]
  + Utf8 [(Ljava/util/Collection;)Z]
  + Utf8 [(Ljava/util/Map;)V]
  + Utf8 [(Lme/planetguy/advancedvm/Inline;)V]
  + Utf8 [(Lme/planetguy/advancedvm/Inline;Ljava/lang/String;)V]
  + Utf8 [(Lme/planetguy/advancedvm/ScriptTransformer;)V]
  + Utf8 [(Lme/planetguy/advancedvm/VMContext;)V]
  + Utf8 [(Z)Ljava/lang/Boolean;]
  + Utf8 [([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;]
  + Utf8 [([Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [([Ljava/lang/Object;)Ljava/util/List;]
  + Utf8 [([Ljava/lang/Object;)[Ljava/lang/Object;]
  + Utf8 [([Ljava/lang/String;)Ljava/lang/Object;]
  + Utf8 [([Ljava/lang/String;)Ljava/util/List;]
  + Utf8 [([Ljava/lang/String;)[Ljava/lang/String;]
  + Utf8 [.]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Compiling ]
  + Utf8 [Ljava/io/PrintStream;]
  + Utf8 [Ljava/lang/Class;]
  + Utf8 [Ljava/util/ArrayList;]
  + Utf8 [Ljava/util/Map;]
  + Utf8 [Lme/planetguy/advancedvm/NullBox;]
  + Utf8 [Lme/planetguy/advancedvm/VMContext;]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/Object;]
  + Utf8 [[Ljava/lang/String;]
  + Utf8 [[Ljava/lang/reflect/Method;]
  + Utf8 [[Lme/planetguy/advancedvm/IBox;]
  + Utf8 [[[Lme/planetguy/advancedvm/IBox;]
  + Utf8 [__NULL__]
  + Utf8 [add]
  + Utf8 [addAll]
  + Utf8 [addFirst]
  + Utf8 [append]
  + Utf8 [asList]
  + Utf8 [box]
  + Utf8 [boxUsedVar]
  + Utf8 [compile]
  + Utf8 [containsKey]
  + Utf8 [equals]
  + Utf8 [false]
  + Utf8 [get]
  + Utf8 [getAnnotation]
  + Utf8 [getConstructor]
  + Utf8 [getDeclaredMethods]
  + Utf8 [getFirst]
  + Utf8 [getModifiers]
  + Utf8 [getName]
  + Utf8 [hasNext]
  + Utf8 [inlines]
  + Utf8 [instance]
  + Utf8 [isEmpty]
  + Utf8 [isStatic]
  + Utf8 [iterator]
  + Utf8 [java/io/PrintStream]
  + Utf8 [java/lang/Boolean]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Double]
  + Utf8 [java/lang/Integer]
  + Utf8 [java/lang/NumberFormatException]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/System]
  + Utf8 [java/lang/reflect/Constructor]
  + Utf8 [java/lang/reflect/Method]
  + Utf8 [java/lang/reflect/Modifier]
  + Utf8 [java/util/ArrayList]
  + Utf8 [java/util/Arrays]
  + Utf8 [java/util/HashMap]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/LinkedList]
  + Utf8 [java/util/List]
  + Utf8 [java/util/Map]
  + Utf8 [java/util/Set]
  + Utf8 [keySet]
  + Utf8 [label]
  + Utf8 [lit]
  + Utf8 [literals]
  + Utf8 [me/planetguy/advancedvm/Box]
  + Utf8 [me/planetguy/advancedvm/FieldBox]
  + Utf8 [me/planetguy/advancedvm/IBox]
  + Utf8 [me/planetguy/advancedvm/ImmutableBox]
  + Utf8 [me/planetguy/advancedvm/ImperativeScript]
  + Utf8 [me/planetguy/advancedvm/Inline]
  + Utf8 [me/planetguy/advancedvm/NullBox]
  + Utf8 [me/planetguy/advancedvm/Script]
  + Utf8 [me/planetguy/advancedvm/ScriptAPI]
  + Utf8 [me/planetguy/advancedvm/ScriptCreatedBox]
  + Utf8 [me/planetguy/advancedvm/ScriptTransformer]
  + Utf8 [me/planetguy/advancedvm/Scripted]
  + Utf8 [me/planetguy/advancedvm/StandardLibrary]
  + Utf8 [me/planetguy/advancedvm/TransformerInlineConstants]
  + Utf8 [me/planetguy/advancedvm/VMContext]
  + Utf8 [method.]
  + Utf8 [methodMap]
  + Utf8 [name]
  + Utf8 [newInstance]
  + Utf8 [next]
  + Utf8 [out]
  + Utf8 [parseDouble]
  + Utf8 [parseLit]
  + Utf8 [parseSingleLit]
  + Utf8 [println]
  + Utf8 [put]
  + Utf8 [register]
  + Utf8 [registerClass]
  + Utf8 [registerFieldBox]
  + Utf8 [registerFinalObj]
  + Utf8 [registerInline]
  + Utf8 [registerLitObj]
  + Utf8 [registerLiteral]
  + Utf8 [registerMethod]
  + Utf8 [registerScriptTransformer]
  + Utf8 [removeFirst]
  + Utf8 [replace]
  + Utf8 [root]
  + Utf8 [script@]
  + Utf8 [scriptClass]
  + Utf8 [set]
  + Utf8 [setScriptClass]
  + Utf8 [size]
  + Utf8 [split]
  + Utf8 [toArray]
  + Utf8 [toString]
  + Utf8 [transform]
  + Utf8 [transformers]
  + Utf8 [true]
  + Utf8 [value]
  + Utf8 [valueOf]

Fields (count = 6):
  + Field:        root Lme/planetguy/advancedvm/VMContext;
    Access flags: 0x9
      = public static me.planetguy.advancedvm.VMContext root
  + Field:        methodMap Ljava/util/Map;
    Access flags: 0x2
      = private java.util.Map methodMap
  + Field:        inlines Ljava/util/Map;
    Access flags: 0x2
      = private java.util.Map inlines
  + Field:        transformers Ljava/util/ArrayList;
    Access flags: 0x2
      = private java.util.ArrayList transformers
  + Field:        literals Ljava/util/Map;
    Access flags: 0x2
      = private java.util.Map literals
  + Field:        scriptClass Ljava/lang/Class;
    Access flags: 0x2
      = private java.lang.Class scriptClass

Methods (count = 19):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 40, locals = 0, stack = 3):
      [0] new #53
        + Class [me/planetguy/advancedvm/VMContext]
      [3] dup
      [4] invokespecial #103
        + Methodref [me/planetguy/advancedvm/VMContext.<init> ()V]
      [7] putstatic #59
        + Fieldref [me/planetguy/advancedvm/VMContext.root Lme/planetguy/advancedvm/VMContext;]
      [10] getstatic #59
        + Fieldref [me/planetguy/advancedvm/VMContext.root Lme/planetguy/advancedvm/VMContext;]
      [13] ldc #51
        + Class [me/planetguy/advancedvm/StandardLibrary]
      [15] invokevirtual #108
        + Methodref [me/planetguy/advancedvm/VMContext.registerClass (Ljava/lang/Class;)V]
      [18] getstatic #59
        + Fieldref [me/planetguy/advancedvm/VMContext.root Lme/planetguy/advancedvm/VMContext;]
      [21] ldc #43
        + Class [me/planetguy/advancedvm/ImperativeScript]
      [23] invokevirtual #114
        + Methodref [me/planetguy/advancedvm/VMContext.setScriptClass (Ljava/lang/Class;)V]
      [26] getstatic #59
        + Fieldref [me/planetguy/advancedvm/VMContext.root Lme/planetguy/advancedvm/VMContext;]
      [29] new #52
        + Class [me/planetguy/advancedvm/TransformerInlineConstants]
      [32] dup
      [33] invokespecial #102
        + Methodref [me/planetguy/advancedvm/TransformerInlineConstants.<init> ()V]
      [36] invokevirtual #113
        + Methodref [me/planetguy/advancedvm/VMContext.registerScriptTransformer (Lme/planetguy/advancedvm/ScriptTransformer;)V]
      [39] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>()V
    Access flags: 0x1
      = public VMContext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 49, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #69
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] new #33
        + Class [java/util/HashMap]
      [8] dup
      [9] invokespecial #88
        + Methodref [java/util/HashMap.<init> ()V]
      [12] putfield #58
        + Fieldref [me/planetguy/advancedvm/VMContext.methodMap Ljava/util/Map;]
      [15] aload_0 v0
      [16] new #33
        + Class [java/util/HashMap]
      [19] dup
      [20] invokespecial #88
        + Methodref [java/util/HashMap.<init> ()V]
      [23] putfield #56
        + Fieldref [me/planetguy/advancedvm/VMContext.inlines Ljava/util/Map;]
      [26] aload_0 v0
      [27] new #31
        + Class [java/util/ArrayList]
      [30] dup
      [31] invokespecial #82
        + Methodref [java/util/ArrayList.<init> ()V]
      [34] putfield #61
        + Fieldref [me/planetguy/advancedvm/VMContext.transformers Ljava/util/ArrayList;]
      [37] aload_0 v0
      [38] new #33
        + Class [java/util/HashMap]
      [41] dup
      [42] invokespecial #88
        + Methodref [java/util/HashMap.<init> ()V]
      [45] putfield #57
        + Fieldref [me/planetguy/advancedvm/VMContext.literals Ljava/util/Map;]
      [48] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Lme/planetguy/advancedvm/VMContext;)V
    Access flags: 0x1
      = public VMContext(me.planetguy.advancedvm.VMContext)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 117, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] invokespecial #69
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] new #33
        + Class [java/util/HashMap]
      [8] dup
      [9] invokespecial #88
        + Methodref [java/util/HashMap.<init> ()V]
      [12] putfield #58
        + Fieldref [me/planetguy/advancedvm/VMContext.methodMap Ljava/util/Map;]
      [15] aload_0 v0
      [16] new #33
        + Class [java/util/HashMap]
      [19] dup
      [20] invokespecial #88
        + Methodref [java/util/HashMap.<init> ()V]
      [23] putfield #56
        + Fieldref [me/planetguy/advancedvm/VMContext.inlines Ljava/util/Map;]
      [26] aload_0 v0
      [27] new #31
        + Class [java/util/ArrayList]
      [30] dup
      [31] invokespecial #82
        + Methodref [java/util/ArrayList.<init> ()V]
      [34] putfield #61
        + Fieldref [me/planetguy/advancedvm/VMContext.transformers Ljava/util/ArrayList;]
      [37] aload_0 v0
      [38] new #33
        + Class [java/util/HashMap]
      [41] dup
      [42] invokespecial #88
        + Methodref [java/util/HashMap.<init> ()V]
      [45] putfield #57
        + Fieldref [me/planetguy/advancedvm/VMContext.literals Ljava/util/Map;]
      [48] aload_0 v0
      [49] new #33
        + Class [java/util/HashMap]
      [52] dup
      [53] aload_1 v1
      [54] getfield #58
        + Fieldref [me/planetguy/advancedvm/VMContext.methodMap Ljava/util/Map;]
      [57] invokespecial #89
        + Methodref [java/util/HashMap.<init> (Ljava/util/Map;)V]
      [60] putfield #58
        + Fieldref [me/planetguy/advancedvm/VMContext.methodMap Ljava/util/Map;]
      [63] aload_0 v0
      [64] new #33
        + Class [java/util/HashMap]
      [67] dup
      [68] aload_1 v1
      [69] getfield #56
        + Fieldref [me/planetguy/advancedvm/VMContext.inlines Ljava/util/Map;]
      [72] invokespecial #89
        + Methodref [java/util/HashMap.<init> (Ljava/util/Map;)V]
      [75] putfield #56
        + Fieldref [me/planetguy/advancedvm/VMContext.inlines Ljava/util/Map;]
      [78] aload_0 v0
      [79] new #33
        + Class [java/util/HashMap]
      [82] dup
      [83] aload_1 v1
      [84] getfield #57
        + Fieldref [me/planetguy/advancedvm/VMContext.literals Ljava/util/Map;]
      [87] invokespecial #89
        + Methodref [java/util/HashMap.<init> (Ljava/util/Map;)V]
      [90] putfield #57
        + Fieldref [me/planetguy/advancedvm/VMContext.literals Ljava/util/Map;]
      [93] aload_0 v0
      [94] new #31
        + Class [java/util/ArrayList]
      [97] dup
      [98] aload_1 v1
      [99] getfield #61
        + Fieldref [me/planetguy/advancedvm/VMContext.transformers Ljava/util/ArrayList;]
      [102] invokespecial #83
        + Methodref [java/util/ArrayList.<init> (Ljava/util/Collection;)V]
      [105] putfield #61
        + Fieldref [me/planetguy/advancedvm/VMContext.transformers Ljava/util/ArrayList;]
      [108] aload_0 v0
      [109] aload_1 v1
      [110] getfield #60
        + Fieldref [me/planetguy/advancedvm/VMContext.scriptClass Ljava/lang/Class;]
      [113] putfield #60
        + Fieldref [me/planetguy/advancedvm/VMContext.scriptClass Ljava/lang/Class;]
      [116] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       compile(Ljava/lang/String;Lme/planetguy/advancedvm/Scripted;)Lme/planetguy/advancedvm/Script;
    Access flags: 0x1
      = public me.planetguy.advancedvm.Script compile(java.lang.String,me.planetguy.advancedvm.Scripted)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 658, locals = 15, stack = 9):
      [0] new #33
        + Class [java/util/HashMap]
      [3] dup
      [4] aload_0 v0
      [5] getfield #57
        + Fieldref [me/planetguy/advancedvm/VMContext.literals Ljava/util/Map;]
      [8] invokespecial #89
        + Methodref [java/util/HashMap.<init> (Ljava/util/Map;)V]
      [11] astore_3 v3
      [12] aload_0 v0
      [13] getfield #58
        + Fieldref [me/planetguy/advancedvm/VMContext.methodMap Ljava/util/Map;]
      [16] invokeinterface #121
        + InterfaceMethodref [java/util/Map.keySet ()Ljava/util/Set;]
      [21] invokeinterface #123
        + InterfaceMethodref [java/util/Set.iterator ()Ljava/util/Iterator;]
      [26] astore v5
      [28] goto +42 (target=70)
      [31] aload v5
      [33] invokeinterface #116
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [38] checkcast #25
        + Class [java/lang/String]
      [41] astore v4
      [43] aload_3 v3
      [44] aload v4
      [46] new #42
        + Class [me/planetguy/advancedvm/ImmutableBox]
      [49] dup
      [50] aload_0 v0
      [51] getfield #58
        + Fieldref [me/planetguy/advancedvm/VMContext.methodMap Ljava/util/Map;]
      [54] aload v4
      [56] invokeinterface #120
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [61] invokespecial #100
        + Methodref [me/planetguy/advancedvm/ImmutableBox.<init> (Ljava/lang/Object;)V]
      [64] invokeinterface #122
        + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [69] pop
      [70] aload v5
      [72] invokeinterface #115
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [77] ifne -46 (target=31)
      [80] new #31
        + Class [java/util/ArrayList]
      [83] dup
      [84] invokespecial #82
        + Methodref [java/util/ArrayList.<init> ()V]
      [87] astore v4
      [89] aload_1 v1
      [90] ldc #2
        + String [
]
      [92] invokevirtual #71
        + Methodref [java/lang/String.split (Ljava/lang/String;)[Ljava/lang/String;]
      [95] astore v5
      [97] aload_0 v0
      [98] getfield #61
        + Fieldref [me/planetguy/advancedvm/VMContext.transformers Ljava/util/ArrayList;]
      [101] invokevirtual #85
        + Methodref [java/util/ArrayList.iterator ()Ljava/util/Iterator;]
      [104] astore v7
      [106] goto +26 (target=132)
      [109] aload v7
      [111] invokeinterface #116
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [116] checkcast #49
        + Class [me/planetguy/advancedvm/ScriptTransformer]
      [119] astore v6
      [121] aload v6
      [123] aload v5
      [125] invokeinterface #128
        + InterfaceMethodref [me/planetguy/advancedvm/ScriptTransformer.transform ([Ljava/lang/String;)[Ljava/lang/String;]
      [130] astore v5
      [132] aload v7
      [134] invokeinterface #115
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [139] ifne -30 (target=109)
      [142] new #35
        + Class [java/util/LinkedList]
      [145] dup
      [146] invokespecial #90
        + Methodref [java/util/LinkedList.<init> ()V]
      [149] astore v6
      [151] aload v6
      [153] aload v5
      [155] invokestatic #87
        + Methodref [java/util/Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;]
      [158] invokevirtual #91
        + Methodref [java/util/LinkedList.addAll (Ljava/util/Collection;)Z]
      [161] pop
      [162] aload_3 v3
      [163] ldc #1
        + String []
      [165] getstatic #55
        + Fieldref [me/planetguy/advancedvm/NullBox.instance Lme/planetguy/advancedvm/NullBox;]
      [168] invokeinterface #122
        + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [173] pop
      [174] iconst_0
      [175] istore v7
      [177] goto +324 (target=501)
      [180] aload v6
      [182] invokevirtual #93
        + Methodref [java/util/LinkedList.getFirst ()Ljava/lang/Object;]
      [185] checkcast #25
        + Class [java/lang/String]
      [188] astore v8
      [190] aload v6
      [192] invokevirtual #95
        + Methodref [java/util/LinkedList.removeFirst ()Ljava/lang/Object;]
      [195] pop
      [196] getstatic #54
        + Fieldref [java/lang/System.out Ljava/io/PrintStream;]
      [199] new #26
        + Class [java/lang/StringBuilder]
      [202] dup
      [203] ldc #5
        + String [Compiling ]
      [205] invokespecial #73
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [208] aload v8
      [210] invokevirtual #75
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [213] invokevirtual #76
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [216] invokevirtual #62
        + Methodref [java/io/PrintStream.println (Ljava/lang/String;)V]
      [219] aload v8
      [221] ldc #3
        + String [ ]
      [223] invokevirtual #71
        + Methodref [java/lang/String.split (Ljava/lang/String;)[Ljava/lang/String;]
      [226] astore v9
      [228] aload v9
      [230] arraylength
      [231] anewarray #41
        + Class [me/planetguy/advancedvm/IBox]
      [234] astore v10
      [236] aload v9
      [238] arraylength
      [239] iconst_1
      [240] ificmpeq +261 (target=501)
      [243] aload v9
      [245] arraylength
      [246] ifne +6 (target=252)
      [249] goto +252 (target=501)
      [252] aload v10
      [254] iconst_0
      [255] aload_0 v0
      [256] new #26
        + Class [java/lang/StringBuilder]
      [259] dup
      [260] ldc #11
        + String [script@]
      [262] invokespecial #73
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [265] iload v7
      [267] invokevirtual #74
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [270] invokevirtual #76
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [273] aload_3 v3
      [274] invokespecial #104
        + Methodref [me/planetguy/advancedvm/VMContext.box (Ljava/lang/String;Ljava/util/Map;)Lme/planetguy/advancedvm/IBox;]
      [277] aastore
      [278] aload v9
      [280] iconst_0
      [281] aaload
      [282] astore v11
      [284] aload v10
      [286] iconst_1
      [287] aload_0 v0
      [288] aload v9
      [290] iconst_1
      [291] aaload
      [292] aload_3 v3
      [293] invokespecial #105
        + Methodref [me/planetguy/advancedvm/VMContext.boxUsedVar (Ljava/lang/String;Ljava/util/Map;)Lme/planetguy/advancedvm/IBox;]
      [296] aastore
      [297] aload_0 v0
      [298] getfield #56
        + Fieldref [me/planetguy/advancedvm/VMContext.inlines Ljava/util/Map;]
      [301] aload v11
      [303] invokeinterface #120
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [308] checkcast #44
        + Class [me/planetguy/advancedvm/Inline]
      [311] astore v12
      [313] aload v12
      [315] ifnull +56 (target=371)
      [318] aload v12
      [320] aload v9
      [322] invokeinterface #126
        + InterfaceMethodref [me/planetguy/advancedvm/Inline.replace ([Ljava/lang/String;)Ljava/util/List;]
      [327] astore v13
      [329] aload v13
      [331] invokeinterface #118
        + InterfaceMethodref [java/util/List.size ()I]
      [336] iconst_1
      [337] isub
      [338] istore v14
      [340] goto +23 (target=363)
      [343] aload v6
      [345] aload v13
      [347] iload v14
      [349] invokeinterface #117
        + InterfaceMethodref [java/util/List.get (I)Ljava/lang/Object;]
      [354] checkcast #25
        + Class [java/lang/String]
      [357] invokevirtual #92
        + Methodref [java/util/LinkedList.addFirst (Ljava/lang/Object;)V]
      [360] iinc v14, -1
      [363] iload v14
      [365] ifge -22 (target=343)
      [368] goto +133 (target=501)
      [371] aload_0 v0
      [372] getfield #58
        + Fieldref [me/planetguy/advancedvm/VMContext.methodMap Ljava/util/Map;]
      [375] aload v11
      [377] invokeinterface #120
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [382] checkcast #29
        + Class [java/lang/reflect/Method]
      [385] astore v13
      [387] aload v13
      [389] ifnull +60 (target=449)
      [392] aload v10
      [394] iconst_0
      [395] aaload
      [396] aload v13
      [398] invokeinterface #124
        + InterfaceMethodref [me/planetguy/advancedvm/IBox.set (Ljava/lang/Object;)V]
      [403] iconst_2
      [404] istore v14
      [406] goto +21 (target=427)
      [409] aload v10
      [411] iload v14
      [413] aload_0 v0
      [414] aload v9
      [416] iload v14
      [418] aaload
      [419] aload_3 v3
      [420] invokespecial #105
        + Methodref [me/planetguy/advancedvm/VMContext.boxUsedVar (Ljava/lang/String;Ljava/util/Map;)Lme/planetguy/advancedvm/IBox;]
      [423] aastore
      [424] iinc v14, 1
      [427] iload v14
      [429] aload v9
      [431] arraylength
      [432] ificmplt -23 (target=409)
      [435] iinc v7, 1
      [438] aload v4
      [440] aload v10
      [442] invokevirtual #84
        + Methodref [java/util/ArrayList.add (Ljava/lang/Object;)Z]
      [445] pop
      [446] goto +55 (target=501)
      [449] aload v11
      [451] ldc #9
        + String [lit]
      [453] invokevirtual #70
        + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
      [456] ifeq +21 (target=477)
      [459] aload v10
      [461] iconst_1
      [462] aaload
      [463] aload_0 v0
      [464] aload v9
      [466] invokespecial #106
        + Methodref [me/planetguy/advancedvm/VMContext.parseLit ([Ljava/lang/String;)Ljava/lang/Object;]
      [469] invokeinterface #124
        + InterfaceMethodref [me/planetguy/advancedvm/IBox.set (Ljava/lang/Object;)V]
      [474] goto +27 (target=501)
      [477] aload v11
      [479] ldc #8
        + String [label]
      [481] invokevirtual #70
        + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
      [484] ifeq +17 (target=501)
      [487] aload v10
      [489] iconst_1
      [490] aaload
      [491] iload v7
      [493] invokestatic #68
        + Methodref [java/lang/Integer.valueOf (I)Ljava/lang/Integer;]
      [496] invokeinterface #124
        + InterfaceMethodref [me/planetguy/advancedvm/IBox.set (Ljava/lang/Object;)V]
      [501] aload v6
      [503] invokevirtual #94
        + Methodref [java/util/LinkedList.isEmpty ()Z]
      [506] ifeq -326 (target=180)
      [509] aload_2 v2
      [510] ifnull +80 (target=590)
      [513] aload_0 v0
      [514] getfield #60
        + Fieldref [me/planetguy/advancedvm/VMContext.scriptClass Ljava/lang/Class;]
      [517] iconst_4
      [518] anewarray #20
        + Class [java/lang/Class]
      [521] dup
      [522] iconst_0
      [523] ldc #25
        + Class [java/lang/String]
      [525] aastore
      [526] dup
      [527] iconst_1
      [528] ldc #17
        + Class [[[Lme/planetguy/advancedvm/IBox;]
      [530] aastore
      [531] dup
      [532] iconst_2
      [533] ldc #37
        + Class [java/util/Map]
      [535] aastore
      [536] dup
      [537] iconst_3
      [538] ldc #50
        + Class [me/planetguy/advancedvm/Scripted]
      [540] aastore
      [541] invokevirtual #64
        + Methodref [java/lang/Class.getConstructor ([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;]
      [544] iconst_4
      [545] anewarray #24
        + Class [java/lang/Object]
      [548] dup
      [549] iconst_0
      [550] aload_1 v1
      [551] aastore
      [552] dup
      [553] iconst_1
      [554] aload v4
      [556] iconst_1
      [557] anewarray #16
        + Class [[Lme/planetguy/advancedvm/IBox;]
      [560] dup
      [561] iconst_0
      [562] iconst_0
      [563] anewarray #41
        + Class [me/planetguy/advancedvm/IBox]
      [566] aastore
      [567] invokevirtual #86
        + Methodref [java/util/ArrayList.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;]
      [570] aastore
      [571] dup
      [572] iconst_2
      [573] aload_3 v3
      [574] aastore
      [575] dup
      [576] iconst_3
      [577] aload_2 v2
      [578] aastore
      [579] invokevirtual #77
        + Methodref [java/lang/reflect/Constructor.newInstance ([Ljava/lang/Object;)Ljava/lang/Object;]
      [582] checkcast #46
        + Class [me/planetguy/advancedvm/Script]
      [585] astore v8
      [587] aload v8
      [589] areturn
      [590] aload_0 v0
      [591] getfield #60
        + Fieldref [me/planetguy/advancedvm/VMContext.scriptClass Ljava/lang/Class;]
      [594] iconst_3
      [595] anewarray #20
        + Class [java/lang/Class]
      [598] dup
      [599] iconst_0
      [600] ldc #25
        + Class [java/lang/String]
      [602] aastore
      [603] dup
      [604] iconst_1
      [605] ldc #17
        + Class [[[Lme/planetguy/advancedvm/IBox;]
      [607] aastore
      [608] dup
      [609] iconst_2
      [610] ldc #37
        + Class [java/util/Map]
      [612] aastore
      [613] invokevirtual #64
        + Methodref [java/lang/Class.getConstructor ([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;]
      [616] iconst_3
      [617] anewarray #24
        + Class [java/lang/Object]
      [620] dup
      [621] iconst_0
      [622] aload_1 v1
      [623] aastore
      [624] dup
      [625] iconst_1
      [626] aload v4
      [628] iconst_1
      [629] anewarray #16
        + Class [[Lme/planetguy/advancedvm/IBox;]
      [632] dup
      [633] iconst_0
      [634] iconst_0
      [635] anewarray #41
        + Class [me/planetguy/advancedvm/IBox]
      [638] aastore
      [639] invokevirtual #86
        + Methodref [java/util/ArrayList.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;]
      [642] aastore
      [643] dup
      [644] iconst_2
      [645] aload_3 v3
      [646] aastore
      [647] invokevirtual #77
        + Methodref [java/lang/reflect/Constructor.newInstance ([Ljava/lang/Object;)Ljava/lang/Object;]
      [650] checkcast #46
        + Class [me/planetguy/advancedvm/Script]
      [653] astore v8
      [655] aload v8
      [657] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 16):
        - [31] Var: [a:me/planetguy/advancedvm/VMContext][a:java/lang/String][a:me/planetguy/advancedvm/Scripted][a:java/util/Map][T][a:java/util/Iterator], Stack: 
        - [70] Var: ..., Stack: (empty)
        - [109] Var: [a:me/planetguy/advancedvm/VMContext][a:java/lang/String][a:me/planetguy/advancedvm/Scripted][a:java/util/Map][a:java/util/ArrayList][a:[Ljava/lang/String;][T][a:java/util/Iterator], Stack: 
        - [132] Var: ..., Stack: (empty)
        - [180] Var: [a:me/planetguy/advancedvm/VMContext][a:java/lang/String][a:me/planetguy/advancedvm/Scripted][a:java/util/Map][a:java/util/ArrayList][a:[Ljava/lang/String;][a:java/util/LinkedList][i], Stack: 
        - [249] Var: ...[a:java/lang/String][a:[Ljava/lang/String;][a:[Lme/planetguy/advancedvm/IBox;], Stack: (empty)
        - [252] Var: ..., Stack: (empty)
        - [343] Var: [a:me/planetguy/advancedvm/VMContext][a:java/lang/String][a:me/planetguy/advancedvm/Scripted][a:java/util/Map][a:java/util/ArrayList][a:[Ljava/lang/String;][a:java/util/LinkedList][i][a:java/lang/String][a:[Ljava/lang/String;][a:[Lme/planetguy/advancedvm/IBox;][a:java/lang/String][a:me/planetguy/advancedvm/Inline][a:java/util/List][i], Stack: 
        - [363] Var: ..., Stack: (empty)
        - [371] Var: -2, Stack: (empty)
        - [409] Var: ...[a:java/lang/reflect/Method][i], Stack: (empty)
        - [427] Var: ..., Stack: (empty)
        - [449] Var: -1, Stack: (empty)
        - [477] Var: ..., Stack: (empty)
        - [501] Var: [a:me/planetguy/advancedvm/VMContext][a:java/lang/String][a:me/planetguy/advancedvm/Scripted][a:java/util/Map][a:java/util/ArrayList][a:[Ljava/lang/String;][a:java/util/LinkedList][i], Stack: 
        - [590] Var: ..., Stack: (empty)
  + Method:       box(Ljava/lang/String;Ljava/util/Map;)Lme/planetguy/advancedvm/IBox;
    Access flags: 0x2
      = private me.planetguy.advancedvm.IBox box(java.lang.String,java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 40, locals = 4, stack = 3):
      [0] aload_2 v2
      [1] aload_1 v1
      [2] invokeinterface #119
        + InterfaceMethodref [java/util/Map.containsKey (Ljava/lang/Object;)Z]
      [7] ifeq +14 (target=21)
      [10] aload_2 v2
      [11] aload_1 v1
      [12] invokeinterface #120
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [17] checkcast #41
        + Class [me/planetguy/advancedvm/IBox]
      [20] areturn
      [21] new #39
        + Class [me/planetguy/advancedvm/Box]
      [24] dup
      [25] invokespecial #96
        + Methodref [me/planetguy/advancedvm/Box.<init> ()V]
      [28] astore_3 v3
      [29] aload_2 v2
      [30] aload_1 v1
      [31] aload_3 v3
      [32] invokeinterface #122
        + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [37] pop
      [38] aload_3 v3
      [39] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [21] Var: ..., Stack: (empty)
  + Method:       boxUsedVar(Ljava/lang/String;Ljava/util/Map;)Lme/planetguy/advancedvm/IBox;
    Access flags: 0x2
      = private me.planetguy.advancedvm.IBox boxUsedVar(java.lang.String,java.util.Map)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 40, locals = 4, stack = 3):
      [0] aload_2 v2
      [1] aload_1 v1
      [2] invokeinterface #119
        + InterfaceMethodref [java/util/Map.containsKey (Ljava/lang/Object;)Z]
      [7] ifeq +14 (target=21)
      [10] aload_2 v2
      [11] aload_1 v1
      [12] invokeinterface #120
        + InterfaceMethodref [java/util/Map.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [17] checkcast #41
        + Class [me/planetguy/advancedvm/IBox]
      [20] areturn
      [21] new #48
        + Class [me/planetguy/advancedvm/ScriptCreatedBox]
      [24] dup
      [25] invokespecial #101
        + Methodref [me/planetguy/advancedvm/ScriptCreatedBox.<init> ()V]
      [28] astore_3 v3
      [29] aload_2 v2
      [30] aload_1 v1
      [31] aload_3 v3
      [32] invokeinterface #122
        + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [37] pop
      [38] aload_3 v3
      [39] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [21] Var: ..., Stack: (empty)
  + Method:       parseLit([Ljava/lang/String;)Ljava/lang/Object;
    Access flags: 0x2
      = private java.lang.Object parseLit(java.lang.String[])
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 48, locals = 4, stack = 5):
      [0] aload_1 v1
      [1] arraylength
      [2] iconst_3
      [3] ificmpne +10 (target=13)
      [6] aload_1 v1
      [7] iconst_2
      [8] aaload
      [9] invokestatic #107
        + Methodref [me/planetguy/advancedvm/VMContext.parseSingleLit (Ljava/lang/String;)Ljava/lang/Object;]
      [12] areturn
      [13] aload_1 v1
      [14] arraylength
      [15] iconst_2
      [16] isub
      [17] anewarray #24
        + Class [java/lang/Object]
      [20] astore_2 v2
      [21] iconst_0
      [22] istore_3 v3
      [23] goto +17 (target=40)
      [26] aload_2 v2
      [27] iload_3 v3
      [28] aload_1 v1
      [29] iload_3 v3
      [30] iconst_2
      [31] iadd
      [32] aaload
      [33] invokestatic #107
        + Methodref [me/planetguy/advancedvm/VMContext.parseSingleLit (Ljava/lang/String;)Ljava/lang/Object;]
      [36] aastore
      [37] iinc v3, 1
      [40] iload_3 v3
      [41] aload_2 v2
      [42] arraylength
      [43] ificmplt -17 (target=26)
      [46] aload_2 v2
      [47] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [13] Var: ..., Stack: (empty)
        - [26] Var: ...[a:[Ljava/lang/Object;][i], Stack: (empty)
        - [40] Var: ..., Stack: (empty)
  + Method:       parseSingleLit(Ljava/lang/String;)Ljava/lang/Object;
    Access flags: 0x9
      = public static java.lang.Object parseSingleLit(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 50, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokestatic #66
        + Methodref [java/lang/Double.parseDouble (Ljava/lang/String;)D]
      [4] invokestatic #67
        + Methodref [java/lang/Double.valueOf (D)Ljava/lang/Double;]
      [7] astore_1 v1
      [8] goto +40 (target=48)
      [11] astore_2 v2
      [12] aload_0 v0
      [13] ldc #12
        + String [true]
      [15] invokevirtual #70
        + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
      [18] ifeq +11 (target=29)
      [21] iconst_1
      [22] invokestatic #63
        + Methodref [java/lang/Boolean.valueOf (Z)Ljava/lang/Boolean;]
      [25] astore_1 v1
      [26] goto +22 (target=48)
      [29] aload_0 v0
      [30] ldc #7
        + String [false]
      [32] invokevirtual #70
        + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
      [35] ifeq +11 (target=46)
      [38] iconst_0
      [39] invokestatic #63
        + Methodref [java/lang/Boolean.valueOf (Z)Ljava/lang/Boolean;]
      [42] astore_1 v1
      [43] goto +5 (target=48)
      [46] aload_0 v0
      [47] astore_1 v1
      [48] aload_1 v1
      [49] areturn
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 8: 11):
      + Class [java/lang/NumberFormatException]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [11] Var: ..., Stack: [a:java/lang/NumberFormatException]
        - [29] Var: [a:java/lang/String][T][a:java/lang/NumberFormatException], Stack: 
        - [46] Var: ..., Stack: (empty)
        - [48] Var: [a:java/lang/String][a:java/lang/Object], Stack: 
  + Method:       setScriptClass(Ljava/lang/Class;)V
    Access flags: 0x1
      = public void setScriptClass(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #60
        + Fieldref [me/planetguy/advancedvm/VMContext.scriptClass Ljava/lang/Class;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       registerMethod(Ljava/lang/String;Ljava/lang/reflect/Method;)V
    Access flags: 0x1
      = public void registerMethod(java.lang.String,java.lang.reflect.Method)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 33, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] getfield #58
        + Fieldref [me/planetguy/advancedvm/VMContext.methodMap Ljava/util/Map;]
      [4] aload_1 v1
      [5] aload_2 v2
      [6] invokeinterface #122
        + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [11] pop
      [12] aload_2 v2
      [13] new #26
        + Class [java/lang/StringBuilder]
      [16] dup
      [17] ldc #10
        + String [method.]
      [19] invokespecial #73
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [22] aload_1 v1
      [23] invokevirtual #75
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [26] invokevirtual #76
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [29] invokestatic #98
        + Methodref [me/planetguy/advancedvm/Box.register (Ljava/lang/Object;Ljava/lang/String;)V]
      [32] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       registerClass(Ljava/lang/Class;)V
    Access flags: 0x1
      = public void registerClass(java.lang.Class)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] ldc #1
        + String []
      [4] invokevirtual #109
        + Methodref [me/planetguy/advancedvm/VMContext.registerClass (Ljava/lang/Class;Ljava/lang/String;)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       registerClass(Ljava/lang/Class;Ljava/lang/String;)V
    Access flags: 0x1
      = public void registerClass(java.lang.Class,java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 162, locals = 8, stack = 4):
      [0] aload_2 v2
      [1] ldc #1
        + String []
      [3] invokevirtual #70
        + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
      [6] ifne +23 (target=29)
      [9] new #26
        + Class [java/lang/StringBuilder]
      [12] dup
      [13] aload_2 v2
      [14] invokestatic #72
        + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
      [17] invokespecial #73
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [20] ldc #4
        + String [.]
      [22] invokevirtual #75
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [25] invokevirtual #76
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [28] astore_2 v2
      [29] aload_1 v1
      [30] invokevirtual #65
        + Methodref [java/lang/Class.getDeclaredMethods ()[Ljava/lang/reflect/Method;]
      [33] dup
      [34] astore v6
      [36] arraylength
      [37] istore v5
      [39] iconst_0
      [40] istore v4
      [42] goto +112 (target=154)
      [45] aload v6
      [47] iload v4
      [49] aaload
      [50] astore_3 v3
      [51] aload_3 v3
      [52] ldc #47
        + Class [me/planetguy/advancedvm/ScriptAPI]
      [54] invokevirtual #78
        + Methodref [java/lang/reflect/Method.getAnnotation (Ljava/lang/Class;)Ljava/lang/annotation/Annotation;]
      [57] ifnull +94 (target=151)
      [60] aload_3 v3
      [61] invokevirtual #79
        + Methodref [java/lang/reflect/Method.getModifiers ()I]
      [64] invokestatic #81
        + Methodref [java/lang/reflect/Modifier.isStatic (I)Z]
      [67] ifeq +84 (target=151)
      [70] aload_3 v3
      [71] ldc #47
        + Class [me/planetguy/advancedvm/ScriptAPI]
      [73] invokevirtual #78
        + Methodref [java/lang/reflect/Method.getAnnotation (Ljava/lang/Class;)Ljava/lang/annotation/Annotation;]
      [76] checkcast #47
        + Class [me/planetguy/advancedvm/ScriptAPI]
      [79] astore v7
      [81] aload v7
      [83] invokeinterface #127
        + InterfaceMethodref [me/planetguy/advancedvm/ScriptAPI.value ()Ljava/lang/String;]
      [88] ldc #6
        + String [__NULL__]
      [90] invokevirtual #70
        + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
      [93] ifne +32 (target=125)
      [96] aload_0 v0
      [97] new #26
        + Class [java/lang/StringBuilder]
      [100] dup
      [101] aload_2 v2
      [102] invokestatic #72
        + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
      [105] invokespecial #73
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [108] aload v7
      [110] invokeinterface #127
        + InterfaceMethodref [me/planetguy/advancedvm/ScriptAPI.value ()Ljava/lang/String;]
      [115] invokevirtual #75
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [118] invokevirtual #76
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [121] aload_3 v3
      [122] invokevirtual #112
        + Methodref [me/planetguy/advancedvm/VMContext.registerMethod (Ljava/lang/String;Ljava/lang/reflect/Method;)V]
      [125] aload_0 v0
      [126] new #26
        + Class [java/lang/StringBuilder]
      [129] dup
      [130] aload_2 v2
      [131] invokestatic #72
        + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
      [134] invokespecial #73
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [137] aload_3 v3
      [138] invokevirtual #80
        + Methodref [java/lang/reflect/Method.getName ()Ljava/lang/String;]
      [141] invokevirtual #75
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [144] invokevirtual #76
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [147] aload_3 v3
      [148] invokevirtual #112
        + Methodref [me/planetguy/advancedvm/VMContext.registerMethod (Ljava/lang/String;Ljava/lang/reflect/Method;)V]
      [151] iinc v4, 1
      [154] iload v4
      [156] iload v5
      [158] ificmplt -113 (target=45)
      [161] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 5):
        - [29] Var: ..., Stack: (empty)
        - [45] Var: [a:me/planetguy/advancedvm/VMContext][a:java/lang/Class][a:java/lang/String][T][i][i][a:[Ljava/lang/reflect/Method;], Stack: 
        - [125] Var: [a:me/planetguy/advancedvm/VMContext][a:java/lang/Class][a:java/lang/String][a:java/lang/reflect/Method][i][i][a:[Ljava/lang/reflect/Method;][a:me/planetguy/advancedvm/ScriptAPI], Stack: 
        - [151] Var: [a:me/planetguy/advancedvm/VMContext][a:java/lang/Class][a:java/lang/String][T][i][i][a:[Ljava/lang/reflect/Method;], Stack: 
        - [154] Var: ..., Stack: (empty)
  + Method:       registerInline(Lme/planetguy/advancedvm/Inline;)V
    Access flags: 0x1
      = public void registerInline(me.planetguy.advancedvm.Inline)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] aload_1 v1
      [3] invokeinterface #125
        + InterfaceMethodref [me/planetguy/advancedvm/Inline.name ()Ljava/lang/String;]
      [8] invokevirtual #110
        + Methodref [me/planetguy/advancedvm/VMContext.registerInline (Lme/planetguy/advancedvm/Inline;Ljava/lang/String;)V]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       registerInline(Lme/planetguy/advancedvm/Inline;Ljava/lang/String;)V
    Access flags: 0x1
      = public void registerInline(me.planetguy.advancedvm.Inline,java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #56
        + Fieldref [me/planetguy/advancedvm/VMContext.inlines Ljava/util/Map;]
      [4] aload_2 v2
      [5] aload_1 v1
      [6] invokeinterface #122
        + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [11] pop
      [12] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       registerLiteral(Ljava/lang/String;Lme/planetguy/advancedvm/IBox;)V
    Access flags: 0x1
      = public void registerLiteral(java.lang.String,me.planetguy.advancedvm.IBox)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #57
        + Fieldref [me/planetguy/advancedvm/VMContext.literals Ljava/util/Map;]
      [4] aload_1 v1
      [5] aload_2 v2
      [6] invokeinterface #122
        + InterfaceMethodref [java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [11] pop
      [12] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       registerLitObj(Ljava/lang/String;Ljava/lang/Object;)V
    Access flags: 0x1
      = public void registerLitObj(java.lang.String,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 3, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] new #39
        + Class [me/planetguy/advancedvm/Box]
      [5] dup
      [6] aload_2 v2
      [7] invokespecial #97
        + Methodref [me/planetguy/advancedvm/Box.<init> (Ljava/lang/Object;)V]
      [10] invokevirtual #111
        + Methodref [me/planetguy/advancedvm/VMContext.registerLiteral (Ljava/lang/String;Lme/planetguy/advancedvm/IBox;)V]
      [13] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       registerFinalObj(Ljava/lang/String;Ljava/lang/Object;)V
    Access flags: 0x1
      = public void registerFinalObj(java.lang.String,java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 3, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] new #42
        + Class [me/planetguy/advancedvm/ImmutableBox]
      [5] dup
      [6] aload_2 v2
      [7] invokespecial #100
        + Methodref [me/planetguy/advancedvm/ImmutableBox.<init> (Ljava/lang/Object;)V]
      [10] invokevirtual #111
        + Methodref [me/planetguy/advancedvm/VMContext.registerLiteral (Ljava/lang/String;Lme/planetguy/advancedvm/IBox;)V]
      [13] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       registerFieldBox(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V
    Access flags: 0x1
      = public void registerFieldBox(java.lang.String,java.lang.Object,java.lang.reflect.Field,boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 17, locals = 5, stack = 7):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] new #40
        + Class [me/planetguy/advancedvm/FieldBox]
      [5] dup
      [6] aload_2 v2
      [7] aload_3 v3
      [8] iload v4
      [10] invokespecial #99
        + Methodref [me/planetguy/advancedvm/FieldBox.<init> (Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V]
      [13] invokevirtual #111
        + Methodref [me/planetguy/advancedvm/VMContext.registerLiteral (Ljava/lang/String;Lme/planetguy/advancedvm/IBox;)V]
      [16] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       registerScriptTransformer(Lme/planetguy/advancedvm/ScriptTransformer;)V
    Access flags: 0x1
      = public void registerScriptTransformer(me.planetguy.advancedvm.ScriptTransformer)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #61
        + Fieldref [me/planetguy/advancedvm/VMContext.transformers Ljava/util/ArrayList;]
      [4] aload_1 v1
      [5] invokevirtual #84
        + Methodref [java/util/ArrayList.add (Ljava/lang/Object;)Z]
      [8] pop
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/BuildConfig
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class me.planetguy.robots.BuildConfig extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 14):
  + Integer [0]
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/BuildConfig]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [ConstantValue]
  + Utf8 [DEBUG]
  + Utf8 [Z]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/robots/BuildConfig]

Fields (count = 1):
  + Field:        DEBUG Z
    Access flags: 0x19
      = public static final boolean DEBUG
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [0]

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x1
      = public BuildConfig()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #4
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/R
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class me.planetguy.robots.R extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 10):
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/R]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/robots/R]

Fields (count = 0):

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x1
      = public R()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #3
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/R$anim
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class me.planetguy.robots.R$anim extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 14):
  + Integer [2130968576]
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/R$anim]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [ConstantValue]
  + Utf8 [I]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/robots/R$anim]
  + Utf8 [move]

Fields (count = 1):
  + Field:        move I
    Access flags: 0x19
      = public static final int move
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130968576]

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x1
      = public R$anim()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #4
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/R$attr
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class me.planetguy.robots.R$attr extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 10):
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/R$attr]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/robots/R$attr]

Fields (count = 0):

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x1
      = public R$attr()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #3
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/R$dimen
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class me.planetguy.robots.R$dimen extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 16):
  + Integer [2131034112]
  + Integer [2131034113]
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/R$dimen]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [ConstantValue]
  + Utf8 [I]
  + Utf8 [activity_horizontal_margin]
  + Utf8 [activity_vertical_margin]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/robots/R$dimen]

Fields (count = 2):
  + Field:        activity_horizontal_margin I
    Access flags: 0x19
      = public static final int activity_horizontal_margin
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131034112]
  + Field:        activity_vertical_margin I
    Access flags: 0x19
      = public static final int activity_vertical_margin
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131034113]

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x1
      = public R$dimen()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #5
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/R$drawable
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class me.planetguy.robots.R$drawable extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 50):
  + Integer [2130837504]
  + Integer [2130837505]
  + Integer [2130837506]
  + Integer [2130837507]
  + Integer [2130837508]
  + Integer [2130837509]
  + Integer [2130837510]
  + Integer [2130837511]
  + Integer [2130837512]
  + Integer [2130837513]
  + Integer [2130837514]
  + Integer [2130837515]
  + Integer [2130837516]
  + Integer [2130837517]
  + Integer [2130837518]
  + Integer [2130837519]
  + Integer [2130837520]
  + Integer [2130837521]
  + Integer [2130837522]
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/R$drawable]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [ConstantValue]
  + Utf8 [I]
  + Utf8 [ground]
  + Utf8 [hq_blue_noshields]
  + Utf8 [hq_blue_shields]
  + Utf8 [hq_empty_noshields]
  + Utf8 [hq_red_noshields]
  + Utf8 [hq_red_shields]
  + Utf8 [ic_launcher]
  + Utf8 [java/lang/Object]
  + Utf8 [lava]
  + Utf8 [me/planetguy/robots/R$drawable]
  + Utf8 [ore]
  + Utf8 [play_button]
  + Utf8 [robot_blue_east]
  + Utf8 [robot_blue_north]
  + Utf8 [robot_blue_south]
  + Utf8 [robot_blue_west]
  + Utf8 [robot_red_east]
  + Utf8 [robot_red_north]
  + Utf8 [robot_red_south]
  + Utf8 [robot_red_west]
  + Utf8 [rock]

Fields (count = 19):
  + Field:        ground I
    Access flags: 0x19
      = public static final int ground
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837504]
  + Field:        hq_blue_noshields I
    Access flags: 0x19
      = public static final int hq_blue_noshields
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837505]
  + Field:        hq_blue_shields I
    Access flags: 0x19
      = public static final int hq_blue_shields
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837506]
  + Field:        hq_empty_noshields I
    Access flags: 0x19
      = public static final int hq_empty_noshields
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837507]
  + Field:        hq_red_noshields I
    Access flags: 0x19
      = public static final int hq_red_noshields
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837508]
  + Field:        hq_red_shields I
    Access flags: 0x19
      = public static final int hq_red_shields
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837509]
  + Field:        ic_launcher I
    Access flags: 0x19
      = public static final int ic_launcher
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837510]
  + Field:        lava I
    Access flags: 0x19
      = public static final int lava
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837511]
  + Field:        ore I
    Access flags: 0x19
      = public static final int ore
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837512]
  + Field:        play_button I
    Access flags: 0x19
      = public static final int play_button
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837513]
  + Field:        robot_blue_east I
    Access flags: 0x19
      = public static final int robot_blue_east
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837514]
  + Field:        robot_blue_north I
    Access flags: 0x19
      = public static final int robot_blue_north
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837515]
  + Field:        robot_blue_south I
    Access flags: 0x19
      = public static final int robot_blue_south
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837516]
  + Field:        robot_blue_west I
    Access flags: 0x19
      = public static final int robot_blue_west
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837517]
  + Field:        robot_red_east I
    Access flags: 0x19
      = public static final int robot_red_east
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837518]
  + Field:        robot_red_north I
    Access flags: 0x19
      = public static final int robot_red_north
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837519]
  + Field:        robot_red_south I
    Access flags: 0x19
      = public static final int robot_red_south
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837520]
  + Field:        robot_red_west I
    Access flags: 0x19
      = public static final int robot_red_west
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837521]
  + Field:        rock I
    Access flags: 0x19
      = public static final int rock
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130837522]

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x1
      = public R$drawable()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #22
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/R$id
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class me.planetguy.robots.R$id extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 44):
  + Integer [2131296256]
  + Integer [2131296257]
  + Integer [2131296258]
  + Integer [2131296259]
  + Integer [2131296260]
  + Integer [2131296261]
  + Integer [2131296262]
  + Integer [2131296263]
  + Integer [2131296264]
  + Integer [2131296265]
  + Integer [2131296266]
  + Integer [2131296267]
  + Integer [2131296268]
  + Integer [2131296269]
  + Integer [2131296270]
  + Integer [2131296271]
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/R$id]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [ConstantValue]
  + Utf8 [I]
  + Utf8 [action_settings]
  + Utf8 [background]
  + Utf8 [button1]
  + Utf8 [buttonCode]
  + Utf8 [buttonDocs]
  + Utf8 [buttonLog]
  + Utf8 [buttonMemory]
  + Utf8 [contact]
  + Utf8 [ideWindow]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/robots/R$id]
  + Utf8 [play]
  + Utf8 [save]
  + Utf8 [space1]
  + Utf8 [textView1]
  + Utf8 [textView2]
  + Utf8 [titleWindow]
  + Utf8 [win_textbox]

Fields (count = 16):
  + Field:        action_settings I
    Access flags: 0x19
      = public static final int action_settings
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131296271]
  + Field:        background I
    Access flags: 0x19
      = public static final int background
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131296263]
  + Field:        button1 I
    Access flags: 0x19
      = public static final int button1
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131296270]
  + Field:        buttonCode I
    Access flags: 0x19
      = public static final int buttonCode
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131296259]
  + Field:        buttonDocs I
    Access flags: 0x19
      = public static final int buttonDocs
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131296262]
  + Field:        buttonLog I
    Access flags: 0x19
      = public static final int buttonLog
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131296261]
  + Field:        buttonMemory I
    Access flags: 0x19
      = public static final int buttonMemory
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131296260]
  + Field:        contact I
    Access flags: 0x19
      = public static final int contact
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131296265]
  + Field:        ideWindow I
    Access flags: 0x19
      = public static final int ideWindow
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131296258]
  + Field:        play I
    Access flags: 0x19
      = public static final int play
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131296264]
  + Field:        save I
    Access flags: 0x19
      = public static final int save
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131296266]
  + Field:        space1 I
    Access flags: 0x19
      = public static final int space1
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131296256]
  + Field:        textView1 I
    Access flags: 0x19
      = public static final int textView1
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131296268]
  + Field:        textView2 I
    Access flags: 0x19
      = public static final int textView2
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131296267]
  + Field:        titleWindow I
    Access flags: 0x19
      = public static final int titleWindow
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131296257]
  + Field:        win_textbox I
    Access flags: 0x19
      = public static final int win_textbox
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131296269]

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x1
      = public R$id()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #19
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/R$layout
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class me.planetguy.robots.R$layout extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 20):
  + Integer [2130903040]
  + Integer [2130903041]
  + Integer [2130903042]
  + Integer [2130903043]
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/R$layout]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [ConstantValue]
  + Utf8 [I]
  + Utf8 [activity_grid]
  + Utf8 [activity_ide]
  + Utf8 [activity_main]
  + Utf8 [activity_won]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/robots/R$layout]

Fields (count = 4):
  + Field:        activity_grid I
    Access flags: 0x19
      = public static final int activity_grid
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130903040]
  + Field:        activity_ide I
    Access flags: 0x19
      = public static final int activity_ide
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130903041]
  + Field:        activity_main I
    Access flags: 0x19
      = public static final int activity_main
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130903042]
  + Field:        activity_won I
    Access flags: 0x19
      = public static final int activity_won
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2130903043]

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x1
      = public R$layout()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #7
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/R$menu
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class me.planetguy.robots.R$menu extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 14):
  + Integer [2131230720]
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/R$menu]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [ConstantValue]
  + Utf8 [I]
  + Utf8 [java/lang/Object]
  + Utf8 [main]
  + Utf8 [me/planetguy/robots/R$menu]

Fields (count = 1):
  + Field:        main I
    Access flags: 0x19
      = public static final int main
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131230720]

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x1
      = public R$menu()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #4
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/R$string
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class me.planetguy.robots.R$string extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 42):
  + Integer [2131099648]
  + Integer [2131099649]
  + Integer [2131099650]
  + Integer [2131099651]
  + Integer [2131099652]
  + Integer [2131099653]
  + Integer [2131099654]
  + Integer [2131099655]
  + Integer [2131099656]
  + Integer [2131099657]
  + Integer [2131099658]
  + Integer [2131099659]
  + Integer [2131099660]
  + Integer [2131099661]
  + Integer [2131099662]
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/R$string]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [ConstantValue]
  + Utf8 [I]
  + Utf8 [action_settings]
  + Utf8 [app_name]
  + Utf8 [code]
  + Utf8 [defaultTitle]
  + Utf8 [docs]
  + Utf8 [hello_world]
  + Utf8 [infoline1]
  + Utf8 [infoline2]
  + Utf8 [java/lang/Object]
  + Utf8 [large_text]
  + Utf8 [leaveIde]
  + Utf8 [log]
  + Utf8 [manual]
  + Utf8 [me/planetguy/robots/R$string]
  + Utf8 [memory]
  + Utf8 [script]
  + Utf8 [upload]

Fields (count = 15):
  + Field:        action_settings I
    Access flags: 0x19
      = public static final int action_settings
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131099649]
  + Field:        app_name I
    Access flags: 0x19
      = public static final int app_name
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131099648]
  + Field:        code I
    Access flags: 0x19
      = public static final int code
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131099658]
  + Field:        defaultTitle I
    Access flags: 0x19
      = public static final int defaultTitle
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131099659]
  + Field:        docs I
    Access flags: 0x19
      = public static final int docs
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131099660]
  + Field:        hello_world I
    Access flags: 0x19
      = public static final int hello_world
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131099650]
  + Field:        infoline1 I
    Access flags: 0x19
      = public static final int infoline1
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131099655]
  + Field:        infoline2 I
    Access flags: 0x19
      = public static final int infoline2
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131099656]
  + Field:        large_text I
    Access flags: 0x19
      = public static final int large_text
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131099651]
  + Field:        leaveIde I
    Access flags: 0x19
      = public static final int leaveIde
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131099654]
  + Field:        log I
    Access flags: 0x19
      = public static final int log
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131099661]
  + Field:        manual I
    Access flags: 0x19
      = public static final int manual
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131099662]
  + Field:        memory I
    Access flags: 0x19
      = public static final int memory
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131099657]
  + Field:        script I
    Access flags: 0x19
      = public static final int script
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131099652]
  + Field:        upload I
    Access flags: 0x19
      = public static final int upload
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131099653]

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x1
      = public R$string()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #18
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/R$style
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class me.planetguy.robots.R$style extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 16):
  + Integer [2131165184]
  + Integer [2131165185]
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/R$style]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + Utf8 [()V]
  + Utf8 [<init>]
  + Utf8 [AppBaseTheme]
  + Utf8 [AppTheme]
  + Utf8 [Code]
  + Utf8 [ConstantValue]
  + Utf8 [I]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/robots/R$style]

Fields (count = 2):
  + Field:        AppBaseTheme I
    Access flags: 0x19
      = public static final int AppBaseTheme
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131165184]
  + Field:        AppTheme I
    Access flags: 0x19
      = public static final int AppTheme
    Class member attributes (count = 1):
    + Constant value attribute:
    + Integer [2131165185]

Methods (count = 1):
  - Method:       <init>()V
    Access flags: 0x1
      = public R$style()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #5
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/Robots
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.Robots extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 24):
  + Class [a/a/a/d/d]
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/Robots]
  + Fieldref [me/planetguy/robots/Robots.EVENT_BUS La/a/a/d/d;]
  + Methodref [a/a/a/d/d.<init> ()V]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [EVENT_BUS La/a/a/d/d;]
  + Utf8 [()V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [EVENT_BUS]
  + Utf8 [I]
  + Utf8 [La/a/a/d/d;]
  + Utf8 [Lme/planetguy/robots/ide/IDEActivity;]
  + Utf8 [Lme/planetguy/robots/world/World;]
  + Utf8 [a/a/a/d/d]
  + Utf8 [currentIDE]
  + Utf8 [iconSize]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/robots/Robots]
  + Utf8 [world]

Fields (count = 4):
  + Field:        EVENT_BUS La/a/a/d/d;
    Access flags: 0x9
      = public static a.a.a.d.d EVENT_BUS
  + Field:        world Lme/planetguy/robots/world/World;
    Access flags: 0x9
      = public static me.planetguy.robots.world.World world
  + Field:        iconSize I
    Access flags: 0x9
      = public static int iconSize
  + Field:        currentIDE Lme/planetguy/robots/ide/IDEActivity;
    Access flags: 0x9
      = public static me.planetguy.robots.ide.IDEActivity currentIDE

Methods (count = 2):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 0, stack = 2):
      [0] new #1
        + Class [a/a/a/d/d]
      [3] dup
      [4] invokespecial #5
        + Methodref [a/a/a/d/d.<init> ()V]
      [7] putstatic #4
        + Fieldref [me/planetguy/robots/Robots.EVENT_BUS La/a/a/d/d;]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>()V
    Access flags: 0x1
      = public Robots()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #6
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/TitleScreen
  Superclass:    android/app/Activity
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.TitleScreen extends android.app.Activity

Interfaces (count = 0):

Constant Pool (count = 74):
  + Integer [2130903042]
  + Integer [2131230720]
  + Class [android/app/Activity]
  + Class [android/content/Intent]
  + Class [android/view/MenuInflater]
  + Class [me/planetguy/robots/Robots]
  + Class [me/planetguy/robots/TitleScreen]
  + Class [me/planetguy/robots/renderworld/ActivityWorld]
  + Class [me/planetguy/robots/tile/TileUtil]
  + Class [me/planetguy/robots/world/World]
  + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
  + Methodref [android/app/Activity.<init> ()V]
  + Methodref [android/app/Activity.onCreate (Landroid/os/Bundle;)V]
  + Methodref [android/app/Activity.onStart ()V]
  + Methodref [android/content/Intent.<init> (Landroid/content/Context;Ljava/lang/Class;)V]
  + Methodref [android/view/MenuInflater.inflate (ILandroid/view/Menu;)V]
  + Methodref [me/planetguy/robots/TitleScreen.getApplicationContext ()Landroid/content/Context;]
  + Methodref [me/planetguy/robots/TitleScreen.getMenuInflater ()Landroid/view/MenuInflater;]
  + Methodref [me/planetguy/robots/TitleScreen.getResources ()Landroid/content/res/Resources;]
  + Methodref [me/planetguy/robots/TitleScreen.setContentView (I)V]
  + Methodref [me/planetguy/robots/TitleScreen.startActivity (Landroid/content/Intent;)V]
  + Methodref [me/planetguy/robots/tile/TileUtil.createAllTiles (Landroid/content/res/Resources;)V]
  + Methodref [me/planetguy/robots/world/World.makeMazeWorld (Landroid/content/Context;)Lme/planetguy/robots/world/World;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Landroid/content/Context;Ljava/lang/Class;)V]
  + NameAndType [createAllTiles (Landroid/content/res/Resources;)V]
  + NameAndType [getApplicationContext ()Landroid/content/Context;]
  + NameAndType [getMenuInflater ()Landroid/view/MenuInflater;]
  + NameAndType [getResources ()Landroid/content/res/Resources;]
  + NameAndType [inflate (ILandroid/view/Menu;)V]
  + NameAndType [makeMazeWorld (Landroid/content/Context;)Lme/planetguy/robots/world/World;]
  + NameAndType [onCreate (Landroid/os/Bundle;)V]
  + NameAndType [onStart ()V]
  + NameAndType [setContentView (I)V]
  + NameAndType [startActivity (Landroid/content/Intent;)V]
  + NameAndType [world Lme/planetguy/robots/world/World;]
  + Utf8 [()Landroid/content/Context;]
  + Utf8 [()Landroid/content/res/Resources;]
  + Utf8 [()Landroid/view/MenuInflater;]
  + Utf8 [()V]
  + Utf8 [(I)V]
  + Utf8 [(ILandroid/view/Menu;)V]
  + Utf8 [(Landroid/content/Context;)Lme/planetguy/robots/world/World;]
  + Utf8 [(Landroid/content/Context;Ljava/lang/Class;)V]
  + Utf8 [(Landroid/content/Intent;)V]
  + Utf8 [(Landroid/content/res/Resources;)V]
  + Utf8 [(Landroid/os/Bundle;)V]
  + Utf8 [(Landroid/view/Menu;)Z]
  + Utf8 [(Landroid/view/View;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Lme/planetguy/robots/world/World;]
  + Utf8 [android/app/Activity]
  + Utf8 [android/content/Intent]
  + Utf8 [android/view/MenuInflater]
  + Utf8 [createAllTiles]
  + Utf8 [getApplicationContext]
  + Utf8 [getMenuInflater]
  + Utf8 [getResources]
  + Utf8 [inflate]
  + Utf8 [makeMazeWorld]
  + Utf8 [me/planetguy/robots/Robots]
  + Utf8 [me/planetguy/robots/TitleScreen]
  + Utf8 [me/planetguy/robots/renderworld/ActivityWorld]
  + Utf8 [me/planetguy/robots/tile/TileUtil]
  + Utf8 [me/planetguy/robots/world/World]
  + Utf8 [onClickStartGame]
  + Utf8 [onCreate]
  + Utf8 [onCreateOptionsMenu]
  + Utf8 [onStart]
  + Utf8 [setContentView]
  + Utf8 [startActivity]
  + Utf8 [world]

Fields (count = 0):

Methods (count = 5):
  - Method:       <init>()V
    Access flags: 0x1
      = public TitleScreen()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #12
        + Methodref [android/app/Activity.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onCreate(Landroid/os/Bundle;)V
    Access flags: 0x4
      = protected void onCreate(android.os.Bundle)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 19, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #13
        + Methodref [android/app/Activity.onCreate (Landroid/os/Bundle;)V]
      [5] aload_0 v0
      [6] ldc #1
        + Integer [2130903042]
      [8] invokevirtual #20
        + Methodref [me/planetguy/robots/TitleScreen.setContentView (I)V]
      [11] aload_0 v0
      [12] invokevirtual #19
        + Methodref [me/planetguy/robots/TitleScreen.getResources ()Landroid/content/res/Resources;]
      [15] invokestatic #22
        + Methodref [me/planetguy/robots/tile/TileUtil.createAllTiles (Landroid/content/res/Resources;)V]
      [18] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onCreateOptionsMenu(Landroid/view/Menu;)Z
    Access flags: 0x1
      = public boolean onCreateOptionsMenu(android.view.Menu)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #18
        + Methodref [me/planetguy/robots/TitleScreen.getMenuInflater ()Landroid/view/MenuInflater;]
      [4] ldc #2
        + Integer [2131230720]
      [6] aload_1 v1
      [7] invokevirtual #16
        + Methodref [android/view/MenuInflater.inflate (ILandroid/view/Menu;)V]
      [10] iconst_1
      [11] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onStart()V
    Access flags: 0x1
      = public void onStart()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #14
        + Methodref [android/app/Activity.onStart ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onClickStartGame(Landroid/view/View;)V
    Access flags: 0x1
      = public void onClickStartGame(android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 30, locals = 3, stack = 4):
      [0] aload_0 v0
      [1] invokevirtual #17
        + Methodref [me/planetguy/robots/TitleScreen.getApplicationContext ()Landroid/content/Context;]
      [4] invokestatic #23
        + Methodref [me/planetguy/robots/world/World.makeMazeWorld (Landroid/content/Context;)Lme/planetguy/robots/world/World;]
      [7] putstatic #11
        + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
      [10] new #4
        + Class [android/content/Intent]
      [13] dup
      [14] aload_0 v0
      [15] invokevirtual #17
        + Methodref [me/planetguy/robots/TitleScreen.getApplicationContext ()Landroid/content/Context;]
      [18] ldc #8
        + Class [me/planetguy/robots/renderworld/ActivityWorld]
      [20] invokespecial #15
        + Methodref [android/content/Intent.<init> (Landroid/content/Context;Ljava/lang/Class;)V]
      [23] astore_2 v2
      [24] aload_0 v0
      [25] aload_2 v2
      [26] invokevirtual #21
        + Methodref [me/planetguy/robots/TitleScreen.startActivity (Landroid/content/Intent;)V]
      [29] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/dynamic/DynamicObject
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.dynamic.DynamicObject extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 116):
  + String [ ]
  + String [ h=]
  + String [ i=]
  + String [ y=]
  + String [;]
  + String [x=]
  + Class [[Ljava/lang/String;]
  + Class [java/lang/Integer]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/StringBuilder]
  + Class [java/util/ArrayList]
  + Class [me/planetguy/robots/dynamic/DynamicObject]
  + Fieldref [me/planetguy/robots/dynamic/DynamicObject.defaultBitmap Landroid/graphics/Bitmap;]
  + Fieldref [me/planetguy/robots/dynamic/DynamicObject.dynObjectID I]
  + Fieldref [me/planetguy/robots/dynamic/DynamicObject.heading I]
  + Fieldref [me/planetguy/robots/dynamic/DynamicObject.objectRegistry Ljava/util/ArrayList;]
  + Fieldref [me/planetguy/robots/dynamic/DynamicObject.world Lme/planetguy/robots/world/World;]
  + Fieldref [me/planetguy/robots/dynamic/DynamicObject.x I]
  + Fieldref [me/planetguy/robots/dynamic/DynamicObject.y I]
  + Methodref [java/lang/Integer.parseInt (Ljava/lang/String;)I]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/String.charAt (I)C]
  + Methodref [java/lang/String.split (Ljava/lang/String;)[Ljava/lang/String;]
  + Methodref [java/lang/String.substring (I)Ljava/lang/String;]
  + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/ArrayList.<init> ()V]
  + Methodref [java/util/ArrayList.add (Ljava/lang/Object;)Z]
  + Methodref [java/util/ArrayList.indexOf (Ljava/lang/Object;)I]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [add (Ljava/lang/Object;)Z]
  + NameAndType [append (I)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [charAt (I)C]
  + NameAndType [defaultBitmap Landroid/graphics/Bitmap;]
  + NameAndType [dynObjectID I]
  + NameAndType [heading I]
  + NameAndType [indexOf (Ljava/lang/Object;)I]
  + NameAndType [objectRegistry Ljava/util/ArrayList;]
  + NameAndType [parseInt (Ljava/lang/String;)I]
  + NameAndType [split (Ljava/lang/String;)[Ljava/lang/String;]
  + NameAndType [substring (I)Ljava/lang/String;]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [world Lme/planetguy/robots/world/World;]
  + NameAndType [x I]
  + NameAndType [y I]
  + Utf8 [ ]
  + Utf8 [ h=]
  + Utf8 [ i=]
  + Utf8 [ y=]
  + Utf8 [()I]
  + Utf8 [()Landroid/graphics/Bitmap;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(I)C]
  + Utf8 [(I)I]
  + Utf8 [(I)Ljava/lang/String;]
  + Utf8 [(I)Ljava/lang/StringBuilder;]
  + Utf8 [(IILandroid/view/View;)V]
  + Utf8 [(Landroid/view/View;)V]
  + Utf8 [(Landroid/view/View;)Z]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)I]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;)[Ljava/lang/String;]
  + Utf8 [(Lme/planetguy/robots/world/World;)V]
  + Utf8 [;]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [Landroid/graphics/Bitmap;]
  + Utf8 [Ljava/util/ArrayList;]
  + Utf8 [Lme/planetguy/robots/world/World;]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/String;]
  + Utf8 [add]
  + Utf8 [append]
  + Utf8 [charAt]
  + Utf8 [defaultBitmap]
  + Utf8 [dynObjectID]
  + Utf8 [facingX]
  + Utf8 [facingY]
  + Utf8 [getDynamicObjectID]
  + Utf8 [getIcon]
  + Utf8 [heading]
  + Utf8 [indexOf]
  + Utf8 [java/lang/Integer]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/ArrayList]
  + Utf8 [load]
  + Utf8 [me/planetguy/robots/dynamic/DynamicObject]
  + Utf8 [moveTo]
  + Utf8 [objectRegistry]
  + Utf8 [onClicked]
  + Utf8 [onUpdate]
  + Utf8 [parseInt]
  + Utf8 [save]
  + Utf8 [split]
  + Utf8 [substring]
  + Utf8 [toString]
  + Utf8 [turnLeft]
  + Utf8 [turnRight]
  + Utf8 [world]
  + Utf8 [x]
  + Utf8 [x=]
  + Utf8 [y]

Fields (count = 7):
  + Field:        objectRegistry Ljava/util/ArrayList;
    Access flags: 0x9
      = public static java.util.ArrayList objectRegistry
  + Field:        defaultBitmap Landroid/graphics/Bitmap;
    Access flags: 0x9
      = public static android.graphics.Bitmap defaultBitmap
  + Field:        x I
    Access flags: 0x1
      = public int x
  + Field:        y I
    Access flags: 0x1
      = public int y
  + Field:        heading I
    Access flags: 0x1
      = public int heading
  + Field:        world Lme/planetguy/robots/world/World;
    Access flags: 0x1
      = public me.planetguy.robots.world.World world
  + Field:        dynObjectID I
    Access flags: 0x2
      = private int dynObjectID

Methods (count = 13):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 0, stack = 2):
      [0] new #12
        + Class [java/util/ArrayList]
      [3] dup
      [4] invokespecial #30
        + Methodref [java/util/ArrayList.<init> ()V]
      [7] putstatic #17
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.objectRegistry Ljava/util/ArrayList;]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Lme/planetguy/robots/world/World;)V
    Access flags: 0x1
      = public DynamicObject(me.planetguy.robots.world.World)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 34, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #22
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #18
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.world Lme/planetguy/robots/world/World;]
      [9] aload_0 v0
      [10] iconst_0
      [11] putfield #16
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.heading I]
      [14] getstatic #17
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.objectRegistry Ljava/util/ArrayList;]
      [17] aload_0 v0
      [18] invokevirtual #31
        + Methodref [java/util/ArrayList.add (Ljava/lang/Object;)Z]
      [21] pop
      [22] aload_0 v0
      [23] getstatic #17
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.objectRegistry Ljava/util/ArrayList;]
      [26] aload_0 v0
      [27] invokevirtual #32
        + Methodref [java/util/ArrayList.indexOf (Ljava/lang/Object;)I]
      [30] putfield #15
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.dynObjectID I]
      [33] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       facingX(I)I
    Access flags: 0x1
      = public int facingX(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 2, stack = 2):
      [0] iload_1 v1
      [1] iconst_1
      [2] ificmpne +5 (target=7)
      [5] iconst_m1
      [6] ireturn
      [7] iload_1 v1
      [8] iconst_3
      [9] ificmpne +5 (target=14)
      [12] iconst_1
      [13] ireturn
      [14] iconst_0
      [15] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [7] Var: ..., Stack: (empty)
        - [14] Var: ..., Stack: (empty)
  + Method:       facingY(I)I
    Access flags: 0x1
      = public int facingY(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 2, stack = 2):
      [0] iload_1 v1
      [1] ifne +5 (target=6)
      [4] iconst_1
      [5] ireturn
      [6] iload_1 v1
      [7] iconst_2
      [8] ificmpne +5 (target=13)
      [11] iconst_m1
      [12] ireturn
      [13] iconst_0
      [14] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [6] Var: ..., Stack: (empty)
        - [13] Var: ..., Stack: (empty)
  + Method:       onClicked(Landroid/view/View;)Z
    Access flags: 0x1
      = public boolean onClicked(android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 2, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       moveTo(IILandroid/view/View;)V
    Access flags: 0x1
      = public void moveTo(int,int,android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] putfield #19
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.x I]
      [5] aload_0 v0
      [6] iload_2 v2
      [7] putfield #20
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.y I]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       turnLeft()V
    Access flags: 0x1
      = public void turnLeft()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] aload_0 v0
      [2] getfield #16
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.heading I]
      [5] iconst_1
      [6] iadd
      [7] iconst_4
      [8] irem
      [9] putfield #16
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.heading I]
      [12] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       turnRight()V
    Access flags: 0x1
      = public void turnRight()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] aload_0 v0
      [2] getfield #16
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.heading I]
      [5] iconst_3
      [6] iadd
      [7] iconst_4
      [8] irem
      [9] putfield #16
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.heading I]
      [12] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getIcon()Landroid/graphics/Bitmap;
    Access flags: 0x1
      = public android.graphics.Bitmap getIcon()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 4, locals = 1, stack = 1):
      [0] getstatic #14
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.defaultBitmap Landroid/graphics/Bitmap;]
      [3] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getDynamicObjectID()I
    Access flags: 0x1
      = public int getDynamicObjectID()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #15
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.dynObjectID I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onUpdate(Landroid/view/View;)V
    Access flags: 0x1
      = public void onUpdate(android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       save()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String save()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 61, locals = 1, stack = 3):
      [0] new #11
        + Class [java/lang/StringBuilder]
      [3] dup
      [4] ldc #6
        + String [x=]
      [6] invokespecial #26
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [9] aload_0 v0
      [10] getfield #19
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.x I]
      [13] invokevirtual #27
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [16] ldc #4
        + String [ y=]
      [18] invokevirtual #28
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [21] aload_0 v0
      [22] getfield #20
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.y I]
      [25] invokevirtual #27
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [28] ldc #2
        + String [ h=]
      [30] invokevirtual #28
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [33] aload_0 v0
      [34] getfield #16
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.heading I]
      [37] invokevirtual #27
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [40] ldc #3
        + String [ i=]
      [42] invokevirtual #28
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [45] aload_0 v0
      [46] getfield #15
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.dynObjectID I]
      [49] invokevirtual #27
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [52] ldc #5
        + String [;]
      [54] invokevirtual #28
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [57] invokevirtual #29
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [60] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       load(Ljava/lang/String;)V
    Access flags: 0x1
      = public void load(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 136, locals = 10, stack = 2):
      [0] aload_1 v1
      [1] ldc #5
        + String [;]
      [3] invokevirtual #24
        + Methodref [java/lang/String.split (Ljava/lang/String;)[Ljava/lang/String;]
      [6] astore_2 v2
      [7] aload_2 v2
      [8] iconst_0
      [9] aaload
      [10] ldc #1
        + String [ ]
      [12] invokevirtual #24
        + Methodref [java/lang/String.split (Ljava/lang/String;)[Ljava/lang/String;]
      [15] astore_3 v3
      [16] aload_3 v3
      [17] dup
      [18] astore v7
      [20] arraylength
      [21] istore v6
      [23] iconst_0
      [24] istore v5
      [26] goto +102 (target=128)
      [29] aload v7
      [31] iload v5
      [33] aaload
      [34] astore v4
      [36] aload v4
      [38] iconst_2
      [39] invokevirtual #25
        + Methodref [java/lang/String.substring (I)Ljava/lang/String;]
      [42] astore v8
      [44] aload v4
      [46] iconst_0
      [47] invokevirtual #23
        + Methodref [java/lang/String.charAt (I)C]
      [50] istore v9
      [52] iload v9
      [54] bipush 120
      [56] ificmpne +15 (target=71)
      [59] aload_0 v0
      [60] aload v8
      [62] invokestatic #21
        + Methodref [java/lang/Integer.parseInt (Ljava/lang/String;)I]
      [65] putfield #19
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.x I]
      [68] goto +57 (target=125)
      [71] iload v9
      [73] bipush 121
      [75] ificmpne +15 (target=90)
      [78] aload_0 v0
      [79] aload v8
      [81] invokestatic #21
        + Methodref [java/lang/Integer.parseInt (Ljava/lang/String;)I]
      [84] putfield #20
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.y I]
      [87] goto +38 (target=125)
      [90] iload v9
      [92] bipush 104
      [94] ificmpne +15 (target=109)
      [97] aload_0 v0
      [98] aload v8
      [100] invokestatic #21
        + Methodref [java/lang/Integer.parseInt (Ljava/lang/String;)I]
      [103] putfield #16
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.heading I]
      [106] goto +19 (target=125)
      [109] iload v9
      [111] bipush 105
      [113] ificmpne +12 (target=125)
      [116] aload_0 v0
      [117] aload v8
      [119] invokestatic #21
        + Methodref [java/lang/Integer.parseInt (Ljava/lang/String;)I]
      [122] putfield #15
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.dynObjectID I]
      [125] iinc v5, 1
      [128] iload v5
      [130] iload v6
      [132] ificmplt -103 (target=29)
      [135] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [29] Var: [a:me/planetguy/robots/dynamic/DynamicObject][a:java/lang/String][a:[Ljava/lang/String;][a:[Ljava/lang/String;][T][i][i][a:[Ljava/lang/String;], Stack: 
        - [71] Var: [a:me/planetguy/robots/dynamic/DynamicObject][a:java/lang/String][a:[Ljava/lang/String;][a:[Ljava/lang/String;][a:java/lang/String][i][i][a:[Ljava/lang/String;][a:java/lang/String][i], Stack: 
        - [90] Var: ..., Stack: (empty)
        - [109] Var: ..., Stack: (empty)
        - [125] Var: [a:me/planetguy/robots/dynamic/DynamicObject][a:java/lang/String][a:[Ljava/lang/String;][a:[Ljava/lang/String;][T][i][i][a:[Ljava/lang/String;], Stack: 
        - [128] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/event/InitRobotScriptEvent
  Superclass:    me/planetguy/robots/event/InitScriptEvent
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.event.InitRobotScriptEvent extends me.planetguy.robots.event.InitScriptEvent

Interfaces (count = 0):

Constant Pool (count = 10):
  + Class [me/planetguy/robots/event/InitRobotScriptEvent]
  + Class [me/planetguy/robots/event/InitScriptEvent]
  + Methodref [me/planetguy/robots/event/InitScriptEvent.<init> (Lme/planetguy/advancedvm/VMContext;)V]
  + NameAndType [<init> (Lme/planetguy/advancedvm/VMContext;)V]
  + Utf8 [(Lme/planetguy/advancedvm/VMContext;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [me/planetguy/robots/event/InitRobotScriptEvent]
  + Utf8 [me/planetguy/robots/event/InitScriptEvent]

Fields (count = 0):

Methods (count = 1):
  - Method:       <init>(Lme/planetguy/advancedvm/VMContext;)V
    Access flags: 0x1
      = public InitRobotScriptEvent(me.planetguy.advancedvm.VMContext)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #3
        + Methodref [me/planetguy/robots/event/InitScriptEvent.<init> (Lme/planetguy/advancedvm/VMContext;)V]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/event/InitScriptEvent
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x421
    = public abstract class me.planetguy.robots.event.InitScriptEvent extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 17):
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/event/InitScriptEvent]
  + Fieldref [me/planetguy/robots/event/InitScriptEvent.sc Lme/planetguy/advancedvm/VMContext;]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [sc Lme/planetguy/advancedvm/VMContext;]
  + Utf8 [()Lme/planetguy/advancedvm/VMContext;]
  + Utf8 [()V]
  + Utf8 [(Lme/planetguy/advancedvm/VMContext;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Lme/planetguy/advancedvm/VMContext;]
  + Utf8 [getContext]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/robots/event/InitScriptEvent]
  + Utf8 [sc]

Fields (count = 1):
  + Field:        sc Lme/planetguy/advancedvm/VMContext;
    Access flags: 0x12
      = private final me.planetguy.advancedvm.VMContext sc

Methods (count = 2):
  - Method:       <init>(Lme/planetguy/advancedvm/VMContext;)V
    Access flags: 0x1
      = public InitScriptEvent(me.planetguy.advancedvm.VMContext)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #4
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #3
        + Fieldref [me/planetguy/robots/event/InitScriptEvent.sc Lme/planetguy/advancedvm/VMContext;]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getContext()Lme/planetguy/advancedvm/VMContext;
    Access flags: 0x1
      = public me.planetguy.advancedvm.VMContext getContext()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #3
        + Fieldref [me/planetguy/robots/event/InitScriptEvent.sc Lme/planetguy/advancedvm/VMContext;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/ide/IDEActivity
  Superclass:    android/app/Activity
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.ide.IDEActivity extends android.app.Activity

Interfaces (count = 0):

Constant Pool (count = 259):
  + Integer [13]
  + Integer [131072]
  + Integer [268435456]
  + Integer [2130903041]
  + Integer [2131099662]
  + Integer [2131296257]
  + Integer [2131296258]
  + Integer [2131296259]
  + Integer [2131296260]
  + Integer [2131296261]
  + Integer [2131296262]
  + String [, bundle=]
  + String [Code]
  + String [DO reg=]
  + String [Log]
  + String [Manual]
  + String [Memory]
  + String [Robots]
  + String [id]
  + String [input_method]
  + Class [[I]
  + Class [android/app/Activity]
  + Class [android/content/Context]
  + Class [android/content/Intent]
  + Class [android/text/Editable]
  + Class [android/text/method/ScrollingMovementMethod]
  + Class [android/util/Log]
  + Class [android/view/View]
  + Class [android/view/inputmethod/InputMethodManager]
  + Class [android/widget/EditText]
  + Class [android/widget/TextView]
  + Class [android/widget/ToggleButton]
  + Class [java/lang/CharSequence]
  + Class [java/lang/Exception]
  + Class [java/lang/String]
  + Class [java/lang/StringBuilder]
  + Class [java/util/ArrayList]
  + Class [me/planetguy/advancedvm/Script]
  + Class [me/planetguy/robots/Robots]
  + Class [me/planetguy/robots/dynamic/DynamicObject]
  + Class [me/planetguy/robots/ide/IDEActivity]
  + Class [me/planetguy/robots/renderworld/ActivityWorld]
  + Class [me/planetguy/robots/robot/Robot]
  + Fieldref [me/planetguy/advancedvm/Script.source Ljava/lang/String;]
  + Fieldref [me/planetguy/robots/Robots.currentIDE Lme/planetguy/robots/ide/IDEActivity;]
  + Fieldref [me/planetguy/robots/dynamic/DynamicObject.objectRegistry Ljava/util/ArrayList;]
  + Fieldref [me/planetguy/robots/ide/IDEActivity.robot Lme/planetguy/robots/robot/Robot;]
  + Fieldref [me/planetguy/robots/ide/IDEActivity.robotID I]
  + Fieldref [me/planetguy/robots/robot/Robot.log Ljava/lang/String;]
  + Methodref [android/app/Activity.<init> ()V]
  + Methodref [android/app/Activity.onCreate (Landroid/os/Bundle;)V]
  + Methodref [android/app/Activity.onStop ()V]
  + Methodref [android/content/Context.startActivity (Landroid/content/Intent;)V]
  + Methodref [android/content/Intent.<init> (Landroid/content/Context;Ljava/lang/Class;)V]
  + Methodref [android/content/Intent.addFlags (I)Landroid/content/Intent;]
  + Methodref [android/content/Intent.getIntExtra (Ljava/lang/String;I)I]
  + Methodref [android/text/method/ScrollingMovementMethod.<init> ()V]
  + Methodref [android/util/Log.d (Ljava/lang/String;Ljava/lang/String;)I]
  + Methodref [android/view/View.getWindowToken ()Landroid/os/IBinder;]
  + Methodref [android/view/View.requestFocus ()Z]
  + Methodref [android/view/inputmethod/InputMethodManager.hideSoftInputFromWindow (Landroid/os/IBinder;I)Z]
  + Methodref [android/view/inputmethod/InputMethodManager.showSoftInput (Landroid/view/View;I)Z]
  + Methodref [android/widget/EditText.getText ()Landroid/text/Editable;]
  + Methodref [android/widget/EditText.setMovementMethod (Landroid/text/method/MovementMethod;)V]
  + Methodref [android/widget/EditText.setText (Ljava/lang/CharSequence;)V]
  + Methodref [android/widget/TextView.getText ()Ljava/lang/CharSequence;]
  + Methodref [android/widget/TextView.setText (Ljava/lang/CharSequence;)V]
  + Methodref [android/widget/ToggleButton.setChecked (Z)V]
  + Methodref [java/lang/Exception.printStackTrace ()V]
  + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
  + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/ArrayList.get (I)Ljava/lang/Object;]
  + Methodref [me/planetguy/advancedvm/Script.dumpSymbolTable ()Ljava/lang/String;]
  + Methodref [me/planetguy/robots/ide/IDEActivity.chooseButton (I)V]
  + Methodref [me/planetguy/robots/ide/IDEActivity.findViewById (I)Landroid/view/View;]
  + Methodref [me/planetguy/robots/ide/IDEActivity.getApplicationContext ()Landroid/content/Context;]
  + Methodref [me/planetguy/robots/ide/IDEActivity.getIntent ()Landroid/content/Intent;]
  + Methodref [me/planetguy/robots/ide/IDEActivity.getString (I)Ljava/lang/String;]
  + Methodref [me/planetguy/robots/ide/IDEActivity.getSystemService (Ljava/lang/String;)Ljava/lang/Object;]
  + Methodref [me/planetguy/robots/ide/IDEActivity.loadWindow (Ljava/lang/String;Ljava/lang/String;)V]
  + Methodref [me/planetguy/robots/ide/IDEActivity.offerUploadScript ()V]
  + Methodref [me/planetguy/robots/ide/IDEActivity.selectCode (Landroid/view/View;)V]
  + Methodref [me/planetguy/robots/ide/IDEActivity.setContentView (I)V]
  + Methodref [me/planetguy/robots/ide/IDEActivity.setKeyboardVisibility (Z)V]
  + Methodref [me/planetguy/robots/ide/IDEActivity.uploadScript ()V]
  + Methodref [me/planetguy/robots/robot/Robot.getScript ()Lme/planetguy/advancedvm/Script;]
  + Methodref [me/planetguy/robots/robot/Robot.setScript (Ljava/lang/String;)V]
  + InterfaceMethodref [android/text/Editable.toString ()Ljava/lang/String;]
  + InterfaceMethodref [java/lang/CharSequence.toString ()Ljava/lang/String;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Landroid/content/Context;Ljava/lang/Class;)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [addFlags (I)Landroid/content/Intent;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [chooseButton (I)V]
  + NameAndType [currentIDE Lme/planetguy/robots/ide/IDEActivity;]
  + NameAndType [d (Ljava/lang/String;Ljava/lang/String;)I]
  + NameAndType [dumpSymbolTable ()Ljava/lang/String;]
  + NameAndType [equals (Ljava/lang/Object;)Z]
  + NameAndType [findViewById (I)Landroid/view/View;]
  + NameAndType [get (I)Ljava/lang/Object;]
  + NameAndType [getApplicationContext ()Landroid/content/Context;]
  + NameAndType [getIntExtra (Ljava/lang/String;I)I]
  + NameAndType [getIntent ()Landroid/content/Intent;]
  + NameAndType [getScript ()Lme/planetguy/advancedvm/Script;]
  + NameAndType [getString (I)Ljava/lang/String;]
  + NameAndType [getSystemService (Ljava/lang/String;)Ljava/lang/Object;]
  + NameAndType [getText ()Landroid/text/Editable;]
  + NameAndType [getText ()Ljava/lang/CharSequence;]
  + NameAndType [getWindowToken ()Landroid/os/IBinder;]
  + NameAndType [hideSoftInputFromWindow (Landroid/os/IBinder;I)Z]
  + NameAndType [loadWindow (Ljava/lang/String;Ljava/lang/String;)V]
  + NameAndType [log Ljava/lang/String;]
  + NameAndType [objectRegistry Ljava/util/ArrayList;]
  + NameAndType [offerUploadScript ()V]
  + NameAndType [onCreate (Landroid/os/Bundle;)V]
  + NameAndType [onStop ()V]
  + NameAndType [printStackTrace ()V]
  + NameAndType [requestFocus ()Z]
  + NameAndType [robot Lme/planetguy/robots/robot/Robot;]
  + NameAndType [robotID I]
  + NameAndType [selectCode (Landroid/view/View;)V]
  + NameAndType [setChecked (Z)V]
  + NameAndType [setContentView (I)V]
  + NameAndType [setKeyboardVisibility (Z)V]
  + NameAndType [setMovementMethod (Landroid/text/method/MovementMethod;)V]
  + NameAndType [setScript (Ljava/lang/String;)V]
  + NameAndType [setText (Ljava/lang/CharSequence;)V]
  + NameAndType [showSoftInput (Landroid/view/View;I)Z]
  + NameAndType [source Ljava/lang/String;]
  + NameAndType [startActivity (Landroid/content/Intent;)V]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [uploadScript ()V]
  + Utf8 [()Landroid/content/Context;]
  + Utf8 [()Landroid/content/Intent;]
  + Utf8 [()Landroid/os/IBinder;]
  + Utf8 [()Landroid/text/Editable;]
  + Utf8 [()Ljava/lang/CharSequence;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Lme/planetguy/advancedvm/Script;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)Landroid/content/Intent;]
  + Utf8 [(I)Landroid/view/View;]
  + Utf8 [(I)Ljava/lang/Object;]
  + Utf8 [(I)Ljava/lang/String;]
  + Utf8 [(I)V]
  + Utf8 [(Landroid/content/Context;Ljava/lang/Class;)V]
  + Utf8 [(Landroid/content/Intent;)V]
  + Utf8 [(Landroid/os/Bundle;)V]
  + Utf8 [(Landroid/os/IBinder;I)Z]
  + Utf8 [(Landroid/text/method/MovementMethod;)V]
  + Utf8 [(Landroid/view/View;)V]
  + Utf8 [(Landroid/view/View;I)Z]
  + Utf8 [(Ljava/lang/CharSequence;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;I)I]
  + Utf8 [(Ljava/lang/String;Ljava/lang/String;)I]
  + Utf8 [(Ljava/lang/String;Ljava/lang/String;)V]
  + Utf8 [(Z)V]
  + Utf8 [, bundle=]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [ConstantValue]
  + Utf8 [DO reg=]
  + Utf8 [I]
  + Utf8 [Landroid/annotation/TargetApi;]
  + Utf8 [Ljava/lang/String;]
  + Utf8 [Ljava/util/ArrayList;]
  + Utf8 [Lme/planetguy/robots/ide/IDEActivity;]
  + Utf8 [Lme/planetguy/robots/robot/Robot;]
  + Utf8 [Log]
  + Utf8 [Manual]
  + Utf8 [Memory]
  + Utf8 [Robots]
  + Utf8 [RuntimeInvisibleAnnotations]
  + Utf8 [StackMapTable]
  + Utf8 [[I]
  + Utf8 [addFlags]
  + Utf8 [android/app/Activity]
  + Utf8 [android/content/Context]
  + Utf8 [android/content/Intent]
  + Utf8 [android/text/Editable]
  + Utf8 [android/text/method/ScrollingMovementMethod]
  + Utf8 [android/util/Log]
  + Utf8 [android/view/View]
  + Utf8 [android/view/inputmethod/InputMethodManager]
  + Utf8 [android/widget/EditText]
  + Utf8 [android/widget/TextView]
  + Utf8 [android/widget/ToggleButton]
  + Utf8 [append]
  + Utf8 [chooseButton]
  + Utf8 [code]
  + Utf8 [currentIDE]
  + Utf8 [d]
  + Utf8 [docs]
  + Utf8 [dumpSymbolTable]
  + Utf8 [equals]
  + Utf8 [findViewById]
  + Utf8 [get]
  + Utf8 [getApplicationContext]
  + Utf8 [getIntExtra]
  + Utf8 [getIntent]
  + Utf8 [getScript]
  + Utf8 [getString]
  + Utf8 [getSystemService]
  + Utf8 [getText]
  + Utf8 [getWindowToken]
  + Utf8 [hideSoftInputFromWindow]
  + Utf8 [id]
  + Utf8 [input_method]
  + Utf8 [java/lang/CharSequence]
  + Utf8 [java/lang/Exception]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/ArrayList]
  + Utf8 [loadWindow]
  + Utf8 [log]
  + Utf8 [me/planetguy/advancedvm/Script]
  + Utf8 [me/planetguy/robots/Robots]
  + Utf8 [me/planetguy/robots/dynamic/DynamicObject]
  + Utf8 [me/planetguy/robots/ide/IDEActivity]
  + Utf8 [me/planetguy/robots/renderworld/ActivityWorld]
  + Utf8 [me/planetguy/robots/robot/Robot]
  + Utf8 [memory]
  + Utf8 [objectRegistry]
  + Utf8 [offerUploadScript]
  + Utf8 [onBackPressed]
  + Utf8 [onCreate]
  + Utf8 [onStop]
  + Utf8 [printStackTrace]
  + Utf8 [requestFocus]
  + Utf8 [robot]
  + Utf8 [robotID]
  + Utf8 [selectCode]
  + Utf8 [selectDocs]
  + Utf8 [selectLog]
  + Utf8 [selectMemory]
  + Utf8 [setChecked]
  + Utf8 [setContentView]
  + Utf8 [setKeyboardVisibility]
  + Utf8 [setMovementMethod]
  + Utf8 [setScript]
  + Utf8 [setText]
  + Utf8 [showSoftInput]
  + Utf8 [source]
  + Utf8 [startActivity]
  + Utf8 [toString]
  + Utf8 [uploadScript]
  + Utf8 [value]

Fields (count = 6):
  + Field:        robot Lme/planetguy/robots/robot/Robot;
    Access flags: 0x1
      = public me.planetguy.robots.robot.Robot robot
  + Field:        robotID I
    Access flags: 0x9
      = public static int robotID
  + Field:        code Ljava/lang/String;
    Access flags: 0x19
      = public static final java.lang.String code
    Class member attributes (count = 1):
    + Constant value attribute:
    + String [Code]
  + Field:        log Ljava/lang/String;
    Access flags: 0x19
      = public static final java.lang.String log
    Class member attributes (count = 1):
    + Constant value attribute:
    + String [Log]
  + Field:        memory Ljava/lang/String;
    Access flags: 0x19
      = public static final java.lang.String memory
    Class member attributes (count = 1):
    + Constant value attribute:
    + String [Memory]
  + Field:        docs Ljava/lang/String;
    Access flags: 0x19
      = public static final java.lang.String docs
    Class member attributes (count = 1):
    + Constant value attribute:
    + String [Manual]

Methods (count = 13):
  - Method:       <init>()V
    Access flags: 0x1
      = public IDEActivity()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #50
        + Methodref [android/app/Activity.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onCreate(Landroid/os/Bundle;)V
    Access flags: 0x4
      = protected void onCreate(android.os.Bundle)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 106, locals = 4, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #51
        + Methodref [android/app/Activity.onCreate (Landroid/os/Bundle;)V]
      [5] aload_0 v0
      [6] invokevirtual #80
        + Methodref [me/planetguy/robots/ide/IDEActivity.getIntent ()Landroid/content/Intent;]
      [9] astore_2 v2
      [10] aload_0 v0
      [11] ldc #4
        + Integer [2130903041]
      [13] invokevirtual #86
        + Methodref [me/planetguy/robots/ide/IDEActivity.setContentView (I)V]
      [16] ldc #18
        + String [Robots]
      [18] new #36
        + Class [java/lang/StringBuilder]
      [21] dup
      [22] ldc #14
        + String [DO reg=]
      [24] invokespecial #71
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [27] getstatic #46
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.objectRegistry Ljava/util/ArrayList;]
      [30] invokevirtual #72
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [33] ldc #12
        + String [, bundle=]
      [35] invokevirtual #73
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [38] aload_1 v1
      [39] invokevirtual #72
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [42] invokevirtual #74
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [45] invokestatic #58
        + Methodref [android/util/Log.d (Ljava/lang/String;Ljava/lang/String;)I]
      [48] pop
      [49] aload_2 v2
      [50] ldc #19
        + String [id]
      [52] iconst_m1
      [53] invokevirtual #56
        + Methodref [android/content/Intent.getIntExtra (Ljava/lang/String;I)I]
      [56] putstatic #48
        + Fieldref [me/planetguy/robots/ide/IDEActivity.robotID I]
      [59] aload_0 v0
      [60] getstatic #46
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.objectRegistry Ljava/util/ArrayList;]
      [63] getstatic #48
        + Fieldref [me/planetguy/robots/ide/IDEActivity.robotID I]
      [66] invokevirtual #75
        + Methodref [java/util/ArrayList.get (I)Ljava/lang/Object;]
      [69] checkcast #43
        + Class [me/planetguy/robots/robot/Robot]
      [72] putfield #47
        + Fieldref [me/planetguy/robots/ide/IDEActivity.robot Lme/planetguy/robots/robot/Robot;]
      [75] aload_0 v0
      [76] putstatic #45
        + Fieldref [me/planetguy/robots/Robots.currentIDE Lme/planetguy/robots/ide/IDEActivity;]
      [79] aload_0 v0
      [80] ldc #7
        + Integer [2131296258]
      [82] invokevirtual #78
        + Methodref [me/planetguy/robots/ide/IDEActivity.findViewById (I)Landroid/view/View;]
      [85] checkcast #30
        + Class [android/widget/EditText]
      [88] astore_3 v3
      [89] aload_3 v3
      [90] new #26
        + Class [android/text/method/ScrollingMovementMethod]
      [93] dup
      [94] invokespecial #57
        + Methodref [android/text/method/ScrollingMovementMethod.<init> ()V]
      [97] invokevirtual #64
        + Methodref [android/widget/EditText.setMovementMethod (Landroid/text/method/MovementMethod;)V]
      [100] aload_0 v0
      [101] aconst_null
      [102] invokevirtual #85
        + Methodref [me/planetguy/robots/ide/IDEActivity.selectCode (Landroid/view/View;)V]
      [105] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onBackPressed()V
    Access flags: 0x1
      = public void onBackPressed()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 38, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] invokevirtual #84
        + Methodref [me/planetguy/robots/ide/IDEActivity.offerUploadScript ()V]
      [4] new #24
        + Class [android/content/Intent]
      [7] dup
      [8] aload_0 v0
      [9] ldc #42
        + Class [me/planetguy/robots/renderworld/ActivityWorld]
      [11] invokespecial #54
        + Methodref [android/content/Intent.<init> (Landroid/content/Context;Ljava/lang/Class;)V]
      [14] astore_1 v1
      [15] aload_1 v1
      [16] ldc #2
        + Integer [131072]
      [18] invokevirtual #55
        + Methodref [android/content/Intent.addFlags (I)Landroid/content/Intent;]
      [21] pop
      [22] aload_1 v1
      [23] ldc #3
        + Integer [268435456]
      [25] invokevirtual #55
        + Methodref [android/content/Intent.addFlags (I)Landroid/content/Intent;]
      [28] pop
      [29] aload_0 v0
      [30] invokevirtual #79
        + Methodref [me/planetguy/robots/ide/IDEActivity.getApplicationContext ()Landroid/content/Context;]
      [33] aload_1 v1
      [34] invokevirtual #53
        + Methodref [android/content/Context.startActivity (Landroid/content/Intent;)V]
      [37] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       uploadScript()V
    Access flags: 0x2
      = private void uploadScript()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 35, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] ldc #7
        + Integer [2131296258]
      [3] invokevirtual #78
        + Methodref [me/planetguy/robots/ide/IDEActivity.findViewById (I)Landroid/view/View;]
      [6] checkcast #30
        + Class [android/widget/EditText]
      [9] astore_1 v1
      [10] aload_0 v0
      [11] getfield #47
        + Fieldref [me/planetguy/robots/ide/IDEActivity.robot Lme/planetguy/robots/robot/Robot;]
      [14] aload_1 v1
      [15] invokevirtual #63
        + Methodref [android/widget/EditText.getText ()Landroid/text/Editable;]
      [18] invokeinterface #91
        + InterfaceMethodref [android/text/Editable.toString ()Ljava/lang/String;]
      [23] invokevirtual #90
        + Methodref [me/planetguy/robots/robot/Robot.setScript (Ljava/lang/String;)V]
      [26] goto +8 (target=34)
      [29] astore_2 v2
      [30] aload_2 v2
      [31] invokevirtual #69
        + Methodref [java/lang/Exception.printStackTrace ()V]
      [34] return
      Code attribute exceptions (count = 1):
      - ExceptionInfo (10 -> 26: 29):
      + Class [java/lang/Exception]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [29] Var: [a:me/planetguy/robots/ide/IDEActivity][a:android/widget/EditText], Stack: [a:java/lang/Exception]
        - [34] Var: ..., Stack: (empty)
  + Method:       offerUploadScript()V
    Access flags: 0x1
      = public void offerUploadScript()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 32, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] ldc #6
        + Integer [2131296257]
      [3] invokevirtual #78
        + Methodref [me/planetguy/robots/ide/IDEActivity.findViewById (I)Landroid/view/View;]
      [6] checkcast #31
        + Class [android/widget/TextView]
      [9] invokevirtual #66
        + Methodref [android/widget/TextView.getText ()Ljava/lang/CharSequence;]
      [12] invokeinterface #92
        + InterfaceMethodref [java/lang/CharSequence.toString ()Ljava/lang/String;]
      [17] astore_1 v1
      [18] aload_1 v1
      [19] ldc #13
        + String [Code]
      [21] invokevirtual #70
        + Methodref [java/lang/String.equals (Ljava/lang/Object;)Z]
      [24] ifeq +7 (target=31)
      [27] aload_0 v0
      [28] invokespecial #88
        + Methodref [me/planetguy/robots/ide/IDEActivity.uploadScript ()V]
      [31] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [31] Var: ...[a:java/lang/String], Stack: (empty)
  + Method:       selectCode(Landroid/view/View;)V
    Access flags: 0x1
      = public void selectCode(android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 42, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #84
        + Methodref [me/planetguy/robots/ide/IDEActivity.offerUploadScript ()V]
      [4] aload_0 v0
      [5] ldc #8
        + Integer [2131296259]
      [7] invokevirtual #77
        + Methodref [me/planetguy/robots/ide/IDEActivity.chooseButton (I)V]
      [10] aload_0 v0
      [11] ldc #13
        + String [Code]
      [13] aload_0 v0
      [14] getfield #47
        + Fieldref [me/planetguy/robots/ide/IDEActivity.robot Lme/planetguy/robots/robot/Robot;]
      [17] invokevirtual #89
        + Methodref [me/planetguy/robots/robot/Robot.getScript ()Lme/planetguy/advancedvm/Script;]
      [20] getfield #44
        + Fieldref [me/planetguy/advancedvm/Script.source Ljava/lang/String;]
      [23] invokevirtual #83
        + Methodref [me/planetguy/robots/ide/IDEActivity.loadWindow (Ljava/lang/String;Ljava/lang/String;)V]
      [26] aload_0 v0
      [27] iconst_1
      [28] invokevirtual #87
        + Methodref [me/planetguy/robots/ide/IDEActivity.setKeyboardVisibility (Z)V]
      [31] aload_0 v0
      [32] ldc #7
        + Integer [2131296258]
      [34] invokevirtual #78
        + Methodref [me/planetguy/robots/ide/IDEActivity.findViewById (I)Landroid/view/View;]
      [37] invokevirtual #60
        + Methodref [android/view/View.requestFocus ()Z]
      [40] pop
      [41] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       selectLog(Landroid/view/View;)V
    Access flags: 0x1
      = public void selectLog(android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 29, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #84
        + Methodref [me/planetguy/robots/ide/IDEActivity.offerUploadScript ()V]
      [4] aload_0 v0
      [5] ldc #10
        + Integer [2131296261]
      [7] invokevirtual #77
        + Methodref [me/planetguy/robots/ide/IDEActivity.chooseButton (I)V]
      [10] aload_0 v0
      [11] ldc #15
        + String [Log]
      [13] aload_0 v0
      [14] getfield #47
        + Fieldref [me/planetguy/robots/ide/IDEActivity.robot Lme/planetguy/robots/robot/Robot;]
      [17] getfield #49
        + Fieldref [me/planetguy/robots/robot/Robot.log Ljava/lang/String;]
      [20] invokevirtual #83
        + Methodref [me/planetguy/robots/ide/IDEActivity.loadWindow (Ljava/lang/String;Ljava/lang/String;)V]
      [23] aload_0 v0
      [24] iconst_0
      [25] invokevirtual #87
        + Methodref [me/planetguy/robots/ide/IDEActivity.setKeyboardVisibility (Z)V]
      [28] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       selectMemory(Landroid/view/View;)V
    Access flags: 0x1
      = public void selectMemory(android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 32, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #84
        + Methodref [me/planetguy/robots/ide/IDEActivity.offerUploadScript ()V]
      [4] aload_0 v0
      [5] ldc #9
        + Integer [2131296260]
      [7] invokevirtual #77
        + Methodref [me/planetguy/robots/ide/IDEActivity.chooseButton (I)V]
      [10] aload_0 v0
      [11] ldc #17
        + String [Memory]
      [13] aload_0 v0
      [14] getfield #47
        + Fieldref [me/planetguy/robots/ide/IDEActivity.robot Lme/planetguy/robots/robot/Robot;]
      [17] invokevirtual #89
        + Methodref [me/planetguy/robots/robot/Robot.getScript ()Lme/planetguy/advancedvm/Script;]
      [20] invokevirtual #76
        + Methodref [me/planetguy/advancedvm/Script.dumpSymbolTable ()Ljava/lang/String;]
      [23] invokevirtual #83
        + Methodref [me/planetguy/robots/ide/IDEActivity.loadWindow (Ljava/lang/String;Ljava/lang/String;)V]
      [26] aload_0 v0
      [27] iconst_0
      [28] invokevirtual #87
        + Methodref [me/planetguy/robots/ide/IDEActivity.setKeyboardVisibility (Z)V]
      [31] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       selectDocs(Landroid/view/View;)V
    Access flags: 0x1
      = public void selectDocs(android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 28, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] invokevirtual #84
        + Methodref [me/planetguy/robots/ide/IDEActivity.offerUploadScript ()V]
      [4] aload_0 v0
      [5] ldc #11
        + Integer [2131296262]
      [7] invokevirtual #77
        + Methodref [me/planetguy/robots/ide/IDEActivity.chooseButton (I)V]
      [10] aload_0 v0
      [11] ldc #16
        + String [Manual]
      [13] aload_0 v0
      [14] ldc #5
        + Integer [2131099662]
      [16] invokevirtual #81
        + Methodref [me/planetguy/robots/ide/IDEActivity.getString (I)Ljava/lang/String;]
      [19] invokevirtual #83
        + Methodref [me/planetguy/robots/ide/IDEActivity.loadWindow (Ljava/lang/String;Ljava/lang/String;)V]
      [22] aload_0 v0
      [23] iconst_0
      [24] invokevirtual #87
        + Methodref [me/planetguy/robots/ide/IDEActivity.setKeyboardVisibility (Z)V]
      [27] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onStop()V
    Access flags: 0x1
      = public void onStop()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #52
        + Methodref [android/app/Activity.onStop ()V]
      [4] aload_0 v0
      [5] invokevirtual #84
        + Methodref [me/planetguy/robots/ide/IDEActivity.offerUploadScript ()V]
      [8] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       loadWindow(Ljava/lang/String;Ljava/lang/String;)V
    Access flags: 0x1
      = public void loadWindow(java.lang.String,java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 33, locals = 5, stack = 2):
      [0] aload_0 v0
      [1] ldc #7
        + Integer [2131296258]
      [3] invokevirtual #78
        + Methodref [me/planetguy/robots/ide/IDEActivity.findViewById (I)Landroid/view/View;]
      [6] checkcast #30
        + Class [android/widget/EditText]
      [9] astore_3 v3
      [10] aload_3 v3
      [11] aload_2 v2
      [12] invokevirtual #65
        + Methodref [android/widget/EditText.setText (Ljava/lang/CharSequence;)V]
      [15] aload_0 v0
      [16] ldc #6
        + Integer [2131296257]
      [18] invokevirtual #78
        + Methodref [me/planetguy/robots/ide/IDEActivity.findViewById (I)Landroid/view/View;]
      [21] checkcast #31
        + Class [android/widget/TextView]
      [24] astore v4
      [26] aload v4
      [28] aload_1 v1
      [29] invokevirtual #67
        + Methodref [android/widget/TextView.setText (Ljava/lang/CharSequence;)V]
      [32] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       chooseButton(I)V
    Access flags: 0x1
      = public void chooseButton(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 77, locals = 7, stack = 4):
      [0] iconst_4
      [1] newarray 10
      [3] dup
      [4] iconst_0
      [5] ldc #8
        + Integer [2131296259]
      [7] iastore
      [8] dup
      [9] iconst_1
      [10] ldc #9
        + Integer [2131296260]
      [12] iastore
      [13] dup
      [14] iconst_2
      [15] ldc #10
        + Integer [2131296261]
      [17] iastore
      [18] dup
      [19] iconst_3
      [20] ldc #11
        + Integer [2131296262]
      [22] iastore
      [23] dup
      [24] astore v5
      [26] arraylength
      [27] istore v4
      [29] iconst_0
      [30] istore_3 v3
      [31] goto +27 (target=58)
      [34] aload v5
      [36] iload_3 v3
      [37] iaload
      [38] istore_2 v2
      [39] aload_0 v0
      [40] iload_2 v2
      [41] invokevirtual #78
        + Methodref [me/planetguy/robots/ide/IDEActivity.findViewById (I)Landroid/view/View;]
      [44] checkcast #32
        + Class [android/widget/ToggleButton]
      [47] astore v6
      [49] aload v6
      [51] iconst_0
      [52] invokevirtual #68
        + Methodref [android/widget/ToggleButton.setChecked (Z)V]
      [55] iinc v3, 1
      [58] iload_3 v3
      [59] iload v4
      [61] ificmplt -27 (target=34)
      [64] aload_0 v0
      [65] iload_1 v1
      [66] invokevirtual #78
        + Methodref [me/planetguy/robots/ide/IDEActivity.findViewById (I)Landroid/view/View;]
      [69] checkcast #32
        + Class [android/widget/ToggleButton]
      [72] iconst_1
      [73] invokevirtual #68
        + Methodref [android/widget/ToggleButton.setChecked (Z)V]
      [76] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [34] Var: [a:me/planetguy/robots/ide/IDEActivity][i][T][i][i][a:[I], Stack: 
        - [58] Var: ..., Stack: (empty)
  + Method:       setKeyboardVisibility(Z)V
    Access flags: 0x1
      = public void setKeyboardVisibility(boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 51, locals = 2, stack = 3):
      [0] iload_1 v1
      [1] ifeq +26 (target=27)
      [4] aload_0 v0
      [5] ldc #20
        + String [input_method]
      [7] invokevirtual #82
        + Methodref [me/planetguy/robots/ide/IDEActivity.getSystemService (Ljava/lang/String;)Ljava/lang/Object;]
      [10] checkcast #29
        + Class [android/view/inputmethod/InputMethodManager]
      [13] aload_0 v0
      [14] ldc #7
        + Integer [2131296258]
      [16] invokevirtual #78
        + Methodref [me/planetguy/robots/ide/IDEActivity.findViewById (I)Landroid/view/View;]
      [19] iconst_1
      [20] invokevirtual #62
        + Methodref [android/view/inputmethod/InputMethodManager.showSoftInput (Landroid/view/View;I)Z]
      [23] pop
      [24] goto +26 (target=50)
      [27] aload_0 v0
      [28] ldc #20
        + String [input_method]
      [30] invokevirtual #82
        + Methodref [me/planetguy/robots/ide/IDEActivity.getSystemService (Ljava/lang/String;)Ljava/lang/Object;]
      [33] checkcast #29
        + Class [android/view/inputmethod/InputMethodManager]
      [36] aload_0 v0
      [37] ldc #7
        + Integer [2131296258]
      [39] invokevirtual #78
        + Methodref [me/planetguy/robots/ide/IDEActivity.findViewById (I)Landroid/view/View;]
      [42] invokevirtual #59
        + Methodref [android/view/View.getWindowToken ()Landroid/os/IBinder;]
      [45] iconst_0
      [46] invokevirtual #61
        + Methodref [android/view/inputmethod/InputMethodManager.hideSoftInputFromWindow (Landroid/os/IBinder;I)Z]
      [49] pop
      [50] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [27] Var: ..., Stack: (empty)
        - [50] Var: ..., Stack: (empty)

Class file attributes (count = 1):
  + Runtime invisible annotations attribute:
    - Annotation [Landroid/annotation/TargetApi;]:
      - Constant element value [value '73']
        + Integer [13]

_____________________________________________________________________
+ Program class: me/planetguy/robots/misc/Options
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.misc.Options extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 18):
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/misc/Options]
  + Fieldref [me/planetguy/robots/misc/Options.ROBOT_TICKS_PER_UPDATE I]
  + Fieldref [me/planetguy/robots/misc/Options.millisPerTick I]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [ROBOT_TICKS_PER_UPDATE I]
  + NameAndType [millisPerTick I]
  + Utf8 [()V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [ROBOT_TICKS_PER_UPDATE]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/robots/misc/Options]
  + Utf8 [millisPerTick]

Fields (count = 2):
  + Field:        ROBOT_TICKS_PER_UPDATE I
    Access flags: 0x9
      = public static int ROBOT_TICKS_PER_UPDATE
  + Field:        millisPerTick I
    Access flags: 0x9
      = public static int millisPerTick

Methods (count = 2):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 0, stack = 1):
      [0] iconst_3
      [1] putstatic #3
        + Fieldref [me/planetguy/robots/misc/Options.ROBOT_TICKS_PER_UPDATE I]
      [4] sipush 500
      [7] putstatic #4
        + Fieldref [me/planetguy/robots/misc/Options.millisPerTick I]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>()V
    Access flags: 0x1
      = public Options()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #5
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/misc/Side
  Superclass:    java/lang/Enum
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4031
    = public final enum enum me.planetguy.robots.misc.Side extends java.lang.Enum

Interfaces (count = 0):

Constant Pool (count = 43):
  + String [BLUE]
  + String [NEUTRAL]
  + String [RED]
  + Class [java/lang/Enum]
  + Class [java/lang/System]
  + Class [me/planetguy/robots/misc/Side]
  + Fieldref [me/planetguy/robots/misc/Side.BLUE Lme/planetguy/robots/misc/Side;]
  + Fieldref [me/planetguy/robots/misc/Side.ENUM$VALUES [Lme/planetguy/robots/misc/Side;]
  + Fieldref [me/planetguy/robots/misc/Side.NEUTRAL Lme/planetguy/robots/misc/Side;]
  + Fieldref [me/planetguy/robots/misc/Side.RED Lme/planetguy/robots/misc/Side;]
  + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Methodref [java/lang/System.arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
  + Methodref [me/planetguy/robots/misc/Side.<init> (Ljava/lang/String;I)V]
  + NameAndType [<init> (Ljava/lang/String;I)V]
  + NameAndType [BLUE Lme/planetguy/robots/misc/Side;]
  + NameAndType [ENUM$VALUES [Lme/planetguy/robots/misc/Side;]
  + NameAndType [NEUTRAL Lme/planetguy/robots/misc/Side;]
  + NameAndType [RED Lme/planetguy/robots/misc/Side;]
  + NameAndType [arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
  + NameAndType [valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [()V]
  + Utf8 [()[Lme/planetguy/robots/misc/Side;]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;II)V]
  + Utf8 [(Ljava/lang/String;)Lme/planetguy/robots/misc/Side;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [BLUE]
  + Utf8 [Code]
  + Utf8 [ENUM$VALUES]
  + Utf8 [Lme/planetguy/robots/misc/Side;]
  + Utf8 [NEUTRAL]
  + Utf8 [RED]
  + Utf8 [[Lme/planetguy/robots/misc/Side;]
  + Utf8 [arraycopy]
  + Utf8 [java/lang/Enum]
  + Utf8 [java/lang/System]
  + Utf8 [me/planetguy/robots/misc/Side]
  + Utf8 [valueOf]
  + Utf8 [values]

Fields (count = 4):
  + Field:        RED Lme/planetguy/robots/misc/Side;
    Access flags: 0x4019
      = public static final me.planetguy.robots.misc.Side RED
  + Field:        BLUE Lme/planetguy/robots/misc/Side;
    Access flags: 0x4019
      = public static final me.planetguy.robots.misc.Side BLUE
  + Field:        NEUTRAL Lme/planetguy/robots/misc/Side;
    Access flags: 0x4019
      = public static final me.planetguy.robots.misc.Side NEUTRAL
  + Field:        ENUM$VALUES [Lme/planetguy/robots/misc/Side;
    Access flags: 0x101a
      = private static final synthetic me.planetguy.robots.misc.Side[] ENUM$VALUES

Methods (count = 4):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 65, locals = 0, stack = 4):
      [0] new #6
        + Class [me/planetguy/robots/misc/Side]
      [3] dup
      [4] ldc #3
        + String [RED]
      [6] iconst_0
      [7] invokespecial #14
        + Methodref [me/planetguy/robots/misc/Side.<init> (Ljava/lang/String;I)V]
      [10] putstatic #10
        + Fieldref [me/planetguy/robots/misc/Side.RED Lme/planetguy/robots/misc/Side;]
      [13] new #6
        + Class [me/planetguy/robots/misc/Side]
      [16] dup
      [17] ldc #1
        + String [BLUE]
      [19] iconst_1
      [20] invokespecial #14
        + Methodref [me/planetguy/robots/misc/Side.<init> (Ljava/lang/String;I)V]
      [23] putstatic #7
        + Fieldref [me/planetguy/robots/misc/Side.BLUE Lme/planetguy/robots/misc/Side;]
      [26] new #6
        + Class [me/planetguy/robots/misc/Side]
      [29] dup
      [30] ldc #2
        + String [NEUTRAL]
      [32] iconst_2
      [33] invokespecial #14
        + Methodref [me/planetguy/robots/misc/Side.<init> (Ljava/lang/String;I)V]
      [36] putstatic #9
        + Fieldref [me/planetguy/robots/misc/Side.NEUTRAL Lme/planetguy/robots/misc/Side;]
      [39] iconst_3
      [40] anewarray #6
        + Class [me/planetguy/robots/misc/Side]
      [43] dup
      [44] iconst_0
      [45] getstatic #10
        + Fieldref [me/planetguy/robots/misc/Side.RED Lme/planetguy/robots/misc/Side;]
      [48] aastore
      [49] dup
      [50] iconst_1
      [51] getstatic #7
        + Fieldref [me/planetguy/robots/misc/Side.BLUE Lme/planetguy/robots/misc/Side;]
      [54] aastore
      [55] dup
      [56] iconst_2
      [57] getstatic #9
        + Fieldref [me/planetguy/robots/misc/Side.NEUTRAL Lme/planetguy/robots/misc/Side;]
      [60] aastore
      [61] putstatic #8
        + Fieldref [me/planetguy/robots/misc/Side.ENUM$VALUES [Lme/planetguy/robots/misc/Side;]
      [64] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x2
      = private Side(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #11
        + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       values()[Lme/planetguy/robots/misc/Side;
    Access flags: 0x9
      = public static me.planetguy.robots.misc.Side[] values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 3, stack = 5):
      [0] getstatic #8
        + Fieldref [me/planetguy/robots/misc/Side.ENUM$VALUES [Lme/planetguy/robots/misc/Side;]
      [3] dup
      [4] astore_0 v0
      [5] iconst_0
      [6] aload_0 v0
      [7] arraylength
      [8] dup
      [9] istore_1 v1
      [10] anewarray #6
        + Class [me/planetguy/robots/misc/Side]
      [13] dup
      [14] astore_2 v2
      [15] iconst_0
      [16] iload_1 v1
      [17] invokestatic #13
        + Methodref [java/lang/System.arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
      [20] aload_2 v2
      [21] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       valueOf(Ljava/lang/String;)Lme/planetguy/robots/misc/Side;
    Access flags: 0x9
      = public static me.planetguy.robots.misc.Side valueOf(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 2):
      [0] ldc #6
        + Class [me/planetguy/robots/misc/Side]
      [2] aload_0 v0
      [3] invokestatic #12
        + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
      [6] checkcast #6
        + Class [me/planetguy/robots/misc/Side]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/misc/Utils
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.misc.Utils extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 52):
  + String []
  + Class [[B]
  + Class [java/io/FileInputStream]
  + Class [java/io/FileOutputStream]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/StringBuffer]
  + Class [me/planetguy/robots/misc/Utils]
  + Methodref [java/io/FileInputStream.read ([B)I]
  + Methodref [java/io/FileOutputStream.write ([B)V]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/String.<init> ([B)V]
  + Methodref [java/lang/String.getBytes ()[B]
  + Methodref [java/lang/StringBuffer.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;]
  + Methodref [java/lang/StringBuffer.toString ()Ljava/lang/String;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [<init> ([B)V]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuffer;]
  + NameAndType [getBytes ()[B]
  + NameAndType [read ([B)I]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [write ([B)V]
  + Utf8 []
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [()[B]
  + Utf8 [(Ljava/io/FileInputStream;)Ljava/lang/String;]
  + Utf8 [(Ljava/io/FileOutputStream;Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuffer;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [([B)I]
  + Utf8 [([B)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [StackMapTable]
  + Utf8 [[B]
  + Utf8 [append]
  + Utf8 [getBytes]
  + Utf8 [java/io/FileInputStream]
  + Utf8 [java/io/FileOutputStream]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/StringBuffer]
  + Utf8 [me/planetguy/robots/misc/Utils]
  + Utf8 [read]
  + Utf8 [readStringFile]
  + Utf8 [toString]
  + Utf8 [write]
  + Utf8 [writeStringFile]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x1
      = public Utils()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #11
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       readStringFile(Ljava/io/FileInputStream;)Ljava/lang/String;
    Access flags: 0x9
      = public static java.lang.String readStringFile(java.io.FileInputStream)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 46, locals = 3, stack = 4):
      [0] new #7
        + Class [java/lang/StringBuffer]
      [3] dup
      [4] ldc #1
        + String []
      [6] invokespecial #14
        + Methodref [java/lang/StringBuffer.<init> (Ljava/lang/String;)V]
      [9] astore_1 v1
      [10] sipush 1024
      [13] newarray 8
      [15] astore_2 v2
      [16] goto +16 (target=32)
      [19] aload_1 v1
      [20] new #6
        + Class [java/lang/String]
      [23] dup
      [24] aload_2 v2
      [25] invokespecial #12
        + Methodref [java/lang/String.<init> ([B)V]
      [28] invokevirtual #15
        + Methodref [java/lang/StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;]
      [31] pop
      [32] aload_0 v0
      [33] aload_2 v2
      [34] invokevirtual #9
        + Methodref [java/io/FileInputStream.read ([B)I]
      [37] iconst_m1
      [38] ificmpne -19 (target=19)
      [41] aload_1 v1
      [42] invokevirtual #16
        + Methodref [java/lang/StringBuffer.toString ()Ljava/lang/String;]
      [45] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [19] Var: ...[a:java/lang/StringBuffer][a:[B], Stack: (empty)
        - [32] Var: ..., Stack: (empty)
  + Method:       writeStringFile(Ljava/io/FileOutputStream;Ljava/lang/String;)V
    Access flags: 0x9
      = public static void writeStringFile(java.io.FileOutputStream,java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokevirtual #13
        + Methodref [java/lang/String.getBytes ()[B]
      [5] invokevirtual #10
        + Methodref [java/io/FileOutputStream.write ([B)V]
      [8] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/renderworld/ActivityWorld
  Superclass:    android/app/Activity
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.renderworld.ActivityWorld extends android.app.Activity

Interfaces (count = 0):

Constant Pool (count = 132):
  + Integer [2131230720]
  + String []
  + String [dynObjectData]
  + String [robot_]
  + Class [android/app/Activity]
  + Class [android/content/SharedPreferences]
  + Class [android/content/SharedPreferences$Editor]
  + Class [android/view/MenuInflater]
  + Class [java/lang/StringBuilder]
  + Class [java/util/Iterator]
  + Class [java/util/List]
  + Class [me/planetguy/robots/Robots]
  + Class [me/planetguy/robots/dynamic/DynamicObject]
  + Class [me/planetguy/robots/renderworld/ActivityWorld]
  + Class [me/planetguy/robots/renderworld/ViewWorld]
  + Class [me/planetguy/robots/world/World]
  + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
  + Fieldref [me/planetguy/robots/renderworld/ActivityWorld.vw Lme/planetguy/robots/renderworld/ViewWorld;]
  + Fieldref [me/planetguy/robots/world/World.robots Ljava/util/List;]
  + Methodref [android/app/Activity.<init> ()V]
  + Methodref [android/app/Activity.onCreate (Landroid/os/Bundle;)V]
  + Methodref [android/app/Activity.onStop ()V]
  + Methodref [android/view/MenuInflater.inflate (ILandroid/view/Menu;)V]
  + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [me/planetguy/robots/dynamic/DynamicObject.<init> (Lme/planetguy/robots/world/World;)V]
  + Methodref [me/planetguy/robots/dynamic/DynamicObject.load (Ljava/lang/String;)V]
  + Methodref [me/planetguy/robots/dynamic/DynamicObject.save ()Ljava/lang/String;]
  + Methodref [me/planetguy/robots/renderworld/ActivityWorld.getMenuInflater ()Landroid/view/MenuInflater;]
  + Methodref [me/planetguy/robots/renderworld/ActivityWorld.getSharedPreferences (Ljava/lang/String;I)Landroid/content/SharedPreferences;]
  + Methodref [me/planetguy/robots/renderworld/ActivityWorld.setContentView (Landroid/view/View;)V]
  + Methodref [me/planetguy/robots/renderworld/ViewWorld.<init> (Landroid/content/Context;)V]
  + Methodref [me/planetguy/robots/renderworld/ViewWorld.invalidate ()V]
  + InterfaceMethodref [android/content/SharedPreferences.contains (Ljava/lang/String;)Z]
  + InterfaceMethodref [android/content/SharedPreferences.edit ()Landroid/content/SharedPreferences$Editor;]
  + InterfaceMethodref [android/content/SharedPreferences.getString (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;]
  + InterfaceMethodref [android/content/SharedPreferences$Editor.commit ()Z]
  + InterfaceMethodref [android/content/SharedPreferences$Editor.putString (Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/List.iterator ()Ljava/util/Iterator;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Landroid/content/Context;)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (Lme/planetguy/robots/world/World;)V]
  + NameAndType [append (I)Ljava/lang/StringBuilder;]
  + NameAndType [commit ()Z]
  + NameAndType [contains (Ljava/lang/String;)Z]
  + NameAndType [edit ()Landroid/content/SharedPreferences$Editor;]
  + NameAndType [getMenuInflater ()Landroid/view/MenuInflater;]
  + NameAndType [getSharedPreferences (Ljava/lang/String;I)Landroid/content/SharedPreferences;]
  + NameAndType [getString (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;]
  + NameAndType [hasNext ()Z]
  + NameAndType [inflate (ILandroid/view/Menu;)V]
  + NameAndType [invalidate ()V]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [load (Ljava/lang/String;)V]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [onCreate (Landroid/os/Bundle;)V]
  + NameAndType [onStop ()V]
  + NameAndType [putString (Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;]
  + NameAndType [robots Ljava/util/List;]
  + NameAndType [save ()Ljava/lang/String;]
  + NameAndType [setContentView (Landroid/view/View;)V]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [vw Lme/planetguy/robots/renderworld/ViewWorld;]
  + NameAndType [world Lme/planetguy/robots/world/World;]
  + Utf8 []
  + Utf8 [()Landroid/content/SharedPreferences$Editor;]
  + Utf8 [()Landroid/view/MenuInflater;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)Ljava/lang/StringBuilder;]
  + Utf8 [(ILandroid/view/Menu;)V]
  + Utf8 [(Landroid/content/Context;)V]
  + Utf8 [(Landroid/os/Bundle;)V]
  + Utf8 [(Landroid/view/Menu;)Z]
  + Utf8 [(Landroid/view/View;)V]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;)Z]
  + Utf8 [(Ljava/lang/String;I)Landroid/content/SharedPreferences;]
  + Utf8 [(Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;]
  + Utf8 [(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;]
  + Utf8 [(Lme/planetguy/robots/world/World;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/util/List;]
  + Utf8 [Lme/planetguy/robots/renderworld/ViewWorld;]
  + Utf8 [Lme/planetguy/robots/world/World;]
  + Utf8 [StackMapTable]
  + Utf8 [android/app/Activity]
  + Utf8 [android/content/SharedPreferences]
  + Utf8 [android/content/SharedPreferences$Editor]
  + Utf8 [android/view/MenuInflater]
  + Utf8 [append]
  + Utf8 [commit]
  + Utf8 [contains]
  + Utf8 [dynObjectData]
  + Utf8 [edit]
  + Utf8 [getMenuInflater]
  + Utf8 [getSharedPreferences]
  + Utf8 [getString]
  + Utf8 [hasNext]
  + Utf8 [inflate]
  + Utf8 [invalidate]
  + Utf8 [iterator]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/List]
  + Utf8 [load]
  + Utf8 [me/planetguy/robots/Robots]
  + Utf8 [me/planetguy/robots/dynamic/DynamicObject]
  + Utf8 [me/planetguy/robots/renderworld/ActivityWorld]
  + Utf8 [me/planetguy/robots/renderworld/ViewWorld]
  + Utf8 [me/planetguy/robots/world/World]
  + Utf8 [next]
  + Utf8 [onCreate]
  + Utf8 [onCreateOptionsMenu]
  + Utf8 [onStop]
  + Utf8 [putString]
  + Utf8 [robot_]
  + Utf8 [robots]
  + Utf8 [save]
  + Utf8 [setContentView]
  + Utf8 [toString]
  + Utf8 [vw]
  + Utf8 [world]

Fields (count = 1):
  + Field:        vw Lme/planetguy/robots/renderworld/ViewWorld;
    Access flags: 0x0
      = me.planetguy.robots.renderworld.ViewWorld vw

Methods (count = 4):
  - Method:       <init>()V
    Access flags: 0x1
      = public ActivityWorld()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #20
        + Methodref [android/app/Activity.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onCreate(Landroid/os/Bundle;)V
    Access flags: 0x4
      = protected void onCreate(android.os.Bundle)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 115, locals = 5, stack = 5):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #21
        + Methodref [android/app/Activity.onCreate (Landroid/os/Bundle;)V]
      [5] aload_0 v0
      [6] new #15
        + Class [me/planetguy/robots/renderworld/ViewWorld]
      [9] dup
      [10] aload_0 v0
      [11] invokespecial #33
        + Methodref [me/planetguy/robots/renderworld/ViewWorld.<init> (Landroid/content/Context;)V]
      [14] putfield #18
        + Fieldref [me/planetguy/robots/renderworld/ActivityWorld.vw Lme/planetguy/robots/renderworld/ViewWorld;]
      [17] aload_0 v0
      [18] aload_0 v0
      [19] getfield #18
        + Fieldref [me/planetguy/robots/renderworld/ActivityWorld.vw Lme/planetguy/robots/renderworld/ViewWorld;]
      [22] invokevirtual #32
        + Methodref [me/planetguy/robots/renderworld/ActivityWorld.setContentView (Landroid/view/View;)V]
      [25] aload_0 v0
      [26] getfield #18
        + Fieldref [me/planetguy/robots/renderworld/ActivityWorld.vw Lme/planetguy/robots/renderworld/ViewWorld;]
      [29] invokevirtual #34
        + Methodref [me/planetguy/robots/renderworld/ViewWorld.invalidate ()V]
      [32] aload_0 v0
      [33] ldc #3
        + String [dynObjectData]
      [35] iconst_0
      [36] invokevirtual #31
        + Methodref [me/planetguy/robots/renderworld/ActivityWorld.getSharedPreferences (Ljava/lang/String;I)Landroid/content/SharedPreferences;]
      [39] astore_2 v2
      [40] iconst_0
      [41] istore_3 v3
      [42] goto +47 (target=89)
      [45] new #13
        + Class [me/planetguy/robots/dynamic/DynamicObject]
      [48] dup
      [49] getstatic #17
        + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
      [52] invokespecial #27
        + Methodref [me/planetguy/robots/dynamic/DynamicObject.<init> (Lme/planetguy/robots/world/World;)V]
      [55] astore v4
      [57] aload v4
      [59] aload_2 v2
      [60] new #9
        + Class [java/lang/StringBuilder]
      [63] dup
      [64] ldc #4
        + String [robot_]
      [66] invokespecial #24
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [69] iload_3 v3
      [70] invokevirtual #25
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [73] invokevirtual #26
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [76] ldc #2
        + String []
      [78] invokeinterface #37
        + InterfaceMethodref [android/content/SharedPreferences.getString (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;]
      [83] invokevirtual #28
        + Methodref [me/planetguy/robots/dynamic/DynamicObject.load (Ljava/lang/String;)V]
      [86] iinc v3, 1
      [89] aload_2 v2
      [90] new #9
        + Class [java/lang/StringBuilder]
      [93] dup
      [94] ldc #4
        + String [robot_]
      [96] invokespecial #24
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [99] iload_3 v3
      [100] invokevirtual #25
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [103] invokevirtual #26
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [106] invokeinterface #35
        + InterfaceMethodref [android/content/SharedPreferences.contains (Ljava/lang/String;)Z]
      [111] ifne -66 (target=45)
      [114] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [45] Var: ...[a:android/content/SharedPreferences][i], Stack: (empty)
        - [89] Var: ..., Stack: (empty)
  + Method:       onCreateOptionsMenu(Landroid/view/Menu;)Z
    Access flags: 0x1
      = public boolean onCreateOptionsMenu(android.view.Menu)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] invokevirtual #30
        + Methodref [me/planetguy/robots/renderworld/ActivityWorld.getMenuInflater ()Landroid/view/MenuInflater;]
      [4] ldc #1
        + Integer [2131230720]
      [6] aload_1 v1
      [7] invokevirtual #23
        + Methodref [android/view/MenuInflater.inflate (ILandroid/view/Menu;)V]
      [10] iconst_1
      [11] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onStop()V
    Access flags: 0x1
      = public void onStop()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 98, locals = 6, stack = 4):
      [0] aload_0 v0
      [1] invokespecial #22
        + Methodref [android/app/Activity.onStop ()V]
      [4] aload_0 v0
      [5] ldc #3
        + String [dynObjectData]
      [7] iconst_0
      [8] invokevirtual #31
        + Methodref [me/planetguy/robots/renderworld/ActivityWorld.getSharedPreferences (Ljava/lang/String;I)Landroid/content/SharedPreferences;]
      [11] astore_1 v1
      [12] aload_1 v1
      [13] invokeinterface #36
        + InterfaceMethodref [android/content/SharedPreferences.edit ()Landroid/content/SharedPreferences$Editor;]
      [18] astore_2 v2
      [19] iconst_0
      [20] istore_3 v3
      [21] getstatic #17
        + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
      [24] getfield #19
        + Fieldref [me/planetguy/robots/world/World.robots Ljava/util/List;]
      [27] invokeinterface #42
        + InterfaceMethodref [java/util/List.iterator ()Ljava/util/Iterator;]
      [32] astore v5
      [34] goto +46 (target=80)
      [37] aload v5
      [39] invokeinterface #41
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [44] checkcast #13
        + Class [me/planetguy/robots/dynamic/DynamicObject]
      [47] astore v4
      [49] aload_2 v2
      [50] new #9
        + Class [java/lang/StringBuilder]
      [53] dup
      [54] ldc #4
        + String [robot_]
      [56] invokespecial #24
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [59] iload_3 v3
      [60] invokevirtual #25
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [63] invokevirtual #26
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [66] aload v4
      [68] invokevirtual #29
        + Methodref [me/planetguy/robots/dynamic/DynamicObject.save ()Ljava/lang/String;]
      [71] invokeinterface #39
        + InterfaceMethodref [android/content/SharedPreferences$Editor.putString (Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;]
      [76] pop
      [77] iinc v3, 1
      [80] aload v5
      [82] invokeinterface #40
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [87] ifne -50 (target=37)
      [90] aload_2 v2
      [91] invokeinterface #38
        + InterfaceMethodref [android/content/SharedPreferences$Editor.commit ()Z]
      [96] pop
      [97] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [37] Var: [a:me/planetguy/robots/renderworld/ActivityWorld][a:android/content/SharedPreferences][a:android/content/SharedPreferences$Editor][i][T][a:java/util/Iterator], Stack: 
        - [80] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/renderworld/ViewWorld
  Superclass:    android/view/SurfaceView
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.renderworld.ViewWorld extends android.view.SurfaceView

Interfaces (count = 1):
  + Class [android/view/SurfaceHolder$Callback]

Constant Pool (count = 166):
  + Class [android/graphics/Canvas]
  + Class [android/graphics/Paint]
  + Class [android/view/MotionEvent]
  + Class [android/view/SurfaceHolder]
  + Class [android/view/SurfaceHolder$Callback]
  + Class [android/view/SurfaceView]
  + Class [java/lang/Thread]
  + Class [java/util/Iterator]
  + Class [java/util/List]
  + Class [me/planetguy/robots/Robots]
  + Class [me/planetguy/robots/dynamic/DynamicObject]
  + Class [me/planetguy/robots/renderworld/ViewWorld]
  + Class [me/planetguy/robots/renderworld/a]
  + Class [me/planetguy/robots/tile/Tile]
  + Class [me/planetguy/robots/world/World]
  + Fieldref [me/planetguy/robots/Robots.iconSize I]
  + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
  + Fieldref [me/planetguy/robots/dynamic/DynamicObject.x I]
  + Fieldref [me/planetguy/robots/dynamic/DynamicObject.y I]
  + Fieldref [me/planetguy/robots/renderworld/ViewWorld.mDrawingThread Ljava/lang/Thread;]
  + Fieldref [me/planetguy/robots/renderworld/ViewWorld.paint Landroid/graphics/Paint;]
  + Fieldref [me/planetguy/robots/renderworld/ViewWorld.scale F]
  + Fieldref [me/planetguy/robots/renderworld/ViewWorld.surfaceHolder Landroid/view/SurfaceHolder;]
  + Fieldref [me/planetguy/robots/tile/Tile.bitmapIcon Landroid/graphics/Bitmap;]
  + Fieldref [me/planetguy/robots/world/World.robots Ljava/util/List;]
  + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
  + Methodref [android/graphics/Canvas.drawBitmap (Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V]
  + Methodref [android/graphics/Canvas.restore ()V]
  + Methodref [android/graphics/Canvas.save ()I]
  + Methodref [android/graphics/Canvas.scale (FF)V]
  + Methodref [android/graphics/Paint.<init> ()V]
  + Methodref [android/graphics/Paint.setAntiAlias (Z)V]
  + Methodref [android/view/MotionEvent.getX ()F]
  + Methodref [android/view/MotionEvent.getY ()F]
  + Methodref [android/view/SurfaceView.<init> (Landroid/content/Context;)V]
  + Methodref [java/lang/Thread.<init> (Ljava/lang/Runnable;)V]
  + Methodref [java/lang/Thread.interrupt ()V]
  + Methodref [java/lang/Thread.start ()V]
  + Methodref [me/planetguy/robots/dynamic/DynamicObject.getIcon ()Landroid/graphics/Bitmap;]
  + Methodref [me/planetguy/robots/renderworld/ViewWorld.getHolder ()Landroid/view/SurfaceHolder;]
  + Methodref [me/planetguy/robots/renderworld/a.<init> (Lme/planetguy/robots/renderworld/ViewWorld;)V]
  + Methodref [me/planetguy/robots/world/World.handleClick (Landroid/view/View;II)Z]
  + Methodref [me/planetguy/robots/world/World.tryTick (Landroid/view/View;)V]
  + InterfaceMethodref [android/view/SurfaceHolder.addCallback (Landroid/view/SurfaceHolder$Callback;)V]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/List.iterator ()Ljava/util/Iterator;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Landroid/content/Context;)V]
  + NameAndType [<init> (Ljava/lang/Runnable;)V]
  + NameAndType [<init> (Lme/planetguy/robots/renderworld/ViewWorld;)V]
  + NameAndType [addCallback (Landroid/view/SurfaceHolder$Callback;)V]
  + NameAndType [bitmapIcon Landroid/graphics/Bitmap;]
  + NameAndType [drawBitmap (Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V]
  + NameAndType [getHolder ()Landroid/view/SurfaceHolder;]
  + NameAndType [getIcon ()Landroid/graphics/Bitmap;]
  + NameAndType [getX ()F]
  + NameAndType [getY ()F]
  + NameAndType [handleClick (Landroid/view/View;II)Z]
  + NameAndType [hasNext ()Z]
  + NameAndType [iconSize I]
  + NameAndType [interrupt ()V]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [mDrawingThread Ljava/lang/Thread;]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [paint Landroid/graphics/Paint;]
  + NameAndType [restore ()V]
  + NameAndType [robots Ljava/util/List;]
  + NameAndType [save ()I]
  + NameAndType [scale (FF)V]
  + NameAndType [scale F]
  + NameAndType [setAntiAlias (Z)V]
  + NameAndType [start ()V]
  + NameAndType [surfaceHolder Landroid/view/SurfaceHolder;]
  + NameAndType [tiles [[Lme/planetguy/robots/tile/Tile;]
  + NameAndType [tryTick (Landroid/view/View;)V]
  + NameAndType [world Lme/planetguy/robots/world/World;]
  + NameAndType [x I]
  + NameAndType [y I]
  + Utf8 [()F]
  + Utf8 [()I]
  + Utf8 [()Landroid/graphics/Bitmap;]
  + Utf8 [()Landroid/view/SurfaceHolder;]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(FF)V]
  + Utf8 [(Landroid/content/Context;)V]
  + Utf8 [(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V]
  + Utf8 [(Landroid/graphics/Canvas;)V]
  + Utf8 [(Landroid/view/MotionEvent;)Z]
  + Utf8 [(Landroid/view/SurfaceHolder$Callback;)V]
  + Utf8 [(Landroid/view/SurfaceHolder;)V]
  + Utf8 [(Landroid/view/SurfaceHolder;III)V]
  + Utf8 [(Landroid/view/View;)V]
  + Utf8 [(Landroid/view/View;II)Z]
  + Utf8 [(Ljava/lang/Runnable;)V]
  + Utf8 [(Lme/planetguy/robots/renderworld/ViewWorld;)V]
  + Utf8 [(Z)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [F]
  + Utf8 [I]
  + Utf8 [Landroid/graphics/Bitmap;]
  + Utf8 [Landroid/graphics/Paint;]
  + Utf8 [Landroid/view/GestureDetector;]
  + Utf8 [Landroid/view/ScaleGestureDetector;]
  + Utf8 [Landroid/view/SurfaceHolder;]
  + Utf8 [Ljava/lang/Thread;]
  + Utf8 [Ljava/util/List;]
  + Utf8 [Lme/planetguy/robots/world/World;]
  + Utf8 [StackMapTable]
  + Utf8 [[[Lme/planetguy/robots/tile/Tile;]
  + Utf8 [addCallback]
  + Utf8 [android/graphics/Canvas]
  + Utf8 [android/graphics/Paint]
  + Utf8 [android/view/MotionEvent]
  + Utf8 [android/view/SurfaceHolder]
  + Utf8 [android/view/SurfaceHolder$Callback]
  + Utf8 [android/view/SurfaceView]
  + Utf8 [bitmapIcon]
  + Utf8 [detector]
  + Utf8 [drawBitmap]
  + Utf8 [drawTerrain]
  + Utf8 [getHolder]
  + Utf8 [getIcon]
  + Utf8 [getX]
  + Utf8 [getY]
  + Utf8 [handleClick]
  + Utf8 [hasNext]
  + Utf8 [iconSize]
  + Utf8 [interrupt]
  + Utf8 [iterator]
  + Utf8 [java/lang/Thread]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/List]
  + Utf8 [mDrawingThread]
  + Utf8 [me/planetguy/robots/Robots]
  + Utf8 [me/planetguy/robots/dynamic/DynamicObject]
  + Utf8 [me/planetguy/robots/renderworld/ViewWorld]
  + Utf8 [me/planetguy/robots/renderworld/a]
  + Utf8 [me/planetguy/robots/tile/Tile]
  + Utf8 [me/planetguy/robots/world/World]
  + Utf8 [next]
  + Utf8 [onTouchEvent]
  + Utf8 [paint]
  + Utf8 [restore]
  + Utf8 [robots]
  + Utf8 [save]
  + Utf8 [scale]
  + Utf8 [scaleDetector]
  + Utf8 [setAntiAlias]
  + Utf8 [start]
  + Utf8 [surfaceChanged]
  + Utf8 [surfaceCreated]
  + Utf8 [surfaceDestroyed]
  + Utf8 [surfaceHolder]
  + Utf8 [tiles]
  + Utf8 [timer]
  + Utf8 [tryTick]
  + Utf8 [world]
  + Utf8 [x]
  + Utf8 [y]

Fields (count = 7):
  + Field:        paint Landroid/graphics/Paint;
    Access flags: 0x18
      = static final android.graphics.Paint paint
  + Field:        mDrawingThread Ljava/lang/Thread;
    Access flags: 0x2
      = private java.lang.Thread mDrawingThread
  + Field:        surfaceHolder Landroid/view/SurfaceHolder;
    Access flags: 0x0
      = android.view.SurfaceHolder surfaceHolder
  + Field:        timer Ljava/lang/Thread;
    Access flags: 0x2
      = private java.lang.Thread timer
  + Field:        detector Landroid/view/GestureDetector;
    Access flags: 0x0
      = android.view.GestureDetector detector
  + Field:        scaleDetector Landroid/view/ScaleGestureDetector;
    Access flags: 0x0
      = android.view.ScaleGestureDetector scaleDetector
  + Field:        scale F
    Access flags: 0x0
      = float scale

Methods (count = 7):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 0, stack = 2):
      [0] new #2
        + Class [android/graphics/Paint]
      [3] dup
      [4] invokespecial #31
        + Methodref [android/graphics/Paint.<init> ()V]
      [7] putstatic #21
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.paint Landroid/graphics/Paint;]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Landroid/content/Context;)V
    Access flags: 0x1
      = public ViewWorld(android.content.Context)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 36, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #35
        + Methodref [android/view/SurfaceView.<init> (Landroid/content/Context;)V]
      [5] aload_0 v0
      [6] fconst_1
      [7] putfield #22
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.scale F]
      [10] aload_0 v0
      [11] aload_0 v0
      [12] invokevirtual #40
        + Methodref [me/planetguy/robots/renderworld/ViewWorld.getHolder ()Landroid/view/SurfaceHolder;]
      [15] putfield #23
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.surfaceHolder Landroid/view/SurfaceHolder;]
      [18] aload_0 v0
      [19] getfield #23
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.surfaceHolder Landroid/view/SurfaceHolder;]
      [22] aload_0 v0
      [23] invokeinterface #44
        + InterfaceMethodref [android/view/SurfaceHolder.addCallback (Landroid/view/SurfaceHolder$Callback;)V]
      [28] getstatic #21
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.paint Landroid/graphics/Paint;]
      [31] iconst_0
      [32] invokevirtual #32
        + Methodref [android/graphics/Paint.setAntiAlias (Z)V]
      [35] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       drawTerrain(Landroid/graphics/Canvas;)V
    Access flags: 0x1
      = public void drawTerrain(android.graphics.Canvas)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 167, locals = 5, stack = 5):
      [0] getstatic #17
        + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
      [3] aload_0 v0
      [4] invokevirtual #43
        + Methodref [me/planetguy/robots/world/World.tryTick (Landroid/view/View;)V]
      [7] aload_1 v1
      [8] invokevirtual #29
        + Methodref [android/graphics/Canvas.save ()I]
      [11] pop
      [12] aload_1 v1
      [13] aload_0 v0
      [14] getfield #22
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.scale F]
      [17] aload_0 v0
      [18] getfield #22
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.scale F]
      [21] invokevirtual #30
        + Methodref [android/graphics/Canvas.scale (FF)V]
      [24] getstatic #16
        + Fieldref [me/planetguy/robots/Robots.iconSize I]
      [27] istore_2 v2
      [28] iconst_0
      [29] istore_3 v3
      [30] goto +59 (target=89)
      [33] iconst_0
      [34] istore v4
      [36] goto +36 (target=72)
      [39] aload_1 v1
      [40] getstatic #17
        + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
      [43] getfield #26
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [46] iload_3 v3
      [47] aaload
      [48] iload v4
      [50] aaload
      [51] getfield #24
        + Fieldref [me/planetguy/robots/tile/Tile.bitmapIcon Landroid/graphics/Bitmap;]
      [54] iload_3 v3
      [55] iload_2 v2
      [56] imul
      [57] i2f
      [58] iload v4
      [60] iload_2 v2
      [61] imul
      [62] i2f
      [63] getstatic #21
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.paint Landroid/graphics/Paint;]
      [66] invokevirtual #27
        + Methodref [android/graphics/Canvas.drawBitmap (Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V]
      [69] iinc v4, 1
      [72] iload v4
      [74] getstatic #17
        + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
      [77] getfield #26
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [80] iconst_0
      [81] aaload
      [82] arraylength
      [83] ificmplt -44 (target=39)
      [86] iinc v3, 1
      [89] iload_3 v3
      [90] getstatic #17
        + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
      [93] getfield #26
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [96] arraylength
      [97] ificmplt -64 (target=33)
      [100] getstatic #17
        + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
      [103] getfield #25
        + Fieldref [me/planetguy/robots/world/World.robots Ljava/util/List;]
      [106] invokeinterface #47
        + InterfaceMethodref [java/util/List.iterator ()Ljava/util/Iterator;]
      [111] astore v4
      [113] goto +39 (target=152)
      [116] aload v4
      [118] invokeinterface #46
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [123] checkcast #11
        + Class [me/planetguy/robots/dynamic/DynamicObject]
      [126] astore_3 v3
      [127] aload_1 v1
      [128] aload_3 v3
      [129] invokevirtual #39
        + Methodref [me/planetguy/robots/dynamic/DynamicObject.getIcon ()Landroid/graphics/Bitmap;]
      [132] aload_3 v3
      [133] getfield #18
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.x I]
      [136] iload_2 v2
      [137] imul
      [138] i2f
      [139] aload_3 v3
      [140] getfield #19
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.y I]
      [143] iload_2 v2
      [144] imul
      [145] i2f
      [146] getstatic #21
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.paint Landroid/graphics/Paint;]
      [149] invokevirtual #27
        + Methodref [android/graphics/Canvas.drawBitmap (Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V]
      [152] aload v4
      [154] invokeinterface #45
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [159] ifne -43 (target=116)
      [162] aload_1 v1
      [163] invokevirtual #28
        + Methodref [android/graphics/Canvas.restore ()V]
      [166] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [33] Var: ...[i][i], Stack: (empty)
        - [39] Var: ...[i], Stack: (empty)
        - [72] Var: ..., Stack: (empty)
        - [89] Var: -1, Stack: (empty)
        - [116] Var: [a:me/planetguy/robots/renderworld/ViewWorld][a:android/graphics/Canvas][i][T][a:java/util/Iterator], Stack: 
        - [152] Var: ..., Stack: (empty)
  + Method:       surfaceChanged(Landroid/view/SurfaceHolder;III)V
    Access flags: 0x1
      = public void surfaceChanged(android.view.SurfaceHolder,int,int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 5, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       surfaceCreated(Landroid/view/SurfaceHolder;)V
    Access flags: 0x1
      = public void surfaceCreated(android.view.SurfaceHolder)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 27, locals = 2, stack = 6):
      [0] aload_0 v0
      [1] new #7
        + Class [java/lang/Thread]
      [4] dup
      [5] new #13
        + Class [me/planetguy/robots/renderworld/a]
      [8] dup
      [9] aload_0 v0
      [10] invokespecial #41
        + Methodref [me/planetguy/robots/renderworld/a.<init> (Lme/planetguy/robots/renderworld/ViewWorld;)V]
      [13] invokespecial #36
        + Methodref [java/lang/Thread.<init> (Ljava/lang/Runnable;)V]
      [16] putfield #20
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.mDrawingThread Ljava/lang/Thread;]
      [19] aload_0 v0
      [20] getfield #20
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.mDrawingThread Ljava/lang/Thread;]
      [23] invokevirtual #38
        + Methodref [java/lang/Thread.start ()V]
      [26] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       surfaceDestroyed(Landroid/view/SurfaceHolder;)V
    Access flags: 0x1
      = public void surfaceDestroyed(android.view.SurfaceHolder)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 15, locals = 2, stack = 1):
      [0] aload_0 v0
      [1] getfield #20
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.mDrawingThread Ljava/lang/Thread;]
      [4] ifnull +10 (target=14)
      [7] aload_0 v0
      [8] getfield #20
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.mDrawingThread Ljava/lang/Thread;]
      [11] invokevirtual #37
        + Methodref [java/lang/Thread.interrupt ()V]
      [14] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [14] Var: ..., Stack: (empty)
  + Method:       onTouchEvent(Landroid/view/MotionEvent;)Z
    Access flags: 0x1
      = public boolean onTouchEvent(android.view.MotionEvent)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 92, locals = 6, stack = 4):
      [0] aload_1 v1
      [1] invokevirtual #33
        + Methodref [android/view/MotionEvent.getX ()F]
      [4] f2i
      [5] istore_2 v2
      [6] aload_1 v1
      [7] invokevirtual #34
        + Methodref [android/view/MotionEvent.getY ()F]
      [10] f2i
      [11] istore_3 v3
      [12] iload_2 v2
      [13] i2f
      [14] getstatic #16
        + Fieldref [me/planetguy/robots/Robots.iconSize I]
      [17] i2f
      [18] aload_0 v0
      [19] getfield #22
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.scale F]
      [22] fmul
      [23] fdiv
      [24] f2i
      [25] istore v4
      [27] iload_3 v3
      [28] i2f
      [29] getstatic #16
        + Fieldref [me/planetguy/robots/Robots.iconSize I]
      [32] i2f
      [33] aload_0 v0
      [34] getfield #22
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.scale F]
      [37] fmul
      [38] fdiv
      [39] f2i
      [40] istore v5
      [42] iload v4
      [44] iflt +46 (target=90)
      [47] iload v4
      [49] getstatic #17
        + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
      [52] getfield #26
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [55] arraylength
      [56] ificmpge +34 (target=90)
      [59] iload v5
      [61] ifle +29 (target=90)
      [64] iload v5
      [66] getstatic #17
        + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
      [69] getfield #26
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [72] iconst_0
      [73] aaload
      [74] arraylength
      [75] ificmpge +15 (target=90)
      [78] getstatic #17
        + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
      [81] aload_0 v0
      [82] iload v4
      [84] iload v5
      [86] invokevirtual #42
        + Methodref [me/planetguy/robots/world/World.handleClick (Landroid/view/View;II)Z]
      [89] ireturn
      [90] iconst_0
      [91] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [90] Var: [a:me/planetguy/robots/renderworld/ViewWorld][a:android/view/MotionEvent][i][i][i][i], Stack: 

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/renderworld/a
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class me.planetguy.robots.renderworld.a extends java.lang.Object

Interfaces (count = 1):
  + Class [java/lang/Runnable]

Constant Pool (count = 50):
  + Class [android/graphics/Canvas]
  + Class [android/view/SurfaceHolder]
  + Class [java/lang/Object]
  + Class [java/lang/Runnable]
  + Class [java/lang/Thread]
  + Class [me/planetguy/robots/renderworld/ViewWorld]
  + Class [me/planetguy/robots/renderworld/a]
  + Fieldref [me/planetguy/robots/renderworld/ViewWorld.surfaceHolder Landroid/view/SurfaceHolder;]
  + Fieldref [me/planetguy/robots/renderworld/a.a Lme/planetguy/robots/renderworld/ViewWorld;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Thread.currentThread ()Ljava/lang/Thread;]
  + Methodref [java/lang/Thread.isInterrupted ()Z]
  + Methodref [me/planetguy/robots/renderworld/ViewWorld.drawTerrain (Landroid/graphics/Canvas;)V]
  + InterfaceMethodref [android/view/SurfaceHolder.lockCanvas ()Landroid/graphics/Canvas;]
  + InterfaceMethodref [android/view/SurfaceHolder.unlockCanvasAndPost (Landroid/graphics/Canvas;)V]
  + NameAndType [<init> ()V]
  + NameAndType [a Lme/planetguy/robots/renderworld/ViewWorld;]
  + NameAndType [currentThread ()Ljava/lang/Thread;]
  + NameAndType [drawTerrain (Landroid/graphics/Canvas;)V]
  + NameAndType [isInterrupted ()Z]
  + NameAndType [lockCanvas ()Landroid/graphics/Canvas;]
  + NameAndType [surfaceHolder Landroid/view/SurfaceHolder;]
  + NameAndType [unlockCanvasAndPost (Landroid/graphics/Canvas;)V]
  + Utf8 [()Landroid/graphics/Canvas;]
  + Utf8 [()Ljava/lang/Thread;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(Landroid/graphics/Canvas;)V]
  + Utf8 [(Lme/planetguy/robots/renderworld/ViewWorld;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Landroid/view/SurfaceHolder;]
  + Utf8 [Lme/planetguy/robots/renderworld/ViewWorld;]
  + Utf8 [StackMapTable]
  + Utf8 [a]
  + Utf8 [android/graphics/Canvas]
  + Utf8 [android/view/SurfaceHolder]
  + Utf8 [currentThread]
  + Utf8 [drawTerrain]
  + Utf8 [isInterrupted]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/Runnable]
  + Utf8 [java/lang/Thread]
  + Utf8 [lockCanvas]
  + Utf8 [me/planetguy/robots/renderworld/ViewWorld]
  + Utf8 [me/planetguy/robots/renderworld/a]
  + Utf8 [run]
  + Utf8 [surfaceHolder]
  + Utf8 [unlockCanvasAndPost]

Fields (count = 1):
  + Field:        a Lme/planetguy/robots/renderworld/ViewWorld;
    Access flags: 0x1010
      = final synthetic me.planetguy.robots.renderworld.ViewWorld a

Methods (count = 2):
  - Method:       <init>(Lme/planetguy/robots/renderworld/ViewWorld;)V
    Access flags: 0x0
      = a(me.planetguy.robots.renderworld.ViewWorld)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #9
        + Fieldref [me/planetguy/robots/renderworld/a.a Lme/planetguy/robots/renderworld/ViewWorld;]
      [5] aload_0 v0
      [6] invokespecial #10
        + Methodref [java/lang/Object.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       run()V
    Access flags: 0x1
      = public void run()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 53, locals = 2, stack = 2):
      [0] aconst_null
      [1] astore_1 v1
      [2] goto +41 (target=43)
      [5] aload_0 v0
      [6] getfield #9
        + Fieldref [me/planetguy/robots/renderworld/a.a Lme/planetguy/robots/renderworld/ViewWorld;]
      [9] getfield #8
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.surfaceHolder Landroid/view/SurfaceHolder;]
      [12] invokeinterface #14
        + InterfaceMethodref [android/view/SurfaceHolder.lockCanvas ()Landroid/graphics/Canvas;]
      [17] astore_1 v1
      [18] aload_1 v1
      [19] ifnull +24 (target=43)
      [22] aload_0 v0
      [23] getfield #9
        + Fieldref [me/planetguy/robots/renderworld/a.a Lme/planetguy/robots/renderworld/ViewWorld;]
      [26] aload_1 v1
      [27] invokevirtual #13
        + Methodref [me/planetguy/robots/renderworld/ViewWorld.drawTerrain (Landroid/graphics/Canvas;)V]
      [30] aload_0 v0
      [31] getfield #9
        + Fieldref [me/planetguy/robots/renderworld/a.a Lme/planetguy/robots/renderworld/ViewWorld;]
      [34] getfield #8
        + Fieldref [me/planetguy/robots/renderworld/ViewWorld.surfaceHolder Landroid/view/SurfaceHolder;]
      [37] aload_1 v1
      [38] invokeinterface #15
        + InterfaceMethodref [android/view/SurfaceHolder.unlockCanvasAndPost (Landroid/graphics/Canvas;)V]
      [43] invokestatic #11
        + Methodref [java/lang/Thread.currentThread ()Ljava/lang/Thread;]
      [46] invokevirtual #12
        + Methodref [java/lang/Thread.isInterrupted ()Z]
      [49] ifeq -44 (target=5)
      [52] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [5] Var: ...[a:android/graphics/Canvas], Stack: (empty)
        - [43] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/robot/BlockingState
  Superclass:    java/lang/Enum
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x4031
    = public final enum enum me.planetguy.robots.robot.BlockingState extends java.lang.Enum

Interfaces (count = 0):

Constant Pool (count = 119):
  + String [forward]
  + String [goeast]
  + String [gonorth]
  + String [gosouth]
  + String [gowest]
  + String [left]
  + String [none]
  + String [reverse]
  + String [right]
  + String [toolUse]
  + Class [[I]
  + Class [java/lang/Enum]
  + Class [java/lang/NoSuchFieldError]
  + Class [java/lang/System]
  + Class [me/planetguy/robots/robot/BlockingState]
  + Class [me/planetguy/robots/robot/Robot]
  + Fieldref [me/planetguy/robots/robot/BlockingState.$SWITCH_TABLE$me$planetguy$robots$robot$BlockingState [I]
  + Fieldref [me/planetguy/robots/robot/BlockingState.ENUM$VALUES [Lme/planetguy/robots/robot/BlockingState;]
  + Fieldref [me/planetguy/robots/robot/BlockingState.forward Lme/planetguy/robots/robot/BlockingState;]
  + Fieldref [me/planetguy/robots/robot/BlockingState.goeast Lme/planetguy/robots/robot/BlockingState;]
  + Fieldref [me/planetguy/robots/robot/BlockingState.gonorth Lme/planetguy/robots/robot/BlockingState;]
  + Fieldref [me/planetguy/robots/robot/BlockingState.gosouth Lme/planetguy/robots/robot/BlockingState;]
  + Fieldref [me/planetguy/robots/robot/BlockingState.gowest Lme/planetguy/robots/robot/BlockingState;]
  + Fieldref [me/planetguy/robots/robot/BlockingState.left Lme/planetguy/robots/robot/BlockingState;]
  + Fieldref [me/planetguy/robots/robot/BlockingState.none Lme/planetguy/robots/robot/BlockingState;]
  + Fieldref [me/planetguy/robots/robot/BlockingState.reverse Lme/planetguy/robots/robot/BlockingState;]
  + Fieldref [me/planetguy/robots/robot/BlockingState.right Lme/planetguy/robots/robot/BlockingState;]
  + Fieldref [me/planetguy/robots/robot/BlockingState.toolUse Lme/planetguy/robots/robot/BlockingState;]
  + Fieldref [me/planetguy/robots/robot/Robot.heading I]
  + Fieldref [me/planetguy/robots/robot/Robot.x I]
  + Fieldref [me/planetguy/robots/robot/Robot.y I]
  + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
  + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Methodref [java/lang/System.arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
  + Methodref [me/planetguy/robots/robot/BlockingState.$SWITCH_TABLE$me$planetguy$robots$robot$BlockingState ()[I]
  + Methodref [me/planetguy/robots/robot/BlockingState.<init> (Ljava/lang/String;I)V]
  + Methodref [me/planetguy/robots/robot/BlockingState.ordinal ()I]
  + Methodref [me/planetguy/robots/robot/BlockingState.values ()[Lme/planetguy/robots/robot/BlockingState;]
  + Methodref [me/planetguy/robots/robot/Robot.facingX (I)I]
  + Methodref [me/planetguy/robots/robot/Robot.facingY (I)I]
  + Methodref [me/planetguy/robots/robot/Robot.moveTo (IILandroid/view/View;)V]
  + Methodref [me/planetguy/robots/robot/Robot.turnLeft ()V]
  + Methodref [me/planetguy/robots/robot/Robot.turnRight ()V]
  + NameAndType [$SWITCH_TABLE$me$planetguy$robots$robot$BlockingState ()[I]
  + NameAndType [$SWITCH_TABLE$me$planetguy$robots$robot$BlockingState [I]
  + NameAndType [<init> (Ljava/lang/String;I)V]
  + NameAndType [ENUM$VALUES [Lme/planetguy/robots/robot/BlockingState;]
  + NameAndType [arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
  + NameAndType [facingX (I)I]
  + NameAndType [facingY (I)I]
  + NameAndType [forward Lme/planetguy/robots/robot/BlockingState;]
  + NameAndType [goeast Lme/planetguy/robots/robot/BlockingState;]
  + NameAndType [gonorth Lme/planetguy/robots/robot/BlockingState;]
  + NameAndType [gosouth Lme/planetguy/robots/robot/BlockingState;]
  + NameAndType [gowest Lme/planetguy/robots/robot/BlockingState;]
  + NameAndType [heading I]
  + NameAndType [left Lme/planetguy/robots/robot/BlockingState;]
  + NameAndType [moveTo (IILandroid/view/View;)V]
  + NameAndType [none Lme/planetguy/robots/robot/BlockingState;]
  + NameAndType [ordinal ()I]
  + NameAndType [reverse Lme/planetguy/robots/robot/BlockingState;]
  + NameAndType [right Lme/planetguy/robots/robot/BlockingState;]
  + NameAndType [toolUse Lme/planetguy/robots/robot/BlockingState;]
  + NameAndType [turnLeft ()V]
  + NameAndType [turnRight ()V]
  + NameAndType [valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + NameAndType [values ()[Lme/planetguy/robots/robot/BlockingState;]
  + NameAndType [x I]
  + NameAndType [y I]
  + Utf8 [$SWITCH_TABLE$me$planetguy$robots$robot$BlockingState]
  + Utf8 [()I]
  + Utf8 [()V]
  + Utf8 [()[I]
  + Utf8 [()[Lme/planetguy/robots/robot/BlockingState;]
  + Utf8 [(I)I]
  + Utf8 [(IILandroid/view/View;)V]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
  + Utf8 [(Ljava/lang/Object;ILjava/lang/Object;II)V]
  + Utf8 [(Ljava/lang/String;)Lme/planetguy/robots/robot/BlockingState;]
  + Utf8 [(Ljava/lang/String;I)V]
  + Utf8 [(Lme/planetguy/robots/robot/Robot;Landroid/view/View;)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [ENUM$VALUES]
  + Utf8 [I]
  + Utf8 [Lme/planetguy/robots/robot/BlockingState;]
  + Utf8 [StackMapTable]
  + Utf8 [[I]
  + Utf8 [[Lme/planetguy/robots/robot/BlockingState;]
  + Utf8 [arraycopy]
  + Utf8 [execute]
  + Utf8 [facingX]
  + Utf8 [facingY]
  + Utf8 [forward]
  + Utf8 [goeast]
  + Utf8 [gonorth]
  + Utf8 [gosouth]
  + Utf8 [gowest]
  + Utf8 [heading]
  + Utf8 [java/lang/Enum]
  + Utf8 [java/lang/NoSuchFieldError]
  + Utf8 [java/lang/System]
  + Utf8 [left]
  + Utf8 [me/planetguy/robots/robot/BlockingState]
  + Utf8 [me/planetguy/robots/robot/Robot]
  + Utf8 [moveTo]
  + Utf8 [none]
  + Utf8 [ordinal]
  + Utf8 [reverse]
  + Utf8 [right]
  + Utf8 [toolUse]
  + Utf8 [turnLeft]
  + Utf8 [turnRight]
  + Utf8 [valueOf]
  + Utf8 [values]
  + Utf8 [x]
  + Utf8 [y]

Fields (count = 12):
  + Field:        none Lme/planetguy/robots/robot/BlockingState;
    Access flags: 0x4019
      = public static final me.planetguy.robots.robot.BlockingState none
  + Field:        toolUse Lme/planetguy/robots/robot/BlockingState;
    Access flags: 0x4019
      = public static final me.planetguy.robots.robot.BlockingState toolUse
  + Field:        forward Lme/planetguy/robots/robot/BlockingState;
    Access flags: 0x4019
      = public static final me.planetguy.robots.robot.BlockingState forward
  + Field:        left Lme/planetguy/robots/robot/BlockingState;
    Access flags: 0x4019
      = public static final me.planetguy.robots.robot.BlockingState left
  + Field:        right Lme/planetguy/robots/robot/BlockingState;
    Access flags: 0x4019
      = public static final me.planetguy.robots.robot.BlockingState right
  + Field:        reverse Lme/planetguy/robots/robot/BlockingState;
    Access flags: 0x4019
      = public static final me.planetguy.robots.robot.BlockingState reverse
  + Field:        gonorth Lme/planetguy/robots/robot/BlockingState;
    Access flags: 0x4019
      = public static final me.planetguy.robots.robot.BlockingState gonorth
  + Field:        gosouth Lme/planetguy/robots/robot/BlockingState;
    Access flags: 0x4019
      = public static final me.planetguy.robots.robot.BlockingState gosouth
  + Field:        goeast Lme/planetguy/robots/robot/BlockingState;
    Access flags: 0x4019
      = public static final me.planetguy.robots.robot.BlockingState goeast
  + Field:        gowest Lme/planetguy/robots/robot/BlockingState;
    Access flags: 0x4019
      = public static final me.planetguy.robots.robot.BlockingState gowest
  + Field:        $SWITCH_TABLE$me$planetguy$robots$robot$BlockingState [I
    Access flags: 0x100a
      = private static synthetic int[] $SWITCH_TABLE$me$planetguy$robots$robot$BlockingState
  + Field:        ENUM$VALUES [Lme/planetguy/robots/robot/BlockingState;
    Access flags: 0x101a
      = private static final synthetic me.planetguy.robots.robot.BlockingState[] ENUM$VALUES

Methods (count = 6):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 207, locals = 0, stack = 4):
      [0] new #15
        + Class [me/planetguy/robots/robot/BlockingState]
      [3] dup
      [4] ldc #7
        + String [none]
      [6] iconst_0
      [7] invokespecial #36
        + Methodref [me/planetguy/robots/robot/BlockingState.<init> (Ljava/lang/String;I)V]
      [10] putstatic #25
        + Fieldref [me/planetguy/robots/robot/BlockingState.none Lme/planetguy/robots/robot/BlockingState;]
      [13] new #15
        + Class [me/planetguy/robots/robot/BlockingState]
      [16] dup
      [17] ldc #10
        + String [toolUse]
      [19] iconst_1
      [20] invokespecial #36
        + Methodref [me/planetguy/robots/robot/BlockingState.<init> (Ljava/lang/String;I)V]
      [23] putstatic #28
        + Fieldref [me/planetguy/robots/robot/BlockingState.toolUse Lme/planetguy/robots/robot/BlockingState;]
      [26] new #15
        + Class [me/planetguy/robots/robot/BlockingState]
      [29] dup
      [30] ldc #1
        + String [forward]
      [32] iconst_2
      [33] invokespecial #36
        + Methodref [me/planetguy/robots/robot/BlockingState.<init> (Ljava/lang/String;I)V]
      [36] putstatic #19
        + Fieldref [me/planetguy/robots/robot/BlockingState.forward Lme/planetguy/robots/robot/BlockingState;]
      [39] new #15
        + Class [me/planetguy/robots/robot/BlockingState]
      [42] dup
      [43] ldc #6
        + String [left]
      [45] iconst_3
      [46] invokespecial #36
        + Methodref [me/planetguy/robots/robot/BlockingState.<init> (Ljava/lang/String;I)V]
      [49] putstatic #24
        + Fieldref [me/planetguy/robots/robot/BlockingState.left Lme/planetguy/robots/robot/BlockingState;]
      [52] new #15
        + Class [me/planetguy/robots/robot/BlockingState]
      [55] dup
      [56] ldc #9
        + String [right]
      [58] iconst_4
      [59] invokespecial #36
        + Methodref [me/planetguy/robots/robot/BlockingState.<init> (Ljava/lang/String;I)V]
      [62] putstatic #27
        + Fieldref [me/planetguy/robots/robot/BlockingState.right Lme/planetguy/robots/robot/BlockingState;]
      [65] new #15
        + Class [me/planetguy/robots/robot/BlockingState]
      [68] dup
      [69] ldc #8
        + String [reverse]
      [71] iconst_5
      [72] invokespecial #36
        + Methodref [me/planetguy/robots/robot/BlockingState.<init> (Ljava/lang/String;I)V]
      [75] putstatic #26
        + Fieldref [me/planetguy/robots/robot/BlockingState.reverse Lme/planetguy/robots/robot/BlockingState;]
      [78] new #15
        + Class [me/planetguy/robots/robot/BlockingState]
      [81] dup
      [82] ldc #3
        + String [gonorth]
      [84] bipush 6
      [86] invokespecial #36
        + Methodref [me/planetguy/robots/robot/BlockingState.<init> (Ljava/lang/String;I)V]
      [89] putstatic #21
        + Fieldref [me/planetguy/robots/robot/BlockingState.gonorth Lme/planetguy/robots/robot/BlockingState;]
      [92] new #15
        + Class [me/planetguy/robots/robot/BlockingState]
      [95] dup
      [96] ldc #4
        + String [gosouth]
      [98] bipush 7
      [100] invokespecial #36
        + Methodref [me/planetguy/robots/robot/BlockingState.<init> (Ljava/lang/String;I)V]
      [103] putstatic #22
        + Fieldref [me/planetguy/robots/robot/BlockingState.gosouth Lme/planetguy/robots/robot/BlockingState;]
      [106] new #15
        + Class [me/planetguy/robots/robot/BlockingState]
      [109] dup
      [110] ldc #2
        + String [goeast]
      [112] bipush 8
      [114] invokespecial #36
        + Methodref [me/planetguy/robots/robot/BlockingState.<init> (Ljava/lang/String;I)V]
      [117] putstatic #20
        + Fieldref [me/planetguy/robots/robot/BlockingState.goeast Lme/planetguy/robots/robot/BlockingState;]
      [120] new #15
        + Class [me/planetguy/robots/robot/BlockingState]
      [123] dup
      [124] ldc #5
        + String [gowest]
      [126] bipush 9
      [128] invokespecial #36
        + Methodref [me/planetguy/robots/robot/BlockingState.<init> (Ljava/lang/String;I)V]
      [131] putstatic #23
        + Fieldref [me/planetguy/robots/robot/BlockingState.gowest Lme/planetguy/robots/robot/BlockingState;]
      [134] bipush 10
      [136] anewarray #15
        + Class [me/planetguy/robots/robot/BlockingState]
      [139] dup
      [140] iconst_0
      [141] getstatic #25
        + Fieldref [me/planetguy/robots/robot/BlockingState.none Lme/planetguy/robots/robot/BlockingState;]
      [144] aastore
      [145] dup
      [146] iconst_1
      [147] getstatic #28
        + Fieldref [me/planetguy/robots/robot/BlockingState.toolUse Lme/planetguy/robots/robot/BlockingState;]
      [150] aastore
      [151] dup
      [152] iconst_2
      [153] getstatic #19
        + Fieldref [me/planetguy/robots/robot/BlockingState.forward Lme/planetguy/robots/robot/BlockingState;]
      [156] aastore
      [157] dup
      [158] iconst_3
      [159] getstatic #24
        + Fieldref [me/planetguy/robots/robot/BlockingState.left Lme/planetguy/robots/robot/BlockingState;]
      [162] aastore
      [163] dup
      [164] iconst_4
      [165] getstatic #27
        + Fieldref [me/planetguy/robots/robot/BlockingState.right Lme/planetguy/robots/robot/BlockingState;]
      [168] aastore
      [169] dup
      [170] iconst_5
      [171] getstatic #26
        + Fieldref [me/planetguy/robots/robot/BlockingState.reverse Lme/planetguy/robots/robot/BlockingState;]
      [174] aastore
      [175] dup
      [176] bipush 6
      [178] getstatic #21
        + Fieldref [me/planetguy/robots/robot/BlockingState.gonorth Lme/planetguy/robots/robot/BlockingState;]
      [181] aastore
      [182] dup
      [183] bipush 7
      [185] getstatic #22
        + Fieldref [me/planetguy/robots/robot/BlockingState.gosouth Lme/planetguy/robots/robot/BlockingState;]
      [188] aastore
      [189] dup
      [190] bipush 8
      [192] getstatic #20
        + Fieldref [me/planetguy/robots/robot/BlockingState.goeast Lme/planetguy/robots/robot/BlockingState;]
      [195] aastore
      [196] dup
      [197] bipush 9
      [199] getstatic #23
        + Fieldref [me/planetguy/robots/robot/BlockingState.gowest Lme/planetguy/robots/robot/BlockingState;]
      [202] aastore
      [203] putstatic #18
        + Fieldref [me/planetguy/robots/robot/BlockingState.ENUM$VALUES [Lme/planetguy/robots/robot/BlockingState;]
      [206] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>(Ljava/lang/String;I)V
    Access flags: 0x2
      = private BlockingState(java.lang.String,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] iload_2 v2
      [3] invokespecial #32
        + Methodref [java/lang/Enum.<init> (Ljava/lang/String;I)V]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       execute(Lme/planetguy/robots/robot/Robot;Landroid/view/View;)V
    Access flags: 0x1
      = public void execute(me.planetguy.robots.robot.Robot,android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 225, locals = 3, stack = 5):
      [0] invokestatic #35
        + Methodref [me/planetguy/robots/robot/BlockingState.$SWITCH_TABLE$me$planetguy$robots$robot$BlockingState ()[I]
      [3] aload_0 v0
      [4] invokevirtual #37
        + Methodref [me/planetguy/robots/robot/BlockingState.ordinal ()I]
      [7] iaload
      [8] tableswitch (10 offsets, default=216) (target=224)
        1: offset = 138, target = 146
        2: offset = 141, target = 149
        3: offset = 56, target = 64
        4: offset = 90, target = 98
        5: offset = 97, target = 105
        6: offset = 104, target = 112
        7: offset = 144, target = 152
        8: offset = 162, target = 170
        9: offset = 180, target = 188
        10: offset = 198, target = 206
        default: offset = 216, target = 224
      [64] aload_1 v1
      [65] aload_1 v1
      [66] getfield #30
        + Fieldref [me/planetguy/robots/robot/Robot.x I]
      [69] aload_1 v1
      [70] aload_1 v1
      [71] getfield #29
        + Fieldref [me/planetguy/robots/robot/Robot.heading I]
      [74] invokevirtual #39
        + Methodref [me/planetguy/robots/robot/Robot.facingX (I)I]
      [77] iadd
      [78] aload_1 v1
      [79] getfield #31
        + Fieldref [me/planetguy/robots/robot/Robot.y I]
      [82] aload_1 v1
      [83] aload_1 v1
      [84] getfield #29
        + Fieldref [me/planetguy/robots/robot/Robot.heading I]
      [87] invokevirtual #40
        + Methodref [me/planetguy/robots/robot/Robot.facingY (I)I]
      [90] iadd
      [91] aload_2 v2
      [92] invokevirtual #41
        + Methodref [me/planetguy/robots/robot/Robot.moveTo (IILandroid/view/View;)V]
      [95] goto +129 (target=224)
      [98] aload_1 v1
      [99] invokevirtual #42
        + Methodref [me/planetguy/robots/robot/Robot.turnLeft ()V]
      [102] goto +122 (target=224)
      [105] aload_1 v1
      [106] invokevirtual #43
        + Methodref [me/planetguy/robots/robot/Robot.turnRight ()V]
      [109] goto +115 (target=224)
      [112] aload_1 v1
      [113] aload_1 v1
      [114] getfield #30
        + Fieldref [me/planetguy/robots/robot/Robot.x I]
      [117] aload_1 v1
      [118] aload_1 v1
      [119] getfield #29
        + Fieldref [me/planetguy/robots/robot/Robot.heading I]
      [122] invokevirtual #39
        + Methodref [me/planetguy/robots/robot/Robot.facingX (I)I]
      [125] isub
      [126] aload_1 v1
      [127] getfield #31
        + Fieldref [me/planetguy/robots/robot/Robot.y I]
      [130] aload_1 v1
      [131] aload_1 v1
      [132] getfield #29
        + Fieldref [me/planetguy/robots/robot/Robot.heading I]
      [135] invokevirtual #40
        + Methodref [me/planetguy/robots/robot/Robot.facingY (I)I]
      [138] isub
      [139] aload_2 v2
      [140] invokevirtual #41
        + Methodref [me/planetguy/robots/robot/Robot.moveTo (IILandroid/view/View;)V]
      [143] goto +81 (target=224)
      [146] goto +78 (target=224)
      [149] goto +75 (target=224)
      [152] aload_1 v1
      [153] aload_1 v1
      [154] getfield #30
        + Fieldref [me/planetguy/robots/robot/Robot.x I]
      [157] aload_1 v1
      [158] getfield #31
        + Fieldref [me/planetguy/robots/robot/Robot.y I]
      [161] iconst_1
      [162] isub
      [163] aload_2 v2
      [164] invokevirtual #41
        + Methodref [me/planetguy/robots/robot/Robot.moveTo (IILandroid/view/View;)V]
      [167] goto +57 (target=224)
      [170] aload_1 v1
      [171] aload_1 v1
      [172] getfield #30
        + Fieldref [me/planetguy/robots/robot/Robot.x I]
      [175] aload_1 v1
      [176] getfield #31
        + Fieldref [me/planetguy/robots/robot/Robot.y I]
      [179] iconst_1
      [180] iadd
      [181] aload_2 v2
      [182] invokevirtual #41
        + Methodref [me/planetguy/robots/robot/Robot.moveTo (IILandroid/view/View;)V]
      [185] goto +39 (target=224)
      [188] aload_1 v1
      [189] aload_1 v1
      [190] getfield #30
        + Fieldref [me/planetguy/robots/robot/Robot.x I]
      [193] iconst_1
      [194] iadd
      [195] aload_1 v1
      [196] getfield #31
        + Fieldref [me/planetguy/robots/robot/Robot.y I]
      [199] aload_2 v2
      [200] invokevirtual #41
        + Methodref [me/planetguy/robots/robot/Robot.moveTo (IILandroid/view/View;)V]
      [203] goto +21 (target=224)
      [206] aload_1 v1
      [207] aload_1 v1
      [208] getfield #30
        + Fieldref [me/planetguy/robots/robot/Robot.x I]
      [211] iconst_1
      [212] isub
      [213] aload_1 v1
      [214] getfield #31
        + Fieldref [me/planetguy/robots/robot/Robot.y I]
      [217] aload_2 v2
      [218] invokevirtual #41
        + Methodref [me/planetguy/robots/robot/Robot.moveTo (IILandroid/view/View;)V]
      [221] goto +3 (target=224)
      [224] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 11):
        - [64] Var: ..., Stack: (empty)
        - [98] Var: ..., Stack: (empty)
        - [105] Var: ..., Stack: (empty)
        - [112] Var: ..., Stack: (empty)
        - [146] Var: ..., Stack: (empty)
        - [149] Var: ..., Stack: (empty)
        - [152] Var: ..., Stack: (empty)
        - [170] Var: ..., Stack: (empty)
        - [188] Var: ..., Stack: (empty)
        - [206] Var: ..., Stack: (empty)
        - [224] Var: ..., Stack: (empty)
  + Method:       values()[Lme/planetguy/robots/robot/BlockingState;
    Access flags: 0x9
      = public static me.planetguy.robots.robot.BlockingState[] values()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 22, locals = 3, stack = 5):
      [0] getstatic #18
        + Fieldref [me/planetguy/robots/robot/BlockingState.ENUM$VALUES [Lme/planetguy/robots/robot/BlockingState;]
      [3] dup
      [4] astore_0 v0
      [5] iconst_0
      [6] aload_0 v0
      [7] arraylength
      [8] dup
      [9] istore_1 v1
      [10] anewarray #15
        + Class [me/planetguy/robots/robot/BlockingState]
      [13] dup
      [14] astore_2 v2
      [15] iconst_0
      [16] iload_1 v1
      [17] invokestatic #34
        + Methodref [java/lang/System.arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V]
      [20] aload_2 v2
      [21] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       valueOf(Ljava/lang/String;)Lme/planetguy/robots/robot/BlockingState;
    Access flags: 0x9
      = public static me.planetguy.robots.robot.BlockingState valueOf(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 1, stack = 2):
      [0] ldc #15
        + Class [me/planetguy/robots/robot/BlockingState]
      [2] aload_0 v0
      [3] invokestatic #33
        + Methodref [java/lang/Enum.valueOf (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;]
      [6] checkcast #15
        + Class [me/planetguy/robots/robot/BlockingState]
      [9] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       $SWITCH_TABLE$me$planetguy$robots$robot$BlockingState()[I
    Access flags: 0x1008
      = static synthetic int[] $SWITCH_TABLE$me$planetguy$robots$robot$BlockingState()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 157, locals = 1, stack = 3):
      [0] getstatic #17
        + Fieldref [me/planetguy/robots/robot/BlockingState.$SWITCH_TABLE$me$planetguy$robots$robot$BlockingState [I]
      [3] dup
      [4] ifnull +4 (target=8)
      [7] areturn
      [8] pop
      [9] invokestatic #38
        + Methodref [me/planetguy/robots/robot/BlockingState.values ()[Lme/planetguy/robots/robot/BlockingState;]
      [12] arraylength
      [13] newarray 10
      [15] astore_0 v0
      [16] aload_0 v0
      [17] getstatic #19
        + Fieldref [me/planetguy/robots/robot/BlockingState.forward Lme/planetguy/robots/robot/BlockingState;]
      [20] invokevirtual #37
        + Methodref [me/planetguy/robots/robot/BlockingState.ordinal ()I]
      [23] iconst_3
      [24] iastore
      [25] goto +4 (target=29)
      [28] pop
      [29] aload_0 v0
      [30] getstatic #20
        + Fieldref [me/planetguy/robots/robot/BlockingState.goeast Lme/planetguy/robots/robot/BlockingState;]
      [33] invokevirtual #37
        + Methodref [me/planetguy/robots/robot/BlockingState.ordinal ()I]
      [36] bipush 9
      [38] iastore
      [39] goto +4 (target=43)
      [42] pop
      [43] aload_0 v0
      [44] getstatic #21
        + Fieldref [me/planetguy/robots/robot/BlockingState.gonorth Lme/planetguy/robots/robot/BlockingState;]
      [47] invokevirtual #37
        + Methodref [me/planetguy/robots/robot/BlockingState.ordinal ()I]
      [50] bipush 7
      [52] iastore
      [53] goto +4 (target=57)
      [56] pop
      [57] aload_0 v0
      [58] getstatic #22
        + Fieldref [me/planetguy/robots/robot/BlockingState.gosouth Lme/planetguy/robots/robot/BlockingState;]
      [61] invokevirtual #37
        + Methodref [me/planetguy/robots/robot/BlockingState.ordinal ()I]
      [64] bipush 8
      [66] iastore
      [67] goto +4 (target=71)
      [70] pop
      [71] aload_0 v0
      [72] getstatic #23
        + Fieldref [me/planetguy/robots/robot/BlockingState.gowest Lme/planetguy/robots/robot/BlockingState;]
      [75] invokevirtual #37
        + Methodref [me/planetguy/robots/robot/BlockingState.ordinal ()I]
      [78] bipush 10
      [80] iastore
      [81] goto +4 (target=85)
      [84] pop
      [85] aload_0 v0
      [86] getstatic #24
        + Fieldref [me/planetguy/robots/robot/BlockingState.left Lme/planetguy/robots/robot/BlockingState;]
      [89] invokevirtual #37
        + Methodref [me/planetguy/robots/robot/BlockingState.ordinal ()I]
      [92] iconst_4
      [93] iastore
      [94] goto +4 (target=98)
      [97] pop
      [98] aload_0 v0
      [99] getstatic #25
        + Fieldref [me/planetguy/robots/robot/BlockingState.none Lme/planetguy/robots/robot/BlockingState;]
      [102] invokevirtual #37
        + Methodref [me/planetguy/robots/robot/BlockingState.ordinal ()I]
      [105] iconst_1
      [106] iastore
      [107] goto +4 (target=111)
      [110] pop
      [111] aload_0 v0
      [112] getstatic #26
        + Fieldref [me/planetguy/robots/robot/BlockingState.reverse Lme/planetguy/robots/robot/BlockingState;]
      [115] invokevirtual #37
        + Methodref [me/planetguy/robots/robot/BlockingState.ordinal ()I]
      [118] bipush 6
      [120] iastore
      [121] goto +4 (target=125)
      [124] pop
      [125] aload_0 v0
      [126] getstatic #27
        + Fieldref [me/planetguy/robots/robot/BlockingState.right Lme/planetguy/robots/robot/BlockingState;]
      [129] invokevirtual #37
        + Methodref [me/planetguy/robots/robot/BlockingState.ordinal ()I]
      [132] iconst_5
      [133] iastore
      [134] goto +4 (target=138)
      [137] pop
      [138] aload_0 v0
      [139] getstatic #28
        + Fieldref [me/planetguy/robots/robot/BlockingState.toolUse Lme/planetguy/robots/robot/BlockingState;]
      [142] invokevirtual #37
        + Methodref [me/planetguy/robots/robot/BlockingState.ordinal ()I]
      [145] iconst_2
      [146] iastore
      [147] goto +4 (target=151)
      [150] pop
      [151] aload_0 v0
      [152] dup
      [153] putstatic #17
        + Fieldref [me/planetguy/robots/robot/BlockingState.$SWITCH_TABLE$me$planetguy$robots$robot$BlockingState [I]
      [156] areturn
      Code attribute exceptions (count = 10):
      - ExceptionInfo (16 -> 25: 28):
      + Class [java/lang/NoSuchFieldError]
      - ExceptionInfo (29 -> 39: 42):
      + Class [java/lang/NoSuchFieldError]
      - ExceptionInfo (43 -> 53: 56):
      + Class [java/lang/NoSuchFieldError]
      - ExceptionInfo (57 -> 67: 70):
      + Class [java/lang/NoSuchFieldError]
      - ExceptionInfo (71 -> 81: 84):
      + Class [java/lang/NoSuchFieldError]
      - ExceptionInfo (85 -> 94: 97):
      + Class [java/lang/NoSuchFieldError]
      - ExceptionInfo (98 -> 107: 110):
      + Class [java/lang/NoSuchFieldError]
      - ExceptionInfo (111 -> 121: 124):
      + Class [java/lang/NoSuchFieldError]
      - ExceptionInfo (125 -> 134: 137):
      + Class [java/lang/NoSuchFieldError]
      - ExceptionInfo (138 -> 147: 150):
      + Class [java/lang/NoSuchFieldError]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 21):
        - [8] Var: ..., Stack: [a:[I]
        - [28] Var: [a:[I], Stack: [a:java/lang/NoSuchFieldError]
        - [29] Var: ..., Stack: (empty)
        - [42] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [43] Var: ..., Stack: (empty)
        - [56] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [57] Var: ..., Stack: (empty)
        - [70] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [71] Var: ..., Stack: (empty)
        - [84] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [85] Var: ..., Stack: (empty)
        - [97] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [98] Var: ..., Stack: (empty)
        - [110] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [111] Var: ..., Stack: (empty)
        - [124] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [125] Var: ..., Stack: (empty)
        - [137] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [138] Var: ..., Stack: (empty)
        - [150] Var: ..., Stack: [a:java/lang/NoSuchFieldError]
        - [151] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/robot/Robot
  Superclass:    me/planetguy/robots/dynamic/DynamicObject
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.robot.Robot extends me.planetguy.robots.dynamic.DynamicObject

Interfaces (count = 1):
  + Class [me/planetguy/advancedvm/Scripted]

Constant Pool (count = 368):
  + Integer [131072]
  + Integer [2130837519]
  + String []
  + String [
]
  + String [,]
  + String [: ]
  + String [;]
  + String [Broken script!]
  + String [Moving to ]
  + String [Robot clicked!]
  + String [Robots]
  + String [east]
  + String [ground]
  + String [id]
  + String [label top
randint x 1 4
* newLabel 2 x
+ newLabel 2 newLabel
jump _ newLabel
robot.move _ gosouth
jump _ top
robot.move _ gowest
jump _ top
robot.move _ goeast
jump _ top
robot.move _ gonorth
jump _ top]
  + String [north]
  + String [ore]
  + String [south]
  + String [west]
  + String [x]
  + String [y]
  + Class [[Ljava/lang/String;]
  + Class [a/a/a/c/x]
  + Class [android/content/Context]
  + Class [android/content/Intent]
  + Class [android/graphics/BitmapFactory]
  + Class [android/util/Log]
  + Class [android/view/View]
  + Class [java/lang/Class]
  + Class [java/lang/Exception]
  + Class [java/lang/Object]
  + Class [java/lang/String]
  + Class [java/lang/StringBuilder]
  + Class [me/planetguy/advancedvm/ImperativeScript]
  + Class [me/planetguy/advancedvm/LimitedScript]
  + Class [me/planetguy/advancedvm/Script]
  + Class [me/planetguy/advancedvm/Scripted]
  + Class [me/planetguy/advancedvm/StandardLibrary]
  + Class [me/planetguy/advancedvm/TransformerInlineConstants]
  + Class [me/planetguy/advancedvm/VMContext]
  + Class [me/planetguy/robots/Robots]
  + Class [me/planetguy/robots/dynamic/DynamicObject]
  + Class [me/planetguy/robots/ide/IDEActivity]
  + Class [me/planetguy/robots/misc/Options]
  + Class [me/planetguy/robots/misc/Side]
  + Class [me/planetguy/robots/robot/BlockingState]
  + Class [me/planetguy/robots/robot/Robot]
  + Class [me/planetguy/robots/robot/RobotScriptAPI]
  + Class [me/planetguy/robots/robot/a]
  + Class [me/planetguy/robots/robot/b]
  + Class [me/planetguy/robots/tile/Tile]
  + Class [me/planetguy/robots/tile/TileUtil]
  + Class [me/planetguy/robots/world/World]
  + Fieldref [me/planetguy/advancedvm/Script.debugStream Lme/planetguy/advancedvm/Stream;]
  + Fieldref [me/planetguy/advancedvm/Script.source Ljava/lang/String;]
  + Fieldref [me/planetguy/robots/Robots.currentIDE Lme/planetguy/robots/ide/IDEActivity;]
  + Fieldref [me/planetguy/robots/ide/IDEActivity.robot Lme/planetguy/robots/robot/Robot;]
  + Fieldref [me/planetguy/robots/misc/Options.ROBOT_TICKS_PER_UPDATE I]
  + Fieldref [me/planetguy/robots/robot/BlockingState.none Lme/planetguy/robots/robot/BlockingState;]
  + Fieldref [me/planetguy/robots/robot/Robot.contex Lme/planetguy/advancedvm/VMContext;]
  + Fieldref [me/planetguy/robots/robot/Robot.east I]
  + Fieldref [me/planetguy/robots/robot/Robot.icon Landroid/graphics/Bitmap;]
  + Fieldref [me/planetguy/robots/robot/Robot.log Ljava/lang/String;]
  + Fieldref [me/planetguy/robots/robot/Robot.north I]
  + Fieldref [me/planetguy/robots/robot/Robot.script Lme/planetguy/advancedvm/Script;]
  + Fieldref [me/planetguy/robots/robot/Robot.south I]
  + Fieldref [me/planetguy/robots/robot/Robot.waitingOn Lme/planetguy/robots/robot/BlockingState;]
  + Fieldref [me/planetguy/robots/robot/Robot.west I]
  + Fieldref [me/planetguy/robots/robot/Robot.world Lme/planetguy/robots/world/World;]
  + Fieldref [me/planetguy/robots/robot/Robot.worldGui Landroid/content/Context;]
  + Fieldref [me/planetguy/robots/robot/Robot.x I]
  + Fieldref [me/planetguy/robots/robot/Robot.y I]
  + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
  + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
  + Methodref [android/content/Context.getResources ()Landroid/content/res/Resources;]
  + Methodref [android/content/Context.startActivity (Landroid/content/Intent;)V]
  + Methodref [android/content/Intent.<init> (Landroid/content/Context;Ljava/lang/Class;)V]
  + Methodref [android/content/Intent.addFlags (I)Landroid/content/Intent;]
  + Methodref [android/content/Intent.putExtra (Ljava/lang/String;I)Landroid/content/Intent;]
  + Methodref [android/graphics/BitmapFactory.decodeResource (Landroid/content/res/Resources;I)Landroid/graphics/Bitmap;]
  + Methodref [android/util/Log.d (Ljava/lang/String;Ljava/lang/String;)I]
  + Methodref [android/util/Log.w (Ljava/lang/String;Ljava/lang/String;)I]
  + Methodref [android/view/View.getContext ()Landroid/content/Context;]
  + Methodref [android/view/View.post (Ljava/lang/Runnable;)Z]
  + Methodref [java/lang/Class.getField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
  + Methodref [java/lang/Class.getSimpleName ()Ljava/lang/String;]
  + Methodref [java/lang/Exception.getMessage ()Ljava/lang/String;]
  + Methodref [java/lang/Exception.printStackTrace ()V]
  + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
  + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
  + Methodref [java/lang/String.length ()I]
  + Methodref [java/lang/String.split (Ljava/lang/String;)[Ljava/lang/String;]
  + Methodref [java/lang/String.substring (II)Ljava/lang/String;]
  + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
  + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [me/planetguy/advancedvm/ImperativeScript.jump (I)V]
  + Methodref [me/planetguy/advancedvm/Script.canStep ()Z]
  + Methodref [me/planetguy/advancedvm/Script.step ()V]
  + Methodref [me/planetguy/advancedvm/TransformerInlineConstants.<init> ()V]
  + Methodref [me/planetguy/advancedvm/VMContext.<init> ()V]
  + Methodref [me/planetguy/advancedvm/VMContext.compile (Ljava/lang/String;Lme/planetguy/advancedvm/Scripted;)Lme/planetguy/advancedvm/Script;]
  + Methodref [me/planetguy/advancedvm/VMContext.registerClass (Ljava/lang/Class;)V]
  + Methodref [me/planetguy/advancedvm/VMContext.registerFieldBox (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V]
  + Methodref [me/planetguy/advancedvm/VMContext.registerScriptTransformer (Lme/planetguy/advancedvm/ScriptTransformer;)V]
  + Methodref [me/planetguy/advancedvm/VMContext.setScriptClass (Ljava/lang/Class;)V]
  + Methodref [me/planetguy/robots/dynamic/DynamicObject.<init> (Lme/planetguy/robots/world/World;)V]
  + Methodref [me/planetguy/robots/dynamic/DynamicObject.load (Ljava/lang/String;)V]
  + Methodref [me/planetguy/robots/dynamic/DynamicObject.save ()Ljava/lang/String;]
  + Methodref [me/planetguy/robots/robot/BlockingState.execute (Lme/planetguy/robots/robot/Robot;Landroid/view/View;)V]
  + Methodref [me/planetguy/robots/robot/Robot.getDynamicObjectID ()I]
  + Methodref [me/planetguy/robots/robot/Robot.id (Lme/planetguy/robots/tile/Tile;)I]
  + Methodref [me/planetguy/robots/robot/Robot.initContext (Lme/planetguy/robots/robot/Robot;)V]
  + Methodref [me/planetguy/robots/robot/Robot.log (Ljava/lang/Exception;)V]
  + Methodref [me/planetguy/robots/robot/Robot.log (Ljava/lang/String;)V]
  + Methodref [me/planetguy/robots/robot/Robot.makeToast (Landroid/view/View;Ljava/lang/String;)V]
  + Methodref [me/planetguy/robots/robot/Robot.setScript (Ljava/lang/String;)V]
  + Methodref [me/planetguy/robots/robot/RobotScriptAPI.initActions (Lme/planetguy/advancedvm/VMContext;)V]
  + Methodref [me/planetguy/robots/robot/a.<init> (Lme/planetguy/robots/robot/Robot;)V]
  + Methodref [me/planetguy/robots/robot/b.<init> (Lme/planetguy/robots/robot/Robot;Landroid/view/View;Ljava/lang/String;)V]
  + Methodref [me/planetguy/robots/tile/Tile.isWalkable ()Z]
  + Methodref [me/planetguy/robots/tile/Tile.onObjectEnter (Lme/planetguy/robots/dynamic/DynamicObject;Landroid/view/View;)V]
  + InterfaceMethodref [a/a/a/c/x.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Landroid/content/Context;Ljava/lang/Class;)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (Lme/planetguy/robots/robot/Robot;)V]
  + NameAndType [<init> (Lme/planetguy/robots/robot/Robot;Landroid/view/View;Ljava/lang/String;)V]
  + NameAndType [<init> (Lme/planetguy/robots/world/World;)V]
  + NameAndType [ROBOT_TICKS_PER_UPDATE I]
  + NameAndType [addFlags (I)Landroid/content/Intent;]
  + NameAndType [append (I)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [canStep ()Z]
  + NameAndType [compile (Ljava/lang/String;Lme/planetguy/advancedvm/Scripted;)Lme/planetguy/advancedvm/Script;]
  + NameAndType [contex Lme/planetguy/advancedvm/VMContext;]
  + NameAndType [currentIDE Lme/planetguy/robots/ide/IDEActivity;]
  + NameAndType [d (Ljava/lang/String;Ljava/lang/String;)I]
  + NameAndType [debugStream Lme/planetguy/advancedvm/Stream;]
  + NameAndType [decodeResource (Landroid/content/res/Resources;I)Landroid/graphics/Bitmap;]
  + NameAndType [east I]
  + NameAndType [execute (Lme/planetguy/robots/robot/Robot;Landroid/view/View;)V]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [getClass ()Ljava/lang/Class;]
  + NameAndType [getContext ()Landroid/content/Context;]
  + NameAndType [getDynamicObjectID ()I]
  + NameAndType [getField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
  + NameAndType [getMessage ()Ljava/lang/String;]
  + NameAndType [getResources ()Landroid/content/res/Resources;]
  + NameAndType [getSimpleName ()Ljava/lang/String;]
  + NameAndType [icon Landroid/graphics/Bitmap;]
  + NameAndType [id (Lme/planetguy/robots/tile/Tile;)I]
  + NameAndType [initActions (Lme/planetguy/advancedvm/VMContext;)V]
  + NameAndType [initContext (Lme/planetguy/robots/robot/Robot;)V]
  + NameAndType [isWalkable ()Z]
  + NameAndType [jump (I)V]
  + NameAndType [length ()I]
  + NameAndType [load (Ljava/lang/String;)V]
  + NameAndType [log (Ljava/lang/Exception;)V]
  + NameAndType [log (Ljava/lang/String;)V]
  + NameAndType [log Ljava/lang/String;]
  + NameAndType [makeToast (Landroid/view/View;Ljava/lang/String;)V]
  + NameAndType [none Lme/planetguy/robots/robot/BlockingState;]
  + NameAndType [north I]
  + NameAndType [onObjectEnter (Lme/planetguy/robots/dynamic/DynamicObject;Landroid/view/View;)V]
  + NameAndType [post (Ljava/lang/Runnable;)Z]
  + NameAndType [printStackTrace ()V]
  + NameAndType [putExtra (Ljava/lang/String;I)Landroid/content/Intent;]
  + NameAndType [registerClass (Ljava/lang/Class;)V]
  + NameAndType [registerFieldBox (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V]
  + NameAndType [registerScriptTransformer (Lme/planetguy/advancedvm/ScriptTransformer;)V]
  + NameAndType [robot Lme/planetguy/robots/robot/Robot;]
  + NameAndType [save ()Ljava/lang/String;]
  + NameAndType [script Lme/planetguy/advancedvm/Script;]
  + NameAndType [setScript (Ljava/lang/String;)V]
  + NameAndType [setScriptClass (Ljava/lang/Class;)V]
  + NameAndType [source Ljava/lang/String;]
  + NameAndType [south I]
  + NameAndType [split (Ljava/lang/String;)[Ljava/lang/String;]
  + NameAndType [startActivity (Landroid/content/Intent;)V]
  + NameAndType [step ()V]
  + NameAndType [substring (II)Ljava/lang/String;]
  + NameAndType [tiles La/a/a/c/x;]
  + NameAndType [tiles [[Lme/planetguy/robots/tile/Tile;]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [valueOf (Ljava/lang/Object;)Ljava/lang/String;]
  + NameAndType [w (Ljava/lang/String;Ljava/lang/String;)I]
  + NameAndType [waitingOn Lme/planetguy/robots/robot/BlockingState;]
  + NameAndType [west I]
  + NameAndType [world Lme/planetguy/robots/world/World;]
  + NameAndType [worldGui Landroid/content/Context;]
  + NameAndType [x I]
  + NameAndType [y I]
  + Utf8 []
  + Utf8 [
]
  + Utf8 [()I]
  + Utf8 [()Landroid/content/Context;]
  + Utf8 [()Landroid/content/res/Resources;]
  + Utf8 [()Landroid/graphics/Bitmap;]
  + Utf8 [()Ljava/lang/Class;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Lme/planetguy/advancedvm/Script;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)Landroid/content/Intent;]
  + Utf8 [(I)Ljava/lang/StringBuilder;]
  + Utf8 [(I)V]
  + Utf8 [(II)Ljava/lang/String;]
  + Utf8 [(IILandroid/view/View;)V]
  + Utf8 [(Landroid/content/Context;Ljava/lang/Class;)V]
  + Utf8 [(Landroid/content/Intent;)V]
  + Utf8 [(Landroid/content/res/Resources;I)Landroid/graphics/Bitmap;]
  + Utf8 [(Landroid/view/View;)V]
  + Utf8 [(Landroid/view/View;)Z]
  + Utf8 [(Landroid/view/View;Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/Class;)V]
  + Utf8 [(Ljava/lang/Exception;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/String;]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/Runnable;)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/reflect/Field;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;)[Ljava/lang/String;]
  + Utf8 [(Ljava/lang/String;I)Landroid/content/Intent;]
  + Utf8 [(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V]
  + Utf8 [(Ljava/lang/String;Ljava/lang/String;)I]
  + Utf8 [(Ljava/lang/String;Lme/planetguy/advancedvm/Scripted;)Lme/planetguy/advancedvm/Script;]
  + Utf8 [(Lme/planetguy/advancedvm/ScriptTransformer;)V]
  + Utf8 [(Lme/planetguy/advancedvm/VMContext;)V]
  + Utf8 [(Lme/planetguy/robots/dynamic/DynamicObject;Landroid/view/View;)V]
  + Utf8 [(Lme/planetguy/robots/robot/Robot;)V]
  + Utf8 [(Lme/planetguy/robots/robot/Robot;Landroid/view/View;)V]
  + Utf8 [(Lme/planetguy/robots/robot/Robot;Landroid/view/View;Ljava/lang/String;)V]
  + Utf8 [(Lme/planetguy/robots/tile/Tile;)I]
  + Utf8 [(Lme/planetguy/robots/world/World;)V]
  + Utf8 [(Lme/planetguy/robots/world/World;Lme/planetguy/robots/misc/Side;Landroid/content/Context;)V]
  + Utf8 [,]
  + Utf8 [: ]
  + Utf8 [;]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Broken script!]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [La/a/a/c/x;]
  + Utf8 [Landroid/content/Context;]
  + Utf8 [Landroid/graphics/Bitmap;]
  + Utf8 [Ljava/lang/String;]
  + Utf8 [Lme/planetguy/advancedvm/Script;]
  + Utf8 [Lme/planetguy/advancedvm/Stream;]
  + Utf8 [Lme/planetguy/advancedvm/VMContext;]
  + Utf8 [Lme/planetguy/robots/ide/IDEActivity;]
  + Utf8 [Lme/planetguy/robots/misc/Side;]
  + Utf8 [Lme/planetguy/robots/robot/BlockingState;]
  + Utf8 [Lme/planetguy/robots/robot/Robot;]
  + Utf8 [Lme/planetguy/robots/world/World;]
  + Utf8 [Moving to ]
  + Utf8 [ROBOT_TICKS_PER_UPDATE]
  + Utf8 [Robot clicked!]
  + Utf8 [Robots]
  + Utf8 [StackMapTable]
  + Utf8 [[Ljava/lang/String;]
  + Utf8 [[[Lme/planetguy/robots/tile/Tile;]
  + Utf8 [a/a/a/c/x]
  + Utf8 [addFlags]
  + Utf8 [android/content/Context]
  + Utf8 [android/content/Intent]
  + Utf8 [android/graphics/BitmapFactory]
  + Utf8 [android/util/Log]
  + Utf8 [android/view/View]
  + Utf8 [append]
  + Utf8 [canStep]
  + Utf8 [compile]
  + Utf8 [contex]
  + Utf8 [currentIDE]
  + Utf8 [d]
  + Utf8 [debugStream]
  + Utf8 [decodeResource]
  + Utf8 [east]
  + Utf8 [execute]
  + Utf8 [get]
  + Utf8 [getClass]
  + Utf8 [getContext]
  + Utf8 [getDynamicObjectID]
  + Utf8 [getField]
  + Utf8 [getIcon]
  + Utf8 [getMessage]
  + Utf8 [getResources]
  + Utf8 [getScript]
  + Utf8 [getSimpleName]
  + Utf8 [ground]
  + Utf8 [icon]
  + Utf8 [id]
  + Utf8 [initActions]
  + Utf8 [initContext]
  + Utf8 [isWalkable]
  + Utf8 [java/lang/Class]
  + Utf8 [java/lang/Exception]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/String]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [jump]
  + Utf8 [label top
randint x 1 4
* newLabel 2 x
+ newLabel 2 newLabel
jump _ newLabel
robot.move _ gosouth
jump _ top
robot.move _ gowest
jump _ top
robot.move _ goeast
jump _ top
robot.move _ gonorth
jump _ top]
  + Utf8 [length]
  + Utf8 [load]
  + Utf8 [log]
  + Utf8 [makeToast]
  + Utf8 [me/planetguy/advancedvm/ImperativeScript]
  + Utf8 [me/planetguy/advancedvm/LimitedScript]
  + Utf8 [me/planetguy/advancedvm/Script]
  + Utf8 [me/planetguy/advancedvm/Scripted]
  + Utf8 [me/planetguy/advancedvm/StandardLibrary]
  + Utf8 [me/planetguy/advancedvm/TransformerInlineConstants]
  + Utf8 [me/planetguy/advancedvm/VMContext]
  + Utf8 [me/planetguy/robots/Robots]
  + Utf8 [me/planetguy/robots/dynamic/DynamicObject]
  + Utf8 [me/planetguy/robots/ide/IDEActivity]
  + Utf8 [me/planetguy/robots/misc/Options]
  + Utf8 [me/planetguy/robots/misc/Side]
  + Utf8 [me/planetguy/robots/robot/BlockingState]
  + Utf8 [me/planetguy/robots/robot/Robot]
  + Utf8 [me/planetguy/robots/robot/RobotScriptAPI]
  + Utf8 [me/planetguy/robots/robot/a]
  + Utf8 [me/planetguy/robots/robot/b]
  + Utf8 [me/planetguy/robots/tile/Tile]
  + Utf8 [me/planetguy/robots/tile/TileUtil]
  + Utf8 [me/planetguy/robots/world/World]
  + Utf8 [moveTo]
  + Utf8 [none]
  + Utf8 [north]
  + Utf8 [onClicked]
  + Utf8 [onObjectEnter]
  + Utf8 [onUpdate]
  + Utf8 [ore]
  + Utf8 [post]
  + Utf8 [print]
  + Utf8 [printStackTrace]
  + Utf8 [putExtra]
  + Utf8 [registerClass]
  + Utf8 [registerFieldBox]
  + Utf8 [registerScriptTransformer]
  + Utf8 [robot]
  + Utf8 [save]
  + Utf8 [script]
  + Utf8 [setScript]
  + Utf8 [setScriptClass]
  + Utf8 [side]
  + Utf8 [source]
  + Utf8 [south]
  + Utf8 [split]
  + Utf8 [startActivity]
  + Utf8 [step]
  + Utf8 [substring]
  + Utf8 [tiles]
  + Utf8 [toString]
  + Utf8 [valueOf]
  + Utf8 [w]
  + Utf8 [waitingOn]
  + Utf8 [west]
  + Utf8 [world]
  + Utf8 [worldGui]
  + Utf8 [x]
  + Utf8 [y]

Fields (count = 11):
  + Field:        contex Lme/planetguy/advancedvm/VMContext;
    Access flags: 0x9
      = public static me.planetguy.advancedvm.VMContext contex
  + Field:        worldGui Landroid/content/Context;
    Access flags: 0x1
      = public android.content.Context worldGui
  + Field:        side Lme/planetguy/robots/misc/Side;
    Access flags: 0x1
      = public me.planetguy.robots.misc.Side side
  + Field:        log Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String log
  + Field:        script Lme/planetguy/advancedvm/Script;
    Access flags: 0x1
      = public me.planetguy.advancedvm.Script script
  + Field:        waitingOn Lme/planetguy/robots/robot/BlockingState;
    Access flags: 0x1
      = public me.planetguy.robots.robot.BlockingState waitingOn
  + Field:        north I
    Access flags: 0x1
      = public int north
  + Field:        south I
    Access flags: 0x1
      = public int south
  + Field:        east I
    Access flags: 0x1
      = public int east
  + Field:        west I
    Access flags: 0x1
      = public int west
  + Field:        icon Landroid/graphics/Bitmap;
    Access flags: 0x0
      = android.graphics.Bitmap icon

Methods (count = 17):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 0, stack = 1):
      [0] aconst_null
      [1] invokestatic #115
        + Methodref [me/planetguy/robots/robot/Robot.initContext (Lme/planetguy/robots/robot/Robot;)V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       initContext(Lme/planetguy/robots/robot/Robot;)V
    Access flags: 0x9
      = public static void initContext(me.planetguy.robots.robot.Robot)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 202, locals = 7, stack = 5):
      [0] new #40
        + Class [me/planetguy/advancedvm/VMContext]
      [3] dup
      [4] invokespecial #103
        + Methodref [me/planetguy/advancedvm/VMContext.<init> ()V]
      [7] putstatic #60
        + Fieldref [me/planetguy/robots/robot/Robot.contex Lme/planetguy/advancedvm/VMContext;]
      [10] getstatic #60
        + Fieldref [me/planetguy/robots/robot/Robot.contex Lme/planetguy/advancedvm/VMContext;]
      [13] ldc #38
        + Class [me/planetguy/advancedvm/StandardLibrary]
      [15] invokevirtual #105
        + Methodref [me/planetguy/advancedvm/VMContext.registerClass (Ljava/lang/Class;)V]
      [18] getstatic #60
        + Fieldref [me/planetguy/robots/robot/Robot.contex Lme/planetguy/advancedvm/VMContext;]
      [21] ldc #35
        + Class [me/planetguy/advancedvm/LimitedScript]
      [23] invokevirtual #108
        + Methodref [me/planetguy/advancedvm/VMContext.setScriptClass (Ljava/lang/Class;)V]
      [26] getstatic #60
        + Fieldref [me/planetguy/robots/robot/Robot.contex Lme/planetguy/advancedvm/VMContext;]
      [29] new #39
        + Class [me/planetguy/advancedvm/TransformerInlineConstants]
      [32] dup
      [33] invokespecial #102
        + Methodref [me/planetguy/advancedvm/TransformerInlineConstants.<init> ()V]
      [36] invokevirtual #107
        + Methodref [me/planetguy/advancedvm/VMContext.registerScriptTransformer (Lme/planetguy/advancedvm/ScriptTransformer;)V]
      [39] aload_0 v0
      [40] ifnull +143 (target=183)
      [43] aload_0 v0
      [44] invokevirtual #89
        + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
      [47] ldc #20
        + String [x]
      [49] invokevirtual #85
        + Methodref [java/lang/Class.getField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
      [52] astore_1 v1
      [53] aload_0 v0
      [54] invokevirtual #89
        + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
      [57] ldc #21
        + String [y]
      [59] invokevirtual #85
        + Methodref [java/lang/Class.getField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
      [62] astore_2 v2
      [63] aload_0 v0
      [64] invokevirtual #89
        + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
      [67] ldc #16
        + String [north]
      [69] invokevirtual #85
        + Methodref [java/lang/Class.getField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
      [72] astore_3 v3
      [73] aload_0 v0
      [74] invokevirtual #89
        + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
      [77] ldc #18
        + String [south]
      [79] invokevirtual #85
        + Methodref [java/lang/Class.getField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
      [82] astore v4
      [84] aload_0 v0
      [85] invokevirtual #89
        + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
      [88] ldc #12
        + String [east]
      [90] invokevirtual #85
        + Methodref [java/lang/Class.getField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
      [93] astore v5
      [95] aload_0 v0
      [96] invokevirtual #89
        + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
      [99] ldc #19
        + String [west]
      [101] invokevirtual #85
        + Methodref [java/lang/Class.getField (Ljava/lang/String;)Ljava/lang/reflect/Field;]
      [104] astore v6
      [106] getstatic #60
        + Fieldref [me/planetguy/robots/robot/Robot.contex Lme/planetguy/advancedvm/VMContext;]
      [109] ldc #20
        + String [x]
      [111] aload_0 v0
      [112] aload_1 v1
      [113] iconst_0
      [114] invokevirtual #106
        + Methodref [me/planetguy/advancedvm/VMContext.registerFieldBox (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V]
      [117] getstatic #60
        + Fieldref [me/planetguy/robots/robot/Robot.contex Lme/planetguy/advancedvm/VMContext;]
      [120] ldc #21
        + String [y]
      [122] aload_0 v0
      [123] aload_2 v2
      [124] iconst_0
      [125] invokevirtual #106
        + Methodref [me/planetguy/advancedvm/VMContext.registerFieldBox (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V]
      [128] getstatic #60
        + Fieldref [me/planetguy/robots/robot/Robot.contex Lme/planetguy/advancedvm/VMContext;]
      [131] ldc #16
        + String [north]
      [133] aload_0 v0
      [134] aload_3 v3
      [135] iconst_0
      [136] invokevirtual #106
        + Methodref [me/planetguy/advancedvm/VMContext.registerFieldBox (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V]
      [139] getstatic #60
        + Fieldref [me/planetguy/robots/robot/Robot.contex Lme/planetguy/advancedvm/VMContext;]
      [142] ldc #18
        + String [south]
      [144] aload_0 v0
      [145] aload v4
      [147] iconst_0
      [148] invokevirtual #106
        + Methodref [me/planetguy/advancedvm/VMContext.registerFieldBox (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V]
      [151] getstatic #60
        + Fieldref [me/planetguy/robots/robot/Robot.contex Lme/planetguy/advancedvm/VMContext;]
      [154] ldc #12
        + String [east]
      [156] aload_0 v0
      [157] aload v5
      [159] iconst_0
      [160] invokevirtual #106
        + Methodref [me/planetguy/advancedvm/VMContext.registerFieldBox (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V]
      [163] getstatic #60
        + Fieldref [me/planetguy/robots/robot/Robot.contex Lme/planetguy/advancedvm/VMContext;]
      [166] ldc #19
        + String [west]
      [168] aload_0 v0
      [169] aload v6
      [171] iconst_0
      [172] invokevirtual #106
        + Methodref [me/planetguy/advancedvm/VMContext.registerFieldBox (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V]
      [175] goto +8 (target=183)
      [178] astore_1 v1
      [179] aload_1 v1
      [180] invokevirtual #88
        + Methodref [java/lang/Exception.printStackTrace ()V]
      [183] getstatic #60
        + Fieldref [me/planetguy/robots/robot/Robot.contex Lme/planetguy/advancedvm/VMContext;]
      [186] invokestatic #120
        + Methodref [me/planetguy/robots/robot/RobotScriptAPI.initActions (Lme/planetguy/advancedvm/VMContext;)V]
      [189] ldc #11
        + String [Robots]
      [191] getstatic #60
        + Fieldref [me/planetguy/robots/robot/Robot.contex Lme/planetguy/advancedvm/VMContext;]
      [194] invokevirtual #90
        + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
      [197] invokestatic #81
        + Methodref [android/util/Log.d (Ljava/lang/String;Ljava/lang/String;)I]
      [200] pop
      [201] return
      Code attribute exceptions (count = 1):
      - ExceptionInfo (43 -> 175: 178):
      + Class [java/lang/Exception]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [178] Var: ..., Stack: [a:java/lang/Exception]
        - [183] Var: ..., Stack: (empty)
  - Method:       <init>(Lme/planetguy/robots/world/World;Lme/planetguy/robots/misc/Side;Landroid/content/Context;)V
    Access flags: 0x1
      = public Robot(me.planetguy.robots.world.World,me.planetguy.robots.misc.Side,android.content.Context)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 53, locals = 5, stack = 3):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #109
        + Methodref [me/planetguy/robots/dynamic/DynamicObject.<init> (Lme/planetguy/robots/world/World;)V]
      [5] aload_0 v0
      [6] ldc #3
        + String []
      [8] putfield #63
        + Fieldref [me/planetguy/robots/robot/Robot.log Ljava/lang/String;]
      [11] aload_0 v0
      [12] getstatic #59
        + Fieldref [me/planetguy/robots/robot/BlockingState.none Lme/planetguy/robots/robot/BlockingState;]
      [15] putfield #67
        + Fieldref [me/planetguy/robots/robot/Robot.waitingOn Lme/planetguy/robots/robot/BlockingState;]
      [18] aload_0 v0
      [19] aload_3 v3
      [20] putfield #70
        + Fieldref [me/planetguy/robots/robot/Robot.worldGui Landroid/content/Context;]
      [23] aload_0 v0
      [24] aload_3 v3
      [25] invokevirtual #75
        + Methodref [android/content/Context.getResources ()Landroid/content/res/Resources;]
      [28] ldc #2
        + Integer [2130837519]
      [30] invokestatic #80
        + Methodref [android/graphics/BitmapFactory.decodeResource (Landroid/content/res/Resources;I)Landroid/graphics/Bitmap;]
      [33] putfield #62
        + Fieldref [me/planetguy/robots/robot/Robot.icon Landroid/graphics/Bitmap;]
      [36] aload_0 v0
      [37] ldc #15
        + String [label top
randint x 1 4
* newLabel 2 x
+ newLabel 2 newLabel
jump _ newLabel
robot.move _ gosouth
jump _ top
robot.move _ gowest
jump _ top
robot.move _ goeast
jump _ top
robot.move _ gonorth
jump _ top]
      [39] invokevirtual #119
        + Methodref [me/planetguy/robots/robot/Robot.setScript (Ljava/lang/String;)V]
      [42] goto +10 (target=52)
      [45] astore v4
      [47] aload v4
      [49] invokevirtual #88
        + Methodref [java/lang/Exception.printStackTrace ()V]
      [52] return
      Code attribute exceptions (count = 1):
      - ExceptionInfo (36 -> 42: 45):
      + Class [java/lang/Exception]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [45] Var: [a:me/planetguy/robots/robot/Robot][a:me/planetguy/robots/world/World][a:me/planetguy/robots/misc/Side][a:android/content/Context], Stack: [a:java/lang/Exception]
        - [52] Var: ..., Stack: (empty)
  + Method:       setScript(Ljava/lang/String;)V
    Access flags: 0x1
      = public void setScript(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 39, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] getstatic #60
        + Fieldref [me/planetguy/robots/robot/Robot.contex Lme/planetguy/advancedvm/VMContext;]
      [4] aload_1 v1
      [5] aload_0 v0
      [6] invokevirtual #104
        + Methodref [me/planetguy/advancedvm/VMContext.compile (Ljava/lang/String;Lme/planetguy/advancedvm/Scripted;)Lme/planetguy/advancedvm/Script;]
      [9] putfield #65
        + Fieldref [me/planetguy/robots/robot/Robot.script Lme/planetguy/advancedvm/Script;]
      [12] aload_0 v0
      [13] getfield #65
        + Fieldref [me/planetguy/robots/robot/Robot.script Lme/planetguy/advancedvm/Script;]
      [16] new #49
        + Class [me/planetguy/robots/robot/a]
      [19] dup
      [20] aload_0 v0
      [21] invokespecial #121
        + Methodref [me/planetguy/robots/robot/a.<init> (Lme/planetguy/robots/robot/Robot;)V]
      [24] putfield #54
        + Fieldref [me/planetguy/advancedvm/Script.debugStream Lme/planetguy/advancedvm/Stream;]
      [27] aload_0 v0
      [28] getfield #65
        + Fieldref [me/planetguy/robots/robot/Robot.script Lme/planetguy/advancedvm/Script;]
      [31] checkcast #34
        + Class [me/planetguy/advancedvm/ImperativeScript]
      [34] iconst_0
      [35] invokevirtual #99
        + Methodref [me/planetguy/advancedvm/ImperativeScript.jump (I)V]
      [38] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onUpdate(Landroid/view/View;)V
    Access flags: 0x1
      = public void onUpdate(android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 189, locals = 3, stack = 5):
      [0] iconst_0
      [1] istore_2 v2
      [2] goto +23 (target=25)
      [5] aload_0 v0
      [6] getfield #65
        + Fieldref [me/planetguy/robots/robot/Robot.script Lme/planetguy/advancedvm/Script;]
      [9] invokevirtual #100
        + Methodref [me/planetguy/advancedvm/Script.canStep ()Z]
      [12] ifeq +10 (target=22)
      [15] aload_0 v0
      [16] getfield #65
        + Fieldref [me/planetguy/robots/robot/Robot.script Lme/planetguy/advancedvm/Script;]
      [19] invokevirtual #101
        + Methodref [me/planetguy/advancedvm/Script.step ()V]
      [22] iinc v2, 1
      [25] iload_2 v2
      [26] getstatic #58
        + Fieldref [me/planetguy/robots/misc/Options.ROBOT_TICKS_PER_UPDATE I]
      [29] ificmpge +33 (target=62)
      [32] aload_0 v0
      [33] getfield #67
        + Fieldref [me/planetguy/robots/robot/Robot.waitingOn Lme/planetguy/robots/robot/BlockingState;]
      [36] getstatic #59
        + Fieldref [me/planetguy/robots/robot/BlockingState.none Lme/planetguy/robots/robot/BlockingState;]
      [39] ifacmpeq -34 (target=5)
      [42] goto +20 (target=62)
      [45] astore_2 v2
      [46] aload_0 v0
      [47] aload_2 v2
      [48] invokevirtual #116
        + Methodref [me/planetguy/robots/robot/Robot.log (Ljava/lang/Exception;)V]
      [51] aload_2 v2
      [52] invokevirtual #88
        + Methodref [java/lang/Exception.printStackTrace ()V]
      [55] aload_0 v0
      [56] aload_1 v1
      [57] ldc #8
        + String [Broken script!]
      [59] invokevirtual #118
        + Methodref [me/planetguy/robots/robot/Robot.makeToast (Landroid/view/View;Ljava/lang/String;)V]
      [62] aload_0 v0
      [63] getfield #67
        + Fieldref [me/planetguy/robots/robot/Robot.waitingOn Lme/planetguy/robots/robot/BlockingState;]
      [66] aload_0 v0
      [67] aload_1 v1
      [68] invokevirtual #112
        + Methodref [me/planetguy/robots/robot/BlockingState.execute (Lme/planetguy/robots/robot/Robot;Landroid/view/View;)V]
      [71] aload_0 v0
      [72] getstatic #59
        + Fieldref [me/planetguy/robots/robot/BlockingState.none Lme/planetguy/robots/robot/BlockingState;]
      [75] putfield #67
        + Fieldref [me/planetguy/robots/robot/Robot.waitingOn Lme/planetguy/robots/robot/BlockingState;]
      [78] aload_0 v0
      [79] aload_0 v0
      [80] aload_0 v0
      [81] getfield #69
        + Fieldref [me/planetguy/robots/robot/Robot.world Lme/planetguy/robots/world/World;]
      [84] getfield #74
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [87] aload_0 v0
      [88] getfield #71
        + Fieldref [me/planetguy/robots/robot/Robot.x I]
      [91] aaload
      [92] aload_0 v0
      [93] getfield #72
        + Fieldref [me/planetguy/robots/robot/Robot.y I]
      [96] iconst_1
      [97] isub
      [98] aaload
      [99] invokevirtual #114
        + Methodref [me/planetguy/robots/robot/Robot.id (Lme/planetguy/robots/tile/Tile;)I]
      [102] putfield #64
        + Fieldref [me/planetguy/robots/robot/Robot.north I]
      [105] aload_0 v0
      [106] aload_0 v0
      [107] aload_0 v0
      [108] getfield #69
        + Fieldref [me/planetguy/robots/robot/Robot.world Lme/planetguy/robots/world/World;]
      [111] getfield #74
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [114] aload_0 v0
      [115] getfield #71
        + Fieldref [me/planetguy/robots/robot/Robot.x I]
      [118] iconst_1
      [119] iadd
      [120] aaload
      [121] aload_0 v0
      [122] getfield #72
        + Fieldref [me/planetguy/robots/robot/Robot.y I]
      [125] aaload
      [126] invokevirtual #114
        + Methodref [me/planetguy/robots/robot/Robot.id (Lme/planetguy/robots/tile/Tile;)I]
      [129] putfield #61
        + Fieldref [me/planetguy/robots/robot/Robot.east I]
      [132] aload_0 v0
      [133] aload_0 v0
      [134] aload_0 v0
      [135] getfield #69
        + Fieldref [me/planetguy/robots/robot/Robot.world Lme/planetguy/robots/world/World;]
      [138] getfield #74
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [141] aload_0 v0
      [142] getfield #71
        + Fieldref [me/planetguy/robots/robot/Robot.x I]
      [145] aaload
      [146] aload_0 v0
      [147] getfield #72
        + Fieldref [me/planetguy/robots/robot/Robot.y I]
      [150] iconst_1
      [151] iadd
      [152] aaload
      [153] invokevirtual #114
        + Methodref [me/planetguy/robots/robot/Robot.id (Lme/planetguy/robots/tile/Tile;)I]
      [156] putfield #66
        + Fieldref [me/planetguy/robots/robot/Robot.south I]
      [159] aload_0 v0
      [160] aload_0 v0
      [161] aload_0 v0
      [162] getfield #69
        + Fieldref [me/planetguy/robots/robot/Robot.world Lme/planetguy/robots/world/World;]
      [165] getfield #74
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [168] aload_0 v0
      [169] getfield #71
        + Fieldref [me/planetguy/robots/robot/Robot.x I]
      [172] iconst_1
      [173] isub
      [174] aaload
      [175] aload_0 v0
      [176] getfield #72
        + Fieldref [me/planetguy/robots/robot/Robot.y I]
      [179] iconst_1
      [180] isub
      [181] aaload
      [182] invokevirtual #114
        + Methodref [me/planetguy/robots/robot/Robot.id (Lme/planetguy/robots/tile/Tile;)I]
      [185] putfield #68
        + Fieldref [me/planetguy/robots/robot/Robot.west I]
      [188] return
      Code attribute exceptions (count = 1):
      - ExceptionInfo (0 -> 42: 45):
      + Class [java/lang/Exception]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 6):
        - [5] Var: ...[i], Stack: (empty)
        - [22] Var: ..., Stack: (empty)
        - [25] Var: ..., Stack: (empty)
        - [42] Var: -1, Stack: (empty)
        - [45] Var: ..., Stack: [a:java/lang/Exception]
        - [62] Var: ..., Stack: (empty)
  + Method:       onClicked(Landroid/view/View;)Z
    Access flags: 0x1
      = public boolean onClicked(android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 63, locals = 3, stack = 4):
      [0] new #25
        + Class [android/content/Intent]
      [3] dup
      [4] aload_0 v0
      [5] getfield #70
        + Fieldref [me/planetguy/robots/robot/Robot.worldGui Landroid/content/Context;]
      [8] ldc #43
        + Class [me/planetguy/robots/ide/IDEActivity]
      [10] invokespecial #77
        + Methodref [android/content/Intent.<init> (Landroid/content/Context;Ljava/lang/Class;)V]
      [13] astore_2 v2
      [14] aload_2 v2
      [15] ldc #14
        + String [id]
      [17] aload_0 v0
      [18] invokevirtual #113
        + Methodref [me/planetguy/robots/robot/Robot.getDynamicObjectID ()I]
      [21] invokevirtual #79
        + Methodref [android/content/Intent.putExtra (Ljava/lang/String;I)Landroid/content/Intent;]
      [24] pop
      [25] ldc #11
        + String [Robots]
      [27] ldc #10
        + String [Robot clicked!]
      [29] invokestatic #81
        + Methodref [android/util/Log.d (Ljava/lang/String;Ljava/lang/String;)I]
      [32] pop
      [33] aload_2 v2
      [34] ldc #1
        + Integer [131072]
      [36] invokevirtual #78
        + Methodref [android/content/Intent.addFlags (I)Landroid/content/Intent;]
      [39] pop
      [40] getstatic #56
        + Fieldref [me/planetguy/robots/Robots.currentIDE Lme/planetguy/robots/ide/IDEActivity;]
      [43] ifnull +10 (target=53)
      [46] getstatic #56
        + Fieldref [me/planetguy/robots/Robots.currentIDE Lme/planetguy/robots/ide/IDEActivity;]
      [49] aload_0 v0
      [50] putfield #57
        + Fieldref [me/planetguy/robots/ide/IDEActivity.robot Lme/planetguy/robots/robot/Robot;]
      [53] aload_1 v1
      [54] invokevirtual #83
        + Methodref [android/view/View.getContext ()Landroid/content/Context;]
      [57] aload_2 v2
      [58] invokevirtual #76
        + Methodref [android/content/Context.startActivity (Landroid/content/Intent;)V]
      [61] iconst_1
      [62] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [53] Var: ...[a:android/content/Intent], Stack: (empty)
  + Method:       moveTo(IILandroid/view/View;)V
    Access flags: 0x1
      = public void moveTo(int,int,android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 111, locals = 4, stack = 4):
      [0] aload_0 v0
      [1] getfield #69
        + Fieldref [me/planetguy/robots/robot/Robot.world Lme/planetguy/robots/world/World;]
      [4] getfield #74
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [7] iload_1 v1
      [8] aaload
      [9] iload_2 v2
      [10] aaload
      [11] invokevirtual #123
        + Methodref [me/planetguy/robots/tile/Tile.isWalkable ()Z]
      [14] ifne +4 (target=18)
      [17] return
      [18] ldc #11
        + String [Robots]
      [20] new #33
        + Class [java/lang/StringBuilder]
      [23] dup
      [24] ldc #9
        + String [Moving to ]
      [26] invokespecial #95
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [29] iload_1 v1
      [30] invokevirtual #96
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [33] ldc #5
        + String [,]
      [35] invokevirtual #97
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [38] iload_2 v2
      [39] invokevirtual #96
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [42] invokevirtual #98
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [45] invokestatic #81
        + Methodref [android/util/Log.d (Ljava/lang/String;Ljava/lang/String;)I]
      [48] pop
      [49] iload_1 v1
      [50] iflt +33 (target=83)
      [53] iload_1 v1
      [54] aload_0 v0
      [55] getfield #69
        + Fieldref [me/planetguy/robots/robot/Robot.world Lme/planetguy/robots/world/World;]
      [58] getfield #74
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [61] arraylength
      [62] ificmpge +21 (target=83)
      [65] iload_2 v2
      [66] iflt +17 (target=83)
      [69] iload_2 v2
      [70] aload_0 v0
      [71] getfield #69
        + Fieldref [me/planetguy/robots/robot/Robot.world Lme/planetguy/robots/world/World;]
      [74] getfield #74
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [77] iconst_0
      [78] aaload
      [79] arraylength
      [80] ificmplt +4 (target=84)
      [83] return
      [84] aload_0 v0
      [85] iload_1 v1
      [86] putfield #71
        + Fieldref [me/planetguy/robots/robot/Robot.x I]
      [89] aload_0 v0
      [90] iload_2 v2
      [91] putfield #72
        + Fieldref [me/planetguy/robots/robot/Robot.y I]
      [94] aload_0 v0
      [95] getfield #69
        + Fieldref [me/planetguy/robots/robot/Robot.world Lme/planetguy/robots/world/World;]
      [98] getfield #74
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [101] iload_1 v1
      [102] aaload
      [103] iload_2 v2
      [104] aaload
      [105] aload_0 v0
      [106] aload_3 v3
      [107] invokevirtual #124
        + Methodref [me/planetguy/robots/tile/Tile.onObjectEnter (Lme/planetguy/robots/dynamic/DynamicObject;Landroid/view/View;)V]
      [110] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 3):
        - [18] Var: ..., Stack: (empty)
        - [83] Var: ..., Stack: (empty)
        - [84] Var: ..., Stack: (empty)
  + Method:       getIcon()Landroid/graphics/Bitmap;
    Access flags: 0x1
      = public android.graphics.Bitmap getIcon()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #62
        + Fieldref [me/planetguy/robots/robot/Robot.icon Landroid/graphics/Bitmap;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getScript()Lme/planetguy/advancedvm/Script;
    Access flags: 0x1
      = public me.planetguy.advancedvm.Script getScript()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #65
        + Fieldref [me/planetguy/robots/robot/Robot.script Lme/planetguy/advancedvm/Script;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       print(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void print(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 2, stack = 2):
      [0] ldc #11
        + String [Robots]
      [2] aload_1 v1
      [3] invokevirtual #90
        + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
      [6] invokestatic #82
        + Methodref [android/util/Log.w (Ljava/lang/String;Ljava/lang/String;)I]
      [9] pop
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       toString()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String toString()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #90
        + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       id(Lme/planetguy/robots/tile/Tile;)I
    Access flags: 0x1
      = public int id(me.planetguy.robots.tile.Tile)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 34, locals = 2, stack = 3):
      [0] aload_1 v1
      [1] getstatic #73
        + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
      [4] ldc #13
        + String [ground]
      [6] invokeinterface #125
        + InterfaceMethodref [a/a/a/c/x.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [11] ifacmpne +5 (target=16)
      [14] iconst_0
      [15] ireturn
      [16] aload_1 v1
      [17] getstatic #73
        + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
      [20] ldc #17
        + String [ore]
      [22] invokeinterface #125
        + InterfaceMethodref [a/a/a/c/x.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [27] ifacmpne +5 (target=32)
      [30] iconst_1
      [31] ireturn
      [32] iconst_2
      [33] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [16] Var: ..., Stack: (empty)
        - [32] Var: ..., Stack: (empty)
  + Method:       save()Ljava/lang/String;
    Access flags: 0x1
      = public java.lang.String save()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 33, locals = 1, stack = 3):
      [0] new #33
        + Class [java/lang/StringBuilder]
      [3] dup
      [4] aload_0 v0
      [5] invokespecial #111
        + Methodref [me/planetguy/robots/dynamic/DynamicObject.save ()Ljava/lang/String;]
      [8] invokestatic #94
        + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
      [11] invokespecial #95
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [14] aload_0 v0
      [15] getfield #65
        + Fieldref [me/planetguy/robots/robot/Robot.script Lme/planetguy/advancedvm/Script;]
      [18] getfield #55
        + Fieldref [me/planetguy/advancedvm/Script.source Ljava/lang/String;]
      [21] invokevirtual #97
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [24] ldc #7
        + String [;]
      [26] invokevirtual #97
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [29] invokevirtual #98
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [32] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       load(Ljava/lang/String;)V
    Access flags: 0x1
      = public void load(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 45, locals = 5, stack = 4):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #110
        + Methodref [me/planetguy/robots/dynamic/DynamicObject.load (Ljava/lang/String;)V]
      [5] aload_1 v1
      [6] ldc #7
        + String [;]
      [8] invokevirtual #92
        + Methodref [java/lang/String.split (Ljava/lang/String;)[Ljava/lang/String;]
      [11] astore_2 v2
      [12] aload_2 v2
      [13] iconst_1
      [14] aaload
      [15] astore_3 v3
      [16] aload_3 v3
      [17] iconst_0
      [18] aload_3 v3
      [19] invokevirtual #91
        + Methodref [java/lang/String.length ()I]
      [22] iconst_1
      [23] isub
      [24] invokevirtual #93
        + Methodref [java/lang/String.substring (II)Ljava/lang/String;]
      [27] astore_3 v3
      [28] aload_0 v0
      [29] aload_3 v3
      [30] invokevirtual #119
        + Methodref [me/planetguy/robots/robot/Robot.setScript (Ljava/lang/String;)V]
      [33] goto +11 (target=44)
      [36] astore v4
      [38] aload_0 v0
      [39] aload v4
      [41] invokevirtual #116
        + Methodref [me/planetguy/robots/robot/Robot.log (Ljava/lang/Exception;)V]
      [44] return
      Code attribute exceptions (count = 1):
      - ExceptionInfo (28 -> 33: 36):
      + Class [java/lang/Exception]
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [36] Var: [a:me/planetguy/robots/robot/Robot][a:java/lang/String][a:[Ljava/lang/String;][a:java/lang/String], Stack: [a:java/lang/Exception]
        - [44] Var: ..., Stack: (empty)
  + Method:       makeToast(Landroid/view/View;Ljava/lang/String;)V
    Access flags: 0x1
      = public void makeToast(android.view.View,java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 3, stack = 6):
      [0] aload_1 v1
      [1] new #50
        + Class [me/planetguy/robots/robot/b]
      [4] dup
      [5] aload_0 v0
      [6] aload_1 v1
      [7] aload_2 v2
      [8] invokespecial #122
        + Methodref [me/planetguy/robots/robot/b.<init> (Lme/planetguy/robots/robot/Robot;Landroid/view/View;Ljava/lang/String;)V]
      [11] invokevirtual #84
        + Methodref [android/view/View.post (Ljava/lang/Runnable;)Z]
      [14] pop
      [15] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       log(Ljava/lang/Exception;)V
    Access flags: 0x1
      = public void log(java.lang.Exception)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 37, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] new #33
        + Class [java/lang/StringBuilder]
      [4] dup
      [5] aload_1 v1
      [6] invokevirtual #89
        + Methodref [java/lang/Object.getClass ()Ljava/lang/Class;]
      [9] invokevirtual #86
        + Methodref [java/lang/Class.getSimpleName ()Ljava/lang/String;]
      [12] invokestatic #94
        + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
      [15] invokespecial #95
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [18] ldc #6
        + String [: ]
      [20] invokevirtual #97
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [23] aload_1 v1
      [24] invokevirtual #87
        + Methodref [java/lang/Exception.getMessage ()Ljava/lang/String;]
      [27] invokevirtual #97
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [30] invokevirtual #98
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [33] invokevirtual #117
        + Methodref [me/planetguy/robots/robot/Robot.log (Ljava/lang/String;)V]
      [36] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       log(Ljava/lang/String;)V
    Access flags: 0x1
      = public void log(java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 32, locals = 2, stack = 4):
      [0] aload_0 v0
      [1] dup
      [2] getfield #63
        + Fieldref [me/planetguy/robots/robot/Robot.log Ljava/lang/String;]
      [5] new #33
        + Class [java/lang/StringBuilder]
      [8] dup_x1
      [9] swap
      [10] invokestatic #94
        + Methodref [java/lang/String.valueOf (Ljava/lang/Object;)Ljava/lang/String;]
      [13] invokespecial #95
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [16] aload_1 v1
      [17] invokevirtual #97
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [20] ldc #4
        + String [
]
      [22] invokevirtual #97
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [25] invokevirtual #98
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [28] putfield #63
        + Fieldref [me/planetguy/robots/robot/Robot.log Ljava/lang/String;]
      [31] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/robot/a
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class me.planetguy.robots.robot.a extends java.lang.Object

Interfaces (count = 1):
  + Class [me/planetguy/advancedvm/Stream]

Constant Pool (count = 29):
  + Class [java/lang/Object]
  + Class [me/planetguy/advancedvm/Stream]
  + Class [me/planetguy/robots/robot/Robot]
  + Class [me/planetguy/robots/robot/a]
  + Fieldref [me/planetguy/robots/robot/a.a Lme/planetguy/robots/robot/Robot;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
  + Methodref [me/planetguy/robots/robot/Robot.log (Ljava/lang/String;)V]
  + NameAndType [<init> ()V]
  + NameAndType [a Lme/planetguy/robots/robot/Robot;]
  + NameAndType [log (Ljava/lang/String;)V]
  + NameAndType [toString ()Ljava/lang/String;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Lme/planetguy/robots/robot/Robot;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Lme/planetguy/robots/robot/Robot;]
  + Utf8 [a]
  + Utf8 [java/lang/Object]
  + Utf8 [log]
  + Utf8 [me/planetguy/advancedvm/Stream]
  + Utf8 [me/planetguy/robots/robot/Robot]
  + Utf8 [me/planetguy/robots/robot/a]
  + Utf8 [toString]
  + Utf8 [write]

Fields (count = 1):
  + Field:        a Lme/planetguy/robots/robot/Robot;
    Access flags: 0x1010
      = final synthetic me.planetguy.robots.robot.Robot a

Methods (count = 2):
  - Method:       <init>(Lme/planetguy/robots/robot/Robot;)V
    Access flags: 0x0
      = a(me.planetguy.robots.robot.Robot)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #5
        + Fieldref [me/planetguy/robots/robot/a.a Lme/planetguy/robots/robot/Robot;]
      [5] aload_0 v0
      [6] invokespecial #6
        + Methodref [java/lang/Object.<init> ()V]
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       write(Ljava/lang/Object;)V
    Access flags: 0x1
      = public void write(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [me/planetguy/robots/robot/a.a Lme/planetguy/robots/robot/Robot;]
      [4] aload_1 v1
      [5] invokevirtual #7
        + Methodref [java/lang/Object.toString ()Ljava/lang/String;]
      [8] invokevirtual #8
        + Methodref [me/planetguy/robots/robot/Robot.log (Ljava/lang/String;)V]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/robot/b
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x20
    = class me.planetguy.robots.robot.b extends java.lang.Object

Interfaces (count = 1):
  + Class [java/lang/Runnable]

Constant Pool (count = 41):
  + Class [android/view/View]
  + Class [android/widget/Toast]
  + Class [java/lang/Object]
  + Class [java/lang/Runnable]
  + Class [me/planetguy/robots/robot/b]
  + Fieldref [me/planetguy/robots/robot/b.a Lme/planetguy/robots/robot/Robot;]
  + Fieldref [me/planetguy/robots/robot/b.b Landroid/view/View;]
  + Fieldref [me/planetguy/robots/robot/b.c Ljava/lang/String;]
  + Methodref [android/view/View.getContext ()Landroid/content/Context;]
  + Methodref [android/widget/Toast.makeText (Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;]
  + Methodref [android/widget/Toast.show ()V]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [a Lme/planetguy/robots/robot/Robot;]
  + NameAndType [b Landroid/view/View;]
  + NameAndType [c Ljava/lang/String;]
  + NameAndType [getContext ()Landroid/content/Context;]
  + NameAndType [makeText (Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;]
  + NameAndType [show ()V]
  + Utf8 [()Landroid/content/Context;]
  + Utf8 [()V]
  + Utf8 [(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;]
  + Utf8 [(Lme/planetguy/robots/robot/Robot;Landroid/view/View;Ljava/lang/String;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Landroid/view/View;]
  + Utf8 [Ljava/lang/String;]
  + Utf8 [Lme/planetguy/robots/robot/Robot;]
  + Utf8 [a]
  + Utf8 [android/view/View]
  + Utf8 [android/widget/Toast]
  + Utf8 [b]
  + Utf8 [c]
  + Utf8 [getContext]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/Runnable]
  + Utf8 [makeText]
  + Utf8 [me/planetguy/robots/robot/b]
  + Utf8 [run]
  + Utf8 [show]

Fields (count = 3):
  + Field:        a Lme/planetguy/robots/robot/Robot;
    Access flags: 0x1010
      = final synthetic me.planetguy.robots.robot.Robot a
  + Field:        b Landroid/view/View;
    Access flags: 0x1012
      = private final synthetic android.view.View b
  + Field:        c Ljava/lang/String;
    Access flags: 0x1012
      = private final synthetic java.lang.String c

Methods (count = 2):
  - Method:       <init>(Lme/planetguy/robots/robot/Robot;Landroid/view/View;Ljava/lang/String;)V
    Access flags: 0x0
      = b(me.planetguy.robots.robot.Robot,android.view.View,java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #6
        + Fieldref [me/planetguy/robots/robot/b.a Lme/planetguy/robots/robot/Robot;]
      [5] aload_0 v0
      [6] aload_2 v2
      [7] putfield #7
        + Fieldref [me/planetguy/robots/robot/b.b Landroid/view/View;]
      [10] aload_0 v0
      [11] aload_3 v3
      [12] putfield #8
        + Fieldref [me/planetguy/robots/robot/b.c Ljava/lang/String;]
      [15] aload_0 v0
      [16] invokespecial #12
        + Methodref [java/lang/Object.<init> ()V]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       run()V
    Access flags: 0x1
      = public void run()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 21, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] getfield #7
        + Fieldref [me/planetguy/robots/robot/b.b Landroid/view/View;]
      [4] invokevirtual #9
        + Methodref [android/view/View.getContext ()Landroid/content/Context;]
      [7] aload_0 v0
      [8] getfield #8
        + Fieldref [me/planetguy/robots/robot/b.c Ljava/lang/String;]
      [11] iconst_1
      [12] invokestatic #10
        + Methodref [android/widget/Toast.makeText (Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;]
      [15] astore_1 v1
      [16] aload_1 v1
      [17] invokevirtual #11
        + Methodref [android/widget/Toast.show ()V]
      [20] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/robot/RobotScriptAPI
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.robot.RobotScriptAPI extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 69):
  + String [Robots]
  + String [Set blocking state to ]
  + String [robot]
  + Class [[Lme/planetguy/robots/robot/BlockingState;]
  + Class [android/util/Log]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [me/planetguy/advancedvm/VMContext]
  + Class [me/planetguy/robots/robot/BlockingState]
  + Class [me/planetguy/robots/robot/Robot]
  + Class [me/planetguy/robots/robot/RobotScriptAPI]
  + Fieldref [me/planetguy/robots/robot/Robot.waitingOn Lme/planetguy/robots/robot/BlockingState;]
  + Methodref [android/util/Log.d (Ljava/lang/String;Ljava/lang/String;)I]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [me/planetguy/advancedvm/VMContext.registerClass (Ljava/lang/Class;Ljava/lang/String;)V]
  + Methodref [me/planetguy/advancedvm/VMContext.registerFinalObj (Ljava/lang/String;Ljava/lang/Object;)V]
  + Methodref [me/planetguy/robots/robot/BlockingState.name ()Ljava/lang/String;]
  + Methodref [me/planetguy/robots/robot/BlockingState.values ()[Lme/planetguy/robots/robot/BlockingState;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [d (Ljava/lang/String;Ljava/lang/String;)I]
  + NameAndType [name ()Ljava/lang/String;]
  + NameAndType [registerClass (Ljava/lang/Class;Ljava/lang/String;)V]
  + NameAndType [registerFinalObj (Ljava/lang/String;Ljava/lang/Object;)V]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [values ()[Lme/planetguy/robots/robot/BlockingState;]
  + NameAndType [waitingOn Lme/planetguy/robots/robot/BlockingState;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [()[Lme/planetguy/robots/robot/BlockingState;]
  + Utf8 [(Ljava/lang/Class;Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;Ljava/lang/Object;)V]
  + Utf8 [(Ljava/lang/String;Ljava/lang/String;)I]
  + Utf8 [(Lme/planetguy/advancedvm/Scripted;Lme/planetguy/robots/robot/BlockingState;)V]
  + Utf8 [(Lme/planetguy/advancedvm/VMContext;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Lme/planetguy/advancedvm/ScriptAPI;]
  + Utf8 [Lme/planetguy/robots/robot/BlockingState;]
  + Utf8 [Robots]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [Set blocking state to ]
  + Utf8 [StackMapTable]
  + Utf8 [[Lme/planetguy/robots/robot/BlockingState;]
  + Utf8 [android/util/Log]
  + Utf8 [append]
  + Utf8 [d]
  + Utf8 [initActions]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [me/planetguy/advancedvm/VMContext]
  + Utf8 [me/planetguy/robots/robot/BlockingState]
  + Utf8 [me/planetguy/robots/robot/Robot]
  + Utf8 [me/planetguy/robots/robot/RobotScriptAPI]
  + Utf8 [move]
  + Utf8 [name]
  + Utf8 [registerClass]
  + Utf8 [registerFinalObj]
  + Utf8 [robot]
  + Utf8 [toString]
  + Utf8 [values]
  + Utf8 [waitingOn]

Fields (count = 0):

Methods (count = 3):
  - Method:       <init>()V
    Access flags: 0x1
      = public RobotScriptAPI()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #14
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       initActions(Lme/planetguy/advancedvm/VMContext;)V
    Access flags: 0x9
      = public static void initActions(me.planetguy.advancedvm.VMContext)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 44, locals = 5, stack = 3):
      [0] invokestatic #21
        + Methodref [me/planetguy/robots/robot/BlockingState.values ()[Lme/planetguy/robots/robot/BlockingState;]
      [3] dup
      [4] astore v4
      [6] arraylength
      [7] istore_3 v3
      [8] iconst_0
      [9] istore_2 v2
      [10] goto +20 (target=30)
      [13] aload v4
      [15] iload_2 v2
      [16] aaload
      [17] astore_1 v1
      [18] aload_0 v0
      [19] aload_1 v1
      [20] invokevirtual #20
        + Methodref [me/planetguy/robots/robot/BlockingState.name ()Ljava/lang/String;]
      [23] aload_1 v1
      [24] invokevirtual #19
        + Methodref [me/planetguy/advancedvm/VMContext.registerFinalObj (Ljava/lang/String;Ljava/lang/Object;)V]
      [27] iinc v2, 1
      [30] iload_2 v2
      [31] iload_3 v3
      [32] ificmplt -19 (target=13)
      [35] aload_0 v0
      [36] ldc #11
        + Class [me/planetguy/robots/robot/RobotScriptAPI]
      [38] ldc #3
        + String [robot]
      [40] invokevirtual #18
        + Methodref [me/planetguy/advancedvm/VMContext.registerClass (Ljava/lang/Class;Ljava/lang/String;)V]
      [43] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [13] Var: [a:me/planetguy/advancedvm/VMContext][T][i][i][a:[Lme/planetguy/robots/robot/BlockingState;], Stack: 
        - [30] Var: ..., Stack: (empty)
  + Method:       move(Lme/planetguy/advancedvm/Scripted;Lme/planetguy/robots/robot/BlockingState;)V
    Access flags: 0x9
      = public static void move(me.planetguy.advancedvm.Scripted,me.planetguy.robots.robot.BlockingState)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 31, locals = 2, stack = 4):
      [0] ldc #1
        + String [Robots]
      [2] new #7
        + Class [java/lang/StringBuilder]
      [5] dup
      [6] ldc #2
        + String [Set blocking state to ]
      [8] invokespecial #15
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [11] aload_1 v1
      [12] invokevirtual #16
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [15] invokevirtual #17
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [18] invokestatic #13
        + Methodref [android/util/Log.d (Ljava/lang/String;Ljava/lang/String;)I]
      [21] pop
      [22] aload_0 v0
      [23] checkcast #10
        + Class [me/planetguy/robots/robot/Robot]
      [26] aload_1 v1
      [27] putfield #12
        + Fieldref [me/planetguy/robots/robot/Robot.waitingOn Lme/planetguy/robots/robot/BlockingState;]
      [30] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Lme/planetguy/advancedvm/ScriptAPI;]:

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/tile/ActivityWin
  Superclass:    android/app/Activity
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.tile.ActivityWin extends android.app.Activity

Interfaces (count = 0):

Constant Pool (count = 106):
  + Integer [131072]
  + Integer [268435456]
  + Integer [2130903043]
  + Integer [2131296269]
  + String [ Time taken:: ]
  + Class [android/app/Activity]
  + Class [android/content/Context]
  + Class [android/content/Intent]
  + Class [android/widget/TextView]
  + Class [java/lang/StringBuilder]
  + Class [java/util/ArrayList]
  + Class [me/planetguy/robots/Robots]
  + Class [me/planetguy/robots/dynamic/DynamicObject]
  + Class [me/planetguy/robots/renderworld/ActivityWorld]
  + Class [me/planetguy/robots/tile/ActivityWin]
  + Class [me/planetguy/robots/world/World]
  + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
  + Fieldref [me/planetguy/robots/dynamic/DynamicObject.objectRegistry Ljava/util/ArrayList;]
  + Fieldref [me/planetguy/robots/world/World.globalTime I]
  + Methodref [android/app/Activity.<init> ()V]
  + Methodref [android/app/Activity.onCreate (Landroid/os/Bundle;)V]
  + Methodref [android/app/Activity.onStart ()V]
  + Methodref [android/content/Context.startActivity (Landroid/content/Intent;)V]
  + Methodref [android/content/Intent.<init> (Landroid/content/Context;Ljava/lang/Class;)V]
  + Methodref [android/content/Intent.addFlags (I)Landroid/content/Intent;]
  + Methodref [android/widget/TextView.getText ()Ljava/lang/CharSequence;]
  + Methodref [android/widget/TextView.setText (Ljava/lang/CharSequence;)V]
  + Methodref [java/lang/StringBuilder.<init> ()V]
  + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/util/ArrayList.<init> ()V]
  + Methodref [me/planetguy/robots/tile/ActivityWin.findViewById (I)Landroid/view/View;]
  + Methodref [me/planetguy/robots/tile/ActivityWin.getApplicationContext ()Landroid/content/Context;]
  + Methodref [me/planetguy/robots/tile/ActivityWin.setContentView (I)V]
  + Methodref [me/planetguy/robots/world/World.makeMazeWorld (Landroid/content/Context;)Lme/planetguy/robots/world/World;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Landroid/content/Context;Ljava/lang/Class;)V]
  + NameAndType [addFlags (I)Landroid/content/Intent;]
  + NameAndType [append (I)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [findViewById (I)Landroid/view/View;]
  + NameAndType [getApplicationContext ()Landroid/content/Context;]
  + NameAndType [getText ()Ljava/lang/CharSequence;]
  + NameAndType [globalTime I]
  + NameAndType [makeMazeWorld (Landroid/content/Context;)Lme/planetguy/robots/world/World;]
  + NameAndType [objectRegistry Ljava/util/ArrayList;]
  + NameAndType [onCreate (Landroid/os/Bundle;)V]
  + NameAndType [onStart ()V]
  + NameAndType [setContentView (I)V]
  + NameAndType [setText (Ljava/lang/CharSequence;)V]
  + NameAndType [startActivity (Landroid/content/Intent;)V]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [world Lme/planetguy/robots/world/World;]
  + Utf8 [ Time taken:: ]
  + Utf8 [()Landroid/content/Context;]
  + Utf8 [()Ljava/lang/CharSequence;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [(I)Landroid/content/Intent;]
  + Utf8 [(I)Landroid/view/View;]
  + Utf8 [(I)Ljava/lang/StringBuilder;]
  + Utf8 [(I)V]
  + Utf8 [(Landroid/content/Context;)Lme/planetguy/robots/world/World;]
  + Utf8 [(Landroid/content/Context;Ljava/lang/Class;)V]
  + Utf8 [(Landroid/content/Intent;)V]
  + Utf8 [(Landroid/os/Bundle;)V]
  + Utf8 [(Landroid/view/View;)V]
  + Utf8 [(Ljava/lang/CharSequence;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [Ljava/util/ArrayList;]
  + Utf8 [Lme/planetguy/robots/world/World;]
  + Utf8 [addFlags]
  + Utf8 [android/app/Activity]
  + Utf8 [android/content/Context]
  + Utf8 [android/content/Intent]
  + Utf8 [android/widget/TextView]
  + Utf8 [append]
  + Utf8 [clearWorld]
  + Utf8 [findViewById]
  + Utf8 [getApplicationContext]
  + Utf8 [getText]
  + Utf8 [globalTime]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/util/ArrayList]
  + Utf8 [makeMazeWorld]
  + Utf8 [me/planetguy/robots/Robots]
  + Utf8 [me/planetguy/robots/dynamic/DynamicObject]
  + Utf8 [me/planetguy/robots/renderworld/ActivityWorld]
  + Utf8 [me/planetguy/robots/tile/ActivityWin]
  + Utf8 [me/planetguy/robots/world/World]
  + Utf8 [objectRegistry]
  + Utf8 [onCreate]
  + Utf8 [onStart]
  + Utf8 [setContentView]
  + Utf8 [setText]
  + Utf8 [startActivity]
  + Utf8 [toString]
  + Utf8 [world]

Fields (count = 0):

Methods (count = 4):
  - Method:       <init>()V
    Access flags: 0x1
      = public ActivityWin()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #20
        + Methodref [android/app/Activity.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onCreate(Landroid/os/Bundle;)V
    Access flags: 0x4
      = protected void onCreate(android.os.Bundle)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 12, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] invokespecial #21
        + Methodref [android/app/Activity.onCreate (Landroid/os/Bundle;)V]
      [5] aload_0 v0
      [6] ldc #3
        + Integer [2130903043]
      [8] invokevirtual #36
        + Methodref [me/planetguy/robots/tile/ActivityWin.setContentView (I)V]
      [11] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onStart()V
    Access flags: 0x1
      = public void onStart()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 50, locals = 2, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #22
        + Methodref [android/app/Activity.onStart ()V]
      [4] aload_0 v0
      [5] ldc #4
        + Integer [2131296269]
      [7] invokevirtual #34
        + Methodref [me/planetguy/robots/tile/ActivityWin.findViewById (I)Landroid/view/View;]
      [10] checkcast #9
        + Class [android/widget/TextView]
      [13] astore_1 v1
      [14] aload_1 v1
      [15] new #10
        + Class [java/lang/StringBuilder]
      [18] dup
      [19] invokespecial #28
        + Methodref [java/lang/StringBuilder.<init> ()V]
      [22] aload_1 v1
      [23] invokevirtual #26
        + Methodref [android/widget/TextView.getText ()Ljava/lang/CharSequence;]
      [26] invokevirtual #30
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/Object;)Ljava/lang/StringBuilder;]
      [29] ldc #5
        + String [ Time taken:: ]
      [31] invokevirtual #31
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [34] getstatic #17
        + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
      [37] getfield #19
        + Fieldref [me/planetguy/robots/world/World.globalTime I]
      [40] invokevirtual #29
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [43] invokevirtual #32
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [46] invokevirtual #27
        + Methodref [android/widget/TextView.setText (Ljava/lang/CharSequence;)V]
      [49] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       clearWorld(Landroid/view/View;)V
    Access flags: 0x1
      = public void clearWorld(android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 54, locals = 3, stack = 4):
      [0] new #11
        + Class [java/util/ArrayList]
      [3] dup
      [4] invokespecial #33
        + Methodref [java/util/ArrayList.<init> ()V]
      [7] putstatic #18
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.objectRegistry Ljava/util/ArrayList;]
      [10] aload_0 v0
      [11] invokevirtual #35
        + Methodref [me/planetguy/robots/tile/ActivityWin.getApplicationContext ()Landroid/content/Context;]
      [14] invokestatic #37
        + Methodref [me/planetguy/robots/world/World.makeMazeWorld (Landroid/content/Context;)Lme/planetguy/robots/world/World;]
      [17] putstatic #17
        + Fieldref [me/planetguy/robots/Robots.world Lme/planetguy/robots/world/World;]
      [20] new #8
        + Class [android/content/Intent]
      [23] dup
      [24] aload_0 v0
      [25] ldc #14
        + Class [me/planetguy/robots/renderworld/ActivityWorld]
      [27] invokespecial #24
        + Methodref [android/content/Intent.<init> (Landroid/content/Context;Ljava/lang/Class;)V]
      [30] astore_2 v2
      [31] aload_2 v2
      [32] ldc #1
        + Integer [131072]
      [34] invokevirtual #25
        + Methodref [android/content/Intent.addFlags (I)Landroid/content/Intent;]
      [37] pop
      [38] aload_2 v2
      [39] ldc #2
        + Integer [268435456]
      [41] invokevirtual #25
        + Methodref [android/content/Intent.addFlags (I)Landroid/content/Intent;]
      [44] pop
      [45] aload_0 v0
      [46] invokevirtual #35
        + Methodref [me/planetguy/robots/tile/ActivityWin.getApplicationContext ()Landroid/content/Context;]
      [49] aload_2 v2
      [50] invokevirtual #23
        + Methodref [android/content/Context.startActivity (Landroid/content/Intent;)V]
      [53] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/tile/Tile
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.tile.Tile extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 92):
  + String [,]
  + String [Click at ]
  + String [Robots]
  + Class [android/graphics/Bitmap]
  + Class [android/graphics/BitmapFactory]
  + Class [android/util/Log]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [me/planetguy/robots/Robots]
  + Class [me/planetguy/robots/tile/Tile]
  + Fieldref [me/planetguy/robots/Robots.iconSize I]
  + Fieldref [me/planetguy/robots/tile/Tile.bitmapIcon Landroid/graphics/Bitmap;]
  + Fieldref [me/planetguy/robots/tile/Tile.name Ljava/lang/String;]
  + Fieldref [me/planetguy/robots/tile/Tile.walkable Z]
  + Methodref [android/graphics/Bitmap.getHeight ()I]
  + Methodref [android/graphics/BitmapFactory.decodeResource (Landroid/content/res/Resources;I)Landroid/graphics/Bitmap;]
  + Methodref [android/util/Log.d (Ljava/lang/String;Ljava/lang/String;)I]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [me/planetguy/robots/tile/Tile.<init> (Landroid/graphics/Bitmap;Ljava/lang/String;)V]
  + Methodref [me/planetguy/robots/tile/Tile.onPut (II)V]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (Landroid/graphics/Bitmap;Ljava/lang/String;)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [append (I)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [bitmapIcon Landroid/graphics/Bitmap;]
  + NameAndType [d (Ljava/lang/String;Ljava/lang/String;)I]
  + NameAndType [decodeResource (Landroid/content/res/Resources;I)Landroid/graphics/Bitmap;]
  + NameAndType [getHeight ()I]
  + NameAndType [iconSize I]
  + NameAndType [name Ljava/lang/String;]
  + NameAndType [onPut (II)V]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [walkable Z]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)Ljava/lang/StringBuilder;]
  + Utf8 [(II)Landroid/graphics/Bitmap;]
  + Utf8 [(II)V]
  + Utf8 [(IIII)V]
  + Utf8 [(ILandroid/content/res/Resources;Ljava/lang/String;)V]
  + Utf8 [(Landroid/content/res/Resources;I)Landroid/graphics/Bitmap;]
  + Utf8 [(Landroid/graphics/Bitmap;Ljava/lang/String;)V]
  + Utf8 [(Landroid/view/View;II)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;Ljava/lang/String;)I]
  + Utf8 [(Lme/planetguy/robots/dynamic/DynamicObject;Landroid/view/View;)V]
  + Utf8 [(Z)V]
  + Utf8 [,]
  + Utf8 [<init>]
  + Utf8 [Click at ]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [Landroid/graphics/Bitmap;]
  + Utf8 [Ljava/lang/Deprecated;]
  + Utf8 [Ljava/lang/String;]
  + Utf8 [Robots]
  + Utf8 [RuntimeVisibleAnnotations]
  + Utf8 [Z]
  + Utf8 [android/graphics/Bitmap]
  + Utf8 [android/graphics/BitmapFactory]
  + Utf8 [android/util/Log]
  + Utf8 [append]
  + Utf8 [bitmapIcon]
  + Utf8 [d]
  + Utf8 [decodeResource]
  + Utf8 [getHeight]
  + Utf8 [getIcon]
  + Utf8 [hasAdditionalData]
  + Utf8 [iconSize]
  + Utf8 [isWalkable]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [me/planetguy/robots/Robots]
  + Utf8 [me/planetguy/robots/tile/Tile]
  + Utf8 [name]
  + Utf8 [onClicked]
  + Utf8 [onMove]
  + Utf8 [onObjectEnter]
  + Utf8 [onPut]
  + Utf8 [onUpdate]
  + Utf8 [setWalkable]
  + Utf8 [toString]
  + Utf8 [walkable]

Fields (count = 3):
  + Field:        bitmapIcon Landroid/graphics/Bitmap;
    Access flags: 0x1
      = public android.graphics.Bitmap bitmapIcon
  + Field:        name Ljava/lang/String;
    Access flags: 0x11
      = public final java.lang.String name
  + Field:        walkable Z
    Access flags: 0x2
      = private boolean walkable

Methods (count = 11):
  - Method:       <init>(ILandroid/content/res/Resources;Ljava/lang/String;)V
    Access flags: 0x4
      = protected Tile(int,android.content.res.Resources,java.lang.String)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 11, locals = 4, stack = 3):
      [0] aload_0 v0
      [1] aload_2 v2
      [2] iload_1 v1
      [3] invokestatic #16
        + Methodref [android/graphics/BitmapFactory.decodeResource (Landroid/content/res/Resources;I)Landroid/graphics/Bitmap;]
      [6] aload_3 v3
      [7] invokespecial #23
        + Methodref [me/planetguy/robots/tile/Tile.<init> (Landroid/graphics/Bitmap;Ljava/lang/String;)V]
      [10] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  - Method:       <init>(Landroid/graphics/Bitmap;Ljava/lang/String;)V
    Access flags: 0x4
      = protected Tile(android.graphics.Bitmap,java.lang.String)
    Class member attributes (count = 2):
    + Code attribute instructions (code length = 22, locals = 3, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #18
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] aload_1 v1
      [6] putfield #12
        + Fieldref [me/planetguy/robots/tile/Tile.bitmapIcon Landroid/graphics/Bitmap;]
      [9] aload_1 v1
      [10] invokevirtual #15
        + Methodref [android/graphics/Bitmap.getHeight ()I]
      [13] putstatic #11
        + Fieldref [me/planetguy/robots/Robots.iconSize I]
      [16] aload_0 v0
      [17] aload_2 v2
      [18] putfield #13
        + Fieldref [me/planetguy/robots/tile/Tile.name Ljava/lang/String;]
      [21] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
    + Runtime visible annotations attribute:
      - Annotation [Ljava/lang/Deprecated;]:
  + Method:       onClicked(Landroid/view/View;II)Z
    Access flags: 0x1
      = public boolean onClicked(android.view.View,int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 33, locals = 4, stack = 4):
      [0] ldc #3
        + String [Robots]
      [2] new #8
        + Class [java/lang/StringBuilder]
      [5] dup
      [6] ldc #2
        + String [Click at ]
      [8] invokespecial #19
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [11] iload_2 v2
      [12] invokevirtual #20
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [15] ldc #1
        + String [,]
      [17] invokevirtual #21
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [20] iload_3 v3
      [21] invokevirtual #20
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [24] invokevirtual #22
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [27] invokestatic #17
        + Methodref [android/util/Log.d (Ljava/lang/String;Ljava/lang/String;)I]
      [30] pop
      [31] iconst_0
      [32] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hasAdditionalData()Z
    Access flags: 0x1
      = public boolean hasAdditionalData()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 2, locals = 1, stack = 1):
      [0] iconst_0
      [1] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onUpdate(II)V
    Access flags: 0x1
      = public void onUpdate(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 3, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onMove(IIII)V
    Access flags: 0x1
      = public void onMove(int,int,int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 5, stack = 3):
      [0] aload_0 v0
      [1] iload_3 v3
      [2] iload v4
      [4] invokevirtual #24
        + Methodref [me/planetguy/robots/tile/Tile.onPut (II)V]
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onPut(II)V
    Access flags: 0x1
      = public void onPut(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 3, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getIcon(II)Landroid/graphics/Bitmap;
    Access flags: 0x1
      = public android.graphics.Bitmap getIcon(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 3, stack = 1):
      [0] aload_0 v0
      [1] getfield #12
        + Fieldref [me/planetguy/robots/tile/Tile.bitmapIcon Landroid/graphics/Bitmap;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       isWalkable()Z
    Access flags: 0x1
      = public boolean isWalkable()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #14
        + Fieldref [me/planetguy/robots/tile/Tile.walkable Z]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       setWalkable(Z)V
    Access flags: 0x1
      = public void setWalkable(boolean)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] putfield #14
        + Fieldref [me/planetguy/robots/tile/Tile.walkable Z]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onObjectEnter(Lme/planetguy/robots/dynamic/DynamicObject;Landroid/view/View;)V
    Access flags: 0x1
      = public void onObjectEnter(me.planetguy.robots.dynamic.DynamicObject,android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 3, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/tile/TileSided
  Superclass:    me/planetguy/robots/tile/Tile
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.tile.TileSided extends me.planetguy.robots.tile.Tile

Interfaces (count = 0):

Constant Pool (count = 19):
  + Class [me/planetguy/robots/tile/Tile]
  + Class [me/planetguy/robots/tile/TileSided]
  + Fieldref [me/planetguy/robots/tile/TileSided.side Lme/planetguy/robots/misc/Side;]
  + Methodref [me/planetguy/robots/tile/Tile.<init> (ILandroid/content/res/Resources;Ljava/lang/String;)V]
  + NameAndType [<init> (ILandroid/content/res/Resources;Ljava/lang/String;)V]
  + NameAndType [side Lme/planetguy/robots/misc/Side;]
  + Utf8 [()Lme/planetguy/robots/misc/Side;]
  + Utf8 [(ILandroid/content/res/Resources;Ljava/lang/String;)V]
  + Utf8 [(ILandroid/content/res/Resources;Lme/planetguy/robots/misc/Side;Ljava/lang/String;)V]
  + Utf8 [(Lme/planetguy/robots/misc/Side;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Lme/planetguy/robots/misc/Side;]
  + Utf8 [getSide]
  + Utf8 [me/planetguy/robots/tile/Tile]
  + Utf8 [me/planetguy/robots/tile/TileSided]
  + Utf8 [side]
  + Utf8 [updateSide]

Fields (count = 1):
  + Field:        side Lme/planetguy/robots/misc/Side;
    Access flags: 0x2
      = private me.planetguy.robots.misc.Side side

Methods (count = 3):
  - Method:       <init>(ILandroid/content/res/Resources;Lme/planetguy/robots/misc/Side;Ljava/lang/String;)V
    Access flags: 0x1
      = public TileSided(int,android.content.res.Resources,me.planetguy.robots.misc.Side,java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 14, locals = 5, stack = 4):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] aload_2 v2
      [3] aload v4
      [5] invokespecial #4
        + Methodref [me/planetguy/robots/tile/Tile.<init> (ILandroid/content/res/Resources;Ljava/lang/String;)V]
      [8] aload_0 v0
      [9] aload_3 v3
      [10] putfield #3
        + Fieldref [me/planetguy/robots/tile/TileSided.side Lme/planetguy/robots/misc/Side;]
      [13] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getSide()Lme/planetguy/robots/misc/Side;
    Access flags: 0x1
      = public me.planetguy.robots.misc.Side getSide()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #3
        + Fieldref [me/planetguy/robots/tile/TileSided.side Lme/planetguy/robots/misc/Side;]
      [4] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       updateSide(Lme/planetguy/robots/misc/Side;)V
    Access flags: 0x1
      = public void updateSide(me.planetguy.robots.misc.Side)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] putfield #3
        + Fieldref [me/planetguy/robots/tile/TileSided.side Lme/planetguy/robots/misc/Side;]
      [5] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/tile/TileUtil
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.tile.TileUtil extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 66):
  + Integer [2130837504]
  + Integer [2130837511]
  + Integer [2130837512]
  + Integer [2130837522]
  + String [ground]
  + String [lava]
  + String [ore]
  + String [rock]
  + String [win]
  + Class [a/a/a/c/am]
  + Class [a/a/a/c/x]
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/tile/Tile]
  + Class [me/planetguy/robots/tile/TileUtil]
  + Class [me/planetguy/robots/tile/TileWin]
  + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
  + Methodref [a/a/a/c/am.a ()La/a/a/c/am;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [me/planetguy/robots/tile/Tile.<init> (ILandroid/content/res/Resources;Ljava/lang/String;)V]
  + Methodref [me/planetguy/robots/tile/Tile.setWalkable (Z)V]
  + Methodref [me/planetguy/robots/tile/TileUtil.createTile (ILjava/lang/String;Landroid/content/res/Resources;)Lme/planetguy/robots/tile/Tile;]
  + Methodref [me/planetguy/robots/tile/TileUtil.createTileWin (ILjava/lang/String;Landroid/content/res/Resources;)Lme/planetguy/robots/tile/Tile;]
  + Methodref [me/planetguy/robots/tile/TileWin.<init> (ILandroid/content/res/Resources;Ljava/lang/String;)V]
  + InterfaceMethodref [a/a/a/c/x.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [a/a/a/c/x.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (ILandroid/content/res/Resources;Ljava/lang/String;)V]
  + NameAndType [a ()La/a/a/c/am;]
  + NameAndType [createTile (ILjava/lang/String;Landroid/content/res/Resources;)Lme/planetguy/robots/tile/Tile;]
  + NameAndType [createTileWin (ILjava/lang/String;Landroid/content/res/Resources;)Lme/planetguy/robots/tile/Tile;]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [setWalkable (Z)V]
  + NameAndType [tiles La/a/a/c/x;]
  + Utf8 [()La/a/a/c/am;]
  + Utf8 [()V]
  + Utf8 [(ILandroid/content/res/Resources;Ljava/lang/String;)V]
  + Utf8 [(ILjava/lang/String;Landroid/content/res/Resources;)Lme/planetguy/robots/tile/Tile;]
  + Utf8 [(Landroid/content/res/Resources;)V]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Z)V]
  + Utf8 [<clinit>]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [La/a/a/c/x;]
  + Utf8 [a]
  + Utf8 [a/a/a/c/am]
  + Utf8 [a/a/a/c/x]
  + Utf8 [createAllTiles]
  + Utf8 [createTile]
  + Utf8 [createTileWin]
  + Utf8 [get]
  + Utf8 [ground]
  + Utf8 [java/lang/Object]
  + Utf8 [lava]
  + Utf8 [me/planetguy/robots/tile/Tile]
  + Utf8 [me/planetguy/robots/tile/TileUtil]
  + Utf8 [me/planetguy/robots/tile/TileWin]
  + Utf8 [ore]
  + Utf8 [put]
  + Utf8 [rock]
  + Utf8 [setWalkable]
  + Utf8 [tiles]
  + Utf8 [win]

Fields (count = 1):
  + Field:        tiles La/a/a/c/x;
    Access flags: 0x9
      = public static a.a.a.c.x tiles

Methods (count = 5):
  - Method:       <clinit>()V
    Access flags: 0x8
      = static void <clinit>()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 0, stack = 1):
      [0] invokestatic #17
        + Methodref [a/a/a/c/am.a ()La/a/a/c/am;]
      [3] putstatic #16
        + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
      [6] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  - Method:       <init>()V
    Access flags: 0x1
      = public TileUtil()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] invokespecial #18
        + Methodref [java/lang/Object.<init> ()V]
      [4] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       createTile(ILjava/lang/String;Landroid/content/res/Resources;)Lme/planetguy/robots/tile/Tile;
    Access flags: 0x9
      = public static me.planetguy.robots.tile.Tile createTile(int,java.lang.String,android.content.res.Resources)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 4, stack = 5):
      [0] new #13
        + Class [me/planetguy/robots/tile/Tile]
      [3] dup
      [4] iload_0 v0
      [5] aload_2 v2
      [6] aload_1 v1
      [7] invokespecial #19
        + Methodref [me/planetguy/robots/tile/Tile.<init> (ILandroid/content/res/Resources;Ljava/lang/String;)V]
      [10] astore_3 v3
      [11] getstatic #16
        + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
      [14] aload_1 v1
      [15] aload_3 v3
      [16] invokeinterface #25
        + InterfaceMethodref [a/a/a/c/x.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [21] pop
      [22] aload_3 v3
      [23] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       createTileWin(ILjava/lang/String;Landroid/content/res/Resources;)Lme/planetguy/robots/tile/Tile;
    Access flags: 0x9
      = public static me.planetguy.robots.tile.Tile createTileWin(int,java.lang.String,android.content.res.Resources)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 24, locals = 4, stack = 5):
      [0] new #15
        + Class [me/planetguy/robots/tile/TileWin]
      [3] dup
      [4] iload_0 v0
      [5] aload_2 v2
      [6] aload_1 v1
      [7] invokespecial #23
        + Methodref [me/planetguy/robots/tile/TileWin.<init> (ILandroid/content/res/Resources;Ljava/lang/String;)V]
      [10] astore_3 v3
      [11] getstatic #16
        + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
      [14] aload_1 v1
      [15] aload_3 v3
      [16] invokeinterface #25
        + InterfaceMethodref [a/a/a/c/x.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;]
      [21] pop
      [22] aload_3 v3
      [23] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       createAllTiles(Landroid/content/res/Resources;)V
    Access flags: 0x9
      = public static void createAllTiles(android.content.res.Resources)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 63, locals = 1, stack = 3):
      [0] ldc #1
        + Integer [2130837504]
      [2] ldc #5
        + String [ground]
      [4] aload_0 v0
      [5] invokestatic #21
        + Methodref [me/planetguy/robots/tile/TileUtil.createTile (ILjava/lang/String;Landroid/content/res/Resources;)Lme/planetguy/robots/tile/Tile;]
      [8] pop
      [9] ldc #2
        + Integer [2130837511]
      [11] ldc #6
        + String [lava]
      [13] aload_0 v0
      [14] invokestatic #21
        + Methodref [me/planetguy/robots/tile/TileUtil.createTile (ILjava/lang/String;Landroid/content/res/Resources;)Lme/planetguy/robots/tile/Tile;]
      [17] pop
      [18] ldc #3
        + Integer [2130837512]
      [20] ldc #7
        + String [ore]
      [22] aload_0 v0
      [23] invokestatic #21
        + Methodref [me/planetguy/robots/tile/TileUtil.createTile (ILjava/lang/String;Landroid/content/res/Resources;)Lme/planetguy/robots/tile/Tile;]
      [26] pop
      [27] ldc #4
        + Integer [2130837522]
      [29] ldc #8
        + String [rock]
      [31] aload_0 v0
      [32] invokestatic #21
        + Methodref [me/planetguy/robots/tile/TileUtil.createTile (ILjava/lang/String;Landroid/content/res/Resources;)Lme/planetguy/robots/tile/Tile;]
      [35] pop
      [36] ldc #2
        + Integer [2130837511]
      [38] ldc #9
        + String [win]
      [40] aload_0 v0
      [41] invokestatic #22
        + Methodref [me/planetguy/robots/tile/TileUtil.createTileWin (ILjava/lang/String;Landroid/content/res/Resources;)Lme/planetguy/robots/tile/Tile;]
      [44] pop
      [45] getstatic #16
        + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
      [48] ldc #5
        + String [ground]
      [50] invokeinterface #24
        + InterfaceMethodref [a/a/a/c/x.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [55] checkcast #13
        + Class [me/planetguy/robots/tile/Tile]
      [58] iconst_1
      [59] invokevirtual #20
        + Methodref [me/planetguy/robots/tile/Tile.setWalkable (Z)V]
      [62] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/tile/TileWin
  Superclass:    me/planetguy/robots/tile/Tile
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.tile.TileWin extends me.planetguy.robots.tile.Tile

Interfaces (count = 0):

Constant Pool (count = 47):
  + Integer [1073741824]
  + Class [android/content/Context]
  + Class [android/content/Intent]
  + Class [android/view/View]
  + Class [me/planetguy/robots/robot/Robot]
  + Class [me/planetguy/robots/tile/ActivityWin]
  + Class [me/planetguy/robots/tile/Tile]
  + Class [me/planetguy/robots/tile/TileWin]
  + Fieldref [me/planetguy/robots/robot/Robot.worldGui Landroid/content/Context;]
  + Methodref [android/content/Context.startActivity (Landroid/content/Intent;)V]
  + Methodref [android/content/Intent.<init> (Landroid/content/Context;Ljava/lang/Class;)V]
  + Methodref [android/content/Intent.addFlags (I)Landroid/content/Intent;]
  + Methodref [android/view/View.getContext ()Landroid/content/Context;]
  + Methodref [me/planetguy/robots/tile/Tile.<init> (ILandroid/content/res/Resources;Ljava/lang/String;)V]
  + Methodref [me/planetguy/robots/tile/TileWin.setWalkable (Z)V]
  + NameAndType [<init> (ILandroid/content/res/Resources;Ljava/lang/String;)V]
  + NameAndType [<init> (Landroid/content/Context;Ljava/lang/Class;)V]
  + NameAndType [addFlags (I)Landroid/content/Intent;]
  + NameAndType [getContext ()Landroid/content/Context;]
  + NameAndType [setWalkable (Z)V]
  + NameAndType [startActivity (Landroid/content/Intent;)V]
  + NameAndType [worldGui Landroid/content/Context;]
  + Utf8 [()Landroid/content/Context;]
  + Utf8 [(I)Landroid/content/Intent;]
  + Utf8 [(ILandroid/content/res/Resources;Ljava/lang/String;)V]
  + Utf8 [(Landroid/content/Context;Ljava/lang/Class;)V]
  + Utf8 [(Landroid/content/Intent;)V]
  + Utf8 [(Lme/planetguy/robots/dynamic/DynamicObject;Landroid/view/View;)V]
  + Utf8 [(Z)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Landroid/content/Context;]
  + Utf8 [StackMapTable]
  + Utf8 [addFlags]
  + Utf8 [android/content/Context]
  + Utf8 [android/content/Intent]
  + Utf8 [android/view/View]
  + Utf8 [getContext]
  + Utf8 [me/planetguy/robots/robot/Robot]
  + Utf8 [me/planetguy/robots/tile/ActivityWin]
  + Utf8 [me/planetguy/robots/tile/Tile]
  + Utf8 [me/planetguy/robots/tile/TileWin]
  + Utf8 [onObjectEnter]
  + Utf8 [setWalkable]
  + Utf8 [startActivity]
  + Utf8 [worldGui]

Fields (count = 0):

Methods (count = 2):
  - Method:       <init>(ILandroid/content/res/Resources;Ljava/lang/String;)V
    Access flags: 0x1
      = public TileWin(int,android.content.res.Resources,java.lang.String)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 4, stack = 4):
      [0] aload_0 v0
      [1] iload_1 v1
      [2] aload_2 v2
      [3] aload_3 v3
      [4] invokespecial #14
        + Methodref [me/planetguy/robots/tile/Tile.<init> (ILandroid/content/res/Resources;Ljava/lang/String;)V]
      [7] aload_0 v0
      [8] iconst_1
      [9] invokevirtual #15
        + Methodref [me/planetguy/robots/tile/TileWin.setWalkable (Z)V]
      [12] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       onObjectEnter(Lme/planetguy/robots/dynamic/DynamicObject;Landroid/view/View;)V
    Access flags: 0x1
      = public void onObjectEnter(me.planetguy.robots.dynamic.DynamicObject,android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 53, locals = 5, stack = 4):
      [0] aload_1 v1
      [1] instanceof #5
        + Class [me/planetguy/robots/robot/Robot]
      [4] ifeq +48 (target=52)
      [7] aload_1 v1
      [8] checkcast #5
        + Class [me/planetguy/robots/robot/Robot]
      [11] astore_3 v3
      [12] new #3
        + Class [android/content/Intent]
      [15] dup
      [16] aload_3 v3
      [17] getfield #9
        + Fieldref [me/planetguy/robots/robot/Robot.worldGui Landroid/content/Context;]
      [20] ldc #6
        + Class [me/planetguy/robots/tile/ActivityWin]
      [22] invokespecial #11
        + Methodref [android/content/Intent.<init> (Landroid/content/Context;Ljava/lang/Class;)V]
      [25] astore v4
      [27] aload v4
      [29] ldc #1
        + Integer [1073741824]
      [31] invokevirtual #12
        + Methodref [android/content/Intent.addFlags (I)Landroid/content/Intent;]
      [34] pop
      [35] aload v4
      [37] ldc #1
        + Integer [1073741824]
      [39] invokevirtual #12
        + Methodref [android/content/Intent.addFlags (I)Landroid/content/Intent;]
      [42] pop
      [43] aload_2 v2
      [44] invokevirtual #13
        + Methodref [android/view/View.getContext ()Landroid/content/Context;]
      [47] aload v4
      [49] invokevirtual #10
        + Methodref [android/content/Context.startActivity (Landroid/content/Intent;)V]
      [52] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [52] Var: ..., Stack: (empty)

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/world/AdditionalData
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x31
    = public final class me.planetguy.robots.world.AdditionalData extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 23):
  + Class [java/io/Serializable]
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/world/AdditionalData]
  + Fieldref [me/planetguy/robots/world/AdditionalData.data [Ljava/io/Serializable;]
  + Methodref [java/lang/Object.<init> ()V]
  + NameAndType [<init> ()V]
  + NameAndType [data [Ljava/io/Serializable;]
  + Utf8 [()I]
  + Utf8 [()V]
  + Utf8 [(I)Ljava/io/Serializable;]
  + Utf8 [(I)V]
  + Utf8 [(ILjava/io/Serializable;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [[Ljava/io/Serializable;]
  + Utf8 [data]
  + Utf8 [get]
  + Utf8 [java/io/Serializable]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/robots/world/AdditionalData]
  + Utf8 [put]
  + Utf8 [size]

Fields (count = 1):
  + Field:        data [Ljava/io/Serializable;
    Access flags: 0x1
      = public java.io.Serializable[] data

Methods (count = 4):
  - Method:       <init>(I)V
    Access flags: 0x1
      = public AdditionalData(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 13, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #5
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] iload_1 v1
      [6] anewarray #1
        + Class [java/io/Serializable]
      [9] putfield #4
        + Fieldref [me/planetguy/robots/world/AdditionalData.data [Ljava/io/Serializable;]
      [12] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       put(ILjava/io/Serializable;)V
    Access flags: 0x1
      = public void put(int,java.io.Serializable)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 8, locals = 3, stack = 3):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [me/planetguy/robots/world/AdditionalData.data [Ljava/io/Serializable;]
      [4] iload_1 v1
      [5] aload_2 v2
      [6] aastore
      [7] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       get(I)Ljava/io/Serializable;
    Access flags: 0x1
      = public java.io.Serializable get(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 7, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [me/planetguy/robots/world/AdditionalData.data [Ljava/io/Serializable;]
      [4] iload_1 v1
      [5] aaload
      [6] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       size()I
    Access flags: 0x1
      = public int size()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 6, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [me/planetguy/robots/world/AdditionalData.data [Ljava/io/Serializable;]
      [4] arraylength
      [5] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/world/ScheduleQueue
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.world.ScheduleQueue extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 49):
  + Class [java/lang/Object]
  + Class [java/util/PriorityQueue]
  + Class [me/planetguy/robots/world/ScheduleQueue]
  + Class [me/planetguy/robots/world/Update]
  + Fieldref [me/planetguy/robots/world/ScheduleQueue.updates Ljava/util/PriorityQueue;]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/util/PriorityQueue.<init> ()V]
  + Methodref [java/util/PriorityQueue.add (Ljava/lang/Object;)Z]
  + Methodref [java/util/PriorityQueue.isEmpty ()Z]
  + Methodref [java/util/PriorityQueue.peek ()Ljava/lang/Object;]
  + Methodref [java/util/PriorityQueue.poll ()Ljava/lang/Object;]
  + Methodref [java/util/PriorityQueue.remove ()Ljava/lang/Object;]
  + Methodref [me/planetguy/robots/world/Update.getTime ()I]
  + NameAndType [<init> ()V]
  + NameAndType [add (Ljava/lang/Object;)Z]
  + NameAndType [getTime ()I]
  + NameAndType [isEmpty ()Z]
  + NameAndType [peek ()Ljava/lang/Object;]
  + NameAndType [poll ()Ljava/lang/Object;]
  + NameAndType [remove ()Ljava/lang/Object;]
  + NameAndType [updates Ljava/util/PriorityQueue;]
  + Utf8 [()I]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Lme/planetguy/robots/world/Update;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)Z]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Lme/planetguy/robots/world/Update;)V]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [Ljava/util/PriorityQueue;]
  + Utf8 [StackMapTable]
  + Utf8 [add]
  + Utf8 [getNextUpdate]
  + Utf8 [getTime]
  + Utf8 [hasUpdates]
  + Utf8 [isEmpty]
  + Utf8 [java/lang/Object]
  + Utf8 [java/util/PriorityQueue]
  + Utf8 [me/planetguy/robots/world/ScheduleQueue]
  + Utf8 [me/planetguy/robots/world/Update]
  + Utf8 [peek]
  + Utf8 [poll]
  + Utf8 [pullNextUpdate]
  + Utf8 [remove]
  + Utf8 [schedule]
  + Utf8 [updates]

Fields (count = 1):
  + Field:        updates Ljava/util/PriorityQueue;
    Access flags: 0x2
      = private java.util.PriorityQueue updates

Methods (count = 5):
  - Method:       <init>()V
    Access flags: 0x1
      = public ScheduleQueue()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 16, locals = 1, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #6
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] new #2
        + Class [java/util/PriorityQueue]
      [8] dup
      [9] invokespecial #7
        + Methodref [java/util/PriorityQueue.<init> ()V]
      [12] putfield #5
        + Fieldref [me/planetguy/robots/world/ScheduleQueue.updates Ljava/util/PriorityQueue;]
      [15] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       schedule(Lme/planetguy/robots/world/Update;)V
    Access flags: 0x1
      = public void schedule(me.planetguy.robots.world.Update)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [me/planetguy/robots/world/ScheduleQueue.updates Ljava/util/PriorityQueue;]
      [4] aload_1 v1
      [5] invokevirtual #8
        + Methodref [java/util/PriorityQueue.add (Ljava/lang/Object;)Z]
      [8] pop
      [9] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       hasUpdates(I)Z
    Access flags: 0x1
      = public boolean hasUpdates(int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 31, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [me/planetguy/robots/world/ScheduleQueue.updates Ljava/util/PriorityQueue;]
      [4] invokevirtual #9
        + Methodref [java/util/PriorityQueue.isEmpty ()Z]
      [7] ifne +22 (target=29)
      [10] aload_0 v0
      [11] getfield #5
        + Fieldref [me/planetguy/robots/world/ScheduleQueue.updates Ljava/util/PriorityQueue;]
      [14] invokevirtual #10
        + Methodref [java/util/PriorityQueue.peek ()Ljava/lang/Object;]
      [17] checkcast #4
        + Class [me/planetguy/robots/world/Update]
      [20] invokevirtual #13
        + Methodref [me/planetguy/robots/world/Update.getTime ()I]
      [23] iload_1 v1
      [24] ificmpgt +5 (target=29)
      [27] iconst_1
      [28] ireturn
      [29] iconst_0
      [30] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [29] Var: ..., Stack: (empty)
  + Method:       getNextUpdate()Lme/planetguy/robots/world/Update;
    Access flags: 0x1
      = public me.planetguy.robots.world.Update getNextUpdate()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [me/planetguy/robots/world/ScheduleQueue.updates Ljava/util/PriorityQueue;]
      [4] invokevirtual #11
        + Methodref [java/util/PriorityQueue.poll ()Ljava/lang/Object;]
      [7] checkcast #4
        + Class [me/planetguy/robots/world/Update]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       pullNextUpdate()Lme/planetguy/robots/world/Update;
    Access flags: 0x1
      = public me.planetguy.robots.world.Update pullNextUpdate()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 11, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [me/planetguy/robots/world/ScheduleQueue.updates Ljava/util/PriorityQueue;]
      [4] invokevirtual #12
        + Methodref [java/util/PriorityQueue.remove ()Ljava/lang/Object;]
      [7] checkcast #4
        + Class [me/planetguy/robots/world/Update]
      [10] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/world/Update
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.world.Update extends java.lang.Object

Interfaces (count = 1):
  + Class [java/lang/Comparable]

Constant Pool (count = 32):
  + Class [java/lang/Comparable]
  + Class [java/lang/Object]
  + Class [me/planetguy/robots/world/Update]
  + Fieldref [me/planetguy/robots/world/Update.time I]
  + Fieldref [me/planetguy/robots/world/Update.x I]
  + Fieldref [me/planetguy/robots/world/Update.y I]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [me/planetguy/robots/world/Update.compareTo (Lme/planetguy/robots/world/Update;)I]
  + NameAndType [<init> ()V]
  + NameAndType [compareTo (Lme/planetguy/robots/world/Update;)I]
  + NameAndType [time I]
  + NameAndType [x I]
  + NameAndType [y I]
  + Utf8 [()I]
  + Utf8 [()V]
  + Utf8 [(III)V]
  + Utf8 [(Ljava/lang/Object;)I]
  + Utf8 [(Lme/planetguy/robots/world/Update;)I]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [compareTo]
  + Utf8 [getTime]
  + Utf8 [getX]
  + Utf8 [getY]
  + Utf8 [java/lang/Comparable]
  + Utf8 [java/lang/Object]
  + Utf8 [me/planetguy/robots/world/Update]
  + Utf8 [time]
  + Utf8 [x]
  + Utf8 [y]

Fields (count = 3):
  + Field:        time I
    Access flags: 0x12
      = private final int time
  + Field:        x I
    Access flags: 0x12
      = private final int x
  + Field:        y I
    Access flags: 0x12
      = private final int y

Methods (count = 6):
  - Method:       <init>(III)V
    Access flags: 0x1
      = public Update(int,int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 20, locals = 4, stack = 2):
      [0] aload_0 v0
      [1] invokespecial #7
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] iload_3 v3
      [6] putfield #4
        + Fieldref [me/planetguy/robots/world/Update.time I]
      [9] aload_0 v0
      [10] iload_1 v1
      [11] putfield #5
        + Fieldref [me/planetguy/robots/world/Update.x I]
      [14] aload_0 v0
      [15] iload_2 v2
      [16] putfield #6
        + Fieldref [me/planetguy/robots/world/Update.y I]
      [19] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       compareTo(Lme/planetguy/robots/world/Update;)I
    Access flags: 0x1
      = public int compareTo(me.planetguy.robots.world.Update)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 10, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [me/planetguy/robots/world/Update.time I]
      [4] aload_1 v1
      [5] getfield #4
        + Fieldref [me/planetguy/robots/world/Update.time I]
      [8] isub
      [9] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getTime()I
    Access flags: 0x1
      = public int getTime()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #4
        + Fieldref [me/planetguy/robots/world/Update.time I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getX()I
    Access flags: 0x1
      = public int getX()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #5
        + Fieldref [me/planetguy/robots/world/Update.x I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       getY()I
    Access flags: 0x1
      = public int getY()
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 5, locals = 1, stack = 1):
      [0] aload_0 v0
      [1] getfield #6
        + Fieldref [me/planetguy/robots/world/Update.y I]
      [4] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       compareTo(Ljava/lang/Object;)I
    Access flags: 0x1041
      = public bridge synthetic int compareTo(java.lang.Object)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 9, locals = 2, stack = 2):
      [0] aload_0 v0
      [1] aload_1 v1
      [2] checkcast #3
        + Class [me/planetguy/robots/world/Update]
      [5] invokevirtual #8
        + Methodref [me/planetguy/robots/world/Update.compareTo (Lme/planetguy/robots/world/Update;)I]
      [8] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):

Class file attributes (count = 0):

_____________________________________________________________________
+ Program class: me/planetguy/robots/world/World
  Superclass:    java/lang/Object
  Major version: 0x32
  Minor version: 0x0
  Access flags:  0x21
    = public class me.planetguy.robots.world.World extends java.lang.Object

Interfaces (count = 0):

Constant Pool (count = 219):
  + String [ to (]
  + String [(]
  + String [)]
  + String [,]
  + String [Moved from ]
  + String [Robots]
  + String [ground]
  + String [lava]
  + String [ore]
  + String [win]
  + Class [[[Lme/planetguy/robots/tile/Tile;]
  + Class [[[Z]
  + Class [a/a/a/c/x]
  + Class [android/content/Context]
  + Class [android/util/Log]
  + Class [android/view/View]
  + Class [java/lang/Math]
  + Class [java/lang/Object]
  + Class [java/lang/StringBuilder]
  + Class [java/lang/System]
  + Class [java/util/ArrayList]
  + Class [java/util/Iterator]
  + Class [java/util/List]
  + Class [me/planetguy/robots/dynamic/DynamicObject]
  + Class [me/planetguy/robots/misc/Options]
  + Class [me/planetguy/robots/misc/Side]
  + Class [me/planetguy/robots/robot/Robot]
  + Class [me/planetguy/robots/tile/Tile]
  + Class [me/planetguy/robots/tile/TileUtil]
  + Class [me/planetguy/robots/world/ScheduleQueue]
  + Class [me/planetguy/robots/world/Update]
  + Class [me/planetguy/robots/world/World]
  + Double [0.2]
  + Double [0.8]
  + Double [8.0]
  + Fieldref [me/planetguy/robots/dynamic/DynamicObject.x I]
  + Fieldref [me/planetguy/robots/dynamic/DynamicObject.y I]
  + Fieldref [me/planetguy/robots/misc/Options.millisPerTick I]
  + Fieldref [me/planetguy/robots/misc/Side.RED Lme/planetguy/robots/misc/Side;]
  + Fieldref [me/planetguy/robots/robot/Robot.x I]
  + Fieldref [me/planetguy/robots/robot/Robot.y I]
  + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
  + Fieldref [me/planetguy/robots/world/World.globalTime I]
  + Fieldref [me/planetguy/robots/world/World.lastTick J]
  + Fieldref [me/planetguy/robots/world/World.robots Ljava/util/List;]
  + Fieldref [me/planetguy/robots/world/World.scheduledUpdates Lme/planetguy/robots/world/ScheduleQueue;]
  + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
  + Fieldref [me/planetguy/robots/world/World.visible [[Z]
  + Methodref [android/util/Log.d (Ljava/lang/String;Ljava/lang/String;)I]
  + Methodref [java/lang/Math.random ()D]
  + Methodref [java/lang/Object.<init> ()V]
  + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
  + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
  + Methodref [java/lang/System.currentTimeMillis ()J]
  + Methodref [java/util/ArrayList.<init> ()V]
  + Methodref [me/planetguy/robots/dynamic/DynamicObject.onClicked (Landroid/view/View;)Z]
  + Methodref [me/planetguy/robots/dynamic/DynamicObject.onUpdate (Landroid/view/View;)V]
  + Methodref [me/planetguy/robots/robot/Robot.<init> (Lme/planetguy/robots/world/World;Lme/planetguy/robots/misc/Side;Landroid/content/Context;)V]
  + Methodref [me/planetguy/robots/tile/Tile.onClicked (Landroid/view/View;II)Z]
  + Methodref [me/planetguy/robots/tile/Tile.onUpdate (II)V]
  + Methodref [me/planetguy/robots/world/ScheduleQueue.<init> ()V]
  + Methodref [me/planetguy/robots/world/ScheduleQueue.getNextUpdate ()Lme/planetguy/robots/world/Update;]
  + Methodref [me/planetguy/robots/world/ScheduleQueue.hasUpdates (I)Z]
  + Methodref [me/planetguy/robots/world/ScheduleQueue.schedule (Lme/planetguy/robots/world/Update;)V]
  + Methodref [me/planetguy/robots/world/Update.<init> (III)V]
  + Methodref [me/planetguy/robots/world/Update.getX ()I]
  + Methodref [me/planetguy/robots/world/Update.getY ()I]
  + Methodref [me/planetguy/robots/world/World.<init> (II)V]
  + Methodref [me/planetguy/robots/world/World.tick (Landroid/view/View;)V]
  + InterfaceMethodref [a/a/a/c/x.get (Ljava/lang/Object;)Ljava/lang/Object;]
  + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
  + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
  + InterfaceMethodref [java/util/List.add (Ljava/lang/Object;)Z]
  + InterfaceMethodref [java/util/List.iterator ()Ljava/util/Iterator;]
  + NameAndType [<init> ()V]
  + NameAndType [<init> (II)V]
  + NameAndType [<init> (III)V]
  + NameAndType [<init> (Ljava/lang/String;)V]
  + NameAndType [<init> (Lme/planetguy/robots/world/World;Lme/planetguy/robots/misc/Side;Landroid/content/Context;)V]
  + NameAndType [RED Lme/planetguy/robots/misc/Side;]
  + NameAndType [add (Ljava/lang/Object;)Z]
  + NameAndType [append (I)Ljava/lang/StringBuilder;]
  + NameAndType [append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + NameAndType [currentTimeMillis ()J]
  + NameAndType [d (Ljava/lang/String;Ljava/lang/String;)I]
  + NameAndType [get (Ljava/lang/Object;)Ljava/lang/Object;]
  + NameAndType [getNextUpdate ()Lme/planetguy/robots/world/Update;]
  + NameAndType [getX ()I]
  + NameAndType [getY ()I]
  + NameAndType [globalTime I]
  + NameAndType [hasNext ()Z]
  + NameAndType [hasUpdates (I)Z]
  + NameAndType [iterator ()Ljava/util/Iterator;]
  + NameAndType [lastTick J]
  + NameAndType [millisPerTick I]
  + NameAndType [next ()Ljava/lang/Object;]
  + NameAndType [onClicked (Landroid/view/View;)Z]
  + NameAndType [onClicked (Landroid/view/View;II)Z]
  + NameAndType [onUpdate (II)V]
  + NameAndType [onUpdate (Landroid/view/View;)V]
  + NameAndType [random ()D]
  + NameAndType [robots Ljava/util/List;]
  + NameAndType [schedule (Lme/planetguy/robots/world/Update;)V]
  + NameAndType [scheduledUpdates Lme/planetguy/robots/world/ScheduleQueue;]
  + NameAndType [tick (Landroid/view/View;)V]
  + NameAndType [tiles La/a/a/c/x;]
  + NameAndType [tiles [[Lme/planetguy/robots/tile/Tile;]
  + NameAndType [toString ()Ljava/lang/String;]
  + NameAndType [visible [[Z]
  + NameAndType [x I]
  + NameAndType [y I]
  + Utf8 [ to (]
  + Utf8 [(]
  + Utf8 [()D]
  + Utf8 [()I]
  + Utf8 [()J]
  + Utf8 [()Ljava/lang/Object;]
  + Utf8 [()Ljava/lang/String;]
  + Utf8 [()Ljava/util/Iterator;]
  + Utf8 [()Lme/planetguy/robots/world/Update;]
  + Utf8 [()V]
  + Utf8 [()Z]
  + Utf8 [(I)Ljava/lang/StringBuilder;]
  + Utf8 [(I)Z]
  + Utf8 [(II)Lme/planetguy/robots/tile/Tile;]
  + Utf8 [(II)V]
  + Utf8 [(III)V]
  + Utf8 [(Landroid/content/Context;)Lme/planetguy/robots/world/World;]
  + Utf8 [(Landroid/view/View;)V]
  + Utf8 [(Landroid/view/View;)Z]
  + Utf8 [(Landroid/view/View;II)Z]
  + Utf8 [(Ljava/lang/Object;)Ljava/lang/Object;]
  + Utf8 [(Ljava/lang/Object;)Z]
  + Utf8 [(Ljava/lang/String;)Ljava/lang/StringBuilder;]
  + Utf8 [(Ljava/lang/String;)V]
  + Utf8 [(Ljava/lang/String;Ljava/lang/String;)I]
  + Utf8 [(Lme/planetguy/robots/robot/Robot;)V]
  + Utf8 [(Lme/planetguy/robots/world/Update;)V]
  + Utf8 [(Lme/planetguy/robots/world/World;Lme/planetguy/robots/misc/Side;Landroid/content/Context;)V]
  + Utf8 [)]
  + Utf8 [,]
  + Utf8 [<init>]
  + Utf8 [Code]
  + Utf8 [I]
  + Utf8 [J]
  + Utf8 [La/a/a/c/x;]
  + Utf8 [Ljava/util/List;]
  + Utf8 [Lme/planetguy/robots/misc/Side;]
  + Utf8 [Lme/planetguy/robots/world/ScheduleQueue;]
  + Utf8 [Moved from ]
  + Utf8 [RED]
  + Utf8 [Robots]
  + Utf8 [StackMapTable]
  + Utf8 [[[Lme/planetguy/robots/tile/Tile;]
  + Utf8 [[[Z]
  + Utf8 [a/a/a/c/x]
  + Utf8 [add]
  + Utf8 [addRobot]
  + Utf8 [android/content/Context]
  + Utf8 [android/util/Log]
  + Utf8 [android/view/View]
  + Utf8 [append]
  + Utf8 [currentTimeMillis]
  + Utf8 [d]
  + Utf8 [get]
  + Utf8 [getNextUpdate]
  + Utf8 [getTile]
  + Utf8 [getX]
  + Utf8 [getY]
  + Utf8 [globalTime]
  + Utf8 [ground]
  + Utf8 [handleClick]
  + Utf8 [hasNext]
  + Utf8 [hasUpdates]
  + Utf8 [iterator]
  + Utf8 [java/lang/Math]
  + Utf8 [java/lang/Object]
  + Utf8 [java/lang/StringBuilder]
  + Utf8 [java/lang/System]
  + Utf8 [java/util/ArrayList]
  + Utf8 [java/util/Iterator]
  + Utf8 [java/util/List]
  + Utf8 [lastTick]
  + Utf8 [lava]
  + Utf8 [makeMazeWorld]
  + Utf8 [makeTestWorld]
  + Utf8 [me/planetguy/robots/dynamic/DynamicObject]
  + Utf8 [me/planetguy/robots/misc/Options]
  + Utf8 [me/planetguy/robots/misc/Side]
  + Utf8 [me/planetguy/robots/robot/Robot]
  + Utf8 [me/planetguy/robots/tile/Tile]
  + Utf8 [me/planetguy/robots/tile/TileUtil]
  + Utf8 [me/planetguy/robots/world/ScheduleQueue]
  + Utf8 [me/planetguy/robots/world/Update]
  + Utf8 [me/planetguy/robots/world/World]
  + Utf8 [millisPerTick]
  + Utf8 [next]
  + Utf8 [onClicked]
  + Utf8 [onUpdate]
  + Utf8 [ore]
  + Utf8 [random]
  + Utf8 [robots]
  + Utf8 [schedule]
  + Utf8 [scheduleUpdate]
  + Utf8 [scheduledUpdates]
  + Utf8 [tick]
  + Utf8 [tiles]
  + Utf8 [toString]
  + Utf8 [tryTick]
  + Utf8 [visible]
  + Utf8 [win]
  + Utf8 [x]
  + Utf8 [y]

Fields (count = 6):
  + Field:        tiles [[Lme/planetguy/robots/tile/Tile;
    Access flags: 0x1
      = public me.planetguy.robots.tile.Tile[][] tiles
  + Field:        visible [[Z
    Access flags: 0x1
      = public boolean[][] visible
  + Field:        lastTick J
    Access flags: 0x0
      = long lastTick
  + Field:        robots Ljava/util/List;
    Access flags: 0x1
      = public java.util.List robots
  + Field:        scheduledUpdates Lme/planetguy/robots/world/ScheduleQueue;
    Access flags: 0x2
      = private me.planetguy.robots.world.ScheduleQueue scheduledUpdates
  + Field:        globalTime I
    Access flags: 0x1
      = public int globalTime

Methods (count = 9):
  + Method:       makeTestWorld(Landroid/content/Context;)Lme/planetguy/robots/world/World;
    Access flags: 0x9
      = public static me.planetguy.robots.world.World makeTestWorld(android.content.Context)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 186, locals = 8, stack = 5):
      [0] new #32
        + Class [me/planetguy/robots/world/World]
      [3] dup
      [4] bipush 10
      [6] bipush 10
      [8] invokespecial #73
        + Methodref [me/planetguy/robots/world/World.<init> (II)V]
      [11] astore_1 v1
      [12] getstatic #45
        + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
      [15] ldc #8
        + String [lava]
      [17] invokeinterface #75
        + InterfaceMethodref [a/a/a/c/x.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [22] checkcast #28
        + Class [me/planetguy/robots/tile/Tile]
      [25] astore_2 v2
      [26] getstatic #45
        + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
      [29] ldc #9
        + String [ore]
      [31] invokeinterface #75
        + InterfaceMethodref [a/a/a/c/x.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [36] checkcast #28
        + Class [me/planetguy/robots/tile/Tile]
      [39] astore_3 v3
      [40] iconst_0
      [41] istore v4
      [43] goto +96 (target=139)
      [46] iconst_0
      [47] istore v5
      [49] goto +80 (target=129)
      [52] invokestatic #53
        + Methodref [java/lang/Math.random ()D]
      [55] dstore v6
      [57] dload v6
      [59] ldc2_w #35
        + Double [0.8]
      [62] dcmpl
      [63] ifle +17 (target=80)
      [66] aload_1 v1
      [67] getfield #50
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [70] iload v4
      [72] aaload
      [73] iload v5
      [75] aload_2 v2
      [76] aastore
      [77] goto +49 (target=126)
      [80] dload v6
      [82] ldc2_w #33
        + Double [0.2]
      [85] dcmpg
      [86] ifge +17 (target=103)
      [89] aload_1 v1
      [90] getfield #50
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [93] iload v4
      [95] aaload
      [96] iload v5
      [98] aload_3 v3
      [99] aastore
      [100] goto +26 (target=126)
      [103] aload_1 v1
      [104] getfield #50
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [107] iload v4
      [109] aaload
      [110] iload v5
      [112] getstatic #45
        + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
      [115] ldc #7
        + String [ground]
      [117] invokeinterface #75
        + InterfaceMethodref [a/a/a/c/x.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [122] checkcast #28
        + Class [me/planetguy/robots/tile/Tile]
      [125] aastore
      [126] iinc v5, 1
      [129] iload v5
      [131] bipush 10
      [133] ificmplt -81 (target=52)
      [136] iinc v4, 1
      [139] iload v4
      [141] bipush 10
      [143] ificmplt -97 (target=46)
      [146] new #27
        + Class [me/planetguy/robots/robot/Robot]
      [149] dup
      [150] aload_1 v1
      [151] getstatic #42
        + Fieldref [me/planetguy/robots/misc/Side.RED Lme/planetguy/robots/misc/Side;]
      [154] aload_0 v0
      [155] invokespecial #63
        + Methodref [me/planetguy/robots/robot/Robot.<init> (Lme/planetguy/robots/world/World;Lme/planetguy/robots/misc/Side;Landroid/content/Context;)V]
      [158] astore v4
      [160] aload_1 v1
      [161] getfield #48
        + Fieldref [me/planetguy/robots/world/World.robots Ljava/util/List;]
      [164] aload v4
      [166] invokeinterface #78
        + InterfaceMethodref [java/util/List.add (Ljava/lang/Object;)Z]
      [171] pop
      [172] aload v4
      [174] iconst_2
      [175] putfield #43
        + Fieldref [me/planetguy/robots/robot/Robot.x I]
      [178] aload v4
      [180] iconst_2
      [181] putfield #44
        + Fieldref [me/planetguy/robots/robot/Robot.y I]
      [184] aload_1 v1
      [185] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 7):
        - [46] Var: [a:android/content/Context][a:me/planetguy/robots/world/World][a:me/planetguy/robots/tile/Tile][a:me/planetguy/robots/tile/Tile][i], Stack: 
        - [52] Var: ...[i], Stack: (empty)
        - [80] Var: ...[d], Stack: (empty)
        - [103] Var: ..., Stack: (empty)
        - [126] Var: -1, Stack: (empty)
        - [129] Var: ..., Stack: (empty)
        - [139] Var: -1, Stack: (empty)
  + Method:       makeMazeWorld(Landroid/content/Context;)Lme/planetguy/robots/world/World;
    Access flags: 0x9
      = public static me.planetguy.robots.world.World makeMazeWorld(android.content.Context)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 213, locals = 4, stack = 6):
      [0] new #32
        + Class [me/planetguy/robots/world/World]
      [3] dup
      [4] bipush 10
      [6] bipush 11
      [8] invokespecial #73
        + Methodref [me/planetguy/robots/world/World.<init> (II)V]
      [11] astore_1 v1
      [12] iconst_0
      [13] istore_2 v2
      [14] goto +41 (target=55)
      [17] iconst_0
      [18] istore_3 v3
      [19] goto +27 (target=46)
      [22] aload_1 v1
      [23] getfield #50
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [26] iload_2 v2
      [27] aaload
      [28] iload_3 v3
      [29] getstatic #45
        + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
      [32] ldc #9
        + String [ore]
      [34] invokeinterface #75
        + InterfaceMethodref [a/a/a/c/x.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [39] checkcast #28
        + Class [me/planetguy/robots/tile/Tile]
      [42] aastore
      [43] iinc v3, 1
      [46] iload_3 v3
      [47] bipush 11
      [49] ificmplt -27 (target=22)
      [52] iinc v2, 1
      [55] iload_2 v2
      [56] bipush 10
      [58] ificmplt -41 (target=17)
      [61] iconst_1
      [62] istore_2 v2
      [63] goto +41 (target=104)
      [66] iconst_1
      [67] istore_3 v3
      [68] goto +27 (target=95)
      [71] aload_1 v1
      [72] getfield #50
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [75] iload_3 v3
      [76] aaload
      [77] iload_2 v2
      [78] getstatic #45
        + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
      [81] ldc #7
        + String [ground]
      [83] invokeinterface #75
        + InterfaceMethodref [a/a/a/c/x.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [88] checkcast #28
        + Class [me/planetguy/robots/tile/Tile]
      [91] aastore
      [92] iinc v3, 1
      [95] iload_3 v3
      [96] bipush 9
      [98] ificmplt -27 (target=71)
      [101] iinc v2, 2
      [104] iload_2 v2
      [105] bipush 11
      [107] ificmplt -41 (target=66)
      [110] iconst_2
      [111] istore_2 v2
      [112] goto +36 (target=148)
      [115] aload_1 v1
      [116] getfield #50
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [119] iconst_1
      [120] invokestatic #53
        + Methodref [java/lang/Math.random ()D]
      [123] ldc2_w #37
        + Double [8.0]
      [126] dmul
      [127] d2i
      [128] iadd
      [129] aaload
      [130] iload_2 v2
      [131] getstatic #45
        + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
      [134] ldc #7
        + String [ground]
      [136] invokeinterface #75
        + InterfaceMethodref [a/a/a/c/x.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [141] checkcast #28
        + Class [me/planetguy/robots/tile/Tile]
      [144] aastore
      [145] iinc v2, 2
      [148] iload_2 v2
      [149] bipush 10
      [151] ificmplt -36 (target=115)
      [154] new #27
        + Class [me/planetguy/robots/robot/Robot]
      [157] dup
      [158] aload_1 v1
      [159] getstatic #42
        + Fieldref [me/planetguy/robots/misc/Side.RED Lme/planetguy/robots/misc/Side;]
      [162] aload_0 v0
      [163] invokespecial #63
        + Methodref [me/planetguy/robots/robot/Robot.<init> (Lme/planetguy/robots/world/World;Lme/planetguy/robots/misc/Side;Landroid/content/Context;)V]
      [166] astore_2 v2
      [167] aload_1 v1
      [168] getfield #48
        + Fieldref [me/planetguy/robots/world/World.robots Ljava/util/List;]
      [171] aload_2 v2
      [172] invokeinterface #78
        + InterfaceMethodref [java/util/List.add (Ljava/lang/Object;)Z]
      [177] pop
      [178] aload_2 v2
      [179] iconst_1
      [180] putfield #43
        + Fieldref [me/planetguy/robots/robot/Robot.x I]
      [183] aload_2 v2
      [184] iconst_1
      [185] putfield #44
        + Fieldref [me/planetguy/robots/robot/Robot.y I]
      [188] aload_1 v1
      [189] getfield #50
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [192] bipush 8
      [194] aaload
      [195] bipush 9
      [197] getstatic #45
        + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
      [200] ldc #10
        + String [win]
      [202] invokeinterface #75
        + InterfaceMethodref [a/a/a/c/x.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [207] checkcast #28
        + Class [me/planetguy/robots/tile/Tile]
      [210] aastore
      [211] aload_1 v1
      [212] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 10):
        - [17] Var: ...[a:me/planetguy/robots/world/World][i], Stack: (empty)
        - [22] Var: ...[i], Stack: (empty)
        - [46] Var: ..., Stack: (empty)
        - [55] Var: -1, Stack: (empty)
        - [66] Var: ..., Stack: (empty)
        - [71] Var: ...[i], Stack: (empty)
        - [95] Var: ..., Stack: (empty)
        - [104] Var: -1, Stack: (empty)
        - [115] Var: ..., Stack: (empty)
        - [148] Var: ..., Stack: (empty)
  - Method:       <init>(II)V
    Access flags: 0x1
      = public World(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 114, locals = 6, stack = 3):
      [0] aload_0 v0
      [1] invokespecial #54
        + Methodref [java/lang/Object.<init> ()V]
      [4] aload_0 v0
      [5] invokestatic #59
        + Methodref [java/lang/System.currentTimeMillis ()J]
      [8] putfield #47
        + Fieldref [me/planetguy/robots/world/World.lastTick J]
      [11] aload_0 v0
      [12] new #21
        + Class [java/util/ArrayList]
      [15] dup
      [16] invokespecial #60
        + Methodref [java/util/ArrayList.<init> ()V]
      [19] putfield #48
        + Fieldref [me/planetguy/robots/world/World.robots Ljava/util/List;]
      [22] aload_0 v0
      [23] new #30
        + Class [me/planetguy/robots/world/ScheduleQueue]
      [26] dup
      [27] invokespecial #66
        + Methodref [me/planetguy/robots/world/ScheduleQueue.<init> ()V]
      [30] putfield #49
        + Fieldref [me/planetguy/robots/world/World.scheduledUpdates Lme/planetguy/robots/world/ScheduleQueue;]
      [33] aload_0 v0
      [34] iconst_0
      [35] putfield #46
        + Fieldref [me/planetguy/robots/world/World.globalTime I]
      [38] aload_0 v0
      [39] iload_1 v1
      [40] iload_2 v2
      [41] multianewarray #11
        + Class [[[Lme/planetguy/robots/tile/Tile;]
      [45] putfield #50
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [48] getstatic #45
        + Fieldref [me/planetguy/robots/tile/TileUtil.tiles La/a/a/c/x;]
      [51] ldc #7
        + String [ground]
      [53] invokeinterface #75
        + InterfaceMethodref [a/a/a/c/x.get (Ljava/lang/Object;)Ljava/lang/Object;]
      [58] checkcast #28
        + Class [me/planetguy/robots/tile/Tile]
      [61] astore_3 v3
      [62] iconst_0
      [63] istore v4
      [65] goto +32 (target=97)
      [68] iconst_0
      [69] istore v5
      [71] goto +17 (target=88)
      [74] aload_0 v0
      [75] getfield #50
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [78] iload v4
      [80] aaload
      [81] iload v5
      [83] aload_3 v3
      [84] aastore
      [85] iinc v5, 1
      [88] iload v5
      [90] iload_2 v2
      [91] ificmplt -17 (target=74)
      [94] iinc v4, 1
      [97] iload v4
      [99] iload_1 v1
      [100] ificmplt -32 (target=68)
      [103] aload_0 v0
      [104] iload_1 v1
      [105] iload_2 v2
      [106] multianewarray #12
        + Class [[[Z]
      [110] putfield #51
        + Fieldref [me/planetguy/robots/world/World.visible [[Z]
      [113] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [68] Var: [a:me/planetguy/robots/world/World][i][i][a:me/planetguy/robots/tile/Tile][i], Stack: 
        - [74] Var: ...[i], Stack: (empty)
        - [88] Var: ..., Stack: (empty)
        - [97] Var: -1, Stack: (empty)
  + Method:       addRobot(Lme/planetguy/robots/robot/Robot;)V
    Access flags: 0x1
      = public void addRobot(me.planetguy.robots.robot.Robot)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 1, locals = 2, stack = 0):
      [0] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       tryTick(Landroid/view/View;)V
    Access flags: 0x1
      = public void tryTick(android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 33, locals = 6, stack = 4):
      [0] invokestatic #59
        + Methodref [java/lang/System.currentTimeMillis ()J]
      [3] lstore_2 v2
      [4] lload_2 v2
      [5] aload_0 v0
      [6] getfield #47
        + Fieldref [me/planetguy/robots/world/World.lastTick J]
      [9] lsub
      [10] lstore v4
      [12] lload v4
      [14] getstatic #41
        + Fieldref [me/planetguy/robots/misc/Options.millisPerTick I]
      [17] i2l
      [18] lcmp
      [19] ifle +13 (target=32)
      [22] aload_0 v0
      [23] aload_1 v1
      [24] invokespecial #74
        + Methodref [me/planetguy/robots/world/World.tick (Landroid/view/View;)V]
      [27] aload_0 v0
      [28] lload_2 v2
      [29] putfield #47
        + Fieldref [me/planetguy/robots/world/World.lastTick J]
      [32] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [32] Var: ...[l][l], Stack: (empty)
  + Method:       tick(Landroid/view/View;)V
    Access flags: 0x2
      = private void tick(android.view.View)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 188, locals = 5, stack = 4):
      [0] goto +36 (target=36)
      [3] aload_0 v0
      [4] getfield #49
        + Fieldref [me/planetguy/robots/world/World.scheduledUpdates Lme/planetguy/robots/world/ScheduleQueue;]
      [7] invokevirtual #67
        + Methodref [me/planetguy/robots/world/ScheduleQueue.getNextUpdate ()Lme/planetguy/robots/world/Update;]
      [10] astore_2 v2
      [11] aload_0 v0
      [12] getfield #50
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [15] aload_2 v2
      [16] invokevirtual #71
        + Methodref [me/planetguy/robots/world/Update.getX ()I]
      [19] aaload
      [20] aload_2 v2
      [21] invokevirtual #72
        + Methodref [me/planetguy/robots/world/Update.getY ()I]
      [24] aaload
      [25] aload_2 v2
      [26] invokevirtual #71
        + Methodref [me/planetguy/robots/world/Update.getX ()I]
      [29] aload_2 v2
      [30] invokevirtual #72
        + Methodref [me/planetguy/robots/world/Update.getY ()I]
      [33] invokevirtual #65
        + Methodref [me/planetguy/robots/tile/Tile.onUpdate (II)V]
      [36] aload_0 v0
      [37] getfield #49
        + Fieldref [me/planetguy/robots/world/World.scheduledUpdates Lme/planetguy/robots/world/ScheduleQueue;]
      [40] aload_0 v0
      [41] getfield #46
        + Fieldref [me/planetguy/robots/world/World.globalTime I]
      [44] invokevirtual #68
        + Methodref [me/planetguy/robots/world/ScheduleQueue.hasUpdates (I)Z]
      [47] ifne -44 (target=3)
      [50] aload_0 v0
      [51] getfield #48
        + Fieldref [me/planetguy/robots/world/World.robots Ljava/util/List;]
      [54] invokeinterface #79
        + InterfaceMethodref [java/util/List.iterator ()Ljava/util/Iterator;]
      [59] astore_3 v3
      [60] goto +108 (target=168)
      [63] aload_3 v3
      [64] invokeinterface #77
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [69] checkcast #24
        + Class [me/planetguy/robots/dynamic/DynamicObject]
      [72] astore_2 v2
      [73] new #19
        + Class [java/lang/StringBuilder]
      [76] dup
      [77] ldc #2
        + String [(]
      [79] invokespecial #55
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [82] aload_2 v2
      [83] getfield #39
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.x I]
      [86] invokevirtual #56
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [89] ldc #4
        + String [,]
      [91] invokevirtual #57
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [94] aload_2 v2
      [95] getfield #40
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.y I]
      [98] invokevirtual #56
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [101] ldc #3
        + String [)]
      [103] invokevirtual #57
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [106] invokevirtual #58
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [109] astore v4
      [111] aload_2 v2
      [112] aload_1 v1
      [113] invokevirtual #62
        + Methodref [me/planetguy/robots/dynamic/DynamicObject.onUpdate (Landroid/view/View;)V]
      [116] ldc #6
        + String [Robots]
      [118] new #19
        + Class [java/lang/StringBuilder]
      [121] dup
      [122] ldc #5
        + String [Moved from ]
      [124] invokespecial #55
        + Methodref [java/lang/StringBuilder.<init> (Ljava/lang/String;)V]
      [127] aload v4
      [129] invokevirtual #57
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [132] ldc #1
        + String [ to (]
      [134] invokevirtual #57
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [137] aload_2 v2
      [138] getfield #39
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.x I]
      [141] invokevirtual #56
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [144] ldc #4
        + String [,]
      [146] invokevirtual #57
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [149] aload_2 v2
      [150] getfield #40
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.y I]
      [153] invokevirtual #56
        + Methodref [java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;]
      [156] ldc #3
        + String [)]
      [158] invokevirtual #57
        + Methodref [java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;]
      [161] invokevirtual #58
        + Methodref [java/lang/StringBuilder.toString ()Ljava/lang/String;]
      [164] invokestatic #52
        + Methodref [android/util/Log.d (Ljava/lang/String;Ljava/lang/String;)I]
      [167] pop
      [168] aload_3 v3
      [169] invokeinterface #76
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [174] ifne -111 (target=63)
      [177] aload_0 v0
      [178] dup
      [179] getfield #46
        + Fieldref [me/planetguy/robots/world/World.globalTime I]
      [182] iconst_1
      [183] iadd
      [184] putfield #46
        + Fieldref [me/planetguy/robots/world/World.globalTime I]
      [187] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 4):
        - [3] Var: ..., Stack: (empty)
        - [36] Var: ..., Stack: (empty)
        - [63] Var: [a:me/planetguy/robots/world/World][a:android/view/View][T][a:java/util/Iterator], Stack: 
        - [168] Var: ..., Stack: (empty)
  + Method:       scheduleUpdate(III)V
    Access flags: 0x1
      = public void scheduleUpdate(int,int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 18, locals = 4, stack = 6):
      [0] aload_0 v0
      [1] getfield #49
        + Fieldref [me/planetguy/robots/world/World.scheduledUpdates Lme/planetguy/robots/world/ScheduleQueue;]
      [4] new #31
        + Class [me/planetguy/robots/world/Update]
      [7] dup
      [8] iload_1 v1
      [9] iload_2 v2
      [10] iload_3 v3
      [11] invokespecial #70
        + Methodref [me/planetguy/robots/world/Update.<init> (III)V]
      [14] invokevirtual #69
        + Methodref [me/planetguy/robots/world/ScheduleQueue.schedule (Lme/planetguy/robots/world/Update;)V]
      [17] return
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 0):
  + Method:       handleClick(Landroid/view/View;II)Z
    Access flags: 0x1
      = public boolean handleClick(android.view.View,int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 76, locals = 6, stack = 4):
      [0] aload_0 v0
      [1] getfield #48
        + Fieldref [me/planetguy/robots/world/World.robots Ljava/util/List;]
      [4] invokeinterface #79
        + InterfaceMethodref [java/util/List.iterator ()Ljava/util/Iterator;]
      [9] astore v5
      [11] goto +40 (target=51)
      [14] aload v5
      [16] invokeinterface #77
        + InterfaceMethodref [java/util/Iterator.next ()Ljava/lang/Object;]
      [21] checkcast #24
        + Class [me/planetguy/robots/dynamic/DynamicObject]
      [24] astore v4
      [26] aload v4
      [28] getfield #39
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.x I]
      [31] iload_2 v2
      [32] ificmpne +19 (target=51)
      [35] aload v4
      [37] getfield #40
        + Fieldref [me/planetguy/robots/dynamic/DynamicObject.y I]
      [40] iload_3 v3
      [41] ificmpne +10 (target=51)
      [44] aload v4
      [46] aload_1 v1
      [47] invokevirtual #61
        + Methodref [me/planetguy/robots/dynamic/DynamicObject.onClicked (Landroid/view/View;)Z]
      [50] ireturn
      [51] aload v5
      [53] invokeinterface #76
        + InterfaceMethodref [java/util/Iterator.hasNext ()Z]
      [58] ifne -44 (target=14)
      [61] aload_0 v0
      [62] getfield #50
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [65] iload_2 v2
      [66] aaload
      [67] iload_3 v3
      [68] aaload
      [69] aload_1 v1
      [70] iload_2 v2
      [71] iload_3 v3
      [72] invokevirtual #64
        + Methodref [me/planetguy/robots/tile/Tile.onClicked (Landroid/view/View;II)Z]
      [75] ireturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 2):
        - [14] Var: [a:me/planetguy/robots/world/World][a:android/view/View][i][i][T][a:java/util/Iterator], Stack: 
        - [51] Var: ..., Stack: (empty)
  + Method:       getTile(II)Lme/planetguy/robots/tile/Tile;
    Access flags: 0x1
      = public me.planetguy.robots.tile.Tile getTile(int,int)
    Class member attributes (count = 1):
    + Code attribute instructions (code length = 39, locals = 3, stack = 3):
      [0] iload_1 v1
      [1] aload_0 v0
      [2] getfield #50
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [5] arraylength
      [6] ificmpge +31 (target=37)
      [9] iload_1 v1
      [10] iflt +27 (target=37)
      [13] iload_2 v2
      [14] aload_0 v0
      [15] getfield #50
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [18] iconst_0
      [19] aaload
      [20] arraylength
      [21] ificmpge +16 (target=37)
      [24] iload_2 v2
      [25] iflt +12 (target=37)
      [28] aload_0 v0
      [29] getfield #50
        + Fieldref [me/planetguy/robots/world/World.tiles [[Lme/planetguy/robots/tile/Tile;]
      [32] iload_1 v1
      [33] aaload
      [34] iload_2 v2
      [35] aaload
      [36] areturn
      [37] aconst_null
      [38] areturn
      Code attribute exceptions (count = 0):
      Code attribute attributes (attribute count = 1):
      + Stack map table attribute (count = 1):
        - [37] Var: ..., Stack: (empty)

Class file attributes (count = 0):

